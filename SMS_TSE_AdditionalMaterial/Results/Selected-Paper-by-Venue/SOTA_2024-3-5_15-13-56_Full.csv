,Authors,Author full names,Author(s) ID,Title,Year,Source title,Volume,Issue,Art. No.,Page start,Page end,Page count,Cited by,DOI,Link,Affiliations,Authors with affiliations,Abstract,Author Keywords,Index Keywords,Molecular Sequence Numbers,Chemicals/CAS,Tradenames,Manufacturers,Funding Details,Funding Texts,References,Correspondence Address,Editors,Publisher,Sponsors,Conference name,Conference date,Conference location,Conference code,ISSN,ISBN,CODEN,PubMed ID,Language of Original Document,Abbreviated Source Title,Document Type,Publication Stage,Open Access,Source,EID,model_driven,devops,machine_learning,artificial_intelligence
0,,"Medhat N. (AUID: 57216390453), Moussa S.M. (AUID: 35759116600), Badr N.L. (AUID: 6602448188), Tolba M.F. (AUID: 24541714400)",,A Framework for Continuous Regression and Integration Testing in IoT Systems Based on Deep Learning and Search-Based Techniques,2020,IEEE Access,,,,,,,17,10.1109/ACCESS.2020.3039931,https://www.doi.org/10.1109/ACCESS.2020.3039931,"<Department of Information Systems, Faculty of Computer and Information Sciences, Ain Shams University>, <Department of Scientific Computing, Faculty of Computer and Information Sciences, Ain Shams University>",,"Â© 2020 IEEE.Tremendous systems are rapidly evolving based on the trendy Internet of Things (IoT) in various domains. Different technologies are used for communication between the massive connected devices through all layers of the IoT system, causing many security and performance issues. Regression and integration testing are considered repeatedly, in which the vast costs and efforts associated with the frequent execution of these inflated test suites hinder the adequate testing of such systems. This necessitates the focus on exploring innovative scalable testing approaches for large test suites in IoT-based systems. In this paper, a scalable framework for continuous integration and regression testing in IoT-based systems (IoT-CIRTF) is proposed, based on IoT-related criteria for test case prioritization and selection. The framework utilizes search-based techniques to provide an optimized prioritized set of test cases to select from. The selection is based on a trained prediction model for IoT standard components using supervised deep learning algorithms to continuously ensure the overall reliability of IoT-based systems. The experiments are held on two GSM datasets. The experimental results achieved prioritization accuracy up to 90% and 92% for regression testing and integration testing respectively. This provides an enhanced and efficient framework for continuous testing of IoT-based systems, as per IoT-related criteria for the prioritization and selection purposes.","Deep learning, integration testing, IoT, regression testing, search-based techniques, test case prioritization, test case selection",,,,,,,,"<Characterizing Internet of Things systems through taxonomies: A systematic mapping study, {eid: 85081397939}>, <A framework for rapid integration of IoT systems with industrial environments, {eid: 85073908088}>, <Testing techniques in IoT-based systems, {eid: 85083362345, doi: 10.1109/ICICIS46948.2019.9014711}>, <An adaptive security data collection and composition recognition method for security measurement over LTE/LTEfiA networks, {eid: 85079237087, doi: 10.1016/j.jnca.2020.102549}>, <Automation testing and monitoring lab on the cloud for IOT smart fieet system (ATML & SFS), {eid: 85080649826}>, <Challenges of testing complex Internet of Things (IoT) devices and systems, {eid: 85077044853}>, <Current research on Internet of Things (IoT) security: A survey, {eid: 85057715899}>, <Software quality assurance testing methodologies in IoT, {eid: 85097805906}>, <Program analysis of commodity IoT applications for security and privacy: Challenges and opportunities, {eid: 85072015894}>, <An acceptance testing approach for Internet of Things systems, {eid: 85053291294}>, <Improving formal verification and testing techniques for Internet of Things and smart cities, {eid: 85176077930}>, <IoTfiTEG: Test event generator system, {eid: 85023770296}>, <Cost and effectiveness of search-based techniques for model-based testing: An empirical analysis, {eid: 85019629619}>, <Unsupervised deep feature extraction for remote sensing image classification, {eid: 84940417789, doi: 10.1109/TGRS.2015.2478379}>, <WiFi fingerprinting indoor localization using local feature-based deep LSTM, {eid: 85086067352, doi: 10.1109/JSYST.2019.2918678}>, <Traffic fiow prediction using LSTM with feature enhancement, {eid: 85059508809, doi: 10.1016/j.neucom.2018.12.016}>, <Collaborative and geometric multikernel learning for multi-class classification, {eid: 85074163620, doi: 10.1016/j.patcog.2019.107050}>, <None, {eid: 85068971193}>, <None, {eid: 85087096547}>, <Bidirectional LSTM with attention mechanism and convolutional layer for text classification, {eid: 85061038593, doi: 10.1016/j.neucom.2019.01.078}>, <Spoken language identification using LSTMbased angular proximity, {eid: 85039167083}>, <A general architecture of IoT system, {eid: 85034643262, doi: 10.1109/CSE-EUC.2017.124}>, <Internet of Things IoT-based smart homes: A review of system architecture, software, communications, privacy and security, {eid: 85115031591, doi: 10.1016/j.iot.2018.08.009}>, <None, {eid: 85048703118}>, <Generalized cross entropy loss for training deep neural networks with noisy labels, {eid: 85062572898}>, <Make it directly: Event extraction based on tree-LSTM and bi-GRU, {eid: 85079792469}>, <A study of deep neural networks for human activity recognition, {eid: 85082413508, doi: 10.1111/coin.12318}>, <Feature extraction for simple classification, {eid: 78149491860, doi: 10.1109/ICPR.2010.377}>, <Automated test case generation from high-level logic requirements using model transformation techniques, {eid: 85040775464}>, <Location-based test case prioritization for software embedded in mobile devices using the law of gravitation, {eid: 85060106750}>, <Test case prioritization for acceptance testing of cyber physical systems: A multi-objective search-based approach, {eid: 85051547390}>, <Democratization of runtime verification for Internet of Things, {eid: 85047213068}>, <Towards a runtime testing framework for dynamically adaptable Internet of Things networks in smart cities, {eid: 85089472705}>, <A brief overview of existing tools for testing the Internet-of-Things, {eid: 85050997727}>, <Automated scenario-based integration testing of timeconstrained distributed systems, {eid: 85067981378}>, <Interoperability and integration testing methods for IoT systems: A systematic mapping study, {eid: 85091589301}>, <None, {eid: 85097805122}>, <Continuous testing in the development of IoT applications, {eid: 85083197670}>, <Remote sensing and controlling of greenhouse agriculture parameters based on IoT, {eid: 85047397284, doi: 10.1109/BID.2017.8336571}>, <Ex-vivo dynamic analysis framework for Android device drivers, {eid: 85091580284, doi: 10.1109/sp40000.2020.00094}>, <Prioritizing JUnit test cases without coverage information: An optimization heuristics based approach, {eid: 85068215376}>, <Test case prioritization technique based on genetic algorithm, {eid: 81355133108}>, <Incorporating fault-proneness estimations into coverage-based test case prioritization methods, {eid: 85079054649, doi: 10.1016/j.infsof.2020.106269}>, <Prioritizing test cases for regression testing, {eid: 0035481183}>, <System test case prioritization of new and regression test cases, {eid: 33749040645}>, <Fault detection probability analysis for coverage-based test suite reduction, {eid: 47349110847, doi: 10.1109/ICSM.2007.4362646}>, <Applying simulated annealing and parallel computing to the mobile sequential recommendation, {eid: 85045650951, doi: 10.1109/TKDE.2018.2827047}>, <Performance evaluation of genetic algorithms for fiowshop scheduling problems, {eid: 0028565588, doi: 10.1109/icec.1994.349951}>, <Combined genetic and simulated annealing approach for test case prioritization, {eid: 84962285937, doi: 10.17485/ijst/2015/v8i35/81102}>, <A comparative study of meta-heuristic optimisation techniques for prioritisation of risks in agile software development, {eid: 85078842204, doi: 10.1504/IJCAT.2020.104688}>, <An experimental study of global and local search algorithms in empirical performance tuning, {eid: 84883288790, doi: 10.1007/978-3-642-38718-0-26}>, <Foundation of computer science FCS, {eid: 84914173383}>, <GSM technology: Architecture, security, future challenges, {eid: 85089707180}>, <None, {eid: 85052820912}>, <None, {eid: 85097805905}>, <None, {eid: 85097805504}>, <None, {eid: 85097805611}>, <Bug report classification using LSTM architecture for more accurate software defect locating Proc. 17th, {eid: 85062245280, doi: 10.1109/ICMLA.2018.00234}>, <Shortterm prediction of residential power energy consumption via CNN and multi-layer bi-directional LSTM networks, {eid: 85088701184, doi: 10.1109/ACCESS.2019.2963045}>, <Action recognition in video sequences using deep bi-directional LSTM with CNN features, {eid: 85037618132, doi: 10.1109/ACCESS.2017.2778011}>, <A scalable and hybrid intrusion detection system based on the convolutional-LSTM network, {eid: 85065494532}>, <An ensemble framework based on convolutional bi-directional LSTM with multiple time windows for remaining useful life estimation, {eid: 85076702187, doi: 10.1016/j.compind.2019.103182}>, <Independently recurrent neural network (IndRNN): Building a longer and deeper RNN, {eid: 85061711459}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2020-01-01,,,,,,,eng,,Journal,,,,2-s2.0-85097184092,False,False,False,False
1,,"Combemale B. (AUID: 24343217800), Batot E. (AUID: 57188304600), Bruel J.M. (AUID: 35232489400), Kienzle J. (AUID: 8709922800), Mussbacher G. (AUID: 22135401000), Ali H. (AUID: 57211170442), Saini R. (AUID: 57211711561), Amyot D. (AUID: 6602186776), Bagherzadeh M. (AUID: 58070347200), Cabot J. (AUID: 8963493600), Bencomo N. (AUID: 17345086800), Benni B. (AUID: 57202099197), Wimmer M. (AUID: 14030698000), Cheng B.H.C. (AUID: 7202388859), Collet P. (AUID: 8947110100), Engels G. (AUID: 7004530938), Heinrich R. (AUID: 56352523400), Koziolek A. (AUID: 55094731500), Reussner R. (AUID: 6603589366), Jezequel J.M. (AUID: 35618077100), Sallou J. (AUID: 57216885417), Mosser S. (AUID: 25654364800), Sahraoui H. (AUID: 57196894039), Syriani E. (AUID: 25522760800), Stinckwich S. (AUID: 18234199600)",,A Hitchhiker's Guide to Model-Driven Engineering for Data-Centric Systems,2021,IEEE Software,,,,,,,18,10.1109/MS.2020.2995125,https://www.doi.org/10.1109/MS.2020.2995125,"<University of Toulouse>, <McGill University>, <University of Ottawa>, <Open University of Catalonia>, <Aston University>, <Concordia University>, <Department of Business Informatics-Software Engineering, Johannes Kepler University Linz>, <Michigan State University>, <University CÃ´te dAzur>, <Paderborn University>, <Karlsruhe Institute of Technology>, <University of Rennes>, <University of QuÃ©bec MontrÃ©al>, <MontrÃ©al University>, <United Nations University Institute>",,Â© 2021 IEEE.The models and data framework demystifies the different roles that models and data play in software development and operation and clarifies where machine learning and artificial intelligence techniques could be used.,,,,,,,,,"<Socio-technical systems: From design methods to systems engineering, {eid: 78650293998, doi: 10.1016/j.intcom.2010.07.003}>, <Building AI software: Data-driven vs model-driven AI and why we need an AI-specific software development paradigm, {eid: 85112138324}>, <Comparison of model-based vs. data-driven methods for fault detection and isolation in engine idle speed control system, {eid: 85030260574}>, <Unifying explanatory and constructive modeling: Towards removing the gulf between ontologies and conceptual models, {eid: 85008476085}>, <Modeling in engineering and science, {eid: 85059626352, doi: 10.1145/3231590}>, <None, {eid: 85008929956}>, <MDE in practice for computational science, {eid: 84939177966}>, <An architectural model-based approach to quality-aware DevOps in cloud applications, {eid: 85025589778}>, <A survey of data-intensive scientific workflow management, {eid: 84958182304, doi: 10.1007/s10723-015-9329-8}>, <The vision of autonomic computing, {eid: 0037253062, doi: 10.1109/MC.2003.1160055}>, <Software engineering for selfadaptive systems: A second research roadmap, {eid: 84879852118}>, <None, {eid: 84941067484}>, <A unifying framework for homogeneous model composition, {eid: 85059540818, doi: 10.1007/s10270-018-00707-8}>, <Deep probabilistic programming languages: A qualitative study, {eid: 85108907645}>, <Theory-guided data science: A new paradigm for scientific discovery from data, {eid: 85023747083, doi: 10.1109/TKDE.2017.2720168}>",,,IEEE Computer Society,,,2021-07-01,,,,,,,eng,,Journal,,,,2-s2.0-85085080142,False,False,True,True
2,,"Marijan D. (AUID: 34872942800), Gotlieb A. (AUID: 56247674500), Liaaen M. (AUID: 55595970300)",,A learning algorithm for optimizing continuous integration development and testing practice,2019,Software - Practice and Experience,,,,,,,30,10.1002/spe.2661,https://www.doi.org/10.1002/spe.2661,"<Simula Research Laboratory>, <Cisco Systems>",,"Â© 2018 John Wiley & Sons, Ltd.Continuous integration, at its core, includes a set of practices that aim to prevent and reduce the cost of software integration issues by merging working software copies often. Regression testing is considered a good practice in software development with continuous integration, which ensures that code changes are not negatively affecting software functionality. As, nowadays, software development is carried out iteratively, with small code increments continuously developed and regression tested, it is of critical importance that continuous regression testing is time efficient. However, in practice, regression testing is often long lasting and faces scalability problems as software grows larger or as software changes are made more frequently. One contributing factor to these issues is test redundancy, which causes the same software functionality being tested multiple times across a test suite. In large-scale software, especially highly configurable software, redundancy in continuous regression testing can significantly grow the size of test suites and negatively affect the cost effectiveness of continuous integration. This paper presents a practical learning algorithm for optimizing continuous integration testing by reducing ineffective test redundancy in regression suites. The novelty of the algorithm lies in learning and predicting the fault-detection effectiveness of continuous integration tests using historical test records and combining this information with coverage-based redundancy metrics. The goal is to identify ineffective redundancy, which is maximally reduced in the resulting regression test suite, thus reducing test time and improving the performance of continuous integration. We apply and evaluate the algorithm in two industrial projects of continuous integration. The results show that the proposed algorithm can improve the efficiency of continuous integration practice in terms of decreasing test execution time by 38% on average compared to the industry practice of our case study and by 40% on average compared to the retest-all approach. The results further demonstrate no significant reduction in fault-detection effectiveness of continuous regression testing. This suggests that the proposed algorithm contributes to the state of the practice in the continuous integration development and testing of highly configurable systems.","continuous integration, continuous integration testing, highly configurable software, highly interleaved test predictive algorithm, regression testing, regression trees, test optimization, test redundancy",,,,,,,,"<None, {eid: 85026639599}>, <None, {eid: 84891715780}>, <None, {eid: 84935135489}>, <None, {eid: 84986877429}>, <None, {eid: 85049691252}>, <An AETG system: an approach to testing based on combinatorial design, {eid: 0000673732}>, <None, {eid: 0037587652}>, <None, {eid: 33847694980}>, <Test overlay in an emerging software product line - an industrial case study, {eid: 84872969667}>, <Learning from examples, generation and evaluation of decision trees for software resource analysis, {eid: 0024123707}>, <None, {eid: 0003512056}>, <Practical minimization of pairwise-covering test configurations using constraint programming, {eid: 84952845547}>, <Top 10 algorithms in data mining, {eid: 37549018049}>, <Predicting business failure using classification and regression tree: an empirical comparison with popular classical statistical methods and top classification mining methods, {eid: 77951206489}>, <None, {eid: 85060261902}>, <None, {eid: 67650148487}>, <None, {eid: 0036041041}>, <None, {eid: 85013123088}>, <None, {eid: 0003500248}>, <None, {eid: 85009962818}>, <None, {eid: 12844268515}>, <None, {eid: 1542347191}>, <None, {eid: 85060264405}>, <None, {eid: 33847304574}>, <None, {eid: 84944678252}>, <None, {eid: 84951764887}>, <Program slicing-based regression testing techniques, {eid: 0030173997}>, <A safe, efficient regression test selection technique, {eid: 0031125046}>, <Cost-effective regression testing through adaptive test prioritization strategies, {eid: 84960881560}>, <None, {eid: 84951766869}>, <None, {eid: 0036441907}>, <None, {eid: 84963549010}>, <None, {eid: 84964268054}>, <None, {eid: 85030784137}>, <None, {eid: 84997112179}>, <None, {eid: 85060264122}>, <None, {eid: 84856946297}>, <None, {eid: 85060263683}>, <None, {eid: 0032305987}>, <A tester-assisted methodology for test redundancy detection, {eid: 78149252006}>, <Redundancy based test-suite reduction, {eid: 37149024582}>, <A methodology for controlling the size of a test suite, {eid: 0027625420}>, <None, {eid: 33646942742}>, <Improving fault detection capability by selectively retaining test cases during test suite reduction, {eid: 33846855360}>, <An empirical study of test case filtering techniques based on exercising information flows, {eid: 34250772325}>, <None, {eid: 77949900972}>, <None, {eid: 84863156883}>, <None, {eid: 84903123998}>, <Empirical studies of test-suite reduction, {eid: 0036957531}>, <None, {eid: 15844394509}>",,,John Wiley and Sons Ltd,,,2019-02-01,,,,,,,eng,,Journal,,,,2-s2.0-85056634616,True,False,False,False
3,,"Esfahani N. (AUID: 35092350100), Elkhodary A. (AUID: 23004260000), Malek S. (AUID: 8969695500)",,A learning-based framework for engineering feature-oriented self-adaptive software systems,2013,IEEE Transactions on Software Engineering,,,,,,,87,10.1109/TSE.2013.37,https://www.doi.org/10.1109/TSE.2013.37,"<Department of Computer Science, George Mason University>",,"Self-adaptive software systems are capable of adjusting their behavior at runtime to achieve certain functional or quality-of-service goals. Often a representation that reflects the internal structure of the managed system is used to reason about its characteristics and make the appropriate adaptation decisions. However, runtime conditions can radically change the internal structure in ways that were not accounted for during their design. As a result, unanticipated changes at runtime that violate the assumptions made about the internal structure of the system could degrade the accuracy of the adaptation decisions. We present an approach for engineering self-adaptive software systems that brings about two innovations: 1) a feature-oriented approach for representing engineers' knowledge of adaptation choices that are deemed practical, and 2) an online learning-based approach for assessing and reasoning about adaptation decisions that does not require an explicit representation of the internal structure of the managed software system. Engineers' knowledge, represented in feature-models, adds structure to learning, which in turn makes online learning feasible. We present an empirical evaluation of the framework using a real-world self-adaptive software system. Results demonstrate the framework's ability to accurately learn the changing dynamics of the system while achieving efficient analysis and adaptation. Â© 1976-2012 IEEE.","Autonomic computing, Feature-orientation, Machine learning, Self-adaptive software",,,,,,,,"<Self-managed systems: An architectural challenge, {eid: 34748879678}>, <Rainbow: Architecture-based self-adaptation with reusable infrastructure, {eid: 7244223259}>, <The vision of autonomic computing, {eid: 0037253062}>, <An architecture-driven software mobility framework, {eid: 77953132951}>, <A framework for utility-based service oriented design in SASSY, {eid: 77950509895}>, <Architecture-based runtime software evolution, {eid: 0031597162}>, <Software engineering for self-adaptive systems: A research roadmap, {eid: 70350033987}>, <None, {eid: 70349441583}>, <Foundations for the study of software architecture, {eid: 0001956194}>, <None, {eid: 0003924156}>, <A tutorial on hidden markov models and selected applications in speech recognition, {eid: 0024610919}>, <Dynamic weighted majority: An ensemble method for drifting concepts, {eid: 37749050180}>, <Learning in the presence of concept drift and hidden contexts, {eid: 0030126609}>, <A framework for ensuring and improving dependability in highly distributed systems, {eid: 84887972299}>, <FUSION: A framework for engineering self-tuning self-adaptive software systems, {eid: 78751536309}>, <None, {eid: 25844484052}>, <None, {eid: 25644459607}>, <Classification and comparison framework for software architecture description languages, {eid: 0033892696}>, <Dynamic software product lines, {eid: 84904392607}>, <A feature-oriented approach to developing dynamically reconfigurable products in product line engineering, {eid: 34547364707}>, <Autonomic computing through reuse of variability models at runtime: The case of smart homes, {eid: 70350339324}>, <MATA: A unified approach for composing UML aspect models based on graph transformation, {eid: 71549130408}>, <Elicitation and utilization of application-level utility functions, {eid: 70049105374}>, <User guidance of resource-adaptive systems, {eid: 57649183950}>, <None, {eid: 0003406396}>, <Data-driven modelling: Paradigm, methods, experiences, {eid: 0038456166}>, <None, {eid: 2442592260}>, <Induction of decision trees, {eid: 33744584654}>, <None, {eid: 0003802343}>, <Multivariate adaptive regression splines, {eid: 0002432565}>, <None, {eid: 0004180332}>, <None, {eid: 0003584577}>, <An extensible framework for improving a distributed software systems deployment architecture, {eid: 84856556651}>, <Scenario-driven dynamic analysis of distributed architectures, {eid: 37149042101}>, <A style-aware architectural middleware for resource-constrained, distributed systems, {eid: 21244493287}>, <None, {eid: 84887970885}>, <None, {eid: 0003936062}>, <An infrastructure for the rapid development of XML-based architecture description languages, {eid: 0036038853}>, <Utilizing architectural styles to enhance the adaptation support of middleware platforms, {eid: 84860244534}>, <None, {eid: 84887970284}>, <Incremental model synchronization with triple graph grammars, {eid: 33750322864}>, <None, {eid: 84887979381}>, <An evidence generation model for web services, {eid: 74949114889}>, <None, {eid: 84887855734}>, <A user-centric approach for improving a distributed software systems deployment architecture, {eid: 41149152677}>, <RESISTing Reliability Degradation through Proactive Reconfiguration, {eid: 78649803946}>, <Taming uncertainty in self-adaptive software, {eid: 80053212005}>, <QoS architectural patterns for self-architecting software systems, {eid: 77954752109}>, <Convex discrete optimization, {eid: 78149307809}>, <Self-adaptive software: Landscape and research challenges, {eid: 70349742463}>, <Software engineering for self-adpaptive systems: A second research roadmap, {eid: 84883582394}>, <Adaptive trust negotiation and access control, {eid: 30644473909}>, <Assessing the robustness of self-managing computer systems under highly variable workloads, {eid: 4544322107}>, <None, {eid: 84887909021}>, <Taming dynamically adaptive systems using models and aspects, {eid: 70350303567}>, <A domain specific modeling language supporting specification, simulation and execution of dynamic adaptive systems, {eid: 77249177857}>, <An aspect-oriented and model-driven approach for managing dynamic variability, {eid: 56649106269}>, <Rethinking the use of models in software architecture, {eid: 70349918375}>, <Induction of model trees for predicting continuous classes, {eid: 0001717058}>, <An architecture-based approach to self-adaptive software, {eid: 0032665183}>, <Feature oriented evolutions for context-aware adaptive systems, {eid: 78649990837}>, <Protecting SLAs with surrogate models, {eid: 77954568155}>, <Reinforcement learning in autonomic computing: A manifesto and case studies, {eid: 33847379922}>, <Reinforcement learning-based dynamic adaptation planning method for architecture-based self-managed software, {eid: 70349912234}>, <Supervised adaptive dynamic programming based adaptive cruise control, {eid: 80052213489}>, <Language models for detection of unknown attacks in network traffic, {eid: 33846910249}>, <Application of Machine Learning Algorithms to KDD Intrusion Detection Data Set within Misuse Detection Context, {eid: 1642355954}>",,,,,,2013-11-25,,,,,,,eng,,Journal,,,,2-s2.0-84887877241,True,False,True,False
4,,"Aldalur I. (AUID: 56492990100), Arrieta A. (AUID: 56514865400), Sagardui G. (AUID: 13104721400), Agirre A. (AUID: 57203899020), Arratibel M. (AUID: 57219568384)",,A microservice-based framework for multi-level testing of cyber-physical systems,2023,Software Quality Journal,,,,,,,0,10.1007/s11219-023-09639-z,https://www.doi.org/10.1007/s11219-023-09639-z,"<Mondragon Unibertsitatea>, <Ikerlan>, <Orona>",,"Â© 2023, The Author(s).In the last years, the use of microservice architectures is spreading in Cyber-Physical Systems (CPSs) and Internet of Things (IoT) domains. CPSs are systems that integrate digital cyber computations with physical processes. The development of software for CPSs demands a constant maintenance to support new requirements, bug fixes, and deal with hardware obsolescence. The key in this process is code testing and more if the code is fragmented during the development of CPSs. It is important to remark that this process is challenging and time-consuming. In this paper, we report on the experience of instantiating of the microservice-based architecture for DevOps of CPSs to test elevator dispatching algorithms across different test levels (i.e., SiL, HiL and Operation). Such an architecture allows for a continuous deployment, monitoring and validation of CPSs. By integrating the approach with a real industrial case study, we demonstrate that our approach reduces significantly the time needed in the testing process and consequently, reduces the economic cost of the entire process.","Cyber-Physical Systems, Elevators, Testing",,,,,,,,"<Deis: Dependability engineering innovation for industrial cps, {eid: 85052091111}>, <Automatic generation of test system instances for configurable cyber-physical systems, {eid: 84988411234, doi: 10.1007/s11219-016-9341-7}>, <Employing multi-objective search to enhance reactive test case generation and prioritization for testing industrial cyber-physical systems, {eid: 85041170102, doi: 10.1109/TII.2017.2788019}>, <Search-based test case generation for cyber-physical systems, {eid: 85022055817}>, <Pareto efficient multi-objective black-box test case selection for simulation-based testing, {eid: 85068071058, doi: 10.1016/j.infsof.2019.06.009}>, <Search-based test case prioritization for simulation-based testing of cyber-physical system product lines, {eid: 85057869201, doi: 10.1016/j.jss.2018.09.055}>, <Design-operation continuum methods for traffic master, {eid: 85160762985}>, <Some seeds are strong: Seeding strategies for search-based test case selection, {eid: 85145884657, doi: 10.1145/3532182}>, <None, {eid: 85160772262}>, <Basic concepts and taxonomy of dependable and secure computing, {eid: 12344308304, doi: 10.1109/TDSC.2004.2}>, <Qos-aware metamorphic testing: An elevation case study, {eid: 85097341759}>, <Towards a taxonomy for eliciting design-operation continuum requirements of cyber-physical systems, {eid: 85093982993}>, <Generating metamorphic relations for cyber-physical systems with genetic programming: An industrial case study, {eid: 85116195970}>, <None, {eid: 85160711792}>, <Digitalization of the world economy: Performance evaluation of introducing cyber-physical systems, {eid: 85084946303}>, <Machine learning-based test selection for simulation-based testing of self-driving cars software, {eid: 85160740180}>, <Testing the untestable: Model testing of complex software-intensive systems, {eid: 84989170087}>, <Robotics software: The future should be open position, {eid: 43749085121, doi: 10.1109/M-RA.2008.915411}>, <Microservice-based performance problem detection in cyber-physical system software updates, {eid: 85115716384}>, <Using regression learners to predict performance problems on software updates: A case study on elevators dispatching algorithms, {eid: 85104966136}>, <A modular cps architecture design based on ros and docker, {eid: 84964196260, doi: 10.1007/s12008-016-0313-8}>, <A system identification based oracle for control-cps software fault localization, {eid: 85072284658}>, <Automated fault tolerance augmentation in model-driven engineering for CPS, {eid: 85079534491, doi: 10.1016/j.csi.2020.103424}>, <A search-based framework for automatic generation of testing environments for cyber-physical systems, {eid: 85133963234, doi: 10.1016/j.infsof.2022.106936}>, <Simulation-based test case generation for unmanned aerial vehicles in the neighborhood of real flights, {eid: 85160764524}>, <Resource-aware control-model-based co-engineering of control algorithms and real-time systems, {eid: 84938604001}>, <None, {eid: 79957551757}>, <Cross-layer design of reconfigurable cyber-physical systems, {eid: 85020188209}>, <Test generation and test prioritization for simulink models with dynamic behavior, {eid: 85042870776, doi: 10.1109/TSE.2018.2811489}>, <Generating automated and online test oracles for simulink models with continuous and uncertain behaviors, {eid: 85071946902}>, <Approximation-refinement testing of compute-intensive cyber-physical models: An approach based on system identification, {eid: 85093102888}>, <A fault-injection methodology for the system-level dependability analysis of multiprocessor embedded systems, {eid: 84906326908, doi: 10.1016/j.micpro.2014.05.008}>, <Simulation integration platforms for cyber-physical systems, {eid: 85066022650}>, <Evaluating model testing and model checking for finding requirements violations in simulink models, {eid: 85071930534}>, <Integrating test levels for embedded systems, {eid: 77949939939}>, <Survey on test case generation, selection and prioritization for cyber-physical systems, {eid: 85114863453, doi: 10.1002/stvr.1794}>, <An approach to model dependability of cyber-physical systems, {eid: 84957005489, doi: 10.1016/j.micpro.2015.11.021}>, <Test case prioritization for acceptance testing of cyber physical systems: A multi-objective search-based approach, {eid: 85051547390}>, <Uncertainty-aware specification and analysis for hardware-in-the-loop testing of cyber-physical systems, {eid: 85090366447, doi: 10.1016/j.jss.2020.110813}>, <None, {eid: 0027684588}>, <Research directions for cyber physical systems in wireless and mobile healthcare, {eid: 85075490036, doi: 10.1145/2899006}>, <A model-driven co-design framework for fusing control and scheduling viewpoints, {eid: 85042334695, doi: 10.3390/s18020628}>, <None, {eid: 85160806582}>, <Digital twins for dependability improvement of autonomous driving, {eid: 85072985446}>, <Automatic generation of system test cases from use case specifications, {eid: 84975763819}>, <Automotive validation functions for on-line test evaluation of hybrid real-time systems, {eid: 43549099810}>",,,Springer,,,2023-01-01,,,,,,,eng,,Journal,,,,2-s2.0-85160692935,False,True,False,False
5,,"Cortellessa V. (AUID: 6603764364), Di Pompeo D. (AUID: 57188727238), Eramo R. (AUID: 18039710400), Tucci M. (AUID: 55317706000)",,A model-driven approach for continuous performance engineering in microservice-based systems,2022,Journal of Systems and Software,,,,,,,21,10.1016/j.jss.2021.111084,https://www.doi.org/10.1016/j.jss.2021.111084,"<DISIM, University of LAquila>",,"Â© 2021 The Author(s)Microservices are quite widely impacting on the software industry in recent years. Rapid evolution and continuous deployment represent specific benefits of microservice-based systems, but they may have a significant impact on non-functional properties like performance. Despite the obvious relevance of this property, there is still a lack of systematic approaches that explicitly take into account performance issues in the lifecycle of microservice-based systems. In such a context of evolution and re-deployment, Model-Driven Engineering techniques can provide major support to various software engineering activities, and in particular they can allow managing the relationships between a running system and its architectural model. In this paper, we propose a model-driven integrated approach that exploits traceability relationships between the monitored data of a microservice-based running system and its architectural model to derive recommended refactoring actions that lead to performance improvement. The approach has been applied and validated on two microservice-based systems, in the domain of e-commerce and ticket reservation, respectively, whose architectural models have been designed in UML profiled with MARTE.","Continuous deployment, Microservices, Model-driven engineering, Performance engineering, Software evolution, Software refactoring",,,,,,,,"<None, {eid: 85117092929}>, <Performance-driven software model refactoring, {eid: 85029760730, doi: 10.1016/j.infsof.2017.09.006}>, <Exploiting architecture/runtime model-driven traceability for performance improvement, {eid: 85065793737, doi: 10.1109/ICSA.2019.00017}>, <Performance-based software model refactoring in fuzzy contexts, {eid: 84944250248, doi: 10.1007/978-3-662-46675-9_10}>, <Models@run.time: a guided tour of the state of the art and research challenges, {eid: 85059780955, doi: 10.1007/s10270-018-00712-x}>, <Models@run.time, {eid: 85008066028, doi: 10.1109/MC.2009.326}>, <Model-driven engineering for design-runtime interaction in complex systems: Scientific challenges and roadmap - report on the mde@derun 2018 workshop, {eid: 85058512584, doi: 10.1007/978-3-030-04771-9_40}>, <Microservices: Architecting for continuous delivery and DevOps, {eid: 85051140111, doi: 10.1109/ICSA.2018.00013}>, <JTL: a bidirectional and change propagating transformation language, {eid: 79952255625, doi: 10.1007/978-3-642-19440-5_11}>, <None, {eid: 85049690898, doi: 10.1145/3183440.3183481}>, <None, {eid: 84884855569, doi: 10.1007/978-3-642-40725-3_1}>, <Model-Based Software Performance Analysis, {eid: 84859490038, doi: 10.1007/978-3-642-13621-4}>, <An approach for modeling and detecting software performance antipatterns based on first-order logics, {eid: 84893724525, doi: 10.1007/s10270-012-0246-z}>, <An approach for modeling and detecting software performance antipatterns based on first-order logics, {eid: 84893724525, doi: 10.1007/s10270-012-0246-z}>, <Model-Integrating Microservices: A Vision Paper, {eid: 84964253422}>, <A microservice reference case study for design-runtime interaction in MDE, {eid: 85069712231}>, <Model-driven generation of microservice architectures for benchmarking performance and resilience engineering approaches, {eid: 85019479213, doi: 10.1145/3053600.3053627}>, <Improved traceability for bidirectional model transformations, {eid: 85063081813}>, <The Stable Model Semantics for Logic Programming, {eid: 0001119421}>, <Run-time Software Architectural Models for Adaptation, Recovery and Evolution, {eid: 85041444711}>, <Suanming: Explainable prediction of performance degradations in microservice applications, {eid: 85104516502, doi: 10.1145/3427921.3450248}>, <Architectural runtime models for integrating runtime observations and component-based models, {eid: 85087587294, doi: 10.1016/j.jss.2020.110722}>, <The EPSILON book, {eid: 79959264644}>, <Quantitative system performance: computer system analysis using queueing network models, {eid: 0003834102}>, <The DLV system for knowledge representation and reasoning, {eid: 33745244351, doi: 10.1145/1149114.1149117}>, <Incremental calibration of architectural performance models with parametric dependencies, {eid: 85085913656, doi: 10.1109/ICSA47634.2020.00011}>, <Building Microservices, {eid: 84950338538}>, <A UML profile for MARTE: modeling and analysis of real-time embedded systems, OMG, {eid: 77954782575}>, <Unified Modeling Language, Version 2.5, OMG, {eid: 84888639273}>, <Rigorous identification and encoding of trace-links in model-driven engineering, {eid: 80053133555, doi: 10.1007/s10270-010-0158-8}>, <DeSARM: A Decentralized Mechanism for Discovering Software Architecture Models at Runtime in Distributed Systems, {eid: 85006162887}>, <Differences between model-driven development of service-oriented and microservice architecture, {eid: 85025587207, doi: 10.1109/ICSAW.2017.32}>, <Corrigendum: âmean-value analysis of closed multichain queuing networksâ, {eid: 84976800242, doi: 10.1145/322261.322275}>, <Improving microservice-based applications with runtime placement adaptation, {eid: 85062150526, doi: 10.1186/s13174-019-0104-0}>, <Model-driven engineering, {eid: 33344465743, doi: 10.1109/MC.2006.58}>, <None, {eid: 85117076351}>, <Exploiting load testing and profiling for performance antipattern detection, {eid: 85039063985, doi: 10.1016/j.infsof.2017.11.016}>, <WESSBAS: extraction of probabilistic workload specifications for load testing and performance prediction - a model-driven approach for session-based application systems, {eid: 84991818131, doi: 10.1007/s10270-016-0566-5}>, <Software engineering of self-adaptive systems, {eid: 85083949468, doi: 10.1007/978-3-030-00262-6_11}>, <A survey of traceability in requirements engineering and model-driven development, {eid: 77956264581, doi: 10.1007/s10270-009-0145-0}>, <The future of software performance engineering, {eid: 34748855838, doi: 10.1109/FOSE.2007.32}>, <Latent error prediction and fault localization for microservice applications by learning from system trace logs, {eid: 85071904016, doi: 10.1145/3338906.3338961}>, <Delta debugging microservice systems, {eid: 85056537506, doi: 10.1145/3238147.3240730}>, <Benchmarking microservice systems for software engineering research, {eid: 85049690447, doi: 10.1145/3183440.3194991}>, <Automation of the Incremental Integration of Microservices Architectures, {eid: 85018772815, doi: 10.1007/978-3-319-52593-8_4}>",,,Elsevier Inc.,,,2022-01-01,,,,,,,eng,,Journal,,,,2-s2.0-85117098236,True,True,True,True
6,,Sandobalin J. (AUID: 57196234105),,A Model-Driven Approach to Continuous Delivery of Cloud Resources,2017,"15th International Conference on Service-Oriented Computing, ICSOC 2017, Workshop track: 2nd Workshop on Adaptive Service-Oriented and Cloud Applications, ASOCA 2017, 2nd Workshop on IoT Systems Provisioning and Management in Cloud Computing, ISyCC 2016, 13th International Workshop on Engineering Service-Oriented Applications and Cloud Services, WESOACS 2017 and Satellite Events",,,,,,,1,10.1007/978-3-319-91764-1_29,https://www.doi.org/10.1007/978-3-319-91764-1_29,"<Escuela PolitÃ©cnica Nacional>, <Universitat PolitÃ¨cnica de ValÃ¨ncia>",,"Â© Springer International Publishing AG, part of Springer Nature 2018.DevOps is a paradigm which brings practices and tools that optimize the software delivery time. Cloud-based DevOps processes facilitate the continuous delivery of infrastructure and software applications (i.e. cloud resources). In particular, Infrastructure as Code is the cornerstone of DevOps for automating the infrastructure provisioning based on practices from software development. There exist several Configuration Management Tools (CMTs) that use script languages to define the infrastructure provisioning to be deployed in a particular cloud provider. However, manual setting of the script languages to establish the infrastructure provisioning in a CMT for a particular cloud provider is a time-consuming and error-prone activity. For these reasons, the aim of my PhD research is proposing a model-driven approach to abstract and automate a continuous delivery process of cloud resources through model-driven techniques and DevOps. In addition, this approach seeks to cover the development process of cloud resources in development, testing and production environments.","Cloud computing, Cloud resources, Continuous delivery, DevOps, Infrastructure as code, Model-Driven development",,,,,,,,"<Modern DevOps: Optimizing software development through effective system interactions, {eid: 84940533528}>, <None, {eid: 84858197925}>, <None, {eid: 85026761147}>, <None, {eid: 84956782190}>, <Streamlining DevOps automation for Cloud applications using TOSCA as standardized metamodel, {eid: 84958740530}>, <MORE: A model-driven operation service for cloud-based IT systems. In: Proceed, {eid: 84989959655}>, <None, {eid: 85032346645}>, <End to end automation on cloud with build pipeline: The case for DevOps in insurance industry, continuous integration, continuous testing, and continuous delivery, {eid: 84966553219}>, <Test orchestration a framework for Continuous Integration and Continuous deployment, {eid: 84929237628}>, <An infrastructure modelling tool for cloud provisioning, {eid: 85032348388}>, <Eugenia: Towards disciplined and automated development of GMF-based graphical model editors, {eid: 84923537629}>, <EMF: Eclipse Modeling Framework, {eid: 74549142762}>, <End-to-End automation in cloud infrastructure provisioning, {eid: 85049009196}>",,,Springer Verlag,,,2017-11-13,,,,,,,eng,,Book Series,,,,2-s2.0-85049013424,True,True,False,False
7,,"Tegeler T. (AUID: 57210413680), Gossen F. (AUID: 56418363000), Steffen B. (AUID: 55788171500)",,A model-driven approach to continuous practices for modern cloud-based web applications,2019,"9th International Conference On Cloud Computing, Data Science and Engineering, Confluence 2019",,,,,,,8,10.1109/CONFLUENCE.2019.8776962,https://www.doi.org/10.1109/CONFLUENCE.2019.8776962,"<Department for Programming Systems, TU Dortmund University>, <CSIS, University of Limerick>",,"Â© 2019 IEEE.In this paper, we propose a model-driven approach to Continuous Software Integration and Deployment (CI/CD) for modern cloud-based applications. Key to our approach is a formal graphical modelling language for the specification of the processes and tasks involved. Based on these specifications the complete CI/CD configurations are generated fully and automatically guaranteeing their correctness with regard to the specification by construction. This way typical sources of critical errors can be avoided lowering the hurdle to introduce CI/CD especially in mature projects. We demonstrate the power of our model-driven approach with the help of an industrial web application - a prime example for cloud-based applications.","Cloud-based Applications, Continuous Deployment, Continuous Integration, Model-driven",,,,,,,,"<Continuous integration, delivery and deployment: A systematic review on approaches, tools, challenges and practices, {eid: 85070592302}>, <Practical guide to platform-asa-service, {eid: 85070620321}>, <Quality and productivity outcomes relating to continuous integration in github, {eid: 84960385912}>, <The impact of continuous integration on other software development practices: A large-scale empirical study, {eid: 85041445161}>, <Practicing continuous integration and continuous delivery on aws: Accelerating software delivery with devops, {eid: 85070617883}>, <None, {eid: 0006705483}>, <Continuous delivery: Overcoming adoption challenges, {eid: 85016081845}>, <Work practices and challenges in pull-based development: The integrators perspective, {eid: 84951765304}>, <Usage, costs, and benefits of continuous integration in open-source projects, {eid: 84989159511}>, <Enabling agile testing through continuous integration, {eid: 70449678931}>, <None, {eid: 85065958860}>, <A fully model-based approach to software development for industrial centrifuges, {eid: 84993973232}>, <Domain-specific code generator modeling: A case study for multifaceted concurrent systems, {eid: 84910683982}>, <High-level frameworks for the specification and verification of scheduling problems, {eid: 85056471345}>, <None, {eid: 85046585343}>, <None, {eid: 85046592927}>, <CINCO: A simplicity-driven approach to full generation of domain-specific graphical modeling tools, {eid: 85046592903}>, <Language-driven engineering: From general-purpose to purpose-specific languages, {eid: 85053636331}>, <None, {eid: 85070580563}>, <None, {eid: 85070651921}>, <Lint, a c program checker, {eid: 0004311122}>, <Simplicity as a driver for agile innovation, {eid: 77953342927}>, <Chapter 1 contributions of perceptual and cognitive processes to the comprehension of graphics, {eid: 77956785634}>, <Thinking graphically: Connecting vision and cognition during graph comprehension, {eid: 43049127447}>, <None, {eid: 0003962322}>, <Model-checking: A tutorial introduction, {eid: 84865202099}>, <Characteristic formulae, {eid: 0042478272}>, <None, {eid: 0003418449}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2019-01-10,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85070649037,True,False,True,False
8,,"Castellanos C. (AUID: 55418649100), Perez B. (AUID: 44061764600), Correal D. (AUID: 16306282100), Varela C.A. (AUID: 8382441200)",,A Model-Driven Architectural Design Method for Big Data Analytics Applications,2020,"2020 IEEE International Conference on Software Architecture Companion, ICSA-C 2020",,,,,,,2,10.1109/ICSA-C50368.2020.00026,https://www.doi.org/10.1109/ICSA-C50368.2020.00026,"<University of Los Andes, System Engineering and Computing Department>, <Department of Systems, Francisco de Paula Santander University>, <Rensselaer Polytechnic Institute, Computer Science Department>",,"Â© 2020 IEEE.Big data analytics (BDA) applications use machine learning to extract valuable insights from large, fast, and heterogeneous data sources. The architectural design and evaluation of BDA applications entail new challenges to integrate emerging machine learning algorithms with cutting-edge practices whilst ensuring performance levels even in the presence of large data volume, velocity, and variety (3Vs). This paper presents a design process approach based on the Attribute-Driven Design (ADD) method and Architecture tradeoff analysis method (ATAM) to specify, deploy, and monitor performance metrics in BDA applications supported by domain-specific modeling and DevOps. Our design process starts with the definition of architectural drivers, followed by functional and deployment specification through integrated high-level modeling which enables quality scenarios monitoring. We used two use cases from avionics to evaluate this proposal, and the preliminary results suggest advantages by integrating multiple views, automating deployment and monitoring compared to similar approaches.","ADD, ATAM, Attribute-Driven Design, Big data analytics deployment, DevOps, Domain-specific model, Quality Scenarios, Software architecture",,,,,,,,"<How lufthansa capitalized on big data for business model renovation, {eid: 85065072840}>, <Executing architectural models for big data analytics, {eid: 85057231099}>, <None, {eid: 84948002011}>, <None, {eid: 0006029493}>, <A neural network meta-model and its application for manufacturing, {eid: 84963753286}>, <A performance modeling framework for lambda architecture based applications, {eid: 85026670445}>, <Towards model based approach to hadoop deployment and configuration, {eid: 84964299938}>, <Optiml: An implicitly parallel domain-specific language for machine learning, {eid: 80053441759}>, <None, {eid: 85057250097}>, <None, {eid: 85085751486}>, <Spring xd: A modular distributed stream and batch processing system, {eid: 84960970167}>, <Infrastructure-As-code for data-intensive architectures: A model-driven development approach, {eid: 85051103640}>, <A survey on big data analytics solutions deployment, {eid: 85072839250}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2020-03-16,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85085757835,False,True,True,True
9,,"Meyers B. (AUID: 16646603800), Gadeyne K. (AUID: 22734132700), Oakes B. (AUID: 56289881100), Bernaerts M. (AUID: 57212107505), Vangheluwe H. (AUID: 6602402077), Denil J. (AUID: 35145566200)",,A model-driven engineering framework to support the functional safety process,2019,"22nd ACM/IEEE International Conference on Model Driven Engineering Languages and Systems Companion, MODELS-C 2019",,,,,,,8,10.1109/MODELS-C.2019.00094,https://www.doi.org/10.1109/MODELS-C.2019.00094,"<CodesignS>, <AnSyMo/CoSys, University of Antwerp and Flanders Make>",,"Â© 2019 IEEE.The design of safety-related systems traditionally has long and costly development cycles due to the highly manual safety engineering process, which is guided by industry standards. In this paper, we present a modelling framework that supports DevOps principles of continuous testing and fast development iterations for the design of safety-critical systems. We show how modelling can help introducing DevOps in the context of functional safety analysis, and we also report how DevOps was used during the development of the framework.","Automotive, Devops, Iso26262, Safety critical, Verification",,,,,,,,"<Connected car: Technologies, issues, future trends, {eid: 84994267550}>, <None, {eid: 0004217479}>, <None, {eid: 85075927084}>, <None, {eid: 85107187033}>, <Evaluating the use of domainspecific modeling in practice, {eid: 79952254738}>, <Simulation aided hazard analysis and risk assessment SAHARA, {eid: 85075949433}>, <Matters of (meta-) modeling, {eid: 34248658631}>, <The SAE architecture analysis & design language (AADL) A standard for engineering performance critical systems, {eid: 43049160930}>, <Meta modeling approach to safety standard for consumer devices, {eid: 85075944948}>, <Deriving safety requirements according to iso 26262 for complex systems: A method applied in the automotive industry, {eid: 85075941648}>, <Model-based specification of safety compliance needs for critical systems: A holistic generic metamodel, {eid: 84958618379}>, <Survey of model-based systems engineering methodologies, {eid: 63349087969}>, <FTG+PM: An integrated framework for investigating model transformation chains, {eid: 84885803987}>, <None, {eid: 85072551458}>, <Taming Dr. Frankenstein: Contract-based design for cyber-physical systems, {eid: 84875154791}>, <A contract-based methodology for aircraft electric power system design, {eid: 84904792110}>, <Structuring safety requirements in ISO 26262 using contract theory, {eid: 84886387891}>, <Aligning qualitative, real-time, and probabilistic property specification patterns using A structured English grammar, {eid: 84937702668}>, <A framework for temporal verification support in domain-specific modelling, {eid: 85084109347}>, <Breach, A toolbox for verification and parameter synthesis of hybrid systems, {eid: 77954986410}>, <Using rigorous simulation to support ISO 26262 hazard analysis and risk assessment, {eid: 84961700429}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2019-09-15,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85075948199,True,True,False,True
10,,"Rademacher F. (AUID: 57015087900), Sorgalla J. (AUID: 57194283105), Sachweh S. (AUID: 54912166300), ZÃ¼ndorf A. (AUID: 56000503100)",,A model-driven workflow for distributed microservice development,2019,"34th Annual ACM Symposium on Applied Computing, SAC 2019",,,,,,,7,10.1145/3297280.3300182,https://www.doi.org/10.1145/3297280.3300182,"<University of Applied Sciences and Arts Dortmund, IDiAL Institute>, <University of Applied Sciences and Arts Dortmund, Department of Computer Science, IDiAL Institute>, <University of Kassel, Department of Computer Science and Electrical Engineering>",,"Â© 2019 Copyright held by the owner/author(s).Model-driven Development (MDD) is a software engineering approach that abstracts a software's design leveraging models. In particular, the development of complex, service-based architectures is considered to benefit from MDD techniques like model validation, transformation, and code generation. This paper presents an MDD-based workflow for distributed, DevOps-based microservice development and identifies the involved model types. They provide the foundation for the subsequent development of modeling languages to employ MDD for MSA engineering.","Distributed microservice development, Microservice architecture, Model-driven microservice development, Modeling languages, Viewpoint modeling",,,,,,,,"<Microservices architecture enables Devops: Migration to a cloud-native architecture, {eid: 84968796741}>, <Modern devops: Optimizing software development through effective system interactions, {eid: 84998797474}>, <None, {eid: 85023646999}>, <Research on architecting microservices: Trends, focus, and potential for industrial adoption, {eid: 85021434750}>, <None, {eid: 2942742234}>, <Model-driven development of complex software: A research roadmap, {eid: 34748861160}>, <Container and microservice driven design for cloud infrastructure devops, {eid: 84978128210}>, <An approach to modeling microservice solutions, {eid: 85051083140}>, <None, {eid: 85010410859}>, <None, {eid: 84950338538}>, <None, {eid: 84870676587}>, <Differences between model-driven development of service-oriented and microservice architecture, {eid: 85025587207}>, <Challenges of domain-driven microservice design: A model-driven perspective, {eid: 85046890847}>, <None, {eid: 85010958676}>, <Microservices tenets, {eid: 84995489225}>",,,Association for Computing Machinery,,,2019-04-08,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85065640931,True,True,False,True
11,,"Langford M.A. (AUID: 57210599476), Cheng B.H.C. (AUID: 7202388859)",,A Modular and Composable Approach to Develop Trusted Artificial Intelligence,2022,"3rd IEEE International Conference on Autonomic Computing and Self-Organizing Systems, ACSOS 2022",,,,,,,0,10.1109/ACSOS55765.2022.00030,https://www.doi.org/10.1109/ACSOS55765.2022.00030,"<Michigan State University, Department of Computer Science and Engineering>",,"Â© 2022 IEEE.Trustworthy artificial intelligence (Trusted AI) is of utmost importance when learning-enabled components (LECs) are used in autonomous, safety-critical systems. When reliant on deep learning, these systems need to address the reliability, robustness, and interpretability of learning models. In addition to developing specific strategies to address each of these concerns, appropriate software architectures are needed to coordinate LECs and ensure they deliver acceptable behavior under uncertain conditions. This work proposes a model-driven framework of loosely-coupled modular services designed to monitor and control LECs with respect to Trusted AI assurance concerns. The proposed framework is composable, deploying independent services to improve the resilience and robustness of AI systems. The overarching objective of this framework is to support software engineering principles focusing on modularity, composability, and reusability in order to facilitate development and maintenance tasks, while also increasing stakeholder confidence in Trusted AI systems. To demonstrate this framework, it has been implemented to manage the operation of an autonomous rover's vision-based LEC while exposed to uncertain environmental conditions.","artificial intelligence, deep learning, models at run time, self-adaptive systems, software engineering",,,,,,,,"<Trustworthy AI, {eid: 85116000050}>, <None, {eid: 84944735469}>, <More Companies Flag a New Risk: Artificial Intelligence, {eid: 85142352957}>, <None, {eid: 85094908816}>, <None, {eid: 85142395476}>, <Trustworthy AI Is A Framework to Help Manage Unique Risk, {eid: 85088148273}>, <None, {eid: 85084062801}>, <The AI Effect: Working at the Intersection of AI and SE, {eid: 85087334830}>, <The Five Laws of SE for AI, {eid: 85077228353}>, <Adversarial Attacks and Defenses: An Interpretation Perspective, {eid: 85096642484}>, <From Monolith to Microservices: A Classification of Refactoring Approaches, {eid: 85095371364}>, <A Survey on Image Data Augmentation for Deep Learning, {eid: 85068705129}>, <Towards Enterprise- Ready AI Deployments: Minimizing the Risk of Consuming AI Models in Business Applications, {eid: 85064231120}>, <None, {eid: 85010410859}>, <Microservices Architecture Enables DevOps: Migration to a Cloud-Native Architecture, {eid: 84968796741}>, <Migrating Monolithic Mobile Application to Microservice Architecture: An Experiment Report, {eid: 85032264331}>, <Towards AI-enabled Microservice Architecture for Network Function Virtualization, {eid: 85097599131}>, <Cloud-Edge Microservice Architecture for DNN-based Distributed Multimedia Event Processing, {eid: 85103490774}>, <AI Bricks: A Microservices-Based Software for a Usage in the Cloud Robotics, {eid: 85056756889}>, <A Survey of Uncertainty in Deep Neural Networks, {eid: 85117971804}>, <A Survey of Robust Adversarial Training in Pattern Recognition: Fundamental, Theory, and Methodologies, {eid: 85142395022}>, <The Vision of Autonomic Computing, {eid: 0037253062}>, <None, {eid: 85118707330}>, <From Object Orientation to Goal Orientation: A Paradigm Shift for Requirements Engineering, {eid: 35048819568}>, <""know What You Know"": Predicting Behavior for Learning-Enabled Systems When Facing Uncertainty, {eid: 85113514072}>, <Adversarial Attacks and Defences: A Survey, {eid: 85068957995}>, <MoDALAS: Model-Driven Assurance for Learning-Enabled Autonomous Systems, {eid: 85123430406}>, <Model Inference and Testing, {eid: 84875297940}>, <Enki: A Diversity-Driven Approach to Test and Train Robust Learning-Enabled Systems, {eid: 85136237849}>, <Intriguing Properties of Neural Networks, {eid: 84925331214}>, <Measuring the Tendency of CNNs to Learn Surface Statistical Regularities, {eid: 85055695282}>, <DeepGauge: Multi-Granularity Testing Criteria for Deep Learning Systems, {eid: 85056490436}>, <DeepTest: Automated Testing of Deep-Neural-Network-Driven Autonomous Cars, {eid: 85069772253}>, <DeepHunter: A Coverage-Guided Fuzz Testing Framework for Deep Neural Networks, {eid: 85070586358}>, <DeepRoad: GAN-Based Metamorphic Testing and Input Validation Framework for Autonomous Driving Systems, {eid: 85056509092}>, <TensorFuzz: Debugging Neural Networks with Coverage-Guided Fuzzing, {eid: 85073172223}>, <Robotics Middleware: A Comprehensive Literature Survey and Attribute-Based Bibliography, {eid: 84872295345}>, <ROS: An Open-Source Robot Operating System, {eid: 77957352104}>, <It Takes a Village to Build a Robot: An Empirical Study of the ROS Ecosystem, {eid: 85096725328}>, <Mining Guidelines for Architecting Robotics Software, {eid: 85105348947}>, <None, {eid: 77954708825}>, <Elicitation and Utilization of Application- Level Utility Functions, {eid: 70049105374}>, <A Learning Approach to Enhance Assurances for Real-Time Self-Adaptive Systems, {eid: 85051544613}>, <Architecture-Based Self- Adaptation in the Presence of Multiple Objectives, {eid: 50249148558}>, <None, {eid: 85091849067}>, <None, {eid: 85142388539}>, <Focal Loss for Dense Object Detection, {eid: 85041916350}>, <None, {eid: 85140413950}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2022-09-19,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85142380092,False,False,False,True
12,,"Hochstrasser M. (AUID: 56046098000), Holzapfel F. (AUID: 10641256100), Myschik S. (AUID: 24921889100)",,A process-oriented build tool for safety-critical model-based software development,2018,"6th International Conference on Model-Driven Engineering and Software Development, MODELSWARD 2018",,,,,,,5,10.5220/0006605301910202,https://www.doi.org/10.5220/0006605301910202,"<Institute of Flight System Dynamics, TU MÃ¼nchen>, <Chair of Flight Mechanics and Flight Control, UniversitÃ¤t der Bundeswehr MÃ¼nchen>",,"Copyright Â© 2018 by SCITEPRESS â Science and Technology Publications, Lda. All rights reserved.By conquering new application areas, software complexity and size increases steadily. Development cycles must become faster to deliver critical updates in shorter time. Simultaneously, software takes over more and more safety-critical tasks, requiring strict software development processes. Up to today, these processes suffer from extensive manual review work and written, static documentation in form of standards, checklists, and procedures. This paper presents a monolithic, process-oriented build tool for model-based development in MATLAB, Simulink, and Stateflow. Beyond classical build automation functionality, it supports and accelerates process workflows. The tool provides infrastructure to formalize and ship workflows, checklists, and standards, but also features to assess completeness, consistency, compliance, and cleanliness with respect to them. Additionally, it allows definition of dynamic, incrementally updated checklists, and composes traceability in parallel with the build. The efficacy and achievable process coverage is demonstrated in an example application.","Build Automation, Component-based Software Engineering, Continuous Integration, Model Scaffolding, Model Standards, Software Development Process, Workflow Management System",,,,,,,,"<Software traceability with topic modeling, {eid: 77954731555}>, <Software certification of airborne cyber-physical systems under DO-178C, {eid: 84978477265}>, <None, {eid: 85052020299}>, <Towards scalable verification of commercial avionics software, {eid: 78649991384}>, <What is the benefit of a model-based design of embedded software systems in the car industry?, {eid: 84944678193}>, <Automating code reviews with simulink code inspector, {eid: 84873348691}>, <Verification and validation according to IEC 61508: A workflow to facilitate the development of high-integrity applications, {eid: 77952934643}>, <The modelery: A collaborative web based repository, {eid: 84904888914}>, <Pragmatic strategies for adopting model-based design for embedded applications, {eid: 85072358036}>, <None, {eid: 85052025584}>, <None, {eid: 85052014805}>, <A model-driven safety certification method for process compliance, {eid: 84922646738}>, <Traceability fundamentals, {eid: 84871007294}>, <None, {eid: 85052017820}>, <None, {eid: 85052011723}>, <Hierarchical edge bundles: Visualization of adjacency relations in hierarchical data, {eid: 33845640864}>, <None, {eid: 85052023436}>, <None, {eid: 85052023147}>, <Continuous delivery: Reliable software releases through build, test, and deployment automation, {eid: 84858197925}>, <An integrated view on modeling with multi domain-specific languages, {eid: 74549195796}>, <Strategic traceability for safety-critical projects, {eid: 84897584515}>, <Team-based collaboration in model-based design, {eid: 84880644657}>, <Using model-based development as software low-level requirements to achieve airborne software certification, {eid: 84863897252}>, <None, {eid: 77949517037}>, <On the exploration of model-based support for DO-178C-compliant avionics software development and certification, {eid: 85009771923}>, <None, {eid: 84978505075}>, <Which factors influence practitionersâ usage of build automation tools?, {eid: 85027711579}>, <None, {eid: 85179213591}>, <None, {eid: 84910086230}>, <None, {eid: 84898078761}>, <None, {eid: 84886689856}>, <None, {eid: 85052012732}>, <Traceability in model-driven engineering: Efficient and scalable traceability maintenance, {eid: 84949179515}>, <Dynamic hierarchical mega models: Comprehensive traceability and its efficient maintenance, {eid: 77956266933}>, <None, {eid: 67650563536}>, <None, {eid: 85015179105}>, <None, {eid: 85052013936}>, <Using rules for traceability creation, {eid: 84949179365}>",,,SciTePress,,,2018-01-22,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85052019687,True,False,False,False
13,,Azizi M. (AUID: 57203114144),,A tag-based recommender system for regression test case prioritization,2021,"14th IEEE International Conference on Software Testing, Verification and Validation Workshops, ICSTW 2021",,,,,,,6,10.1109/ICSTW52544.2021.00035,https://www.doi.org/10.1109/ICSTW52544.2021.00035,"<East Carolina University, Departemant of Computer Sceince>",,"Â© 2021 IEEE.In continuous integration development environments (CI), the software undergoes frequent changes due to bug fixes or new feature requests. Some of these changes may accidentally cause regression issues to the newly released software version. To ensure the correctness of the newly released software, it is important to perform enough testing prior to code submission to avoid breaking builds. Regression testing is one of the important maintenance activities that can control the quality and reliability of modified software, but it can also be very expensive. Test case prioritization can reduce the costs of regression testing by reordering test cases to meet testing objectives better. To date, various test prioritization techniques have been developed, however, the majority of the proposed approaches utilize static or dynamic analyses to decide which test cases should be selected. These analyses often have significant cost overhead and are time consuming. This paper introduces a new method for automatic test case prioritization in a CI environment intending to minimize the testing cost. Our proposed approach uses information retrieval to automatically select test cases based on their textual similarity to the portion of the code that has been changed. Our technique not only helps developers to organize and manage the software repository but also helps them to find the relevant resources quickly. To evaluate our approach, we performed an empirical study using 37 versions of 6 open source applications. The results of our empirical study indicate that our proposed method can improve the effectiveness and efficiency of test case prioritization technique.","Continuous Integration, IR-based Regression Testing, Recommender Systems, Regression Testing, Tag-based Recommender System, Test Case Prioritization",,,,,,,,"<None, {eid: 85108030650}>, <None, {eid: 85108030827}>, <None, {eid: 85108029235}>, <None, {eid: 85108030303}>, <None, {eid: 85108030115}>, <None, {eid: 85108023654}>, <None, {eid: 85108029453}>, <Code coverage based technique for prioritizing test cases for regression testing, {eid: 77958172355}>, <An information-theoretic perspective of tf-idf measures, {eid: 0037213089}>, <Improving bug location using binary class relationships, {eid: 84872356613}>, <Recovering traceability links between code and documentation, {eid: 0036821537}>, <Software traceability with topic modeling, {eid: 77954731555}>, <A collaborative filtering recommender systemfor test case prioritization in web applications, {eid: 85108022440}>, <Retest: A cost effective test case selection technique for modern software development, {eid: 85059652407}>, <Understanding lda in source code analysis, {eid: 84931027268}>, <Latent dirichlet allocation, {eid: 0141607824}>, <Impact analysis by mining software and change request repositories, {eid: 33749054435}>, <A clustering approach to improving test case prioritization: An industrial case study, {eid: 83455213915}>, <A survey of automatic query expansion in information retrieval, {eid: 84857617983}>, <Breaking the big-bang practice of traceability: Pushing timely trace recommendations to project stakeholders, {eid: 84870679581}>, <An extensive comparison of bug prediction approaches, {eid: 77953782938}>, <Feature location in source code: A taxonomy and survey, {eid: 84875382544}>, <On the use of mutation faults in empirical assessments of test case prioritization techniques, {eid: 33750208158}>, <Empirical studies of test case prioritization in a JUnit testing environment, {eid: 16244385003}>, <Prioritizing JUnit test cases: An empirical assessment and cost-benefits analysis, {eid: 32944458769}>, <Extending a hybrid tag-based recommender system with personalization, {eid: 77954710247}>, <Prioritizing test cases for regression testing, {eid: 0013040112}>, <Test case prioritization: A family of empirical studies, {eid: 0036472965}>, <Social media recommendation based on people and tags, {eid: 77956016063}>, <Evaluating the specificity of text retrieval queries to support software engineering, {eid: 84864225686}>, <Automatic query performance assessment during the retrieval of software artifacts, {eid: 85108026097}>, <Predicting query quality for applications of text retrieval to software engineering tasks, {eid: 85027020471}>, <Automatic query reformulations for text retrieval in software engineering, {eid: 84886393561}>, <None, {eid: 85099407803}>, <Achieving scalable model based testing through test case diversity, {eid: 84874821350}>, <Prioritizing manual test cases in traditional and rapid release environments, {eid: 84935083544}>, <A history-based cost-cognizant test case prioritization technique in regression testing, {eid: 84857373389}>, <The tagrec framework as a toolkit for the development of tag-based recommender systems, {eid: 85026852503}>, <Bug localization with combination of deep learning and information retrieval, {eid: 85025129443}>, <Information retrieval methods for automated traceability recovery, {eid: 84949179664}>, <An information retrieval approach for automatically constructing software libraries, {eid: 85108021869}>, <Text retrieval approaches for concept location in source code, {eid: 84893797238}>, <Identification of high-level concept clones in source code, {eid: 85116901733}>, <Test case prioritization for continuous regression testing: An industrial case study, {eid: 85108028388}>, <A static approach to prioritizing junit test cases, {eid: 84870485125}>, <Query-based configuration of text retrieval solutions for software engineering tasks, {eid: 84960414350}>, <A similarity-based approach for test case prioritization using historical failure data, {eid: 84964844271}>, <Classifying software for reusability, {eid: 0023126084}>, <Improving ir-based bug localization with context-aware query reformulation, {eid: 85058330812}>, <Test case prioritization: An empirical study, {eid: 0033326792}>, <Prioritizing test cases for regression testing, {eid: 0035481183}>, <An information retrieval approach for regression test prioritization based on program changes, {eid: 84951789291}>, <Improving bug localization using structured information retrieval, {eid: 84893534431}>, <Modeling the evolution of topics in source code histories, {eid: 85108028119}>, <Static test case prioritization using topic, {eid: 84893748831}>, <Mining software repositories using topic models, {eid: 79959916400}>, <Multi-objective test prioritization in software product line testing: An industrial case study, {eid: 84907843595}>, <Qtep: Quality-aware test case prioritization, {eid: 85030769956}>, <Qtep: Quality-aware test case prioritization, {eid: 85030769956}>, <A study of effective regression testing in practice, {eid: 0031335528}>, <Pareto efficient multi-objective test case selection, {eid: 34548278353}>, <Regression testing minimization, selection and prioritization: A survey, {eid: 84857550008}>, <Improved bug localization based on code change histories and bug reports, {eid: 84995673130}>, <Social ranking: Uncovering relevant content usingtag-based recomm ender systems, {eid: 63449133288}>, <Automatically recommending peer reviewers in modern code review, {eid: 84976536052}>, <Bridging the gap between the total and additional test-case prioritization strategies, {eid: 84881274508}>, <Where should the bugs be fixed? more accurate information retrieval-based bug localization based on bug reports, {eid: 84864197777}>, <Predicting defects for eclipse, {eid: 36949012531}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2021-04-12,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85108029154,False,False,False,False
14,,"Kim H.K. (AUID: 8835787400), Lee R.Y. (AUID: 7408200070)",,A testing frameworks for mobile embedded systems using MDA,2012,Studies in Computational Intelligence,,,,,,,0,10.1007/978-3-642-23202-2_6,https://www.doi.org/10.1007/978-3-642-23202-2_6,"<Department of Computer Engineering, Catholic University of Daegu>, <Software Engineering and Information Technology Institute, Central Michigan University>",,"Embedded system can give you many benefits in putting it in your device, such as mobile phones, appliances at home, machines at the bank, lottery machine and many more, just make sure it is undergoing in embedded systems testing to have the device check. You must know that putting an embedded system in any of your device (either at home or in your business) can vary be helpful in your daily life and for the near future.One of the important phases in the life cycle of embedded software development process is the designing phase. There are different models used in this particular phase including class diagrams, state diagrams and use cases etc. To test the conformance of the software it is very essential that test cases should be derived from these specific models. Similarly regressions testing through these models are very significant for testing of modified software. There are several regression testing approaches based on these model in literature. This survey report is the analysis of the model based regression testing techniques according to the parameter identified during this study. The summary as well as the analysis of the approaches is discussed in this survey report. In the end we concluded the survey by identifying the areas of further research in the field of model based regression testing.","Embedded testing, MDA, model based regression testing, Regression testing, Testing evaluation parameters, UML regression testing",,,,,,,,"<Borland, {eid: 82255169100}>, <None, {eid: 0037888603}>, <None, {eid: 0003704024}>, <None, {eid: 82255196754}>, <None, {eid: 82255169099}>, <Patton model based testing in pratice software engineering, {eid: 0032660359}>, <An overview of regression testing, {eid: 27944449669}>, <Insights into regression testing, {eid: 0024884273}>, <An approach for selective state machine based regression testing, {eid: 38849113163}>, <Generating regression tests via model checking, {eid: 18744364718}>, <Model-based regression test suite generation using dependence analysis, {eid: 38849154386}>, <Model based regression test reduction using dependence analysis, {eid: 0036441907}>, <Regression test suite reduction using extended dependence analysis, {eid: 41149088364}>, <Specification based regression test selection with risk analysis, {eid: 24944502842}>, <Automating impact analysis and regression test selection based on UML designs. In: Proceedings of the International Conference on software Maintenance (ICSM 2002), {eid: 0036442261}>, <Regression testing UML design. In: Proceedings of the 22nd, {eid: 34547283550}>, <Integrating white- and black-box techniques for class-level regression testing, {eid: 0035160585}>, <Towards software architecture-based regression testing, {eid: 34247339959}>",,,,,,2012-01-01,,,,,,,eng,,Book Series,,,,2-s2.0-82255177015,False,False,False,False
15,,"Liu H. (AUID: 56070503600), Li Z. (AUID: 56075167500), Zhu J. (AUID: 56933452300), Tan H. (AUID: 24765557800), Huang H. (AUID: 56138766000)",,A Unified test framework for continuous integration testing of SOA solutions,2009,"2009 IEEE International Conference on Web Services, ICWS 2009",,,,,,,10,10.1109/ICWS.2009.28,https://www.doi.org/10.1109/ICWS.2009.28,<IBM China Research Lab.>,,"The quality of Service Oriented Architecture (SOA) solutions is becoming more and more important along with the increasing adoption of SOA. Continuous Integration Testing (CIT) is an effective technology to discover bugs as early as possible. However, the diversity of programming models used in an SOA solution and the distribution nature of an SOA solution pose new challenges for CIT. Existing testing frameworks more focus on the integration testing of applications developed by a single programming model. In this paper, a unified test framework is proposed to overcome these limitations and enable the CIT of SOA solutions across the whole development lifecycle. This framework is designed following the Model Driven Architecture (MDA). The information of an executable test case is separated into two layers: the behavior layer and the configuration layer. The behavior layer represents the test logic of a test case and is platform independent. The configuration layer contains the platform specific information and is configurable for different programming models. An extensible and pluggable test execution engine is specially designed to execute the integration test cases. A global test case identifier instrumentation approach is used to merge the distributed test case execution traces captured by ITCAM - an IBM integrated management tool. A verification approach supporting Boolean expression and back-end service interaction verification is proposed to verify the test execution result. Initial experiments have shown the effectiveness of this unified test framework. Â© 2009 IEEE.","Continuous integration testing, Service oriented architecture",,,,,,,,"<None, {eid: 0006705483}>, <Surrogate: A simulation apparatus for continuous integration testing in service oriented architecture, {eid: 51749120985}>, <SOMA-ME: A platform for the model-driven design of SOA solutions, {eid: 55449092351}>, <SeDiTeC - Testing based on sequence diagrams, {eid: 84982953299}>, <Tivoli. Software, {eid: 70449498851}>, <Testing of service oriented architectures - A practical approach, {eid: 35048830352}>, <A test framework for integration testing of object-oriented programs, {eid: 70449464776}>, <UML-based integration testing, {eid: 0034593016}>, <None, {eid: 70449504645}>, <None, {eid: 70449495412}>, <None, {eid: 84892610252}>, <None, {eid: 51749124458}>",,,,,,2009-07-06,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-70449506949,False,False,False,False
16,,"WindmÃ¼ller S. (AUID: 55193337800), Neubauer J. (AUID: 55193753200), Steffen B. (AUID: 55788171500), Bauer O. (AUID: 55320508800), Howar F. (AUID: 36680056600)",,Active continuous quality control,2013,"16th ACM SIGSOFT Symposium on Component Based Software Engineering, CBSE 2013",,,,,,,43,10.1145/2465449.2465469,https://www.doi.org/10.1145/2465449.2465469,"<Technische UniversitÃ¤t>, <Carnegie Mellon University, Silicon Valley Campus>",,"We present Active Continuous Quality Control (ACQC), a novel approach that employs incremental active automata learning technology periodically in order to infer evolving behavioral automata of complex applications accompanying the development process. This way we are able to closely monitor and steer the evolution of applications throughout their whole life-cycle with minimum manual effort. Key to this approach is to establish a stable level for comparison via an incrementally growing behavioral abstraction in terms of a user-centric communication alphabet: The letters of this alphabet, which may correspond to whole use cases, are intended to directly express the functionality from the user perspective. At the same time their choice allows one to focus on specific aspects, which establishes tailored abstraction levels on demand, which may be refined by adding new letters in the course of the systems evolution. This way ACQC does not only allow us to reveal serious bugs simply by inspecting difference views of the (tailored) models, but also to visually follow and control the effects of (intended) changes, which complements our model-checking-based quality control. All this will be illustrated along reallife scenarios that arose during the component-based development of a commercial editorial system. Copyright 2013 ACM.","Active learning, Model checking, Testing, Validation",,,,,,,,"<Generating models of infinite-state communication protocols using regular inference with abstraction, {eid: 78649865496}>, <Inference and abstraction of the biometric passport, {eid: 78650271044}>, <Learning regular sets from queries and counterexamples, {eid: 0023453626}>, <Reusing system states by active learning algorithms, {eid: 84865277213}>, <On the correspondence between conformance testing and regular inference, {eid: 24644523009}>, <Integrating white- and black-box techniques for class-level regression testing, {eid: 0035160585}>, <Modelling to simulate botnet command and control protocols for the evaluation of network intrusion detection systems, {eid: 79960755070}>, <Model-based regression test suite generation using dependence analysis, {eid: 38849154386}>, <Testing software design modeled by finite-state machines, {eid: 0017973244}>, <None, {eid: 0003962322}>, <None, {eid: 84891584729}>, <Model generation by moderated regular extrapolation, {eid: 84958766854}>, <None, {eid: 0004181453}>, <None, {eid: 0037800076}>, <The teachers crowd: The impact of distributed oracles on active automata learning, {eid: 84868362469}>, <From zulu to rers, {eid: 78650283905}>, <Domain-specific optimization in automata learning, {eid: 33750547975}>, <Incremental requirement specification for evolving systems, {eid: 4544338476}>, <A constraint-based variability modeling framework, {eid: 84866284416}>, <Feature-based modelling of a complex, online-reconfigurable decision support service, {eid: 84880517489}>, <Automated regression test generation, {eid: 85009741625}>, <Efficient test-based model generation for legacy reactive systems, {eid: 19944391951}>, <Agile IT: Thinking in user-centric models, {eid: 78649837913}>, <Next generation learnlib, {eid: 79953206304}>, <Model-checking - A tutorial introduction, {eid: 84957706882}>, <Dynamic testing via automata learning, {eid: 70350430875}>, <Learnlib: A library for automata learning and experimentation, {eid: 33745767828}>, <LearnLib: A framework for extrapolating behavioral models, {eid: 70350536587}>, <Inference of finite automata using homing sequences, {eid: 0001349185}>, <Regression test selection for C++ software, {eid: 0034205213}>, <Iterative refinement of specification for component based embedded systems, {eid: 80051949494}>, <Characteristic formulae, {eid: 84926414743}>, <The fixpoint-analysis machine, {eid: 84947753987}>, <Introduction to active automata learning from a practical perspective, {eid: 79959277296}>, <Behavior-based model construction, {eid: 35248820556}>, <Hierarchical service definition, {eid: 18944368378}>, <Incremental formalization: A key to industrial success, {eid: 33744962473}>, <Model based testing with labelled transition systems, {eid: 43349104926}>, <Model-based testing and some steps towards test-based modelling, {eid: 79959216670}>, <A taxonomy of model-based testing approaches, {eid: 84862325128}>, <The role of dependencies in component-based systems evolution, {eid: 1442352335}>, <None, {eid: 0004181453}>, <A component-based approach to online software evolution: Research articles, {eid: 33745333983}>, <Generating regression tests via model checking, {eid: 18744364718}>",,,,,,2013-06-17,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-84880516456,True,True,True,False
17,,"RÃ¶sch T. (AUID: 57211339256), Sommer M. (AUID: 58710709500), Sax E. (AUID: 35243409200)",,Adaptive application development and integration process for modern automotive software,2022,"8th International Conference on Computer Technology Applications, ICCTA 2022",,,,,,,1,10.1145/3543712.3543718,https://www.doi.org/10.1145/3543712.3543718,"<EvoBus GmbH>, <Institut fuer Technik der Informationsverarbeitung, Karlsruhe Institute of Technology>",,"Â© 2022 ACM.Due to fast progress in information technologies and long lifecycles of vehicles, there are ever-increasing expectations in modern automotive software development regarding the flexibility to integrate updates and new functions quickly into already existing systems. This paper proposes a process, that is especially suitable for the development of new functions in higher programming languages and the usage of machine learning models. When developed in a tool like MATLAB, code generators can be used to integrate the function step-by-step into a service-oriented automotive E/E-architecture. It is based on a classic V-model process and uses integration steps according to the XiL approach. The key aspect is the frontloading of verification and validation into the steps as early as possible to keep iteration cycles fast. The proposed process is applied to the development of a Neural Network Model Predictive Control (NNMPC) for a Heating, Ventilation and Air-Conditioning (HVAC) unit of a city bus. The resulting NNMPC is then integrated into a system based on the AUTOSAR adaptive platform. That allowed the function to be developed and integrated quickly and seems to be a promising approach to bring new functions into already existing automotive E/E-architectures.","automotive software, AUTOSAR Adaptive, service-oriented architecture, software development process",,,,,,,,"<Das V-Modell: der Standard fÃ¼r die Softwareentwicklung mit Praxisleitfaden, {eid: 0003635013}>, <Anwendungsorientierte Ãbersicht kommerzieller Fahrzeug-Simulations-Systeme, {eid: 85139126764}>, <Hardware-in-the-loop simulation for the design and testing of engine-control systems, {eid: 0032628973}>, <None, {eid: 85066461200}>, <None, {eid: 85118775919}>, <Progress on the AUTOSAR Adaptive Platform for Intelligent Vehicles, {eid: 85139132955}>, <An Overview of Automotive Service-Oriented Architectures and Implications for Security Countermeasures, {eid: 85147696411}>, <None, {eid: 70350685372}>, <None, {eid: 4644233230}>, <Model Predictive HVAC Control with disturbance variable forecasting for city buses, {eid: 85119400006}>, <None, {eid: 85111610627}>, <Future Automotive Architecture and the Impact of IT Trends, {eid: 85028048781}>, <None, {eid: 85139138777}>, <Model-Based Automotive Software Development, {eid: 85105764504}>, <None, {eid: 84892106390}>, <None, {eid: 77954399574}>",,,Association for Computing Machinery,,,2022-05-12,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85139087126,True,False,False,False
18,,"Tavassoli S. (AUID: 57219113407), Khosravi R. (AUID: 56265703900), Damasceno C.D.N. (AUID: 57125912500), Mousavi M.R. (AUID: 7005703024)",,Adaptive behavioral model learning for software product lines,2022,"26th ACM International Systems and Software Product Line Conference, ASPLC 2022",,,,,,,8,10.1145/3546932.3546991,https://www.doi.org/10.1145/3546932.3546991,"<University of Tehran>, <Radboud University Nijmegen>, <Kings College London>",,"Â© 2022 ACM.Behavioral models enable the analysis of the functionality of software product lines (SPL), e.g., model checking and model-based testing. Model learning aims to construct behavioral models. Due to the commonalities among the products of an SPL, it is possible to reuse the previously-learned models during the model learning process. In this paper, an adaptive approach, called PLâ, for learning the product models of an SPL is presented based on the well-known Lâ algorithm. In this method, after learning each product, the sequences in the final observation table are stored in a repository which is used to initialize the observation table of the remaining products. The proposed algorithm is evaluated on two open-source SPLs and the learning cost is measured in terms of the number of rounds, resets, and input symbols. The results show that for complex SPLs, the total learning cost of PLâ is significantly lower than that of the non-adaptive method in terms of all three metrics. Furthermore, it is observed that the order of learning products affects the efficiency of PLâ. We introduce a heuristic to determine an ordering which reduces the total cost of adaptive learning.","adaptive model learning, automata learning, finite state machines, software product lines",,,,,,,,"<Reverse Engineering Feature Models from Software Configurations using Formal Concept Analysis, {eid: 84961377139}>, <Learning Regular Sets from Queries and Counterexamples, {eid: 0023453626}>, <A Development Process for Feature-Oriented Product Lines, {eid: 85045581970}>, <Automated analysis of feature models 20 years later: A literature review, {eid: 77955227439}>, <Verification of evolving software via component substitutability analysis, {eid: 44349129704}>, <A Greedy Heuristic for the Set-Covering Problem, {eid: 0000301097}>, <None, {eid: 77954732987}>, <None, {eid: 84864250191}>, <Software product lines-practices and patterns, {eid: 0004161809}>, <Learning from difference: An automated approach for learning family models from software product lines, {eid: 85123041275}>, <Learning to Reuse: Adaptive Model Learning for Evolving Systems, {eid: 85076982200}>, <Learning by sampling: Learning behavioral family models from software product lines, {eid: 85099082851}>, <LIFTS: Learning Featured Transition Systems, {eid: 85115186006}>, <Validated Test Models for Software Product Lines: Featured Finite State Machines, {eid: 85018251728}>, <Variability in Software Systems-A Systematic Literature Review, {eid: 84897604910}>, <None, {eid: 0003690974}>, <Adaptive Model Checking, {eid: 84888270231}>, <Inferring Finite State Machines Without Reset Using State Identification Sequences, {eid: 84952837398}>, <Inferring FSM Models of Systems Without Reset, {eid: 85051141395}>, <Reverse Engineering Feature Models from Programs Feature Sets, {eid: 83455213219}>, <Adaptive Learning for Learn-Based Regression Testing, {eid: 85053602861}>, <Matplotlib: A 2D graphics environment, {eid: 34247493236}>, <Model Inference and Testing, {eid: 84875297940}>, <Properties of Realistic Feature Models Make Combinatorial Testing of Product Lines Feasible, {eid: 80054081086}>, <None, {eid: 23744500479}>, <None, {eid: 0003512056}>, <The SAT4J library, Release 2. 2. System Description, {eid: 79959232722}>, <Deep Software Variability: Towards Handling Cross-Layer Configuration, {eid: 85101094475}>, <None, {eid: 84900579482}>, <None, {eid: 84868286575}>, <Learning software configuration spaces: A systematic literature review, {eid: 85114450561}>, <Automated and Scalable T-wise Test Case Generation Strategies for Software Product Lines, {eid: 77954510052}>, <LearnLib: A Library for Automata Learning and Experimentation, {eid: 33745790495}>, <Extraction of Feature Models from Formal Contexts, {eid: 80052652058}>, <Feature Diagrams: A Survey and a Formal Semantics, {eid: 41149124129}>, <Inferring Mealy Machines, {eid: 70649106324}>, <SMT-based variability analyses in FeatureIDE, {eid: 85097615618}>, <Empirical assessment of generating adversarial configurations for software product lines, {eid: 85099278930}>, <A Classification and Survey of Analysis Strategies for Software Product Lines, {eid: 84905827308}>, <FeatureIDE: An extensible framework for featureoriented software development, {eid: 84885591794}>, <Model learning, {eid: 85010790123}>, <None, {eid: 84892241478}>, <On the Notion of Variability in Software Product Lines, {eid: 84954068722}>, <A classification of product sampling for software product lines, {eid: 85055486094}>, <Active Continuous Quality Control, {eid: 84880516456}>, <Improving model inference in industry by combining active and passive learning, {eid: 85064164636}>",,,"Association for Computing Machinery, Inc",,,2022-09-12,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85138202894,True,False,True,True
19,,"Huistra D. (AUID: 57201675554), Meijer J. (AUID: 56494267100), van de Pol J. (AUID: 6603761101)",,Adaptive Learning for Learn-Based Regression Testing,2018,"23rd International Conference on Formal Methods for Industrial Critical Systems, FMICS 2018",,,,,,,9,10.1007/978-3-030-00244-2_11,https://www.doi.org/10.1007/978-3-030-00244-2_11,"<Formal Methods and Tools, University of Twente>",,"Â© 2018, Springer Nature Switzerland AG.Regression testing is an important activity to prevent the introduction of regressions into software updates. Learn-based testing can be used to automatically check new versions of a system for regressions on a system level. This is done by learning a model of the system and model checking this model for system property violations. Learning the model of a large system can take an unpractical amount of time however. In this work we investigate if the concept of adaptive learning can improve the learning speed of a model in a regression testing scenario. We have performed several experiments with this technique on two systems: ToDoMVC and SSH. We find that there can be a large benefit to using adaptive learning. In addition we find three main factors that influence the benefit of adaptive learning. There are however also some shortcomings to adaptive learning that should be investigated further.",,,,,,,,,"<Perspectives in software engineering, {eid: 84976803868}>, <A study of effective regression testing in practice, {eid: 0031335528}>, <Unit testing: Test early, test often, {eid: 20444476163}>, <Automated black-box testing of functional correctness using function approximation, {eid: 23744513315}>, <LTSmin: High-performance language-independent model checking, {eid: 84926646213}>, <Adaptive model checking, {eid: 33845709367}>, <Introduction to active automata learning from a practical perspective, {eid: 79959277296}>, <Learning regular sets from queries and counterexamples, {eid: 0023453626}>, <Inference of finite automata using homing sequences, {eid: 34548093754}>, <Testing software design modeled by finite-state machines, {eid: 0017973244}>, <Active continuous quality control, {eid: 84880516456}>, <Model-based testing without models: The TodoMVC case study, {eid: 85032678181}>, <Model learning and model checking of SSH implementations, {eid: 85027694235}>, <Minimal separating sequences for all pairs of states, {eid: 84960446124}>",,,Springer Verlag,,,2018-09-03,,,,,,,eng,,Book Series,,,,2-s2.0-85053602861,False,False,True,True
20,,"Yang Y. (AUID: 57210824536), Pan C. (AUID: 57222322120), Li Z. (AUID: 57015803000), Zhao R. (AUID: 16064942800)",,Adaptive Reward Computation in Reinforcement Learning-Based Continuous Integration Testing,2021,IEEE Access,,,,,,,3,10.1109/ACCESS.2021.3063232,https://www.doi.org/10.1109/ACCESS.2021.3063232,"<College of Information Science and Technology, Beijing University of Chemical Technology>",,"Â© 2013 IEEE.Reinforcement learning (RL) has been applied to prioritizing test cases in Continuous Integration (CI) testing, where the reward plays a crucial role. It has been demonstrated that historical information-based reward function can improve the effectiveness of the test case prioritization (TCP). However, the inherent character of frequent iterations in CI can produce a considerable accumulation of historical information, which may decrease TCP efficiency and result in slow feedback. In this paper, the partial historical information is considered in the reward computation, where sliding window techniques are adopted to capture the possible efficient information. Firstly, the fixed-size sliding window is introduced to set a fixed length of recent historical information for each CI test. Then dynamic sliding window techniques are proposed, where the window size is continuously adaptive to each CI testing. Two methods are proposed, the test suite-based dynamic sliding window and the individual test case-based dynamic sliding window. The empirical studies are conducted on fourteen industrial-level programs, and the results reveal that under limited time, the sliding window-based reward function can effectively improve the TCP effect, where the NAPFD (Normalized Average Percentage of Faults Detected) and Recall of the dynamic sliding windows are better than that of the fixed-size sliding window. In particular, the individual test case-based dynamic sliding window approach can rank 74.18% failed test cases in the top 50% of the sorting sequence, with 1.35% improvement of NAPFD and 6.66 positions increased in TTF (Test to Fail).","Continuous integration, reinforcement learning, reward computation, sliding window, test case prioritization",,,,,,,,"<Continuous integration, delivery and deployment: A systematic review on approaches, tools, challenges and practices, {eid: 85019140530}>, <Continuous integration and its tools, {eid: 84899646622}>, <Test case prioritization in continuous integration environments: A systematic mapping study, {eid: 85078708254}>, <Effect of time window on the performance of continuous regression testing, {eid: 85013123088}>, <Comparing white-box and black-box test prioritization, {eid: 84971425590}>, <Test re-prioritization in continuous testing environments, {eid: 85058303599}>, <Reinforcement learning: An introduction, {eid: 85067344495}>, <Reinforcement learning for automatic test case prioritization and selection in continuous integration, {eid: 85026639599}>, <Learning-to-rank vs ranking-to-learn: Strategies for regression testing in continuous integration, {eid: 85094318353}>, <Reward, motivation, and reinforcement learning, {eid: 0037057808}>, <A systematic study of reward for reinforcement learning based continuous integration testing, {eid: 85089907018}>, <Reward of reinforcement learning of test optimization for continuous integration, {eid: 85071576780}>, <History-based test case prioritization with software version awareness, {eid: 84885230977}>, <Test case prioritization approaches in regression testing: A systematic literature review, {eid: 85028775957}>, <Failure history data-based test case prioritization for effective regression test, {eid: 85020852947}>, <A time window based reinforcement learning reward for test case prioritization in continuous integration, {eid: 85092308710}>, <A study of effective regression testing in practice, {eid: 0031335528}>, <Prioritizing test cases for regression testing, {eid: 0035481183}>, <A survey on regression test-case prioritization, {eid: 85058421655}>, <Relationbased test case prioritization for regression testing, {eid: 85079013222}>, <Version specific test case prioritization approach based on artificial neural network, {eid: 85067622737}>, <Incorporating fault-proneness estimations into coverage-based test case prioritization methods, {eid: 85079054649}>, <Requirements based test prioritization using risk factors, {eid: 84946595421}>, <History-based test case prioritization for failure information, {eid: 85018510656}>, <Search algorithms for regression test case prioritization, {eid: 34047189734}>, <A fine-grained parallel multiobjective test case prioritization on GPU, {eid: 84884966832}>, <None, {eid: 84951288122}>, <Epistasis based ACO for regression test case prioritization, {eid: 85039920863}>, <An empirical study of regression testing techniques incorporating context and lifetime factors and improved costbene fit models, {eid: 34547306676}>, <Selecting a cost-effective test case prioritization technique, {eid: 3142772245}>, <The impact of continuous integration on other software development practices: A large-scale empirical study, {eid: 85041445161}>, <How does regression test prioritization perform in real-world software evolution?, {eid: 84971393429}>, <Prioritizing JUnit test cases in absence of coverage information, {eid: 70849096646}>, <Techniques for improving regression testing in continuous integration development environments, {eid: 84986877429}>, <Test case prioritization for continuous regression testing: An industrial case study, {eid: 84891715780}>, <Enhanced weighted method for test case prioritization in regression testing using unique priority value, {eid: 85018268821}>, <Experience report: Automated system level regression test prioritization using multiple factors, {eid: 85013287871}>, <Test prioritization in continuous integration environments, {eid: 85053760573}>, <None, {eid: 85102302639}>, <None, {eid: 85102288696}>, <None, {eid: 85102275463}>, <None, {eid: 85010746053}>, <Reinforcement learning and the reward engineering principle, {eid: 85048232151}>, <Combinatorial interaction regression testing: A study of test case generation and prioritization, {eid: 47349111813}>, <Prioritizing test cases for regression testing, {eid: 0035481183}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2021-01-01,,,,,,,eng,,Journal,,,,2-s2.0-85102280980,False,False,False,True
21,,"Kampik T. (AUID: 56728735900), Malhi A. (AUID: 56663163300), FrÃ¤mling K. (AUID: 6506103412)",,Agent-based business process orchestration for IoT,2019,"19th IEEE/WIC/ACM International Conference on Web Intelligence, WI 2019",,,,,,,2,10.1145/3350546.3352554,https://www.doi.org/10.1145/3350546.3352554,"<UmeÃ¥ University>, <Signavio GmbH>, <Aalto University>",,"Â© 2019 Association for Computing Machinery.The so-called Internet of Things is of increasing importance for facilitating productivity across industries, i.e., by connecting sensors with manufacturing lines and IT system landscapes with an increasing degree of autonomy. In this context, a common challenge is enabling reasonable trade-offs between structure and control on the one hand and flexibility and human-like intelligent behavior on the other hand. To address this challenge, we establish the need for and requirements of a hybrid IoT-/agent-based business process orchestration architecture that utilizes open standards. We propose a four-layered architecture, which integrates autonomous agents and business process orchestration for IoT/agents, and provide a running example for a supply chain management (purchasing) use case.","Business Process Management, Internet of Things, Orchestration",,,,,,,,"<A software product line process to develop agents for the iot, {eid: 84936970589}>, <BDI-agents for agile goal-oriented business processes, {eid: 84899955114}>, <The challenge of real-time multi-agent systems for enabling IoT and CPS, {eid: 85031005547}>, <A decade in hindsight: The missing bridge between multi-agent systems and the world wide web, {eid: 85076162268}>, <Agent-oriented cooperative smart objects: From IoT system design to implementation, {eid: 85055223459}>, <None, {eid: 85074779163}>, <Semantic business process management: A vision towards using semantic web services for business process management, {eid: 33845510337}>, <Agent-based business process management, {eid: 0001622522}>, <JS-SON - A minimalistic Javascript BDI agent library, {eid: 85068604708}>, <Business ecosystems as institutions of participation: A systems perspective on community-developed platforms, {eid: 84968811684}>, <Monitoring and managing IoT applications in smart cities using kubernetes, {eid: 85074772978}>, <Agents of Things (AOT): An intelligent operational concept of the Internet of Things (IoT), {eid: 84908192151}>, <None, {eid: 77957994724}>, <Towards interoperable, cognitive and autonomic IoT systems: An agent-based approach, {eid: 85015257462}>, <Specifying and verifying cross-organizational business models: An agent-oriented approach, {eid: 84865693874}>, <None, {eid: 79955792399}>, <Making work flow: On the application of petri nets to business process management, {eid: 84879104765}>, <Robotic process automation, {eid: 85049777330}>, <None, {eid: 85074793232}>",,,"Association for Computing Machinery, Inc",,,2019-10-13,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85074752477,False,True,False,True
22,,"Gerasimov A. (AUID: 57215435224), Michael J. (AUID: 55341586200), Netz L. (AUID: 57188959185), Rumpe B. (AUID: 55861872700)",,Agile Generator-Based GUI Modeling for Information Systems,2020,"2nd International Workshop on Modelling to Program, M2P 2020",,,,,,,7,10.1007/978-3-030-72696-6_5,https://www.doi.org/10.1007/978-3-030-72696-6_5,"<Software Engineering, RWTH Aachen>",,"Â© 2021, Springer Nature Switzerland AG.We use two code generators for the model-based continuous development of information systems including its graphical user interfaces (GUIs). As our goal is to develop full-size real-world systems for different domains, the continuous and iterative model-based engineering of their GUIs comes along with challenges regarding their extension and modification. These challenges concern models, the languages they are written in and hand-written code. In this work we present four complementary approaches to allow extensions for GUIs that we encounter with the generator-based framework MontiGem to tackle these challenges. We discuss the four approaches in detail and present extensions of the framework in the grammar of the language, via atomic components, via hand-written amendments of generated models and by generating connections between the GUI and data structure models. These techniques can be used to create a flexible DSL for engineering information systems, adaptable for different domains and rapidly changing requirements.","Code generation, Information system, Model-Based Software Engineering, Modeling graphical user interfaces, MontiGem",,,,,,,,"<Enterprise information systems in academia and practice: lessons learned from a MBSE project, {eid: 85115262972}>, <Model-based generation of enterprise information systems, {eid: 85048362638}>, <None, {eid: 84975796016}>, <M3D: A tool for the model driven development of web applications, {eid: 84870479284}>, <None, {eid: 85020530284}>, <None, {eid: 84876753098}>, <None, {eid: 84996938035}>, <None, {eid: 84906761801}>, <None, {eid: 85107455870}>, <None, {eid: 85097375593}>, <None, {eid: 84893010361}>, <None, {eid: 85107456878}>, <None, {eid: 85080937709}>, <Continuous transition from model-driven prototype to full-size real-world enterprise information systems, {eid: 85096970269}>, <None, {eid: 84955290689}>, <Cross-platform model-driven development of mobile applications with md2, {eid: 84877947656}>, <Innovations in model-based software and systems engineering, {eid: 85071393498}>, <MontiCore 5 language workbench edition 2017. Aachener Informatik-Berichte, Software Engineering, {eid: 85053070397}>, <Software language engineering in the large: Towards composing and deriving languages, {eid: 85053063379}>, <AXIOM: A model-driven approach to cross-platform application development, {eid: 84868703078}>, <UML-based web engineering, {eid: 70350212505}>, <MontiCore: A framework for compositional development of domain specific languages, {eid: 77955230740}>, <Model-driven generation of web applications in UWE, {eid: 84884648860}>, <A primer for model-based systems engineering, {eid: 85107433349}>, <None, {eid: 85052692187}>, <None, {eid: 85048474592}>, <None, {eid: 77955589078}>, <None, {eid: 85125489900}>, <None, {eid: 85067464593}>, <The pragmatics of model-driven development, {eid: 0141725660}>, <Modellgetriebene Softwareentwicklung: Techniken, Engineering, {eid: 78650566471}>, <None, {eid: 85097405814}>",,,Springer Science and Business Media Deutschland GmbH,,,2020-03-11,,,,,,,eng,,Book Series,,,,2-s2.0-85107450806,True,False,True,False
23,,"Haindl P. (AUID: 14522503900), Plosch R. (AUID: 6506322162), Korner C. (AUID: 57215489438)",,An Extension of the QUAMOCO Quality Model to Specify and Evaluate Feature-Dependent Non-Functional Requirements,2019,"45th Euromicro Conference on Software Engineering and Advanced Applications, SEAA 2019",,,,,,,5,10.1109/SEAA.2019.00012,https://www.doi.org/10.1109/SEAA.2019.00012,"<Institute of Business Informatics, Department of Software Engineering, Johannes Kepler University>, <Siemens AG, Corporate Technology>",,"Â© 2019 IEEE.Features in a software system usually must satisfy different quality expectations originating from the various stakeholders of a software system, ranging from direct users to the software manufacturer. As an example, the design quality of the source code will likely be more important if the associated feature is frequently used by customers or if it has strategic value for the software manufacturer. In order to effectively approach these qualitative subtleties, we need a means to specify non-functional requirements on the level of individual software features. Fine-grained specification of non-functional requirements on feature level respects their individual relevance for a feature and facilitates deriving suitable constraints for them. Particularly in DevOps-driven software projects with operational data the fulfillment of non-functional requirements for individual features can then continuously be evaluated. This guides software engineers in meeting these quality expectations on a much finer level than if treated uniformly across the software system. In this paper we present an extension of the QUAMOCO meta quality model for specifying and evaluating non-functional requirements on feature level. While the existing meta model focused on static quality measures, the extension of the meta model now also captures dynamic measures which accumulate during feature execution. An exploratory case study based on the results from an interview study shows the completeness of the approach for specifying and evaluating feature-dependent non-functional requirements.","Constraint Specification, Non-Functional Requirements, Operational Software Quality, Quality Modeling",,,,,,,,"<Feature-Oriented Software Development, {eid: 84894201602}>, <Operationalised product quality models and assessment: The Quamoco approach, {eid: 84932604209}>, <Beyond continuous delivery: An empirical investigation of continuous deployment challenges, {eid: 85042364114}>, <A Systematic Mapping Study of Quality Assessment Models for Software Products, {eid: 85043486651}>, <The Quamoco Tool Chain for Quality Modeling and Assessment, {eid: 79959873636}>, <A Quality Model for Actionable Analytics in Rapid Software Development, {eid: 85055775949}>, <Are Comprehensive Quality Models Necessary for Evaluating Software Quality, {eid: 84929616696}>, <Evaluating different iâ-based approaches for selecting functional requirements while balancing and optimizing non-functional requirements: A controlled experiment, {eid: 85054055964}>, <Dealing with Non-Functional Requirements in Model-Driven Development, {eid: 78650345309}>, <Modeling and verification of Functional and Non-Functional Requirements of ambient Self-Adaptive Systems, {eid: 84937425621}>, <Goal-directed requirements acquisition, {eid: 0027574423}>, <Adaptive monitoring of software requirements, {eid: 78650346140}>, <Supporting Self-Adaptation via Quantitative Verification and Sensitivity Analysis at Run Time, {eid: 84962298846}>, <Dealing with Non-Functional Requirements for Adaptive Systems via Dynamic Software Product-Lines, {eid: 84883565751}>, <Towards a Monitoring Middleware for Cloud Services, {eid: 84953392422}>, <Comprehensive Explanation of SLA Violations at Runtime, {eid: 84903125151}>, <A Research Preview on TAICOS-Tailoring Stakeholder Interests to Task-Oriented Functional Requirements, {eid: 85080511289}>, <Towards Continuous Quality: Measuring and Evaluating Feature-Dependent Non-Functional Requirements in DevOps, {eid: 85066466176}>, <Towards Automated Data Integration in Software Analytics, {eid: 85080590973}>, <Muse: A framework for measuring object-oriented design quality, {eid: 84990913604}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2019-08-28,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85076012146,False,True,True,False
24,,"Sandobalin J. (AUID: 57196234105), Insfran E. (AUID: 6506793505), Abrahao S. (AUID: 8211929700)",,An Infrastructure Modelling Tool for Cloud Provisioning,2017,"14th IEEE International Conference on Services Computing, SCC 2017",,,,,,,23,10.1109/SCC.2017.52,https://www.doi.org/10.1109/SCC.2017.52,"<Departamento de InformÃ¡tica y Ciencias de la ComputaciÃ³n, Escuela PolitÃ«cnica Nacional>, <Departamento de Sistemas InformÃ¡ticos y ComputaciÃ³n, Universitat PolitÃªcnica de ValÃ©ncia>",,"Â© 2017 IEEE.Cloud computing offers computing, network, and storage capabilities through services that abstract the capabilities of the underlying hardware. Currently, a variety of tools exist that manage the infrastructure provisioning and use scripts to define the final state of the hardware to be deployed in the cloud. However, there are major challenges that need to be addressed to automate the infrastructure management so that they are effectively used in initiatives such as DevOps. In particular, the management of Infrastructure as a Code (IaC) is one of the most important technical challenges to support activities such as the integration, deployment, and continuous delivery of applications. To address this problem, we present a support for the management of DevOps tools, through the definition of a Domain Specific Language (DSL) based on the concept of Infrastructure as a Code, and a tool that supports this language allowing to model the final state of a provisioning infrastructure in the cloud and generating the provisioning scripts for the Amazon Web Services (AWS) platform. The proposed tool reduces the work for development and operations personnel and facilitates their communication.","Cloud Services, DevOps, Infrastructure as Code, Infrastructure Provisioning, Model Driven Development",,,,,,,,"<None, {eid: 84891585028}>, <None, {eid: 84875493824}>, <None, {eid: 85026761147}>, <None, {eid: 84902315977}>, <Devopslang-bridging the gap between development and operations, {eid: 84907069490}>, <Streamlining DevOps automation for Cloud applications using TOSCA as standardized metamodel, {eid: 84958740530}>, <Standards-based DevOps automation and integration using TOSCA, {eid: 84946692273}>, <UML-based cloud application modeling with libraries, profiles, and templates, {eid: 84911965669}>, <Cloud application modelling and execution language (CAMEL) and the PaaSage workflow, {eid: 84966659601}>, <Cloud work bench-Infrastructure-As-code based cloud benchmarking, {eid: 84937876140}>, <MORE: A model-driven operation service for cloud-based IT systems, {eid: 84989959655}>, <None, {eid: 85032346645}>, <None, {eid: 84878326137}>, <None, {eid: 74549142762}>, <Eugenia: Towards disciplined and automated development of GMF-based graphical model editors, {eid: 84923537629}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2017-06-25,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85032348388,True,True,False,False
25,,"Ries B. (AUID: 22433560900), Guelfi N. (AUID: 8960262200), JahiÄ B. (AUID: 57193837477)",,An MDE Method for Improving Deep Learning Dataset Requirements Engineering using Alloy and UML,2021,"9th International Conference on Model-Driven Engineering and Software Development, MODELSWARD 2021",,,,,,,0,10.5220/0010216600410052,https://www.doi.org/10.5220/0010216600410052,<University of Luxembourg>,,"Â© 2021 by SCITEPRESS â Science and Technology Publications, Lda. All rights reserved.Since the emergence of deep learning (DL) a decade ago, only few software engineering development methods have been defined for systems based on this machine learning approach. Moreover, rare are the DL approaches addressing specifically requirements engineering. In this paper, we define a model-driven engineering (MDE) method based on traditional requirements engineering to improve datasets requirements engineering. Our MDE method is composed of a process supported by tools to aid customers and analysts in eliciting, specifying and validating dataset structural requirements for DL-based systems. Our model driven engineering approach uses the UML semi-formal modeling language for the analysis of datasets structural requirements, and the Alloy formal language for the requirements model execution based on our informal translational semantics. The model executions results are then presented to the customer for improving the dataset validation activity. Our approach aims at validating DL-based dataset structural requirements by modeling and instantiating their datatypes. We illustrate our approach with a case study on the requirements engineering of the structure of a dataset for classification of five-segments digits images.","Alloy, EMF, Model-driven Engineering, Requirements Engineering, Sirius, Software Engineering",,,,,,,,"<Software Engineering for Machine Learning: A Case Study, {eid: 85072111655}>, <Implementing Domain-Specific Languages with Xtext and Xtend: Learn How to Implement a DSL with Xtext and Xtend Using Easy-to-Understand Examples and Best Practices, {eid: 84906918277}>, <Preface to MDE Intelligence: 1st Workshop on Artificial Intelligence and Model-Driven Engineering, {eid: 85075941198}>, <None, {eid: 85173960172}>, <Scenic: A Language for Scenario Specification and Scene Generation, {eid: 85067686177}>, <None, {eid: 85173973444}>, <Trials and tribulations of developers of intelligent systems: A field study, {eid: 85000434626}>, <None, {eid: 33748952774}>, <Software Engineering for Dataset Augmentation using Generative Adversarial Networks, {eid: 85082854426}>, <Specifying Key- Properties to Improve the Recognition Skills of Neural Networks, {eid: 85103020670}>, <Software Engineering for Machine- Learning Applications: The Road Ahead, {eid: 85054380679}>, <None, {eid: 85103027595}>, <None, {eid: 0042297467}>, <None, {eid: 84878696848}>, <None, {eid: 77957994724}>, <None, {eid: 85055572256}>, <None, {eid: 85068600733}>, <DeepXplore: Automated Whitebox Testing of Deep Learning Systems, {eid: 85041685057}>, <None, {eid: 84864328836}>, <None, {eid: 85103013243, doi: 10.5281/zenodo.4020938}>, <From UML to Alloy and back again, {eid: 78650498522}>, <None, {eid: 0003885423}>, <None, {eid: 14944348412}>, <None, {eid: 85090115678}>, <None, {eid: 85048866905}>, <Kodkod: A Relational Model Finder, {eid: 37149013755}>, <Sirius: A rapid development of DSM graphical editor, {eid: 84908620372}>, <None, {eid: 85078017230}>, <None, {eid: 84964923424}>",,,"Science and Technology Publications, Lda",,,2021-02-08,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85173980697,True,True,True,True
26,,"Hu G. (AUID: 56096917700), Zhu L. (AUID: 58259694400), Yang J. (AUID: 36676080800)",,"AppFlow: Using machine learning to synthesize robust, reusable UI tests",2018,"26th ACM Joint European Software Engineering Conference and Symposium on the Foundations of Software Engineering, ESEC/FSE 2018",,,,,,,50,10.1145/3236024.3236055,https://www.doi.org/10.1145/3236024.3236055,<Columbia University>,,"Â© 2018 Association for Computing Machinery.UI testing is known to be difficult, especially as today's development cycles become faster. Manual UI testing is tedious, costly and errorprone. Automated UI tests are costly to write and maintain. This paper presents AppFlow, a system for synthesizing highly robust, highly reusable UI tests. It leverages machine learning to automatically recognize common screens and widgets, relieving developers from writing ad hoc, fragile logic to use them in tests. It enables developers to write a library of modular tests for the main functionality of an app category (e.g., an ""add to cart"" test for shopping apps). It can then quickly test a new app in the same category by synthesizing full tests from the modular ones in the library. By focusing on the main functionality, AppFlow provides ""smoke testing"" requiring little manual work. Optionally, developers can customize AppFlow by adding app-specific tests for completeness. We evaluated AppFlow on 60 popular apps in the shopping and the news category, two case studies on the BBC news app and the JackThreads shopping app, and a user-study of 15 subjects on the Wish shopping app. Results show that AppFlow accurately recognizes screens and widgets, synthesizes highly robust and reusable tests, covers 46.6% of all automatable tests for Jackthreads with the tests it synthesizes, and reduces the effort to test a new app by up to 90%. Interestingly, it found eight bugs in the evaluated apps, including seven functionality bugs, despite that they were publicly released and supposedly went through thorough testing.","machine learning, mobile testing, test reuse, test synthesis, UI recognition, UI testing",,,,,,,,"<MobiGUITAR: Automated model-based testing of mobile apps, {eid: 84940398128}>, <None, {eid: 85058297827}>, <Targeted and depth-first exploration for systematic testing of android apps, {eid: 84888803377}>, <None, {eid: 85058284121}>, <Automated test migration for mobile apps, {eid: 85049670732}>, <None, {eid: 33846516584}>, <A training algorithm for optimal margin classifiers, {eid: 0026966646}>, <Gui testing using computer vision, {eid: 77953968759}>, <None, {eid: 82955222053}>, <Guided gui testing of android apps with minimal restart and approximate learning, {eid: 84888186921}>, <Water: Web application test repair, {eid: 80052146445}>, <Pattern based gui testing for mobile applications, {eid: 84921054650}>, <None, {eid: 85058299067}>, <Histograms of oriented gradients for human detection, {eid: 33645146449}>, <Xiao: Tuning code clones at hands of engineers in practice, {eid: 84872120272}>, <Monkey see, monkey do: Effective generation of gui tests with inferred macro events, {eid: 84984914603}>, <None, {eid: 85058283016}>, <None, {eid: 85058324992}>, <None, {eid: 85048958207}>, <Mobile application testing: A tutorial, {eid: 84898431839}>, <Reran: Timing- and touch-sensitive record and replay for android, {eid: 84886384122}>, <None, {eid: 85054571803}>, <None, {eid: 85058303621}>, <None, {eid: 85058347702}>, <None, {eid: 85058285290}>, <None, {eid: 85058275405}>, <None, {eid: 85058309135}>, <None, {eid: 85058309135}>, <None, {eid: 85058275151}>, <None, {eid: 85058307570}>, <None, {eid: 85058332727}>, <None, {eid: 85058322814}>, <Mosaic: Cross-platform userinteraction record and replay for the fragmented android ecosystem, {eid: 84937510476}>, <Waterfall: An incremental approach for repairing record-replay tests of web applications, {eid: 84997523775}>, <Utilizing user interface models for automated instantiation and execution of system tests, {eid: 80052147484}>, <Efficiently, effectively detecting mobile app bugs with appdoctor, {eid: 84900457247}>, <Versatile yet lightweight record-and-replay for android, {eid: 84958681574}>, <Repairing gui test suites using a genetic algorithm, {eid: 77954494484}>, <None, {eid: 85053131462}>, <None, {eid: 85058268105}>, <Alloy: A lightweight object modelling notation, {eid: 0038507387}>, <None, {eid: 85058328027}>, <Adam: A method for stochastic optimization, {eid: 85083951076}>, <None, {eid: 85058334044}>, <Record and replay for android: Are we there yet in industrial cases?, {eid: 85030787984}>, <Automated test-case generation by cloning, {eid: 84864273546}>, <Augusto: Exploiting popular functionalities for the generation of semantic gui tests with oracles, {eid: 85051470893}>, <Pr-miner: Automatically extracting implicit programming rules and detecting violations in large software code, {eid: 32344452883}>, <None, {eid: 85048417784}>, <None, {eid: 85058279539}>, <On automatically detecting similar android apps, {eid: 84979735975}>, <Dynodroid: An input generation system for android apps, {eid: 84883731598}>, <Evodroid: Segmented evolutionary testing of android apps, {eid: 84986893033}>, <Sapienz: Multi-objective automated testing for android applications, {eid: 84984889128}>, <Crowd intelligence enhances automated mobile testing, {eid: 85041431174}>, <Gk-tail+: An efficient approach to learn precise software models, {eid: 85058309838}>, <Taming google-scale continuous testing, {eid: 85026802755}>, <An event-flow model of gui-based applications for testing, {eid: 34548415509}>, <Using a goal-driven approach to generate test cases for guis, {eid: 0032643001}>, <Hierarchical gui test case generation using automated planning, {eid: 0035249240}>, <Regression testing of guis, {eid: 1542317066}>, <Leveraging existing tests in automated test generation for web applications, {eid: 84908655637}>, <Reducing combinatorics in gui testing of android applications, {eid: 84971486983}>, <None, {eid: 85058273754}>, <Api code recommendation using statistical learning from fine-grained changes, {eid: 84997525166}>, <None, {eid: 85056738092}>, <In search of an understandable consensus algorithm., {eid: 85077435090}>, <Scikit-learn: Machine learning in python, {eid: 80555140075}>, <Understanding myths and realities of test-suite evolution, {eid: 84871298070}>, <Mobiplay: A remote execution based record-and-replay tool for mobile applications, {eid: 84971483998}>, <Economic perspectives in test automation: Balancing automated and manual testing with opportunity cost, {eid: 77953566595}>, <Efficient gui test generation by learning from tests of other apps, {eid: 85049684333}>, <Automatic and scalable fault detection for mobile applications, {eid: 84903155469}>, <Code completion with statistical language models, {eid: 84907033055}>, <None, {eid: 85058325648}>, <Learning representations by back-propagating errors, {eid: 0003444648}>, <Sourcerercc: Scaling code clone detection to big-code, {eid: 84971472368}>, <A survey on metamorphic testing, {eid: 84988891109}>, <An overview of the tesseract ocr engine, {eid: 51149098551}>, <Unitplus: Assisting developer testing in eclipse, {eid: 77949375656}>, <Identifying functionally similar code in complex codebases, {eid: 84979743043}>, <Guided, stochastic model-based gui testing of android apps, {eid: 85030779618}>, <Cloneworks: A fast and flexible large-scale near-miss clone detection tool, {eid: 85026733449}>, <Experiences of systemlevel model-based gui testing of an android application, {eid: 79958720486}>, <Acomment: Mining annotations from comments and code to detect interrupt related concurrency bugs, {eid: 79959897812}>, <None, {eid: 63049133602}>, <None, {eid: 85050345407}>, <Automation of gui testing using a model-driven approach, {eid: 77953569322}>, <Deep learning code fragments for code clone detection, {eid: 84989189618}>, <The effect of modularization and comments on program comprehension, {eid: 85040271328}>, <None, {eid: 85058349214}>, <Automated modularization of gui test cases, {eid: 84951811619}>, <Automated transplantation and differential testing for clones, {eid: 85027688963}>",,,"Association for Computing Machinery, Inc",,,2018-11-04,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85058288795,False,False,True,False
27,,Heinrich R. (AUID: 56352523400),,Architectural runtime models for integrating runtime observations and component-based models,2020,Journal of Systems and Software,,,,,,,7,10.1016/j.jss.2020.110722,https://www.doi.org/10.1016/j.jss.2020.110722,<Karlsruhe Institute of Technology>,,"Â© 2020 Elsevier Inc.Keeping track of modern software applications while dynamically changing requires strong interaction of evolution activities on development level and adaptation activities on operation level. Knowledge about software architecture is key for both, developers while evolving the system and operators while adapting the system. Existing architectural models used in development differ from those used in operation in terms of purpose, abstraction and content. Consequences are limited reuse of development models during operation, lost architectural knowledge and limited phase-spanning consideration of software architecture. In this paper, we propose modeling concepts of the iObserve approach to align architectural models used in development and operation. We present a correspondence model to bridge the divergent levels of abstraction between implementation artifacts and component-based architectural models. A transformation pipeline uses the information stored in the correspondence model to update architectural models based on changes during operation. Moreover, we discuss the modeling of complex workload based on observations during operation. In a case study-based evaluation, we examine the accuracy of our models to reflect observations during operation and the scalability of the transformation pipeline. Evaluation results show the accuracy of iObserve. Furthermore, evaluation results indicate iObserve adequately scales for some cases but shows scalability limits for others.","Palladio Component Model, Performance model, Runtime model, Software architecture, Workload",,,,,,,,"<Handbook of Mathematical Functions, With Formulas, Graphs, and Mathematical Tables, {eid: 0004245694}>, <An efficient k-means clustering algorithm, {eid: 0010223634}>, <The goal question metric approach, {eid: 0003219646}>, <Model-driven generation of performance prototypes, {eid: 70349869472}>, <Models@run.time, {eid: 84941067484}>, <Automated extraction of architecture-level performance models of distributed component-based systems, {eid: 84855423802}>, <Software Engineering for Self-Adaptive Systems, {eid: 77953794996}>, <A framework for QoS-aware binding and re-binding of composite web services, {eid: 48649083660}>, <Software engineering for self-adaptive systems: A research roadmap, {eid: 70350033987}>, <Software architecture reconstruction: A process-oriented taxonomy, {eid: 68949213770}>, <Foundations of model (driven) (reverse) engineering â episode i: Story of the fidus papyrus and the solarus, {eid: 85009753914}>, <Towards an ontology-based approach for heterogeneous model matching, {eid: 85054392746}>, <Reverse engineering of dependency graphs via dynamic analysis, {eid: 85026279390}>, <iObserve: Integrated Observation and Modeling Techniques to Support Adaptation and Evolution of Software Systems: Technical Report 1309, {eid: 84907075849}>, <Architectural run-time models for performance and privacy analysis in dynamic cloud applications, {eid: 85009820181}>, <A platform for empirical research on information system evolution, {eid: 84969799476}>, <Architectural run-time models for operator-in-the-loop adaptation of cloud applications, {eid: 84962258021}>, <Software Architecture for Big Data and the Cloud, {eid: 85088566853}>, <The CoCoME Platform for Collaborative Empirical Research on Information System Evolution: Technical Report 2016,2; Karlsruhe Reports in Informatics, {eid: 85021444139}>, <Integrating run-time observations and design component models for cloud system analysis, {eid: 84910100889}>, <Self-adaptive workload classification and forecasting for proactive resource provisioning, {eid: 84878200509}>, <CoCoME â the common component modeling example, {eid: 54249117804}>, <Constraint-based runtime prediction of sla violations in service orchestrations, {eid: 82055200312}>, <Extracting realistic user behavior models, {eid: 85044500347}>, <The JPetStore suite: A concise experiment setup for research, {eid: 85087592176}>, <Model-driven instrumentation with Kieker and Palladio to forecast dynamic applications, {eid: 84921053836}>, <A new measure of rank correlation, {eid: 0002282074}>, <Workload characterization and prediction in the cloud: A multiple time series approach, {eid: 84864258982}>, <Modeling variations in load intensity over time, {eid: 84899689132}>, <Peropteryx: Automated application of tactics in multi-objective software architecture optimization, {eid: 79960492145}>, <Change-driven consistency for component code, architectural models, and contracts, {eid: 84958710972}>, <Self-managed systems: an architectural challenge, {eid: 34748879678}>, <A generic platform for transforming monitoring data into performance models, {eid: 85019425281}>, <Automated extraction of rich software models from limited system information, {eid: 84983347731}>, <Distance between sets, {eid: 84937155444}>, <Testing the suitability of Markov chains as web usage models, {eid: 0344235394}>, <Software Maintenance Management: A Study of the Maintenance of Computer Application Software in 487 Data Processing Organizations, {eid: 0003854384}>, <A methodology for workload characterization of e-commerce sites, {eid: 84883870293}>, <Models@run.time to support dynamic adaptation, {eid: 70350345225}>, <What is devops?, {eid: 85070496967}>, <Runtime evolution of highly dynamic software, {eid: 84904816002}>, <Software reflexion models: bridging the gap between design and implementation, {eid: 0035308156}>, <Runtime software adaptation: Framework, approaches, and styles, {eid: 57349126797}>, <X-means: Extending k-means with efficient estimation of the number of clusters, {eid: 0001820920}>, <Observing and Modeling Workload Characteristics of Dynamic Cloud Applications, {eid: 85087591234}>, <Design Space Exploration for Adaptation Planning in Cloud-based Applications, {eid: 85087591929}>, <Impact-minimizing runtime switching of distributed stream processing algorithms, {eid: 84964528084}>, <None, {eid: 84983368333}>, <WALTy: a user behavior tailored tool for evaluating web application performance, {eid: 18844395113}>, <Case Study Research in Software Engineering: Guidelines and Examples, {eid: 84887475109}>, <From object-oriented applications to component-oriented applications via component-oriented architecture, {eid: 80051988759}>, <Discovering architectures from running systems, {eid: 33947144602}>, <Preventing performance violations of service compositions using assumption-based run-time verification, {eid: 80054081482}>, <Runtime model-based privacy checks of big data cloud services, {eid: 84952313491}>, <Data-driven software architecture for analyzing confidentiality, {eid: 85065797802}>, <Supporting runtime software architecture: A bidirectional-transformation-based approach, {eid: 79952453950}>, <Systematic literature review of the objectives, techniques, kinds, and architectures of models at runtime, {eid: 84956625705}>, <Time prediction based on process mining, {eid: 78649485762}>, <Generating probabilistic and intensity-varying workload for web-based software systems, {eid: 70349914519}>, <Automatic extraction of probabilistic workload specifications for load testing session-based application systems, {eid: 84962273190}>, <Typing artifacts in megamodeling, {eid: 84874189436}>, <Adaptation and abstract runtime models, {eid: 77954590997}>, <On unifying development models and runtime models (position paper), {eid: 85009733241}>, <Modeling complex user behavior with the palladio component model, {eid: 85087587169}>, <WESSBAS: extraction of probabilistic workload specifications for load testing and performance predictionâa model-driven approach for session-based application systems, {eid: 84991818131}>, <Teastore: A micro-service reference application for benchmarking, modeling and resource management research, {eid: 85058299875}>, <Performance simulation of runtime reconfigurable component-based software architectures, {eid: 80053211275}>, <An expandable extraction framework for architectural performance models, {eid: 85019501371}>, <Spearman rank correlation coefficient, {eid: 84949442262}>, <Increasing the throughput of pipe-and-filter architectures by integrating the task farm parallelization pattern, {eid: 84981521243}>, <Realizing model transformation chain interoperability, {eid: 84856213872}>",,,Elsevier Inc.,,,2020-11-01,,,,,,,eng,,Journal,,,,2-s2.0-85087587294,False,True,False,False
28,,"Mendoza C. (AUID: 57215292506), Bocanegra J. (AUID: 41661082200), GarcÃ©s K. (AUID: 35113054600), Casallas R. (AUID: 15064114500)",,Architecture violations detection and visualization in the continuous integration pipeline,2021,Software - Practice and Experience,,,,,,,3,10.1002/spe.3004,https://www.doi.org/10.1002/spe.3004,"<School of Engineering, Department of Systems and Computing Engineering, Universidad de los Andes>",,"Â© 2021 John Wiley & Sons Ltd.New code in projects can introduce violations that deviate the code implementation from the intended architecture. This process is known as architecture erosion. In this article, we propose an approach for recovering the implemented architecture, and detecting violations when comparing it with the intended architecture. Given a code repository, the continuous integration pipeline calls the solution to detect the incidences of architecture violations as well as some quality and social metrics. This data is presented in metric-centered views that help development teams to manage architecture erosion. Our approach is based on model-driven engineering techniques since models serve to represent the code, and a model-based pattern language helps us to automate the search for violation occurrences and execute corresponding actions (e.g., creation/assignment of issues). We confirm the approach benefits in a real project implemented by a software developing company, in a sample project available on the internet, and in a software development course, including 20 projects, where every single project decreases its architecture violations density through time.","architecture discovering, architecture recovering, conformance checking, continuous integration",,,,,,,,"<Decision making in software architecture, {eid: 84956623197}>, <Technical debt and system architecture: the impact of coupling on defect-related activity, {eid: 85027922641}>, <Towards a reference process for software architecture reconstruction, {eid: 85097339934}>, <Controlling software architecture erosion: a survey, {eid: 80755136651}>, <Software architecture erosion: impacts, causes, and management, {eid: 85107011113}>, <Software architecture degradation in open source software: a systematic literature review, {eid: 85101866665}>, <Recovering architectural assumptions, {eid: 33645145073}>, <Documenting after the fact: recovering architectural design decisions, {eid: 40049088606}>, <None, {eid: 77955136099}>, <None, {eid: 84951865531}>, <None, {eid: 85049697376}>, <None, {eid: 84855434526}>, <Detecting, tracing, and monitoring architectural tactics in code, {eid: 84963878679}>, <None, {eid: 84963491024}>, <None, {eid: 85119561514}>, <None, {eid: 85044185772}>, <None, {eid: 85051569623}>, <None, {eid: 85107002894}>, <None, {eid: 85075921993}>, <A collaborative framework to minimise knowledge loss in new product development, {eid: 84873437909}>, <None, {eid: 78649777834}>, <None, {eid: 85102555475}>, <None, {eid: 84964607566}>, <None, {eid: 84879856670}>",,,John Wiley and Sons Ltd,,,2021-08-01,,,,,,,eng,,Journal,,,,2-s2.0-85106982705,True,False,True,False
29,,"Atouani A. (AUID: 57367338500), Kirchhof J.C. (AUID: 57004585200), Kusmenko E. (AUID: 57195075206), Rumpe B. (AUID: 55861872700)",,Artifact and reference models for generative machine learning frameworks and build systems,2021,"20th ACM SIGPLAN International Conference on Generative Programming: Concepts and Experiences, GPCE 2021, co-located with the ACM SIGPLAN conference on Systems, Programming, Languages, and Applications: Software for Humanity, SPLASH 2021",,,,,,,9,10.1145/3486609.3487199,https://www.doi.org/10.1145/3486609.3487199,<Rwth Aachen University>,,"Â© 2021 ACM.Machine learning is a discipline which has become ubiquitous in the last few years. While the research of machine learning algorithms is very active and continues to reveal astonishing possibilities on a regular basis, the wide usage of these algorithms is shifting the research focus to the integration, maintenance, and evolution of AI-driven systems. Although there is a variety of machine learning frameworks on the market, there is little support for process automation and DevOps in machine learning-driven projects. In this paper, we discuss how metamodels can support the development of deep learning frameworks and help deal with the steadily increasing variety of learning algorithms. In particular, we present a deep learning-oriented artifact model which serves as a foundation for build automation and data management in iterative, machine learning-driven development processes. Furthermore, we show how schema and reference models can be used to structure and maintain a versatile deep learning framework. Feasibility is demonstrated on several state-of-the-art examples from the domains of image and natural language processing as well as decision making and autonomous driving.","artifact models, artificial intelligence, build systems, compiler, machine learning, metamodeling, reference models, training",,,,,,,,"<Tensorflow: A system for large-scale machine learning, {eid: 85075670920}>, <Personalized and Automatic Model Repairing using Reinforcement Learning, {eid: 85075917035}>, <Improving Model Repair through Experience Sharing, {eid: 85089499795}>, <Towards an Artifact Model for Requirements to IT-enabled Product Service Systems, {eid: 84879972264}>, <On the Need for Megamodels, {eid: 84911928640}>, <None, {eid: 85090303288}>, <A logical approach to systems engineering artifacts: semantic relationships and dependencies beyond traceability-from requirements to functional and architectural views, {eid: 85029497266, doi: 10.1007/s10270-017-0619-4}>, <On the Need for Artifact Models in Model-Driven Systems Engineering Projects, {eid: 85042655599}>, <None, {eid: 85073625968}>, <DeepDriving: Learning affordance for direct perception in autonomous driving, {eid: 84973888858}>, <None, {eid: 85057019815}>, <Artefact-based requirements engineering: the AMDiRE approach, {eid: 84941994467}>, <Elements of Reusable Object-Oriented Software, {eid: 0346608138}>, <Modeling Deep Reinforcement Learning Based Architectures for Cyber-Physical Systems, {eid: 85075937600}>, <None, {eid: 85120869042}>, <None, {eid: 85147701586}>, <None, {eid: 85042276044}>, <The next evolution of MDE: a seamless integration of machine learning into domain modeling, {eid: 85019693871}>, <On the Unification of Megamodels, {eid: 85040140135}>, <The rationale of powertype-based metamodelling to underpin software development methodologies, {eid: 84863662948}>, <None, {eid: 85108965376}>, <Context-oriented programming, {eid: 43049088796}>, <None, {eid: 85116545679}>, <None, {eid: 84941620184}>, <MontiThings: Model-driven Development and Deployment of Reliable IoT Applications, {eid: 85116410296, doi: 10.1016/j.jss.2021.111087}>, <A metamodel family for role-based modeling and programming languages, {eid: 84921724705}>, <None, {eid: 85057255740}>, <Modeling and Training of Neural Processing Systems, {eid: 85075936455}>, <On the Engineering of AI-Powered Systems, {eid: 85079270211}>, <Modeling Architectures of Cyber-Physical Systems, {eid: 85025124378}>, <Highly-Optimizing and Multi-Target Compiler for Embedded System Models: C++ Compiler Toolchain for the Component and Connector Language EmbeddedMontiArc, {eid: 85056871758}>, <DIRE: A Neural Approach to Decompiled Identifier Naming, {eid: 85078913653}>, <Gradient-based learning applied to document recognition, {eid: 0032203257}>, <MNIST handwritten digit database, {eid: 2442474173}>, <None, {eid: 84965135289}>, <None, {eid: 84987947153}>, <Human-level control through deep reinforcement learning, {eid: 84924051598}>, <Automated Classification of Metamodel Repositories: A Machine Learning Approach, {eid: 85076112592, doi: 10.1109/MODELS.2019.00011}>, <Convolutional neural networks for enhanced classification mechanisms of metamodels, {eid: 85096121119}>, <ROS: an open-source Robot Operating System, {eid: 77957352104}>, <Validating UML models and OCL constraints, {eid: 84957023982}>, <Hidden technical debt in machine learning systems, {eid: 84965107309}>, <Recursive deep models for semantic compositionality over a sentiment treebank, {eid: 84926358845}>, <On the representation of roles in objectoriented and conceptual modelling, {eid: 0034301679}>, <None, {eid: 85038368581}>, <Multi-Modal Attention Network Learning for Semantic Source Code Retrieval, {eid: 85074667252, doi: 10.1109/ASE.2019.00012}>, <TORCS, the open racing car simulator, {eid: 76249122848}>, <Accelerating the Machine Learning Lifecycle with MLflow, {eid: 85072938346}>",,,"Association for Computing Machinery, Inc",,,2021-10-17,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85120851738,False,True,True,True
30,,"Gerlitz T. (AUID: 50861005000), Hansen N. (AUID: 57190119879), Dernehl C. (AUID: 57190130815), Kowalewski S. (AUID: 7006648507)",,Artshop: A continuous integration and quality assessment framework for model-based software artifacts,2016,"12th Dagstuhl-Workshop Modellbasierte Entwicklung Eingebetteter Systeme, MBEES 2016 - 12th Dagstuhl-Workshop on Model-Based Development of Embedded Systems, MBEES 2016",,,,,,,6,,,"<RWTH Aachen, Informatik, Embedded Software>",,"Â© Modellbasierte Entwicklung Eingebetteter Systeme. All rights reserved.Due to the increasing amount of features, software developer within the automotive domain are confronted with steadily increasing complexity of models within their respective model-based development tools. This also impacts the cost and time needed to perform manual maintenance and quality control during the evolution of model-based software, delaying the detection and correction of quality defects. To prevent quality defects to pervade a model, quality assessment should continuously be performed, to provide rapid feedback to the developers. This paper introduces a framework to enable integrated quality assessment during the evolution of model-based software artifacts. The framework includes a model repository supporting the import of data-flow diagrams from The Mathwork's Matlab-Simulink/Stateflow, formal modules from IBM Rational DOORS and variability documentations from pure:systems pure:variants, as well as the synchronization of imported models with their initial sources. Analyses provided by the framework range from structural and semantical checks of MATLAB/Simulink models to consistency and user-defined conformity checks across all supported artifact types. Results computed by the framework are stored alongside the revisions of the artifacts they refer to.","Artifact integration, Model-based development, Quality assessment",,,,,,,,"<Models are code too: Near-miss clone detection for simulink models, {eid: 84873107888}>, <Seamless model-based development: From isolated tools to integrated model engineering environments, {eid: 77950458920}>, <None, {eid: 84905563698}>, <None, {eid: 85089593828}>, <Static value range analysis for matlab/simulink-models, {eid: 84990044733}>, <Code clone detection in practice, {eid: 77954702935}>, <Automatic evaluation of modelling rules and design guidelines, {eid: 84873932194}>, <Issues in clone classification for dataflow languages, {eid: 77954705103}>, <Detection and handling of model smells for matlab/simulink models, {eid: 84990067079}>, <Incremental integration of heterogeneous systems views, {eid: 34748818690}>, <None, {eid: 84955316092}>, <Duplicate detection and refactoring of matlab/simulink models, {eid: 84983369336}>, <Model-driven tool integration with modelbus, {eid: 74549141750}>, <None, {eid: 0003589319}>, <None, {eid: 84873502254}>, <None, {eid: 85089604892}>, <Model-based analysis of design artefacts applying an annotation concept, {eid: 85135931496}>, <None, {eid: 85089574469}>, <Software engineering and formal methods: 12th international conference, sefm 2014, grenoble, France, september 1-5 2014, {eid: 85089593394}>, <None, {eid: 74549142762}>, <Das mate projekt-visuelle spezifikation von matlab simulink/stateflow analysen und transformationen, {eid: 84873926944}>, <None, {eid: 85089569822}>, <Presentation of emf compare utility, {eid: 47749101164}>, <Gspan: Graph-based substructure pattern mining, {eid: 78149333073}>",,,fortiss GmbH,,,2016-03-30,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-84996742929,False,True,True,False
31,,"Wiechowski N. (AUID: 57194029486), Kugler A. (AUID: 57194029075), Hansen N. (AUID: 57190119879), Kowalewski S. (AUID: 7006648507), Rambow T. (AUID: 6504314037), Busch R. (AUID: 9246223600)",,Arttest - A New Test Environment for Model-Based Software Development,2017,"SAE World Congress Experience, WCX 2017",,,,,,,6,10.4271/2017-01-0004,https://www.doi.org/10.4271/2017-01-0004,"<RWTH Aachen University>, <Ford Motor Company>",,"Copyright Â© 2017 SAE International.Modern vehicles become increasingly software intensive. Software development therefore is critical to the success of the manufacturer to develop state of the art technology. Standards like ISO 26262 recommend requirement-based verification and test cases that are derived from requirements analysis. Agile development uses continuous integration tests which rely on test automation and evaluation. All these drove the development of a new model-based software verification environment. Various aspects had to be taken into account: the test case specification needs to be easily comprehensible and flexible in order to allow testing of different functional variants. The test environment should support different use cases like open-loop or closed-loop testing and has to provide corresponding evaluation methods for continuously changing as well as for discrete signals. In a joint project of RWTH Aachen University and Ford, a new tool, Arttest, has been developed for testing model-based software. The tool uses a domain specific language to specify the tests. It offers different test evaluation methods for automated open- and closed-loop testing and reactive testing. It automatically executes the tests, evaluates the outputs and generates summary reports indicating passed tests and errors found. The paper presents the tool and its various unique propositions such as domain specific test language, the evaluation properties and other features like open-loop and closed-loop capabilities.",,,,,,,,,"<Economical impact of model-based development of embedded software systems in cars, {eid: 79960107950, doi: 10.1365/s35595-011-0026-3}>, <Standard Glossary of Software Engineering Technology, {eid: 85018402638}>, <None, {eid: 0004217479}>, <None, {eid: 85018446942}>, <IEEE standard for floating-point arithmetic, {eid: 69149088136}>, <WCOMP: Waveform Comparison Tool for Mixed-signal Validation Regression in Memory Design, {eid: 46649090540}>",,,SAE International,,,2017-04-04,,,,,,,eng,,Journal,,,,2-s2.0-85018395241,False,False,False,False
32,,"Sinha S. (AUID: 55636320325), Astigarraga T. (AUID: 36348278000), Hull R.B. (AUID: 35583009200), Jean-Louis N. (AUID: 57215346300), Sreedhar V. (AUID: 6603784989), Chen H. (AUID: 55902657400), Hu L.X. (AUID: 57219766265), Carpi F.E. (AUID: 57221530193), Cannata J.A.B. (AUID: 57221529362), Loach W. (AUID: 57221522530)",,Auto-generation of domain-specific systems: Cloud-hosted devops for business,2020,"13th IEEE International Conference on Cloud Computing, CLOUD 2020",,,,,,,3,10.1109/CLOUD49709.2020.00041,https://www.doi.org/10.1109/CLOUD49709.2020.00041,"<IBM T.J. Watson Research Center>, <New York University>, <University of Illinois>, <IBM Research>, <IBM United Kingdom>",,"Â© 2020 IEEE.The wide use of spreadsheet-based solutions for business processes illustrates the importance of giving business users simple mechanisms for specifying and managing their processes. However, spreadsheet-based solutions are hard to maintain, reuse, integrate, and scale. This paper describes an approach for supporting 'DevOps for business users' that enables business-level users to manage the full lifecycle of a large class of cloud-hosted business processes. The approach builds on DevOps for software engineering, but removes software engineers from the loop. Unlike general-purpose 'low code' business process management systems, the approach incorporates aspects of a processing domain (e.g., billing) to create a DevOps experience that business users can master easily. In the approach, business users follow an agile 'specify-check-generate-deploy' methodology, enabling them to rapidly and iteratively generate and operationalize cloud-hosted processing systems, with little or no assistance from IT staff. We demonstrate and evaluate the approach using a system built for the billing application area, developed at IBM, which provides technology support and maintenance services for numerous clients, each with different billing needs and logic. The paper describes the system, requirements, empirical evaluation of key components, and lessons learned.","business rules language, Cloud application, code generation, deployment automation, DevOps, model driven engineering",,,,,,,,"<None, {eid: 84943326563}>, <A survey of DevOps concepts and challenges, {eid: 85075608026}>, <Model-driven engineering, {eid: 33344465743}>, <None, {eid: 0141684320}>, <None, {eid: 85099338842}>, <None, {eid: 85099381543}>, <None, {eid: 0004072686}>, <None, {eid: 85099405766}>, <None, {eid: 85099361240}>, <BizDevOps and the role of S-BPM, {eid: 85099389868}>, <Program synthesis, {eid: 85034980977}>, <Constraint-based automatic test data generation, {eid: 0026222968}>, <Search-based software test data generation: A survey: Research articles, {eid: 3142725712}>, <Automatic verification of data-centric business processes, {eid: 70349144063}>, <None, {eid: 0012532168}>, <None, {eid: 38049136332}>, <None, {eid: 85099346090}>, <None, {eid: 84937430000}>, <None, {eid: 79952255756}>, <None, {eid: 85099340748}>, <Empowering business-level blockchain users with a rules framework for smart contracts, {eid: 85056839615}>, <None, {eid: 85062980413}>",,,IEEE Computer Society,,,2020-10-18,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85099388799,True,True,True,False
33,,"Nguyen P.T. (AUID: 57209915714), Di Rocco J. (AUID: 55877197500), Di Ruscio D. (AUID: 57201633392), Pierantonio A. (AUID: 15064742800), Iovino L. (AUID: 36961136600)",,Automated Classification of Metamodel Repositories: A Machine Learning Approach,2019,"22nd ACM/IEEE International Conference on Model Driven Engineering Languages and Systems, MODELS 2019",,,,,,,36,10.1109/MODELS.2019.00011,https://www.doi.org/10.1109/MODELS.2019.00011,"<UniversitÃ  degli Studi dellAquila>, <Gran Sasso Science Institute>",,"Â© 2019 IEEE.Manual classification methods of metamodel repositories require highly trained personnel and the results are usually influenced by the subjectivity of human perception. Therefore, automated metamodel classification is very desirable and stringent. In this work, Machine Learning techniques have been employed for metamodel automated classification. In particular, a tool implementing a feed-forward neural network is introduced to classify metamodels. An experimental evaluation over a dataset of 555 metamodels demonstrates that the technique permits to learn from manually classified data and effectively categorize incoming unlabeled data with a considerably high prediction rate: the best performance comprehends 95.40% as success rate, 0.945 as precision, 0.938 as recall, and 0.942 as F1 score.","Machine learning, metamodel classification, metamodel repositories",,,,,,,,"<A survey of cross-validation procedures for model selection, {eid: 77956649096}>, <Neural network classification and novelty detection, {eid: 0037143140}>, <None, {eid: 84977499772}>, <Automatic model repair using reinforcement learning, {eid: 85063099879}>, <Automated clustering of metamodel repositories, {eid: 84976614553}>, <None, {eid: 84872577736}>, <A survey of clustering data mining techniques, {eid: 84892062680}>, <A classification of stereotypes for object-oriented modeling languages, {eid: 78049335165}>, <None, {eid: 0003577150}>, <None, {eid: 0003487601}>, <Textual and content-based search in repositories of web application models, {eid: 84897519832}>, <None, {eid: 0003823795}>, <A suite of metamodels as a basis for a classification of visual languages, {eid: 16244390554}>, <Stochastic gradient learning in neural networks, {eid: 33847215211}>, <Towards model-driven engineering for big data analytics - An exploratory analysis of domain-specific languages for machine learning, {eid: 84902286420}>, <A classification system for visual programming languages, {eid: 0002315675}>, <Cognifying modeldriven software engineering, {eid: 85042643413}>, <Collaborative repositories in model-driven engineering software technology, {eid: 84928652460}>, <Measures of the amount of ecologic association between species, {eid: 0000250265}>, <Learning transformation rules from transformation examples: An approach based on relational concept analysis, {eid: 79951904922}>, <A few useful things to know about machine learning, {eid: 84867539048}>, <Term conflation for information retrieval, {eid: 0021649329}>, <Towards a standard-based domain-specific platform to solve machine learning-based problems, {eid: 85019734074}>, <The next evolution of MDE: A seamless integration of machine learning into domain modeling, {eid: 85040582253}>, <Model-driven tool integration with modelbus, {eid: 74549141750}>, <Supporting search for reusable software objects, {eid: 0001446945}>, <Data clustering: A review, {eid: 84893405732}>, <On the classification of Umls meta model extension mechanism, {eid: 35048816548}>, <Online img2uml repository: An online repository for uml models, {eid: 84925010640}>, <EMFStore: A model repository for EMF models, {eid: 77954724460}>, <A study of cross-validation and bootstrap for accuracy estimation and model selection, {eid: 85164392958}>, <Supervised machine learning: A review of classification techniques, {eid: 79955076643}>, <Introduction to the artificial neural networks, {eid: 84885571097}>, <Enriching reverse engineering with semantic clustering, {eid: 33846193700}>, <Bizycle: Model-based interoperability platform for software and data integration, {eid: 84911353560}>, <Text categorization with support vector machines. How to represent texts in input space?, {eid: 0036161242}>, <Reuse based analysis and clustering of requirements diagrams, {eid: 84976626873}>, <None, {eid: 85076082027}>, <FOCUS: A recommender system for mining API function calls and usage patterns, {eid: 85064745329}>, <None, {eid: 84946237421}>, <None, {eid: 84992604463}>, <An all-in-one convolutional neural network for face analysis, {eid: 85026311823}>, <Artificial neural networks as a classification method in the behavioural sciences, {eid: 0030609694}>, <None, {eid: 0004064633}>, <ThingML+: Augmenting model-driven software engineering for the internet of things with machine learning, {eid: 85063074611}>, <None, {eid: 34249990939}>, <Guest Editors introduction: Model-driven engineering, {eid: 33344465743}>, <Probabilistic models for personalizing web search, {eid: 84858033182}>, <How is open source affecting software development?, {eid: 0742321094}>, <Machine learning, social learning and the governance of self-driving cars, {eid: 85046709383}>, <Tool support for clustering large meta-models, {eid: 84965050980}>, <OptiML: An implicitly parallel domainspecific language for machine learning, {eid: 80053441759}>, <Introduction to multi-layer feed-forward neural networks, {eid: 0342871690}>, <Document representation and dimension reduction for text clustering, {eid: 48349100287}>, <None, {eid: 33748331276}>, <Forecasting with artificial neural networks:: The state of the art, {eid: 0003123930}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2019-09-15,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85076112592,False,False,True,False
34,,"Biffl S. (AUID: 6701704981), Mordinyi R. (AUID: 19933869600), Moser T. (AUID: 25723604600)",,Automated derivation of configurations for the integration of software(+) engineering environments,2010,"1st International Workshop on Automated Configuration and Tailoring of Applications, ACoTA 2010",,,,,,,2,,,"<Christian Doppler Laboratory, Software Engineering Integration for Flexible Automation Systems, Vienna University of Technology>",,"Today's systems integration technologies enable the integration of (software+) engineering environments to support engineering processes across domain and tool boundaries. These engineering processes heavily rely on manual configuration of integration frameworks, resulting in costly, time-consuming, and error-prone human work. In this paper, we introduce an extended model-driven approach for the automated derivation of integration technology configurations for supporting engineering processes. This allows both an efficient and effective derivation of initial configurations, as well as easy adaptations of existing configurations in case of changed engineering processes. Based on a standard software engineering process, we show the feasibility of the proposed approach and discuss the advantages and limitations for software(+) engineering.","Automated configuration, Engineering domains, Model-driven approach, Systems integration",,,,,,,,"<None, {eid: 38349130091}>, <None, {eid: 1642298252}>, <Ontology-supported quality assurance for component-based systems configuration, {eid: 57049105868}>, <A model-driven architecture approach using explicit stakeholder quality requirement models for building dependable information systems, {eid: 47649118460}>, <A platform for service-oriented integration of software engineering environments, {eid: 72949087919}>, <Integration of heterogeneous engineering environments for the automation systems lifecycle, {eid: 71049115134}>, <None, {eid: 22944474960}>, <Introduction to the special issue on semantic integration, {eid: 85013588445}>, <None, {eid: 38549173069}>, <Why your data wont mix, {eid: 84985927584}>, <None, {eid: 84871261540}>, <None, {eid: 10044221068}>, <None, {eid: 71049147647}>, <None, {eid: 71049152987}>, <None, {eid: 18744398825}>, <Foundations for a model-driven integration of business services in a safety-critical application domain, {eid: 74549151149}>, <Making expert knowledge explicit to facilitate tool support for integrating complex information systems in the atm domain, {eid: 70349731575}>, <Semantic service matchmaking in the atm domain considering infrastructure capability constraints, {eid: 77958489243}>, <SAMOA-A semi-automated ontology alignment method for systems integration in safety-critical environments, {eid: 70349740886}>, <Semantic integration, {eid: 17244362536}>, <None, {eid: 72849113175}>, <Streamlining product lifecycle processes: A survey of product lifecycle management implementations, directions, and challenges, {eid: 27844583815}>",,,,,,2010-09-20,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-84871277070,True,True,False,True
35,,"Schneid K. (AUID: 57193762429), Stapper L. (AUID: 57429259800), Thone S. (AUID: 57940347400), Kuchen H. (AUID: 6602187523)",,Automated Regression Tests: A No-Code Approach for BPMN-based Process-Driven Applications,2021,"25th IEEE International Enterprise Distributed Object Computing Conference, EDOC 2021",,,,,,,10,10.1109/EDOC52215.2021.00014,https://www.doi.org/10.1109/EDOC52215.2021.00014,"<MÃ¼nster University of Applied Sciences>, <University of MÃ¼nster>",,"Â© 2021 IEEE.BPMN-based Process-Driven Applications (PDA) require less coding since they are not only based on source code, but also on executable process models. Automated testing of such model-driven applications gains growing relevance, and it becomes a key enabler if we want to found their development on continuous integration (CI) techniques.While process analysts are typically responsible for test case specifications from a business perspective, technically skilled process engineers take the responsibility for implementing the required test code. This is time-consuming and, due to their often different skills and backgrounds, might result in communication problems such as information losses and misunderstandings. This paper presents a new approach which enables an analyst to generate executable tests for PDAs without the need for manual coding. It consists of a sophisticated model analysis, a wizard-based specification of test cases, and a subsequent code generation. The resulting tests can easily be integrated into CI pipelines.The concept is underpinned by a user-friendly tool which has been evaluated in case studies and in real-world implementation projects from different industry sectors. During the evaluation, the prototype proved a more efficient test creation process and a higher test quality.","BPMN, Model-Based Testing, No-Code, Process-Driven Application",,,,,,,,"<Techniques for improving regression testing in continuous integration development environments, {eid: 84986877429}>, <End-to-end automatic business process validation, {eid: 85051251425}>, <None, {eid: 84930828704}>, <Benefits and limitations of automated software testing: Systematic literature review and practitioner survey, {eid: 84864258235}>, <None, {eid: 84904733980}>, <A regression testing approach for software product lines architectures, {eid: 79952086195}>, <Opportunities and constraints: The current struggle with bpmn, {eid: 73149121321}>, <None, {eid: 85065642773}>, <None, {eid: 85123616276}>, <Static analysis of bpmn-based process-driven applications, {eid: 85065655546}>, <None, {eid: 85091273861}>, <None, {eid: 85123619256}>, <None, {eid: 85104947067}>, <None, {eid: 84878217700}>, <Design science research evaluation, {eid: 84861217148}>, <Test case generation from bpmn models for automated testing of webbased bpm applications, {eid: 85041234887}>, <Design of a tool for generating test cases from bpmn, {eid: 84946687742}>, <Automatic test cases generation from business process models, {eid: 85049939808}>, <Semi-automatic test case generation from business process models, {eid: 84881567616}>, <Test case generation from bpmn with dmn, {eid: 85079842074}>, <Automated regression testing of bpmn 2.0 processes: A capture and replay framework for continuous delivery, {eid: 85084190357}>, <A tool for generating test case from bpmn diagram with a bpel diagram, {eid: 84978766788}>, <Uncovering data-flow anomalies in bpmn-based process-driven applications, {eid: 85104949600}>, <Xcfg based data flow analysis of business processes, {eid: 85066637564}>, <Structuring acyclic process models, {eid: 78049287225}>, <None, {eid: 85123595411}>, <None, {eid: 85123616657}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2021-10-25,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85123603523,True,True,True,False
36,,"Shen D. (AUID: 56911604300), Luo Q. (AUID: 56998053900), Poshyvanyk D. (AUID: 13613571900), Grechanik M. (AUID: 55904114500)",,Automating performance bottleneck detection using search-based application profiling,2015,"24th International Symposium on Software Testing and Analysis, ISSTA 2015",,,,,,,52,10.1145/2771783.2771816,https://www.doi.org/10.1145/2771783.2771816,"<Department of Computer Science, College of William and Mary>, <Department of Computer Science, University of Illinois at Chicago>",,"Copyright 2015 ACM.Application profiling is an important performance analysis technique, when an application under test is analyzed dynamically to determine its space and time complexities and the usage of its instructions. A big and important challenge is to profile nontrivial web applications with large numbers of combinations of their input parameter values. Identifying and understanding particular subsets of inputs leading to performance bottlenecks is mostly manual, intellectually intensive and laborious procedure. We propose a novel approach for automating performance bottleneck detection using search-based input-sensitive application profiling. Our key idea is to use a genetic algorithm as a search heuristic for obtaining combinations of input parameter values that maximizes a fitness function that represents the elapsed execution time of the application. We implemented our approach, coined as Genetic Algorithm-driven Profiler (GA-Prof) that combines a search-based heuristic with contrast data mining of execution traces to accurately determine performance bottlenecks. We evaluated GA-Prof to determine how effectively and efficiently it can detect injected performance bottlenecks into three popular open source web applications. Our results demonstrate that GA-Prof efficiently explores a large space of input value combinations while automatically and accurately detecting performance bottlenecks, thus suggesting that it is effective for automatic profiling.","Application profiling, Performance bottlenecks",,,,,,,,"<On the application of genetic programming for software engineering predictive modeling: A systematic review, {eid: 79955628180}>, <Performance debugging for distributed systems of black boxes, {eid: 21644455102}>, <A systematic review of the application and empirical investigation of search-based test case generation, {eid: 78649794788}>, <Automated web application testing using search based software engineering, {eid: 84855445676}>, <Finding and removing performance bottlenecks in large systems, {eid: 84936937947}>, <A practical guide for using statistical tests to assess randomized algorithms in software engineering, {eid: 79959871222}>, <A hitchhikers guide to statistical tests for assessing randomized algorithms in software engineering, {eid: 84883099844}>, <Directed test generation for effective fault localization, {eid: 77955877763}>, <Practical fault localization for dynamic web applications, {eid: 77954721052}>, <Symbolic search-based testing, {eid: 84855417349}>, <None, {eid: 84860926946}>, <Stress testing real-time systems with genetic algorithms, {eid: 32444445648}>, <Wise: Automated test generation for worst-case complexity, {eid: 70350552240}>, <Synthesizing client load models for performance engineering via web crawling, {eid: 56649123014}>, <A callgraph-based search strategy for automated performance diagnosis, {eid: 84937389568}>, <Types of software evolution and software maintenance, {eid: 84975830616}>, <Detecting performance anti-patterns for applications developed using object-relational mapping, {eid: 84994157759}>, <Understanding, modelling, and improving the performance of web applications in multicore virtualised environments, {eid: 84899698849}>, <Holmes: Effective statistical debugging via efficient path profiling, {eid: 73149122840}>, <Input-sensitive profiling, {eid: 84863487165}>, <Mining hot calling contexts in small space, {eid: 79959879248}>, <None, {eid: 84866595689}>, <An empirical study of profiling strategies for released software and their impact on testing activities, {eid: 16244415093}>, <Input-sensitive profiling, {eid: 84919766570}>, <None, {eid: 84975703655}>, <A genetic programming approach to automated software repair, {eid: 72749113538}>, <A memetic algorithm for whole test suite generation, {eid: 84946952886}>, <Search-based genetic optimization for deployment and reconfiguration of software in the cloud, {eid: 84883666968}>, <Exploring very large state spaces using genetic algorithms, {eid: 84896693691}>, <Genprog: A generic method for automatic software repair, {eid: 84856746279}>, <Automated concept location using independent component analysis, {eid: 57749176184}>, <Automatically finding performance problems with feedback-directed learning software testing, {eid: 84864193632}>, <None, {eid: 84900386332}>, <None, {eid: 84975679346}>, <Performance debugging in the large via mining millions of stack traces, {eid: 84864219793}>, <Search based software engineering for program comprehension, {eid: 34948844615}>, <Strong higher order mutation-based test data generation, {eid: 80053197346}>, <Cloud engineering is search based software engineering too, {eid: 84881480406}>, <Search-based software engineering: Trends, techniques and applications, {eid: 84866935116}>, <A theoretical and empirical study of search-based testing: Local, global, and hybrid search, {eid: 77950626862}>, <None, {eid: 0003463297}>, <Independent component analysis: Algorithms and applications, {eid: 0042826822}>, <Empirical investigation of search algorithms for environment model-based testing of real-time embedded software, {eid: 84865288583}>, <Profile-guided program simplification for effective testing and analysis, {eid: 76349108795}>, <Automatic identification of load testing problems, {eid: 57849152538}>, <Automated performance analysis of load tests, {eid: 70849104041}>, <Understanding and detecting real-world performance bugs, {eid: 84863459107}>, <Automatic structural testing using genetic algorithms, {eid: 0030234676}>, <A randomized dynamic program analysis technique for detecting real deadlocks, {eid: 70450240793}>, <Automated software test data generation, {eid: 0025472647}>, <Argument controlled profiling, {eid: 77954588988}>, <Multi objective higher order mutation testing with genetic programming, {eid: 77949843473}>, <A systematic study of automated program repair: Fixing 55 out of 105 bugs for $8 each, {eid: 84864264923}>, <Search algorithms for regression test case prioritization, {eid: 34047189734}>, <None, {eid: 0003854384}>, <Automatic performance debugging of spmd-style parallel programs, {eid: 79957501023}>, <Search-based software test data generation: A survey: Research articles, {eid: 3142725712}>, <Search-based software testing: Past, present and future, {eid: 80051619581}>, <Input domain reduction through irrelevant variable removal and its effect on local, global, and hybrid search-based structural test data generation, {eid: 84859749195}>, <Skoll: Distributed continuous quality assurance, {eid: 4544349711}>, <Using heuristic search techniques to extract design abstractions from source code, {eid: 0142211090}>, <Evaluating the accuracy of Java profilers, {eid: 77954721392}>, <An industrial case study of automatically identifying performance regression-causes, {eid: 85119225908}>, <Search-based software maintenance, {eid: 34548097926}>, <How to effectively use topic models for software engineering tasks? An approach based on genetic algorithms, {eid: 84883710034}>, <Leveraging test generation and specification mining for automated bug detection without false positives, {eid: 84864256871}>, <Eventbreak: Analyzing the responsiveness of user interfaces through performance-guided test generation, {eid: 84908293778}>, <Mining behavior models from enterprise web applications, {eid: 84883667248}>, <Procrawl: Mining test models from multi-user web applications, {eid: 84942780602}>, <None, {eid: 84975774320}>, <Breeding high-impact mutations, {eid: 80051643462}>, <Jolt: Lightweight dynamic analysis and removal of object churn, {eid: 63549145872}>, <Atom: A system for building customized program analysis tools, {eid: 0028132513}>, <Test case comparison and clustering using program profiles and static execution, {eid: 77949371552}>, <The automatic generation of test data using genetic algorithms, {eid: 0006558050}>, <Systematic testing of real-time systems, {eid: 3142696440}>, <Verifying timing constraints of real-time systems by means of evolutionary testing, {eid: 0032204373}>, <Testing real-time systems using genetic algorithms, {eid: 0000380234}>, <Automatically finding patches using genetic programming, {eid: 70549112781}>, <Context-sensitive delta inference for identifying workload-dependent performance bottlenecks, {eid: 84881297394}>, <Precise memory leak detection for Java software using container profiling, {eid: 67650714764}>, <Factors affecting the use of genetic algorithms in test suite augmentation, {eid: 77955917233}>, <Uncovering performance problems in Java applications with reference propagation profiling, {eid: 84864193967}>, <None, {eid: 84975681573}>, <A qualitative study on performance bugs, {eid: 84865125030}>, <Algorithmic profiling, {eid: 84863473591}>, <Automatic generation of load tests, {eid: 84855462010}>, <Automated diagnosis of software configuration errors, {eid: 84886405418}>",,,"Association for Computing Machinery, Inc",,,2015-07-13,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-84975763993,False,False,True,False
37,,"ZÃºÃ±iga-Prieto M. (AUID: 56524481200), Insfran E. (AUID: 6506793505), AbrahÃ£o S. (AUID: 8211929700), Cano-Genoves C. (AUID: 57192005049)",,Automation of the incremental integration of microservices architectures,2017,Lecture Notes in Information Systems and Organisation,,,,,,,3,10.1007/978-3-319-52593-8_4,https://www.doi.org/10.1007/978-3-319-52593-8_4,"<Department of Computer Science, Universidad de Cuenca>, <Department of Information Systems and Computation, Universitat PolitÃ¨cnica de ValÃ¨ncia>",,"Â© Springer International Publishing Switzerland 2017.Microservices have appeared as a new architectural style that is native to the cloud. The high availability and agility of the cloud demands organizations to migrate or design microservices, promoting the building of applications as a suite of small and cohesive services that are independently developed, deployed and scaled. Current cloud development approaches do not support the incremental integration needed for microservice platforms, and the agility of getting new functionalities out to customers is consequently affected by the lack of support for the integration design and automation of the development and deployment tasks. This paper presents an approach for the incremental integration of microservices that will allow architects to specify and design microservice integration, and provide mechanisms to automatically obtain the implementation code for business logic and interoperation among microservices, along with deployment and architectural reconfiguration scripts specific to the cloud environment in which the microservice will be deployed.","Cloud, Cloud architectures, Incremental, Integration, Microservices architectures",,,,,,,,"<Development and deployment at facebook, {eid: 84880146979}>, <Microservices, IoT, and Azure: Leveraging DevOps and Microservice Architecture to Deliver SaaS Solutions, {eid: 85046792617}>, <None, {eid: 84992401957}>, <None, {eid: 84950338538}>, <Service functional test automation, {eid: 84995934968}>, <None, {eid: 84995906617}>, <Controlling data in the cloud: Outsourcing computation without outsourcing control, {eid: 74049093526}>, <Designing a smart city internet of things platform with microservice architecture, {eid: 84959050879}>, <None, {eid: 85018761953}>, <The cloudMIG approach: Model-based migration of software systems to cloud-optimized applications, {eid: 84886445739}>, <Developing migratable multicloud applications based on MDE and adaptation techniques, {eid: 84884637858}>, <MODAC LOUDS: A model-driven approach for the design and execution of applications on multiple clouds, {eid: 84864997201}>, <An incremental and model driven approach for the dynamic reconfiguration of cloud application architectures, {eid: 84992731072}>, <Towards a model-driven dynamic architecture reconfiguration process for cloud services integration, {eid: 84923259718}>, <The DevOps 2.0 Toolkit: Automating the Continuous Deployment Pipeline with Containerized Microservices, {eid: 85018783151}>, <Framework for platform agnostic enterprise application development supporting multiple clouds, {eid: 84937500863}>, <UML-based cloud application modeling with libraries, profiles, and templates, {eid: 84911965669}>, <A UML Profile for modeling multicloud applications, {eid: 84885733995}>, <Towards CloudML, a model-based approach to provision resources in the clouds, {eid: 84879762752}>, <SeaClouds: A European project on seamless management of multi-cloud applications, {eid: 84920511449}>, <Architecture description language for incremental integration of cloud services architectures, {eid: 85010452220}>, <None, {eid: 84867643299}>, <Evaluating REST architectures-approach, tooling and guidelines, {eid: 84951064164}>, <Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation, {eid: 84903601568}>, <None, {eid: 84950310360}>",,,Springer Heidelberg,,,2017-01-01,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85018772815,False,False,False,False
38,,"Pelliccione P. (AUID: 8852257900), Knauss E. (AUID: 24829443700), Heldal R. (AUID: 6602582740), Magnus Ãgren S. (AUID: 57204734965), Mallozzi P. (AUID: 57190190199), Alminger A. (AUID: 36476094700), Borgentun D. (AUID: 57190184465)",,Automotive Architecture Framework: The experience of Volvo Cars,2017,Journal of Systems Architecture,,,,,,,64,10.1016/j.sysarc.2017.02.005,https://www.doi.org/10.1016/j.sysarc.2017.02.005,"<Chalmers University of Technology | University of Gothenburg, Department of Computer Science and Engineering>, <Bergen University College>, <Volvo Cars>",,"Â© 2017 Elsevier B.V.The automotive domain is living an extremely challenging historical moment shocked by many emerging business and technological needs. Electrification, autonomous driving, and connected cars are some of the driving needs in this changing world. Increasingly, vehicles are becoming software-intensive complex systems and most of the innovation within the automotive industry is based on electronics and software. Modern vehicles can have over 100 Electronic Control Units (ECUs), which are small computers, together executing gigabytes of software. ECUs are connected to each other through several networks within the car, and the car is increasingly connected with the outside world. These novelties ask for a change on how the software is engineered and produced and for a disruptive renovation of the electrical and software architecture of the car. In this paper we describe the current investigation of Volvo Cars to create an architecture framework able to cope with the complexity and needs of present and future vehicles. Specifically, we present scenarios that describe demands for the architectural framework and introduce three new viewpoints that need to be taken into account for future architectural decisions: Continuous Integration and Deployment, Ecosystem and Transparency, and car as a constituent of a System of Systems. Our results are based on a series of focus groups with experts in automotive engineering and architecture from different companies and universities.","Architecture framework, Automotive domain, Automotive ecosystem, Continuous integration and deployment, Software architecture, Systems of Systems",,,,,,,,"<How KETs can contribute to the re-industrialisation of Europe, {eid: 85020620820}>, <A proposal for an automotive architecture framework for Volvo Cars, {eid: 84978258746, doi: 10.1109/WASA.2016.9}>, <None, {eid: 85020619457}>, <Toward a holistic and standardized automotive architecture description, {eid: 73449140146}>, <None, {eid: 84957056085}>, <Viewpoints: a framework for integrating multiple perspectives in system development, {eid: 0003112251}>, <The 4+1 view model of architecture, {eid: 0029408391}>, <Software Systems Architecture: Working With Stakeholders Using Viewpoints and Perspectives, {eid: 33751002702}>, <Documenting Software Architectures: Views and Beyond, {eid: 0006029493}>, <The Process of Software Architecting, {eid: 77958190800}>, <Every architecture description needs a framework: expressing architecture frameworks using ISO/IEC 42010, {eid: 74349118841}>, <None, {eid: 85020690691}>, <None, {eid: 85020643792}>, <None, {eid: 85020643819}>, <None, {eid: 85020646390}>, <None, {eid: 84870680275}>, <SADT: Structured Analysis and Design Technique, {eid: 0004133986}>, <Unified Modeling Language User Guide, The (2Nd Edition) (Addison-Wesley Object Technology Series), {eid: 0003547470}>, <The east-adl architecture description language for automotive embedded software, {eid: 78449253285}>, <A Practical Guide to SysML: Systems Modeling Language, {eid: 85013989545}>, <Automotive Architecture Framework: Towards a Holistic and Standardised System Architecture Description, {eid: 77950427624}>, <Towards an architectural design framework for automotive systems development, {eid: 84883885003, doi: 10.1007/978-3-642-34404-6_16}>, <What industry needs from architectural languages: a survey, {eid: 84878389746}>, <A classification and comparison framework for software architecture description languages, {eid: 0033892696}>, <Automotive software development: a model based approach, {eid: 85072506138}>, <Architecting in the automotive domain: descriptive vs. prescriptive architecture, {eid: 84943248995, doi: 10.1109/WICSA.2015.18}>, <Descriptive vs. prescriptive models in industry, {eid: 85008425440}>, <The road ahead for architectural languages, {eid: 84922874903, doi: 10.1109/MS.2014.28}>, <What do software architects really do?, {eid: 53949091609, doi: 10.1016/j.jss.2008.08.025}>, <Organic evolution of development organizations-an experience report, {eid: 85072357057}>, <How much up-front? A grounded theory of agile architecture, {eid: 84951764091}>, <Challenges of requirements engineering in autosar ecosystems, {eid: 84962360741}>, <Cross-organizational challenges of requirements engineering in the autosar ecosystem: a case study, {eid: 84965130242}>, <Strategic ecosystem management: a multi-case study on challenges and strategies for different ecosystem types, {eid: 84958238639}>, <Defining Software Ecosystems: A Survey of Software Platforms and Business Network Governance, {eid: 84881930760}>, <Evaluating the governance model of hardware-dependent software ecosystemsâa case study of the axis ecosystem, {eid: 84904550958}>, <A longitudinal case study of an emerging software ecosystem: implications for practice and theory, {eid: 79958283622}>, <Towards enabling cross-organizational modeling in automotive ecosystems, {eid: 84922185430}>, <Achievements and exploitation of the autosar development partnership, {eid: 78449233887}>, <Autosarâa worldwide standard is on the road, {eid: 79751532776}>, <Challenges in automotive software engineering, {eid: 34247127701}>, <Requirements value chains: stakeholder management and requirements engineering in software ecosystems, {eid: 77955440483}>, <Specification and analysis of requirements negotiation strategy in software ecosystems., {eid: 84965109618}>, <Why do we not learn from defects? - Towards defect-driven software process improvement, {eid: 84878080562, doi: 10.5220/0004345602970303}>, <Rapid Development: Taming Wild Software Schedules, {eid: 0004081281}>, <Schedule estimation and uncertainty surrounding the cone of uncertainty, {eid: 33646526465, doi: 10.1109/MS.2006.82}>, <None, {eid: 85020673589}>, <Self-adaptive software: landscape and research challenges, {eid: 70349742463, doi: 10.1145/1516533.1516538}>, <Modeling continuous integration practice differences in industry software development, {eid: 84888645752}>, <Looking into the crystal ball: requirements evolution over time, {eid: 85007251473}>, <Verdict machinery: on the need to automatically make sense of test results, {eid: 84984923529, doi: 10.1145/2931037.2931064}>, <None, {eid: 84922175430}>, <Formalizing software ecosystem modeling, {eid: 77950485011}>, <Business and software ecosystems: how to model, analyze, and survive!, {eid: 85020637816}>, <EAM: ecosystemability assessment method, {eid: 84909957909}>, <Continuous api-design for software ecosystems, {eid: 84945893804}>, <A modelling language for transparency requirements in business information systems, {eid: 84976610185}>, <Foundations for transparency requirements engineering, {eid: 84960861708}>, <Dedicated support for experience sharing in distributed software projects, {eid: 84938348831}>, <Conditional safety certification of open adaptive systems, {eid: 84880234960}>, <Run time safety analysis for automotive systems in an open and adaptive environment, {eid: 84978256488}>, <Formally describing the software architecture of systems-of-systems with sosadl, {eid: 84985906010, doi: 10.1109/SYSOSE.2016.7542926}>, <Developing next generation ADLs through MDE techniques, {eid: 77954735678}>, <None, {eid: 85020628093}>, <Realizing architecture frameworks through megamodelling techniques, {eid: 78649780401, doi: 10.1145/1858996.1859057}>, <On the composition and reuse of viewpoints across architecture frameworks, {eid: 84870705355, doi: 10.1109/WICSA-ECSA.212.21}>, <None, {eid: 0003680794}>",,,Elsevier B.V.,,,2017-06-01,,,,,,,eng,,Journal,,,,2-s2.0-85015806385,False,False,False,False
39,,"KosiÅska J. (AUID: 16241827400), ZieliÅski K. (AUID: 57206225483)",,Autonomic Management Framework for Cloud-Native Applications,2020,Journal of Grid Computing,,,,,,,17,10.1007/s10723-020-09532-0,https://www.doi.org/10.1007/s10723-020-09532-0,"<Department of Computer Science, Faculty of Computer Science, Electronics and Telecommunications, AGH University of Science and Technology>",,"Â© 2020, The Author(s).In order to meet the rapidly changing requirements of the Cloud-native dynamic execution environment, without human support and without the need to continually improve oneâs skills, autonomic features need to be added. Embracing automation at every layer of performance management enables us to reduce costs while improving outcomes. The main contribution of this paper is the definition of autonomic management requirements of Cloud-native applications. We propose that the automation is achieved via high-level policies. In turn autonomy features are accomplished via the rule engine support. First, the paper presents the engineering perspective of building a framework for Autonomic Management of Cloud-Native Applications, namely AMoCNA, in accordance with Model Driven Architecture (MDA) concepts. AMoCNA has many desirable features whose main goal is to reduce the complexity of managing Cloud-native applications. The presented models are, in fact, meta-models, being technology agnostic. Secondly, the paper demonstrates one possibility of implementing the aforementioned design procedures. The presented AMoCNA implementation is also evaluated to identify the potential overhead introduced by the framework.","Autonomic Computing (AC), Cloud-native, Observability, Policy-driven management, Resource management",,,,,,,,"<Rule engine based lightweight framework for adaptive and autonomic computing, {eid: 47749149969}>, <None, {eid: 77951168228}>, <Orchestrating complex application architectures in heterogeneous clouds, {eid: 85091492884}>, <Resource-Definition Policies for Autonomic Computing, {eid: 67650673423}>, <None, {eid: 85065797199}>, <None, {eid: 85091487278}>, <An sla- based broker for cloud infrastructures, {eid: 84874663533, doi: 10.1007/s10723-012-9241-4}>, <Building lean continuous integration and delivery pipelines by applying devops principles: A case study at varidesk, {eid: 85058271814}>, <Dependable mesh networking patterns, {eid: 85076670133}>, <None, {eid: 85091495200}>, <None, {eid: 85091487217}>, <None, {eid: 85091479034}>, <None, {eid: 85091520036}>, <None, {eid: 0141684320}>, <None, {eid: 67651248827}>, <The dawning of the autonomic computing era, {eid: 0037236308, doi: 10.1147/sj.421.0005}>, <Data-Driven Monitoring for Cloud Compute Systems, {eid: 85009097790}>, <Iaasmon: Monitoring architecture for public cloud computing data centers, {eid: 84960102697, doi: 10.1007/s10723-015-9357-4}>, <None, {eid: 85091509890}>, <A survey of autonomic computing â degrees, models, and applications, {eid: 42449088961, doi: 10.1145/1380584.1380585}>, <None, {eid: 85091488312}>, <None, {eid: 85091531968}>, <None, {eid: 85091486634}>, <None, {eid: 85091539340}>, <None, {eid: 85091502096}>, <On the general theory of control systems, {eid: 84936764522, doi: 10.1109/TAC.1959.1104873}>, <The vision of autonomic computing, {eid: 0037253062, doi: 10.1109/MC.2003.1160055}>, <None, {eid: 85040769709}>, <Adaptive SOA solution stack, {eid: 84861921234, doi: 10.1109/TSC.2011.8}>, <None, {eid: 85091523873}>, <Supporting programmable autoscaling rules for containers and virtual machines on clouds, {eid: 85072128121, doi: 10.1007/s10723-019-09488-w}>, <A brief history of cloud application architectures, {eid: 85051750704, doi: 10.3390/app8081368}>, <Clouns - A Cloud-native Application Reference Model for Enterprise Architects, {eid: 85091479401}>, <Intellectual Property and Open Source: A Practical Guide to Protecting Code, 1 edn. OâReilly Media, Inc., 1005 Gravenstein Highway North, Sebastopol, pp, {eid: 85091516958}>, <None, {eid: 85091514748}>, <None, {eid: 85091517191}>, <None, {eid: 85091529241}>, <None, {eid: 85091483063}>, <None, {eid: 85091497154}>, <None, {eid: 85091532748}>, <Docker cluster management for the cloud - survey results and own solution, {eid: 84963690007, doi: 10.1007/s10723-016-9366-y}>, <None, {eid: 85091478800}>, <Autonomic management of large clusters and their integration into the grid, {eid: 50849126162, doi: 10.1007/s10723-004-7647-3}>, <None, {eid: 85091479980}>, <Qos-aware Autonomic Resource Management in Cloud Computing: A Systematic Review, {eid: 84954223549, doi: 10.1145/2843889}>, <Policy driven management for distributed systems, {eid: 0028726831, doi: 10.1007/BF02283186}>, <None, {eid: 85091501553}>, <None, {eid: 85050868375}>, <Self-managing cloud-native applications: design, implementation, and experience, {eid: 85002062941, doi: 10.1016/j.future.2016.09.002}>, <Leveraging kubernetes for adaptive and cost-efficient resource management, {eid: 85078873938}>, <Understanding features in soa: Some experiences from distributed systems. In: Proceedings of the 2nd International Workshop on Systems Development in SOA Environments, SDSOA â08, pp. 59â62. Association for Computing Machinery, {eid: 57049177968}>",,,Springer Science and Business Media B.V.,,,2020-12-01,,,,,,,eng,,Journal,,,,2-s2.0-85091538444,False,False,True,True
40,,"GÃ¼nalp O. (AUID: 55421095800), GÃ¼rgen L. (AUID: 14632037200), Lestideau V. (AUID: 13611299300), Lalanda P. (AUID: 22734050600)",,Autonomic pervasive applications driven by abstract specifications,2012,"1st International Workshop on Self-Aware Internet of Things, Self-IoT'12",,,,,,,2,10.1145/2378023.2378028,https://www.doi.org/10.1145/2378023.2378028,"<CEA, LETI, Minatec Campus>, <Grenoble University>",,"Pervasive application architectures present stringent requirements that make their development especially hard. In particular, they need to be flexible in order to cope with dynamism in different forms (e.g. service and data providers and consumers). The current trend to build applications out of remote services makes the availability of constituent application components inherently dynamic. Developers can no longer assume that applications are static after development or at run time. Unfortunately, developing applications that are able to cope with dynamism is very complex. Existing development approaches do not provide explicit support for managing dynamism. In this paper we describe Rondo, a tool suite for designing pervasive applications. More specifically, we present our propositions in pervasive application specification, which borrows concepts from service-oriented component assembly, model-driven engineering (MDE) and continuous deployment, resulting in a more flexible approach than traditional application definitions. Then the capabilities of our application model are demonstrated with an example application scenario designed using our approach. Copyright 2012 ACM.","Autonomic computing, Internet of things, Pervasive computing, Service-oriented computing",,,,,,,,"<A survey on context-aware systems, {eid: 34548725499}>, <Towards an automatic integration of heterogeneous services and devices, {eid: 79952392072}>, <On the use of models during software execution, {eid: 77949867601}>, <A tool suite to prototype pervasive computing applications, {eid: 77953990818}>, <Applying OMG D&C specification and eca rules for autonomous distributed component- based systems, {eid: 38149010361}>, <IPojo: An extensible service-oriented component framework, {eid: 35248852965}>, <Opportunistic computing experience with the SAM platform, {eid: 77954614217}>, <A perspective on the future of middleware-based software engineering, {eid: 34748852148}>, <The vision of autonomic computing, {eid: 0037253062}>, <None, {eid: 84867694832}>, <Service-oriented computing: A research roadmap, {eid: 79952905352}>, <MUSIC: Middleware support for self-adaptation in ubiquitous and service- oriented environments, {eid: 70350023579}>, <Self-adaptive software: Landscape and research challenges, {eid: 70349742463}>, <Pervasive computing: Vision and challenges, {eid: 0035428427}>, <A taxonomy of variability realization techniques: Research articles, {eid: 21644473421}>, <Toward megamodels at runtime, {eid: 79957668356}>",,,,,,2012-09-17,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-84867731898,True,False,True,False
41,,"Cazzola W. (AUID: 6602449966), Maurina G. (AUID: 57219853565), Ghosh S. (AUID: 7404807269), Al-Refai M. (AUID: 57222159787)",,Bridging the model-to-code abstraction gap with fuzzy logic in model-based regression test selection,2022,Software and Systems Modeling,,,,,,,2,10.1007/s10270-021-00899-6,https://www.doi.org/10.1007/s10270-021-00899-6,"<Computer Science Department, UniversitÃ  degli Studi di Milano>, <Computer Science Department, Colorado State University>, <Computer Science Department, Jordan University of Science and Technology>",,"Â© 2021, The Author(s).Regression test selection (RTS) approaches reduce the cost of regression testing of evolving software systems. Existing RTS approaches based on UML models use behavioral diagrams or a combination of structural and behavioral diagrams. However, in practice, behavioral diagrams are incomplete or not used. In previous work, we proposed a fuzzy logic based RTS approach called FLiRTS that uses UML sequence and activity diagrams. In this work, we introduce FLiRTS 2, which drops the need for behavioral diagrams and relies on system models that only use UML class diagrams, which are the most widely used UML diagrams in practice. FLiRTS 2 addresses the unavailability of behavioral diagrams by classifying test cases using fuzzy logic after analyzing the information commonly provided in class diagrams. We evaluated FLiRTS 2 on UML class diagrams extracted from 3331 revisions of 13 open-source software systems, and compared the results with those of code-based dynamic (Ekstazi) and static (STARTS) RTS approaches. The average test suite reduction using FLiRTS 2 was 82.06%. The average safety violations of FLiRTS 2 with respect to Ekstazi and STARTS were 18.88% and 16.53%, respectively. FLiRTS 2 selected on average about 82% of the test cases that were selected by Ekstazi and STARTS. The average precision violations of FLiRTS 2 with respect to Ekstazi and STARTS were 13.27% and 9.01%, respectively. The average mutation score of the full test suites was 18.90%; the standard deviation of the reduced test suites from the average deviation of the mutation score for each subject was 1.78% for FLiRTS 2, 1.11% for Ekstazi, and 1.43% for STARTS. Our experiment demonstrated that the performance of FLiRTS 2 is close to the state-of-art tools for code-based RTS but requires less information and performs the selection in less time.","Class diagram, Fuzzy logic, Regression test selection, UML",,,,,,,,"<An extension of class diagram to model the structure of context-aware systems, {eid: 85110943912}>, <A fuzzy logic based approach for model-based regression test selection, {eid: 85040586834}>, <Model-based regression test selection for validating runtime adaptation of software systems, {eid: 84983288652}>, <Supporting inheritance hierarchy changes in model-based regression test selection, {eid: 85037103803, doi: 10.1007/s10270-017-0636-3}>, <Is mutation an appropriate tool for testing experiments?, {eid: 84994006258}>, <ReTEST: A cost effective test case selection technique for modern software development, {eid: 85059652407}>, <Extended UML for the development of context-aware applications, {eid: 84880478665}>, <None, {eid: 84924717453, doi: 10.1017/CBO9780511801129}>, <None, {eid: 85055572256}>, <Heavyweight extension to the UML class diagram metamodel for modeling context aware systems in ubiquitous computing, {eid: 85031778537}>, <Automating regression test selection based on UML designs, {eid: 56649118931, doi: 10.1016/j.infsof.2008.09.010}>, <Model differences in the eclipse modeling framework, {eid: 70849087833}>, <Fine-grained software evolution using UML activity and class models, {eid: 84886838477}>, <Fine-grained semi-automated runtime evolution, {eid: 84904811259}>, <Specification-based regression test selection with risk analysis, {eid: 24944502842}>, <jFuzzyLogic: a java library to design fuzzy logic controllers according to the standard for fuzzy control programming, {eid: 84880075316, doi: 10.1080/18756891.2013.818190}>, <A study on techniques for the automatic generation of membership functions for pattern recognition, {eid: 73649114627}>, <PIT: A practical mutation testing tool for java, {eid: 84984920723}>, <Ten years of genetic fuzzy systems: current framework and new trends, {eid: 0346781553, doi: 10.1016/S0165-0114(03)00111-8}>, <None, {eid: 79959245159, doi: 10.1007/978-3-642-00234-2}>, <None, {eid: 85110938570}>, <How UML is used, {eid: 33745921784, doi: 10.1145/1125944.1125949}>, <A realistic empirical evaluation of the costs and benefits of UML in software maintenance, {eid: 45449102151, doi: 10.1109/TSE.2008.15}>, <A systematic review on regression test selection techniques, {eid: 70350570383, doi: 10.1016/j.infsof.2009.07.001}>, <A model-based regression testing approach for evolving software systems with flexible tool support, {eid: 77953222030}>, <On the use of uml documentation in software maintenance: results from a survey in industry, {eid: 84961575335}>, <None, {eid: 85110943133}>, <Analyze your classes, {eid: 85110992662}>, <Dynamic update of java applications-balancing change flexibility vs programming transparency, {eid: 63849136008, doi: 10.1002/smr.406}>, <Does UML make the grade? Insights from the software development community, {eid: 15344348313, doi: 10.1016/j.infsof.2004.09.005}>, <Evaluating regression test selection opportunities in a very large open-source ecosystem, {eid: 85059628157}>, <Testing evolving software, {eid: 0032663371, doi: 10.1016/S0164-1212(99)00037-0}>, <Regression test selection for java software, {eid: 0035551930}>, <Applying genetic self-architecting for distributed systems, {eid: 84873142653}>, <A technique for the selective revalidation of OO software, {eid: 0031189209}>, <Extending UML to model web 2.0-based context-aware applications, {eid: 84865981340, doi: 10.1002/spe.1124}>, <Empirical assessment of MDE in industry, {eid: 79959917914}>, <On the use of genetic programming for automated refactoring and the introduction of design patterns, {eid: 77955870506}>, <PCP: Privacy-aware context profile towards context-aware application development, {eid: 70349115506}>, <Model based regression test reduction using dependence analysis, {eid: 0036441907}>, <On regression testing of object-oriented programs, {eid: 0029774306, doi: 10.1016/0164-1212(95)00047-X}>, <In practice: UML software architecture and design description, {eid: 33645007339, doi: 10.1109/MS.2006.50}>, <On the usage of UML: Initial results of analyzing open UML models, {eid: 84908214336}>, <An extensive study of static regression test selection in modern software evolution, {eid: 84997112179}>, <None, {eid: 85110951689}>, <Rational software architect: a tool for domain-specific modeling, {eid: 33748314575, doi: 10.1147/sj.453.0555}>, <A cost model to compare regression test strategies, {eid: 35848953495}>, <None, {eid: 85110984330}>, <None, {eid: 85110988714}>, <An experiment in linguistic synthesis with a fuzzy logic controller, {eid: 85009937047, doi: 10.1016/S0020-7373(75)80002-2}>, <ADDiff: Semantic differencing for activity diagrams, {eid: 80053206751}>, <Automated refactoring using design differencing, {eid: 84860532793}>, <None, {eid: 81055148998}>, <UML usage in open source software development: A field study, {eid: 84908155174}>, <UML in practice, {eid: 84886379183}>, <A domain-independent middleware framework for context-aware applications, {eid: 85110979209}>, <Using fuzzy logic and symbolic execution to prioritize UML-RT test cases, {eid: 84935134477}>, <Fuzzy expert system based test cases prioritization from UML state machine diagram using risk information, {eid: 85041103184}>, <SPIRITuS: a simple information retrieval regression test selection approach, {eid: 85045413636, doi: 10.1016/j.infsof.2018.03.004}>, <None, {eid: 84891564455}>, <A safe, efficient regression test selection technique, {eid: 0031125046, doi: 10.1145/248233.248262}>, <ContextUML: A UML-based modeling language for model-driven development of context-aware web services, {eid: 84937915571}>, <Balancing trade-offs in test-suite reduction, {eid: 84986890458}>, <A systematic literature review of UML-based domain-specific modeling languages for self-adaptive systems, {eid: 85051531753}>, <Towards a domain-specific modeling language for self-adaptive systems conceptual modeling, {eid: 85055806741}>, <Modeling context in mobile distributed systems with the UML, {eid: 34548601270, doi: 10.1016/j.jvlc.2007.07.001}>, <Improving class firewall regression test selection by removing the class firewall, {eid: 34547477086, doi: 10.1142/S0218194007003306}>, <Change-based test selection in the presence of developer tests, {eid: 84877264475}>, <Change-based test selection: an empirical evaluation, {eid: 84946763232, doi: 10.1007/s10664-015-9405-5}>, <Regression test suite selection using dependence analysis, {eid: 84883631405, doi: 10.1002/smr.1559}>, <A firewall approach for regression testing of object-oriented software, {eid: 20344404127}>, <A Brazilian survey on UML and model-driven practices for embedded software development, {eid: 84875253410, doi: 10.1016/j.jss.2012.11.023}>, <Differencing logical UML models, {eid: 34547256185, doi: 10.1007/s10515-007-0007-3}>, <System regression test planning with a fuzzy expert system, {eid: 84889674297, doi: 10.1016/j.ins.2010.09.012}>, <Automatic regression test selection based on activity diagrams, {eid: 80052997338}>, <Regression testing minimization, selection and prioritization: a survey, {eid: 84857550008, doi: 10.1002/stv.430}>, <A study of regression test selection in continuous integration environments, {eid: 85059631520}>, <Fuzzy sets, {eid: 34248666540, doi: 10.1016/S0019-9958(65)90241-X}>, <A generic platform for model-based regression testing, {eid: 84868277587}>, <Model-based regression testing by OCL, {eid: 84947447150, doi: 10.1007/s10009-015-0408-8}>, <None, {eid: 85110943647}>",,,Springer Science and Business Media Deutschland GmbH,,,2022-02-01,,,,,,,eng,,Journal,,,,2-s2.0-85110999535,False,False,False,False
42,,"Ferry N. (AUID: 35291975700), Chauvel F. (AUID: 13104917300), Song H. (AUID: 57195274282), Lushpenko M. (AUID: 57063267500), Solberg A. (AUID: 14827375100), Rossini A. (AUID: 7102582294)",,CloudMF: Model-driven management of multi-cloud applications,2018,ACM Transactions on Internet Technology,,,,,,,57,10.1145/3125621,https://www.doi.org/10.1145/3125621,"<Department of Software and Service Innovation>, <EVRY Cloud Services>",,"While the number of cloud solutions is continuously increasing, the development and operation of largescale and distributed cloud applications are still challenging. A major challenge is the lack of interoperability between the existing cloud solutions, which increases the complexity of maintaining and evolving complex applications potentially deployed across multiple cloud infrastructures and platforms. In this article, we show how the Cloud Modelling Framework leverages model-driven engineering and supports the DevOps ideas to tame this complexity by providing: (i) a domain-specific language for specifying the provisioning and deployment of multi-cloud applications, and (ii) a models@run-time environment for their continuous provisioning, deployment, and adaptation.","Cloud computing, DevOps, Model-driven engineering, Models@run-time, Multi-cloud",,,,,,,,"<MODACLOUDS, A model-driven approach for the design and execution of applications on multiple clouds, {eid: 84864997201}>, <Rearchitecting the UML infrastructure, {eid: 0141796082}>, <Genie: Supporting themodel driven development of reflective, component-based adaptive systems, {eid: 57349137662}>, <UML-based cloud application modeling with libraries, profiles, and templates, {eid: 84911965669}>, <OpenTOSCA-A runtime for TOSCA-based cloud applications, {eid: 84892400015}>, <Models@run. Time, {eid: 85008066028}>, <CloudScale: Scalability management for cloud systems, {eid: 84878201490}>, <Fine-grained software evolution using UML activity and class models, {eid: 84886838477}>, <Models@Runtime to support the iterative and continuous design of autonomous reasoners, {eid: 84924026082}>, <Evaluating robustness of cloud-based systems, {eid: 85006226396}>, <None, {eid: 2942742234}>, <Xtext: Implement your language faster than the quick and dirty way, {eid: 78650158701}>, <Managing multi-cloud systems with CloudMF, {eid: 84884604847}>, <Towards model-driven provisioning, deployment, monitoring, and adaptation of multi-cloud systems, {eid: 84884667453}>, <CloudMF: Applying MDE to tame the complexity of managing multi-cloud applications, {eid: 84946685259}>, <None, {eid: 84991397971}>, <An eclipse modelling framework alternative to meet the models@runtime requirements, {eid: 84867650983}>, <Search-based genetic optimization for deployment and reconfiguration of software in the cloud, {eid: 84883666968}>, <The CloudMIG approach: Model-based migration of software systems to cloudoptimized applications, {eid: 84886445739}>, <None, {eid: 84858197925}>, <A vision for better cloud applications, {eid: 84879752766}>, <Research information management: The CERIF approach, {eid: 84893938543}>, <SRL: A scalability rule language for multi-cloud environments, {eid: 84937897999}>, <Matters of (meta-)modeling, {eid: 34248658631}>, <None, {eid: 77954051808}>, <Models@Run. Time to support dynamic adaptation, {eid: 70350345225}>, <Smart route planning using open data and participatory sensing, {eid: 84929623326}>, <Topology and Orchestration Specification for Cloud Applications (TOSCA), {eid: 84886743417}>, <Consuming resources and services from multiple clouds-From terminology to cloudware support, {eid: 84905015886}>, <None, {eid: 85041434700}>, <Cardinality-based feature models with constraints: A pragmatic approach, {eid: 84883865735}>, <The reservoir model and architecture for open federated cloud computing, {eid: 74049087607}>, <None, {eid: 85041451210}>, <Building an open-source platform-as-A-service with intelligent management of multiple cloud resources, {eid: 84874243873}>, <PaaS-independent provisioning and management of applications in the cloud, {eid: 84897744190}>, <A runtime model based monitoring approach for cloud, {eid: 77957948402}>, <None, {eid: 85041448787}>, <None, {eid: 0004055652}>, <On architectural diversity of dynamic adaptive systems, {eid: 84951732317}>, <None, {eid: 85041436770}>, <None, {eid: 85041434332}>",,,Association for Computing Machinery,,,2018-01-01,,,,,,,eng,,Journal,,,,2-s2.0-85041437398,False,True,False,True
43,,"Cabot J. (AUID: 8963493600), ClarisÃ³ R. (AUID: 8948086100), Brambilla M. (AUID: 57226223274), GÃ©rard S. (AUID: 23088273000)",,Cognifying Model-Driven Software Engineering,2017,"International conference on Software Technologies: Applications and Foundations, STAF 2017",,,,,,,32,10.1007/978-3-319-74730-9_13,https://www.doi.org/10.1007/978-3-319-74730-9_13,"<ICREA>, <Universitat Oberta de Catalunya>, <Politecnico di Milano>, <CEA List>",,"Â© Springer International Publishing AG 2018.The limited adoption of Model-Driven Software Engineering (MDSE) is due to a variety of social and technical factors, which can be summarized in one: its (real or perceived) benefits do not outweigh its costs. In this vision paper we argue that the cognification of MDSE has the potential to reverse this situation. Cognification is the application of knowledge (inferred from large volumes of information, artificial intelligence or collective intelligence) to boost the performance and impact of a process. We discuss the opportunities and challenges of cognifying MDSE tasks and we describe some potential scenarios where cognification can bring quantifiable and perceivable advantages. And conversely, we also discuss how MDSE techniques themselves can help in the improvement of AI, Machine learning, bot generation and other cognification techniques.","AI, Bot, Machine learning, Model, Model-driven",,,,,,,,"<Process mining manifesto, {eid: 84863011087}>, <Integrating modeling languages and web logs for enhanced user behavior analytics, {eid: 85042675932}>, <A big data analysis framework for model-based web user behavior analytics, {eid: 85020522698}>, <Practical change impact analysis based on static program slicing for industrial software systems, {eid: 79959896935}>, <Experiences in the design of semantic services using web engineering methods and tools, {eid: 58849090949}>, <Extracting emerging knowledge from social media, {eid: 85042675241}>, <None, {eid: 84910605779}>, <Practical change impact analysis based on static program slicing for industrial software systems, {eid: 79959896935}>, <An online platform for semantic validation of UML models, {eid: 70350217788}>, <None, {eid: 84892828610}>, <Continuing a benchmark for UML and OCL design and analysis tools, {eid: 85007343649}>, <Restart strategy selection using machine learning techniques, {eid: 70350640707}>, <The next evolution of MDE: A seamless integration of machine learning into domain modeling, {eid: 85040582253}>, <Model-driven engineering practices in industry: Social, organizational and managerial factors that lead to success or failure, {eid: 84900499307}>, <Boosting verification by automatic tuning of decision procedures, {eid: 47349133530}>, <Algorithm runtime prediction: Methods & evaluation, {eid: 84887848457}>, <JSONDiscoverer: Visualizing the schema lurking behind JSON documents, {eid: 84964344814}>, <None, {eid: 85006857689}>, <Search-based model transformation by example, {eid: 84860470004}>, <An evaluation of machine learning in algorithm selection for search problems, {eid: 84865481979}>, <Recommending auto-completions for software modeling activities, {eid: 84886842342}>, <A machine learning technique for predicting the productivity of practitioners from individually developed software projects, {eid: 85042633394}>, <Practical change impact analysis based on static program slicing for industrial software systems, {eid: 79959896935}>, <Proactive modeling: Auto-generating models from their semantics and constraints, {eid: 84872119757}>, <The rise of the (Modelling) bots: Towards assisted modelling via social networks, {eid: 85041439636}>, <A machine learning approach to software requirements prioritization, {eid: 84875692349}>, <Researcher bias: The use of machine learning in software defect prediction, {eid: 84903176990}>, <Model-driven adaptation for plastic user interfaces, {eid: 38049105307}>, <Generic model assist, {eid: 84886838174}>, <Twoâs company, threeâs a crowd: A case study of crowdsourcing software development, {eid: 84994141774}>, <Systematic literature review of machine learning based software development effort estimation models, {eid: 80055086827}>",,,Springer Verlag,,,2017-07-17,,,,,,,eng,,Book Series,,,,2-s2.0-85042643413,True,False,False,True
44,,"Jongeling R. (AUID: 57188564750), Ciccozzi F. (AUID: 36616784300), Carlson J. (AUID: 7402114423), Cicchetti A. (AUID: 22733357800)",,Consistency management in industrial continuous model-based development settings: a reality check,2022,Software and Systems Modeling,,,,,,,6,10.1007/s10270-022-01000-5,https://www.doi.org/10.1007/s10270-022-01000-5,"<Department of Innovation, Design and Engineering (IDT), MÃ¤lardalen University>",,"Â© 2022, The Author(s).This article presents the state of practice of consistency management in thirteen industrial model-based development settings. Our analysis shows a tight coupling between adopting shorter development cycles and increasingly pressing consistency management challenges. We find that practitioners desire to adopt shorter development cycles, but immature modeling practices slow them down. We describe the different patterns that emerge from the various industrial settings. There is an opportunity for researchers to provide practitioners with a migration path toward practices that enable more automated consistency management, and ultimately, continuous model-based development.","Agile, Consistency management, Model-based development",,,,,,,,"<The integration of agile development and model driven developmentâA systematic literature review, {eid: 85041446030}>, <Architecture consistency: state of the practice, challenges and requirements, {eid: 85019238725, doi: 10.1007/s10664-017-9515-3}>, <None, {eid: 0038018633}>, <Benchmarking bidirectional transformations: theory, implementation, application, and assessment, {eid: 85073810908, doi: 10.1007/s10270-019-00752-x}>, <Orthographic modeling environment, {eid: 47249113536}>, <Model-Driven Engineering in a Large Industrial ContextâMotorola Case Study, {eid: 33646192696}>, <Tolerating inconsistency, {eid: 0026237315}>, <None, {eid: 85137076492}>, <On the need for megamodels, {eid: 84911928640}>, <A feature-based survey of model view approaches, {eid: 85029537056, doi: 10.1007/s10270-017-0622-9}>, <Grand challenges in model-driven engineering: an analysis of the state of the research, {eid: 85077634676, doi: 10.1007/s10270-019-00773-6}>, <Multi-view approaches for software and system modelling: a systematic literature review, {eid: 85061733132, doi: 10.1007/s10270-018-00713-w}>, <Automating co-evolution in model-driven engineering, {eid: 56649105329}>, <Towards Agile Model-based Systems Engineering, {eid: 85041433552}>, <A three-dimensional taxonomy for bidirectional model synchronization, {eid: 84941661877, doi: 10.1016/j.jss.2015.06.003}>, <Automatically detecting and tracking inconsistencies in software design models, {eid: 79953196410, doi: 10.1109/TSE.2010.38}>, <Agile model-driven engineering in mechatronic systemsâAn industrial case study, {eid: 84921391979}>, <Enhancing clone-and-own with systematic reuse for developing software variants, {eid: 84924737283}>, <Stepwise Adoption of Continuous Delivery in Model-Driven Engineering, {eid: 85061101819}>, <Combining the continuous integration practice and the model-driven engineering approach, {eid: 84981165314}>, <From model transformation to incremental bidirectional model synchronization, {eid: 57349131044, doi: 10.1007/s10270-008-0089-9}>, <Approaches to co-evolution of metamodels and models: a survey, {eid: 85021770842, doi: 10.1109/TSE.2016.2610424}>, <Feature-based classification of bidirectional transformation approaches, {eid: 84922343672, doi: 10.1007/s10270-014-0450-0}>, <Dagstuhl seminar on bidirectional transformations (bx), {eid: 79960818835, doi: 10.1145/2007206.2007217}>, <Model-driven engineering practices in industry: Social, organizational and managerial factors that lead to success or failure, {eid: 84900499307, doi: 10.1016/j.scico.2013.03.017}>, <None, {eid: 85128325065}>, <None, {eid: 72349086391}>, <Impediments to introducing continuous integration for model-based development in industry, {eid: 85075941988}>, <An empirical study on the impact of inconsistency feedback during model and code co-changing, {eid: 85083197692, doi: 10.5381/jot.2019.18.2.a10}>, <Multi-view consistency in UML: A survey, {eid: 85041806209}>, <Continuous integration beyond the team: A tooling perspective on challenges in the automotive industry, {eid: 84991687521}>, <Model-based engineering in the embedded systems domain: an industrial survey on the state-of-practice, {eid: 84962207101, doi: 10.1007/s10270-016-0523-3}>, <A systematic review of UML model consistency management, {eid: 70349470851, doi: 10.1016/j.infsof.2009.04.009}>, <A feature-based classification of model repair approaches, {eid: 85029226586, doi: 10.1109/TSE.2016.2620145}>, <Continuous integration impediments in large-scale industry projects, {eid: 85021428023}>, <A Hundred Days of Continuous Integration, {eid: 52949092458}>, <An empirical study of the state of the practice and acceptance of model-driven engineering in four industrial cases, {eid: 84872279471, doi: 10.1007/s10664-012-9196-x}>, <Systematic review of software behavioral model consistency checking, {eid: 85017413241}>, <The FUJABA environment, {eid: 0033712787}>, <Climbing the âStairway to HeavenââA Mulitiple-Case Study Exploring Barriers in the Transition from Agile Development towards Continuous Deployment of Software, {eid: 84869851477}>, <Climbing the âStairway to Heavenâ: Evolving from agile development to continuous deployment of software, {eid: 84930702109}>, <Bidirectional mapping between architecture model and code for synchronization, {eid: 85021434975}>, <Examining the co-evolution relationship between Simulink models and their test cases, {eid: 84973453895}>, <Basic problems in multi-view modeling, {eid: 85037995328, doi: 10.1007/s10270-017-0638-1}>, <The Epsilon Generation Language, {eid: 56649123074}>, <Model-driven engineering, {eid: 33344465743}>, <Dynamic hierarchical mega models: comprehensive traceability and its efficient maintenance, {eid: 77956266933, doi: 10.1007/s10270-009-0146-z}>, <Maintaining consistency in networks of models: bidirectional transformations in the large, {eid: 85066782484, doi: 10.1007/s10270-019-00736-x}>, <Multi-model evolution through model repair, {eid: 85103616374, doi: 10.5381/jot.2021.20.1.a2}>, <Relationships between software architecture and source code in practice: an exploratory survey and interview, {eid: 85112473307}>, <A systematic literature review of cross-domain model consistency checking by model management tools, {eid: 85093983978, doi: 10.1007/s10270-020-00834-1}>, <Kim, T.H., Cho, E.s.: A survey of consistency checking techniques for UML models, {eid: 61649088181}>, <Understanding and Facilitating the Co-Evolution of Production and Test Code, {eid: 85106656597}>, <Studying the co-evolution of production and test code in open source and industrial developer test processes through repository mining, {eid: 80052498571, doi: 10.1007/s10664-010-9143-7}>",,,Springer Science and Business Media Deutschland GmbH,,,2022-08-01,,,,,,,eng,,Journal,,,,2-s2.0-85128275171,False,False,False,True
45,,"Sathawornwichit C. (AUID: 16023048500), Hosono S. (AUID: 14631968500)",,Consistency reflection for automatic update of testing environment,2012,"2012 7th IEEE Asia-Pacific Services Computing Conference, APSCC 2012",,,,,,,3,10.1109/APSCC.2012.49,https://www.doi.org/10.1109/APSCC.2012.49,"<Knowledge Discovery Research Laboratories, NEC Corporation>",,"In this paper, we present an approach for maintaining consistency among design models, system under test, and test components. Our approach provides an automatic updating technique to deal with changes that happen frequently in agile software development. Consistency reflection by automatic updating allows us to cut off manual tasks required in maintaining automated tests and speed up testing process which is a bottleneck in service development lifecycle. We introduce the use of metadata, data structure that describes structural behavior of the system, in our automatic updating technique. Metadata is used as a common medium for communicating changes to keep consistency among design, system under test, and test components. We present an example of testing process to show how we apply this approach in practice. Â© 2012 IEEE.","Agile software development, Automated software testing, Automatic update, Behavior-driven development, Consistency reflection, Design models, Metadata",,,,,,,,"<None, {eid: 0141947425}>, <None, {eid: 0038635256}>, <None, {eid: 84876150078}>, <None, {eid: 84858197925}>, <The cucumber book: Behaviour-driven development for testers and developers, ser. pragmatic programmers, {eid: 84876099360}>, <None, {eid: 84876138652}>, <A taxonomy of model-based testing approaches, {eid: 84862325128}>, <A case study in model-based testing of specifications and implementations, {eid: 84855246335}>, <Challenges of variability in model-driven and transformational approaches: A systematic survey, {eid: 80051996154}>, <None, {eid: 77953226164}>, <Automatic test generation: A use case driven approach, {eid: 33645820260}>, <Model based testing using software architecture, {eid: 77955302480}>, <Model-driven testing with uml 2.0, {eid: 33745647181}>, <From design to test with uml: Applied to a roaming algorithm for bluetooth devices, {eid: 33745159714}>, <On extracting tests from a testable model in the context of domain engineering, {eid: 44149128019}>, <Behaviour-driven development of foundational uml components, {eid: 77955705236}>, <Scenario driven testing, {eid: 80051491734}>, <An automated test code generation method for web applications using activity oriented approach, {eid: 56249134234}>, <Automating the generation and sequencing of test cases from model-based specifications, {eid: 85015362530}>, <Towards fully automated test management for large complex systems, {eid: 77954516905}>",,,,,,2012-12-06,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-84876106702,False,False,True,False
46,,"HÃ¤hnle R. (AUID: 6701714849), Steffen B. (AUID: 55788171500)",,Constraint-based behavioral consistency of evolving software systems,2016,"International Dagstuhl Seminar 16172 Machine Learning for Dynamic Software Analysis: Potentials and Limits, 2016",,,,,,,1,10.1007/978-3-319-96562-8_8,https://www.doi.org/10.1007/978-3-319-96562-8_8,"<Department of Computer Science, Technische UniversitÃ¤t Darmstadt>, <Department of Computer Science, Technische UniversitÃ¤t Dortmund>",,"Â© Springer International Publishing AG, part of Springer Nature 2018.Any complex software system exhibits a tension between the technical perspective required for its realization and the user-level perspective. We term this the âhow-what gapâ, represented by the questions âhow is a system implementedâ vs. âwhat is its functionality/usageâ. The normative, anticipated behavior of a software system as envisaged during its development and the de facto, observed behavior emerging after its continued operation tends to drift apart, resulting in behavioral inconsistency. We discuss how behavioral consistency in software systems can be captured in technical and formal terms, we sketch a possible tool chain that could support it, and we describe some of the research challenges that must be solved. Our main idea is to combine software analysis approaches represented by various forms of static analysis and formal verification with runtime verification, monitoring, and automata learning in order to optimally leverage the de facto observed behaviour of the deployed systems.",,,,,,,,,"<Automata learning through counterexample guided abstraction refinement, {eid: 84866000299}>, <Generating models of infinite-state communication protocols using regular inference with abstraction, {eid: 84910634644}>, <None, {eid: 0003709343}>, <Deductive Software Verification-The KeY Book: From Theory to Practice, {eid: 85028960972}>, <Verifying data-and control-oriented properties combining static and runtime verification: Theory and tools, {eid: 85017166327}>, <None, {eid: 85051117529}>, <SACO: Static analyzer for concurrent objects, {eid: 84900528471}>, <A formal verification framework for static analysisâas well as its instantiation to the resource analyzer COSTA and formal verification tool KeY, {eid: 84988446281}>, <Formal modeling of resource management for cloud architectures: An industrial case study using real-time ABS, {eid: 84920252893}>, <SYCO: A systematic testing tool for concurrent objects, {eid: 84966472218}>, <Learning regular sets from queries and counterexamples, {eid: 0023453626}>, <None, {eid: 85051144593}>, <Never-stop learning: Continuous validation of learned models for evolving systems through monitoring, {eid: 84903886826}>, <Analysis of executable software models, {eid: 84902819627}>, <Learning extended finite state machines, {eid: 84905973988}>, <Extending automata learning to extended finite state machine, {eid: 85051143763}>, <StaRVOOrS: A tool for combined static and runtime verification of Java, {eid: 84950316422}>, <The 2012 SMT competition, {eid: 84969357578}>, <OpenJDKâs Java.Utils.collection.sort() is broken: The good, the bad and the worst case, {eid: 84950975371}>, <KeY-ABS: A deductive verification tool for the concurrent modelling language ABS, {eid: 84949309016}>, <Exploit generation for information flow leaks in object-oriented programs, {eid: 84942636308}>, <Generating unit tests from formal proofs, {eid: 38049081121}>, <A multiple case study on risk-based testing in industry, {eid: 84906951272}>, <A framework for deadlock detection in core ABS, {eid: 84922366074}>, <None, {eid: 0003724351}>, <Model generation by moderated regular extrapolation, {eid: 84958766854}>, <The abstract behavioral specification language: A tutorial introduction, {eid: 84883436097}>, <Uniform modeling of railway operations, {eid: 85013339605}>, <Symbolic execution debugger (SED), {eid: 84909637282}>, <None, {eid: 85051114083}>, <Inferring canonical register automata, {eid: 84856199447}>, <From ZULU to RERS, {eid: 78650283905}>, <Automata learning with automated alphabet abstraction refinement, {eid: 79251534375}>, <None, {eid: 84977544384}>, <Inferring automata with state-local alphabet abstractions, {eid: 84883421838}>, <Learning register automata: From languages to program structures, {eid: 84903881770}>, <The TTT algorithm: A redundancy-free approach to active automata learning, {eid: 84921627713}>, <The open-source LearnLib, {eid: 84951090020}>, <An abstract framework for counterexample analysis in active automata learning, {eid: 84950324277}>, <What is DevOps? A systematic mapping study on definitions and practices, {eid: 85019409567}>, <Program transformation based on symbolic execution and deduction, {eid: 84885910274}>, <ABS: A core language for abstract behavioral specification, {eid: 84255187324}>, <Learning of automata models extended with data, {eid: 79959235836}>, <None, {eid: 84953402219}>, <Symbolic computation and automated reasoning for program analysis, {eid: 84977530936}>, <Business process modelling in the jABC: The one-thing-approach, {eid: 84898095232}>, <Service-orientation: Conquering complexity with XMDD, {eid: 84955352764}>, <None, {eid: 85051142483}>, <Next generation LearnLib, {eid: 79953206304}>, <Risk-based testing via active continuous quality control, {eid: 84906949366}>, <Towards a DevOps approach for software quality engineering, {eid: 84929084415}>, <Sequential, parallel, and quantified updates of first-order structures, {eid: 33845220119}>, <None, {eid: 85025133176}>, <Unifying models, {eid: 84949683005}>, <Incremental formalization: A key to industrial success, {eid: 33744962473}>, <Model-driven development with the jABC, {eid: 38049113286}>, <Quality engineering: Leveraging heterogeneous information, {eid: 79251567068}>, <The CADE-25 automated theorem proving system competition: CASC-25, {eid: 84969834709}>, <Generating specifications for recursive methods by abstracting program states, {eid: 84951203985}>, <Active continuous quality control, {eid: 84880516456}>, <The ABS tool suite: Modelling, executing and analysing distributed adaptable object-oriented systems, {eid: 84866277516}>",,,Springer Verlag,,,2016-04-24,,,,,,,eng,,Book Series,,,,2-s2.0-85051119701,False,True,False,False
47,,"Sobhy D. (AUID: 55650774800), Minku L. (AUID: 35762343000), Bahsoon R. (AUID: 6508251119), Kazman R. (AUID: 7004264219)",,Continuous and Proactive Software Architecture Evaluation: An IoT Case,2022,ACM Transactions on Software Engineering and Methodology,,,,,,,3,10.1145/3492762,https://www.doi.org/10.1145/3492762,"<Computer Engineering Department, Arab Academy of Science and Technologyand Maritime Transport>, <University of Birmingham>, <FRSA and University of Birmingham>, <SEI/CMU and University of Hawaii>",,"Â© 2022 Copyright held by the owner/author(s). Publication rights licensed to ACM.Design-Time evaluation is essential to build the initial software architecture to be deployed. However, experts' assumptions made at design-Time are unlikely to remain true indefinitely in systems that are characterized by scale, hyperconnectivity, dynamism, and uncertainty in operations (e.g. IoT). Therefore, experts' design-Time decisions can be challenged at run-Time. A continuous architecture evaluation that systematically assesses and intertwines design-Time and run-Time decisions is thus necessary. This paper proposes the first proactive approach to continuous architecture evaluation of the system leveraging the support of simulation. The approach evaluates software architectures by not only tracking their performance over time, but also forecasting their likely future performance through machine learning of simulated instances of the architecture. This enables architects to make cost-effective informed decisions on potential changes to the architecture. We perform an IoT case study to show how machine learning on simulated instances of architecture can fundamentally guide the continuous evaluation process and influence the outcome of architecture decisions. A series of experiments is conducted to demonstrate the applicability and effectiveness of the approach. We also provide the architect with recommendations on how to best benefit from the approach through choice of learners and input parameters, grounded on experimentation and evidence.","Continuous evaluation, IoT, software architecture evaluation, time series forecasting",,,,,,,,"<None, {eid: 85015736776}>, <None, {eid: 85130731390}>, <None, {eid: 85058315734}>, <A quality-driven systematic approach for architecting distributed software applications, {eid: 85084774290}>, <13th AnnualWorldwide Infrastructure Security Report, {eid: 85130689210}>, <ArcheOpterix: An extendable tool for architecture optimization of AADL models, {eid: 70349898605}>, <Software architecture optimization methods: A systematic literature review, {eid: 84877245642}>, <A practical guide for using statistical tests to assess randomized algorithms in software engineering, {eid: 79959871222}>, <Fault tolerance by design diversity: Concepts and experiments, {eid: 0021471901}>, <Basic concepts and taxonomy of dependable and secure computing, {eid: 12344308304}>, <None, {eid: 85130687091}>, <None, {eid: 85130737451}>, <Introduction to runtime verification, {eid: 85042085747}>, <None, {eid: 84943326563}>, <DIVERSIFY: Ecology-inspired software evolution for diversity emergence, {eid: 84898477308}>, <The Palladio component model for model-driven performance prediction, {eid: 55249125447}>, <Scenario-based software architecture reengineering, {eid: 0031681804}>, <Architecture level prediction of software maintenance, {eid: 0032675806}>, <Architecture-level modifiability analysis (ALMA, {eid: 0242636605}>, <Continuous architecting of stream-based systems, {eid: 84983339996}>, <Botnets and Internet of Things security, {eid: 85012917393}>, <MOA: Massive online analysis, {eid: 77953527363}>, <Dioptase: A distributed data streaming middleware for the future Web of Things, {eid: 84916613099}>, <Mobility-Aware application scheduling in fog computing, {eid: 85019246676}>, <Models@ run.Time, {eid: 85008066028}>, <Software economics: A roadmap, {eid: 85013589577}>, <Software architecture: The next step, {eid: 35048903201}>, <The tradeoffs of large scale learning, {eid: 85162035281}>, <Finding knees in multi-objective optimization, {eid: 35048874287}>, <Reliability prediction for fault-Tolerant software architectures, {eid: 79960510679}>, <Radar: A lightweight tool for requirements and architecture decision analysis, {eid: 85027715334}>, <CloudSim: A toolkit for modeling and simulation of cloud computing environments and evaluation of resource provisioning algorithms, {eid: 78650777991}>, <Emerging techniques for the engineering of self-Adaptive high-integrity software, {eid: 84873857495}>, <None, {eid: 84948002011}>, <Models@ runtime to support the iterative and continuous design of autonomic reasoners, {eid: 84924026082}>, <Performance evaluation of IoT protocols under a constrained wireless access network, {eid: 84981309769}>, <None, {eid: 70349716566}>, <None, {eid: 85130763093}>, <Proactive self-Adaptation for improving the reliability of mission-critical, embedded, and mobile software, {eid: 84890048535}>, <Knowledge-Aware and service-oriented middleware for deploying pervasive services, {eid: 84856234010}>, <Internet of Things in industries: A survey, {eid: 84906834039}>, <Software engineering for self-Adaptive systems: A second research roadmap, {eid: 77953794996}>, <A fast and elitist multiobjective genetic algorithm: NSGA-II, {eid: 0036530772}>, <Statistical comparisons of classifiers over multiple data sets, {eid: 29644438050}>, <Learning in nonstationary environments: A survey, {eid: 84945281802}>, <A survey on software architecture analysis methods, {eid: 0036648558}>, <FUSION: A framework for engineering self-Tuning selfadaptive software systems, {eid: 78751536309}>, <Evolutionary search-based test generation for software product line feature models, {eid: 84867835895}>, <Model evolution by run-Time parameter adaptation, {eid: 77949405114}>, <A learning-based framework for engineering featureoriented self-Adaptive software systems, {eid: 84887877241}>, <GuideArch: Guiding the exploration of architectural solution space under uncertainty, {eid: 84881373907}>, <Hyper-heuristic based product selection for software product line testing, {eid: 85018497624}>, <Learning with drift detection, {eid: 33750725544}>, <A survey on concept drift adaptation, {eid: 84901228061}>, <Rainbow: Architecture-based self-Adaptation with reusable infrastructure, {eid: 7244223259}>, <Architecture-based software reliability analysis: Overview and limitations, {eid: 33847737071}>, <Internet of Things (IoT): A vision, architectural elements, and future directions, {eid: 84876943063}>, <Energy-Aware simulation with DVFS, {eid: 84885955130}>, <IFogSim: A toolkit for modeling and simulation of resourcemanagement techniques in the Internet of Things, Edge and Fog computing environments, {eid: 85021248358}>, <None, {eid: 0003522409}>, <Applying design diversity to aspects of system architectures and deployment configurations to enhance system dependability, {eid: 77953599966}>, <None, {eid: 0003890315}>, <None, {eid: 84858197925}>, <Learning model trees from evolving data streams, {eid: 79960103750}>, <Revisiting service-oriented architecture for the IoT: A middleware perspective, {eid: 84989350537}>, <Transfer learning for improving model predictions in highly configurable software, {eid: 85027096954}>, <Software architecture as a set of architectural design decisions, {eid: 33947154413}>, <Defeating denial-of-service attacks in a self-managing N-variant system, {eid: 85071091713}>, <A systematic review of software development cost estimation studies, {eid: 33845788381}>, <Quantifying the costs and benefits of architectural decisions, {eid: 0035009547}>, <Managing energy consumption as an architectural quality attribute, {eid: 85054371600}>, <None, {eid: 0003680794}>, <Reinforcement learning-based dynamic adaptation planning method for architecture-based self-managed software, {eid: 70349912234}>, <Using additive expert ensembles to cope with concept drift, {eid: 31844453033}>, <Sustainability evaluation of software architectures: A systematic review, {eid: 79960500194}>, <A survey on engineering approaches for self-Adaptive systems, {eid: 84924224388}>, <Sparse online learning via truncated gradient, {eid: 64149115569}>, <A brief account of runtime verification, {eid: 67349182373}>, <Fog computing: A taxonomy, survey and future directions, {eid: 85082363829}>, <Architecture-based reliability evaluation under uncertainty, {eid: 79960549877}>, <Efficient decision-making under uncertainty for proactive self-Adaptation, {eid: 84991696841}>, <Comparing model-based predictive approaches to self-Adaptation: CobRA and PLA, {eid: 85027190822}>, <Models@ run.Time to support dynamic adaptation, {eid: 70350345225}>, <Internet of Mobile Things: Mobility-driven challenges, designs and implementations, {eid: 84977621183}>, <None, {eid: 50249186591}>, <Time series forecasting in the presence of concept drift: A PSO-based approach, {eid: 85048476670}>, <None, {eid: 85130762234}>, <Quality-Attribute based economic valuation of architectural patterns, {eid: 36049001458}>, <A survey on transfer learning, {eid: 77956031473}>, <Applying multiobjective evolutionary algorithms to dynamic software product lines for reconfiguring mobile applications, {eid: 84924992041}>, <Guidelines for conducting systematic mapping studies in software engineering: An update, {eid: 84929464206}>, <CPASA: Continuous performance assessment of software architecture, {eid: 77953208614}>, <Mining cross product line rules with multi-objective search and machine learning, {eid: 85026422242}>, <How theWeb of Things challenges requirements engineering, {eid: 84870946121}>, <None, {eid: 0003854577}>, <None, {eid: 85073058562}>, <Stochastic methods for l1-regularized loss minimization, {eid: 79960131832}>, <Scalable prediction of non-functional properties in software product lines: Footprint andmemory consumption, {eid: 84872961131}>, <Diversifying software architecture for sustainability: A value-based perspective, {eid: 84998678860}>, <Run-Time evaluation of architectures: A case study of diversification in IoT, {eid: 85073076930}>, <Systematic literature review of the objectives, techniques, kinds, and architectures of models at runtime, {eid: 84956643403}>, <None, {eid: 70349441583}>, <Using machine learning to infer constraints for product lines, {eid: 84991711490}>, <Reinforcement learning in autonomic computing: A manifesto and case studies, {eid: 33847379922}>, <Design decisions: The bridge between rationale and architecture, {eid: 34547172887}>, <Robust service compositions with functional and location diversity, {eid: 84963891409}>, <Resampling-based ensemble methods for online class imbalance learning, {eid: 84926617955}>, <Quality prediction and assessment for product lines, {eid: 33745311907}>, <ML-KNN: A lazy learning approach to multi-label learning, {eid: 33947681316}>",,,Association for Computing Machinery,,,2022-07-01,,,,,,,eng,,Journal,,,,2-s2.0-85130680776,False,False,False,True
48,,"Bersani M. (AUID: 35730853100), Marconi F. (AUID: 57190818220), Tamburri D. (AUID: 35488974800), Jamshidi P. (AUID: 34880055700), Nodari A. (AUID: 57159803700)",,Continuous architecting of stream-based systems,2016,"13th Working IEEE/IFIP Conference on Software Architecture, WICSA 2016",,,,,,,7,10.1109/WICSA.2016.26,https://www.doi.org/10.1109/WICSA.2016.26,"<Politecnico di Milano>, <Imperial College London>",,"Â© 2016 IEEE.Big data architectures have been gaining momentum in recent years. For instance, Twitter uses stream processing frameworks like Storm to analyse billions of tweets per minute and learn the trending topics. However, architectures that process big data involve many different components interconnected via semantically different connectors making it a difficult task for software architects to refactor the initial designs. As an aid to designers and developers, we developed OSTIA (On-the-fly Static Topology Inference Analysis) that allows: (a) visualising big data architectures for the purpose of design-time refactoring while maintaining constraints that would only be evaluated at later stages such as deployment and run-time, (b) detecting the occurrence of common anti-patterns across big data architectures, (c) exploiting software verification techniques on the elicited architectural models. This paper illustrates OSTIA and evaluates its uses and benefits on three industrial-scale case studies.",,,,,,,,,"<Understandable big data: A survey, {eid: 84940452273}>, <None, {eid: 84877800451}>, <None, {eid: 84983363131}>, <Apache storm, a hands on tutorial, {eid: 85015882046}>, <None, {eid: 84983351626}>, <None, {eid: 84983254945}>, <Organizational social structures for software engineering, {eid: 84887435575}>, <DevOps-A Software Architects Perspective., ser, {eid: 84943326563}>, <Enhancing domain-specific software architecture recovery, {eid: 84979070056}>, <None, {eid: 0141684320}>, <None, {eid: 0004101997}>, <A timed semantics of workflows, {eid: 84951132701}>, <Storm@ twitter, {eid: 84904335699}>, <None, {eid: 84968786582}>, <None, {eid: 84983311041}>, <None, {eid: 0036760615}>, <None, {eid: 84983353329}>, <None, {eid: 84983353341}>, <None, {eid: 0003866308}>, <Beyond the lambda architecture: Effective scheduling for large scale eo information mining and interactive thematic mapping, {eid: 84962530511}>, <None, {eid: 84983260592}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2016-04-05,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-84983339996,False,False,True,False
49,,"Ferry N. (AUID: 35291975700), Nguyen P.H. (AUID: 55646510700), Song H. (AUID: 57195274282), Rios E. (AUID: 14050840000), Iturbe E. (AUID: 56991048200), Martinez S. (AUID: 57214777475), Rego A. (AUID: 57197729847)",,Continuous deployment of trustworthy smart IoT systems,2020,Journal of Object Technology,,,,,,,10,10.5381/jot.2020.19.2.a16,https://www.doi.org/10.5381/jot.2020.19.2.a16,"<SINTEF>, <TECNALIA, Basque Research and Technology Alliance>",,"Â© 2020 Association Internationale pour les Technologies Objets.While the next generation of IoT systems need to perform distributed processing and coordinated behaviour across IoT, Edge and Cloud infrastructures, their development and operation are still challenging. A major challenge is the high heterogeneity of their infrastructure, which broadens the surface for security attacks and increases the complexity of maintaining and evolving such complex systems. In this paper, we present our approach for Generation and Deployment of Smart IoT Systems (GeneSIS) to tame this complexity. GeneSIS leverages model-driven engineering to support the DevSecOps of Smart IoT Systems (SIS). More precisely, GeneSIS includes: (i) a domain specific modelling language to specify the deployment of SIS over IoT, Edge and Cloud infrastructure with the necessary concepts for security and privacy; and (ii) a models@run. time engine to enact the orchestration, deployment, and adaptation of these SIS. The results from our smart building case study have shown that GeneSIS can support security by design from the development (via deployment) to the operation of IoT systems and back again in a DevSecOps loop. In other words, GeneSIS enables IoT systems to keep up security and adapt to evolving conditions and threats while maintaining their trustworthiness.","DecSecOps, Deployment, DSL, IoT, MDE, Models@run. time",,,,,,,,"<Understanding the software communications architecture, {eid: 70350324202}>, <Rearchitecting the UML infrastructure, {eid: 0141796082}>, <None, {eid: 85008066028}>, <A systematic review of cloud modeling languages, {eid: 85042469266}>, <D-lite: Distributed logic for internet of things services, {eid: 84857617841}>, <Software deployment, past, present and future, {eid: 34748846536}>, <Opentosca for iot: Automating the deployment of iot applications based on the mosquitto message broker, {eid: 85000926700}>, <None, {eid: 85067431815}>, <Cloudmf: Model-driven management of multi-cloud applications, {eid: 85041437398}>, <Development and operation of trustworthy smart IoT systems: The ENACT framework, {eid: 85079102926}>, <Genesis: Continuous orchestration and deployment of smart iot systems, {eid: 85072692587}>, <Enact: Development, operation, and quality assurance of trustworthy smart iot systems, {eid: 85061085691}>, <Developing iot applications in the fog: A distributed dataflow approach, {eid: 84962284412}>, <None, {eid: 24344495942}>, <Thingml: A language and code generation framework for heterogeneous targets, {eid: 85008457888}>, <A generic service oriented software platform to design ambient intelligent systems, {eid: 84962524282}>, <Calvin constrained-a framework for iot applications in heterogeneous environments, {eid: 85027276378}>, <Devsecops: A multivocal literature review, {eid: 85029742916}>, <Advances in deployment and orchestration approaches for IoT-a systematic review, {eid: 85072691780}>, <Towards a smart applications development framework, {eid: 85089682565}>, <A conceptual foundation for component-based software deployment, {eid: 0035878887}>",,,Association Internationale pour les Technologies Objets,,,2020-07-01,,,,,,,eng,,Journal,,,,2-s2.0-85089665982,True,False,False,False
50,,"Rinker F. (AUID: 57205417794), Waltersdorfer L. (AUID: 57209322326), Meixner K. (AUID: 57204805351), Winkler D. (AUID: 57210102724), Biffl S. (AUID: 6701704981), LÃ¼der A. (AUID: 9735061200)",,Continuous Integration in Multi-view Modeling: A Model Transformation Pipeline Architecture for Production Systems Engineering,2021,"9th International Conference on Model-Driven Engineering and Software Development, MODELSWARD 2021",,,,,,,0,10.5220/0010309902860293,https://www.doi.org/10.5220/0010309902860293,"<Institute of Information Systems Engineering, TU Wien>, <CDL for Security and Quality Improvement in the Production System Lifecycle, TU Wien>, <Institute of Ergonomics, Manufacturing Systems and Automation OVGU>",,"Â© 2021 by SCITEPRESS â Science and Technology Publications, Lda. All rights reserved.Background. Systems modeling in Production Systems Engineering (PSE) is complex: Multiple views from different disciplines have to be integrated, while semantic differences stemming from various descriptions must be bridged. Aim. This paper proposes the Multi-view Modeling Framework (MvMF) approach and architecture of a model transformation pipeline. The approach aims to ease setup and shorten configuration effort of multi-view modeling operations and support the reusability of modeling environments, like additional view integration. Method. We combine multi-view modeling with principles from distributed, agile workflows, i.e., Git and Continuous Integration. Results. The MvMF provides a light-weight modeling operation environment for AutomationML (AML) models. We show MvMF capabilities and demonstrate the feasibility of MvMF with a demonstrating use case including fundamental model operation features, such as compare and merge. Conclusion. Increasing requirements on the traceability of changes and validation of system designs require improved and extended model transformations and integration mechanisms. The proposed architecture and prototype design represents a first step towards an agile PSE modeling workflow.","Domain-specific Languages, Domain-specific Modeling, Model Transformation, Model-driven Engineering, Multi-disciplinary Engineering, Production Systems Engineering",,,,,,,,"<Preface to the 1st workshop on view-oriented software engineering (vose), {eid: 85075909830}>, <Comparing multi-level modeling approaches, {eid: 84910009313}>, <Aocl: A Pure-Java Constraint and Transformation Language for MDE, {eid: 85173916791}>, <Efficient engineering data exchange in multidisciplinary systems engineering, {eid: 85067342738}>, <Emf views: A view mechanism for integrating heterogeneous models, {eid: 84951747182}>, <An overview of current technologies and emerging trends in factory automation, {eid: 85052118672}>, <Devops, {eid: 84968831988}>, <Managing inter-model inconsistencies in model-based systems engineering: Application in automated production systems engineering, {eid: 85063760990}>, <Stepwise adoption of continuous delivery in model-driven engineering, {eid: 85080701791}>, <Semantic data integration for industry 4.0 standards, {eid: 85050160796}>, <ATL: A model transformation tool, {eid: 45849085734}>, <Supporting the data model integrator in an engineering network by automating data integration, {eid: 85079079722}>, <Assessment of EMF Model to Text Generation Strategies and Libraries in an Industrial Context, {eid: 85173956886}>, <Towards support of global views on common concepts employing local views, {eid: 85074197616}>, <Semantic web technologies for data integration in multidisciplinary engineering, {eid: 85052076728}>, <Low-code as enabler of digital transformation in manufacturing industry, {eid: 85077580109}>, <Combining model-based systems engineering, simulation and domain engineering in the development of industrial automation systems: Industrial case study, {eid: 84936861058}>, <Engineering workflow and software tool chains of automated production systems, {eid: 85044476480}>, <Lowcomote: Training the next generation of experts in scalable low-code engineering platforms, {eid: 85069741151}>, <Presentation of EMF Compare Utility, {eid: 47749101164}>, <Synchronization of projective views on a single-underlying-model, {eid: 84958694825}>, <Experiences with technical debt and management strategies in production systems engineering, {eid: 85093120799}>, <Modeling languages in Industry 4.0: an extended systematic mapping study, {eid: 85074431675}>",,,"Science and Technology Publications, Lda",,,2021-02-08,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85173937662,True,True,False,False
51,,"Beneventi F. (AUID: 50860941600), Bartolini A. (AUID: 57216775622), Benini L. (AUID: 35556997000), Cavazzoni C. (AUID: 6603610421)",,Continuous learning of HPC infrastructure models using big data analytics and in-memory processing tools,2017,"20th Design, Automation and Test in Europe, DATE 2017",,,,,,,49,10.23919/DATE.2017.7927143,https://www.doi.org/10.23919/DATE.2017.7927143,"<Department of Electrical, Electronic and Information Engineering (DEI), University of Bologna>, <Integrated Systems Laboratory, ETH Zurich>, <Cineca>",,"Â© 2017 IEEE.Exascale computing represents the next leap in the HPC race. Reaching this level of performance is subject to several engineering challenges such as energy consumption, equipment-cooling, reliability and massive parallelism. Model-based optimization is an essential tool in the design process and control of energy efficient, reliable and thermally constrained systems. However, in the Exascale domain, model learning techniques tailored to the specific supercomputer require real measurements and must therefore handle and analyze a massive amount of data coming from the HPC monitoring infrastructure. This becomes rapidly a 'big data' scale problem. The common approach where measurements are first stored in large databases and then processed is no more affordable due to the increasingly storage costs and lack of real-time support. Nowadays instead, cloud-based machine learning techniques aim to build on-line models using real-time approaches such as 'stream processing' and 'in-memory' computing, that avoid storage costs and enable fastdata processing. Moreover, the fast delivery and adaptation of the models to the quick data variations, make the decision stage of the optimization loop more effective and reliable. In this paper we leverage scalable, lightweight and flexible IoT technologies, such as the MQTT protocol, to build a highly scalable HPC monitoring infrastructure able to handle the massive sensor data produced by next-gen HPC components. We then show how state-of-the art tools for big data computing and analysis, such as Apache Spark, can be used to manage the huge amount of data delivered by the monitoring layer and to build adaptive models in real-time using on-line machine learning techniques.",,,,,,,,,"<None, {eid: 84055195466}>, <Energy-aware performance analysis methodologies for HPC architectures: An exploratory study, {eid: 84867558905}>, <None, {eid: 84977561627}>, <Fault tolerance in petascale/exascale systems: Current knowledge, {eid: 68249127079}>, <Energyaware cooling for hot-water cooled supercomputers, {eid: 84944594636}>, <The International Exascale Software Project roadmap, {eid: 79951595196}>, <Understandable big data: A survey, {eid: 84940452273}>, <Correlation analysis of mqtt loss and delay according to qos level, {eid: 84876781830}>, <None, {eid: 84903709403}>, <The ganglia distributed monitoring system: Design, implementation, and experience, {eid: 3342966061}>, <Open source initiatives and frameworks addressing distributed real-time data analytics, {eid: 84991677313}>, <Maximizing throughput of overprovisioned HPC data centers under a strict power budget, {eid: 84936949338}>, <Exascale computing technology challenges, {eid: 79952579787}>, <Whitelisting msrs with msr-safe, {eid: 84966583761}>, <Monitoring power data: A first step towards a unified energy efficiency evaluation toolset for HPC data centers, {eid: 84901290949}>, <Towards data-driven autonomics in data centers, {eid: 84962127890}>, <Resilient distributed datasets: A fault-tolerant abstraction for in-memory cluster computing, {eid: 85040175609}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2017-03-27,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85020177368,True,False,True,False
52,,"Nakagawa E.Y. (AUID: 7007008701), Antonino P.O. (AUID: 36619591600), Schnicke F. (AUID: 57209138657), Kuhn T. (AUID: 7101840137), Liggesmeyer P. (AUID: 14519582400)",,Continuous Systems and Software Engineering for Industry 4.0: A disruptive view,2021,Information and Software Technology,,,,,,,15,10.1016/j.infsof.2021.106562,https://www.doi.org/10.1016/j.infsof.2021.106562,"<University of SÃ£o Paulo, SÃ£o Carlos>, <Fraunhofer IESE, Kaiserslautern>",,"Â© 2021 Elsevier B.V.Context: Industry 4.0 has substantially changed the manufacturing processes, leading to smart factories with full digitalization, intelligence, and dynamic production. The need for rigorous and continuous development of highly networked software-intensive Industry 4.0 systems entails great challenges. Hence, Industry 4.0 requires new ways to develop, operate, and evolve these systems accordingly. Objective: We introduce the view of Continuous Systems and Software Engineering for Industry 4.0 (CSSE I4.0). Method: Based on our research and industrial projects, we propose this novel view and its core elements, including continuous twinning, which is also introduced first in this paper. We also discuss the existing industrial engagement and research that could leverage this view for practical application. Results: There are still several open issues, so we highlight the most urgent perspectives for future work. Conclusions: A disruptive view on how to engineer Industry 4.0 systems must be established to pave the way for the realization of the fourth industrial revolution.","Continuous Software Engineering, Continuous Systems and Software Engineering, Industry 4.0",,,,,,,,"<Continuous software engineering: A roadmap and agenda, {eid: 84937109068, doi: 10.1016/j.jss.2015.06.063}>, <Industrie 4.0 virtual automation bus, {eid: 85049697893, doi: 10.1145/3183440.3195065}>, <Digital twin in manufacturing: A categorical literature review and classification, {eid: 85052915281, doi: 10.1016/j.ifacol.2018.08.474}>, <Reference architecture and product line architecture: A subtle but critical difference, {eid: 80053176890, doi: 10.1007/978-3-642-23798-0Ë22}>, <Dimensions of digital twin applications - a literature review, {eid: 85084019743}>, <Digital twin in industry: State-of-the-art, {eid: 85054374767, doi: 10.1109/TII.2018.2873186}>, <Digital twin reference model development to prevent operatorsâ risk in process plants, {eid: 85081226177, doi: 10.3390/su12031088}>, <Digital twin-based cyber physical production system architectural framework for personalized production, {eid: 85076628276, doi: 10.1007/s00170-019-04653-7}>, <Enabling continuous software engineering for embedded systems architectures with virtual prototypes, {eid: 85057277198, doi: 10.1007/978-3-030-00761-4Ë8}>, <Simulation in Industry 4.0: A state-of-the-art review, {eid: 85091194972, doi: 10.1016/j.cie.2020.106868}>, <Intelligent manufacturing in the context of industry 4.0: A review, {eid: 85040743821, doi: 10.1016/J.ENG.2017.05.015}>",,,Elsevier B.V.,,,2021-07-01,,,,,,,eng,,Journal,,,,2-s2.0-85101936938,True,False,False,False
53,,"Nguyen P.T. (AUID: 57209915714), Di Ruscio D. (AUID: 57201633392), Pierantonio A. (AUID: 15064742800), Di Rocco J. (AUID: 55877197500), Iovino L. (AUID: 36961136600)",,Convolutional neural networks for enhanced classification mechanisms of metamodels,2021,Journal of Systems and Software,,,,,,,23,10.1016/j.jss.2020.110860,https://www.doi.org/10.1016/j.jss.2020.110860,"<UniversitÃ  degli studi dellAquila>, <Gran Sasso Science Institute>",,"Â© 2020 Elsevier Inc.Conventional wisdom on Model-Driven Engineering suggests that metamodels are crucial elements for modeling environments consisting of graphical editors, transformations, code generators, and analysis tools. Software repositories are commonly used in practice for locating existing artifacts provided that a classification procedure is available. However, the manual classification of metamodel in repositories produces results that are influenced by the subjectivity of human perception besides being tedious and prone to errors. Therefore, automated techniques for classifying metamodels stored in repositories are highly desirable and stringent. In this work, we propose MEMOCNN as a novel approach to classification of metamodels. In particular, we consider metamodels as data points and classify them using supervised learning techniques. A convolutional neural network has been built to learn from labeled data, and use the trained weights to group unlabeled metamodels. A comprehensive experimental evaluation proves that the proposal effectively categorizes input data and outperforms a state-of-the-art baseline.",,,,,,,,,"<Survey on multiclass classification methods, {eid: 84880565628}>, <Convolutional neural networks for classification of alignments of non-coding RNA sequences, {eid: 85050806688, doi: 10.1093/bioinformatics/bty228}>, <A labeled ecore metamodel dataset for domain clustering, {eid: 85076082027, doi: 10.5281/zenodo.2585456}>, <AMMoRe 2018: First international workshop on analytics and mining of model repositories, {eid: 85063109105}>, <Using n-grams for the automated clustering of structural models, {eid: 85010689255}>, <Hierarchical clustering of metamodels for comparative analysis and visualization, {eid: 84977499772}>, <Automatic model repair using reinforcement learning, {eid: 85063099879}>, <Personalized and automatic model repairing using reinforcement learning, {eid: 85075917035}>, <Automated clustering of metamodel repositories, {eid: 84976614553}>, <Analysis methods in neural language processing: A survey, {eid: 85150632897, doi: 10.1162/tacl_a_00254}>, <A classification of stereotypes for object-oriented modeling languages, {eid: 78049335165}>, <Selecting Representative Data Sets, {eid: 84884901728}>, <A suite of metamodels as a basis for a classification of visual languages, {eid: 16244390554, doi: 10.1109/VLHCC.2004.5}>, <None, {eid: 85096089841}>, <An LSTM-based neural network architecture for model transformations, {eid: 85076107429, doi: 10.1109/MODELS.2019.00013}>, <Automated classification of web documents into a hierarchy of categories, {eid: 33745765401}>, <The relationship between precision-recall and ROC curves, {eid: 34250727580, doi: 10.1145/1143844.1143874}>, <Collaborative repositories in model-driven engineering software technology, {eid: 84928652460}>, <None, {eid: 79951904922}>, <A few useful things to know about machine learning, {eid: 84867539048, doi: 10.1145/2347736.2347755}>, <A comparison study between MLP and convolutional neural network models for character recognition, {eid: 85022055406, doi: 10.1117/12.2262589}>, <Automated fruit recognition using EfficientNet and MixNet, {eid: 85081045019, doi: 10.1016/j.compag.2020.105326}>, <An introduction to ROC analysis, {eid: 33646023117, doi: 10.1016/j.patrec.2005.10.010}>, <Olive fruits recognition using neural networks. First International Conference on Information Technology and Quantitative Management, {eid: 84898749336, doi: 10.1016/j.procs.2013.05.053}>, <Modeling deep reinforcement learning based architectures for cyber-physical systems, {eid: 85075937600}>, <Deep Learning, {eid: 84944735469}>, <Comparing automated text classification methods, {eid: 85055277517}>, <Automatic classification of images on the web, {eid: 0036030193, doi: 10.1117/12.451108}>, <Meta-modelling meta-learning, {eid: 85076083013, doi: 10.1109/MODELS.2019.00014}>, <None, {eid: 84986274465}>, <None, {eid: 74549141750}>, <Long short-term memory, {eid: 0031573117, doi: 10.1162/neco.1997.9.8.1735}>, <Transfer learning with deep convolutional neural network for SAR target classification with limited labeled data, {eid: 85029395781, doi: 10.3390/rs9090907}>, <On the classification of umls meta model extension mechanism, {eid: 35048816548}>, <Feature scaling in support vector data description, {eid: 80051595965}>, <None, {eid: 84925010640}>, <Deep visual-semantic alignments for generating image descriptions, {eid: 85015724750, doi: 10.1109/TPAMI.2016.2598339}>, <Convolutional neural networks for sentence classification, {eid: 84961376850, doi: 10.3115/v1/D14-1181}>, <Adam: A method for stochastic optimization, {eid: 85083951076}>, <EMFStore: A model repository for EMF models, {eid: 77954724460}>, <A study of cross-validation and bootstrap for accuracy estimation and model selection, {eid: 85164392958}>, <Machine learning: A review of classification and combining techniques, {eid: 38349031393, doi: 10.1007/s10462-007-9052-3}>, <Imagenet classification with deep convolutional neural networks, {eid: 84876231242}>, <Modeling and training of neural processing systems, {eid: 85075936455}>, <Bizycle: Model-based interoperability platform for software and data integration, {eid: 84911353560}>, <DÃ©jÃ Vu: A map of code duplicates on GitHub, {eid: 85120100525}>, <None, {eid: 85096088637}>, <Speech recognition using deep neural networks: A systematic review, {eid: 85062220151}>, <Automated classification of metamodel repositories: A machine learning approach, {eid: 85076112592, doi: 10.1109/MODELS.2019.00011}>, <Detecting object affordances with convolutional neural networks, {eid: 85006448751, doi: 10.1109/IROS.2016.7759429}>, <None, {eid: 85057193658}>, <An algorithm for suffix stripping, {eid: 84948481845}>, <The use of machine learning algorithms in recommender systems: A systematic review, {eid: 85096125608}>, <Deep convolutional neural networks for image classification: A comprehensive review, {eid: 85031680076, doi: 10.1162/neco_a_00990}>, <CNN features off-the-shelf: An astounding baseline for recognition, {eid: 84906506420}>, <Finding reusable UML sequence diagrams automatically, {eid: 4644334029, doi: 10.1109/MS.2004.1331304}>, <ImageNet large scale visual recognition challenge, {eid: 84947041871, doi: 10.1007/s11263-015-0816-y}>, <Guest editors introduction: Model-driven engineering, {eid: 33344465743, doi: 10.1109/MC.2006.58}>, <Machine learning in automated text categorization, {eid: 0002442796, doi: 10.1145/505282.505283}>, <Survey on neural networks used for medical image processing, {eid: 85008165061}>, <Dropout: A simple way to prevent neural networks from overfitting, {eid: 84904163933}>, <Deep learning for biometrics: A survey, {eid: 85051431484, doi: 10.1145/3190618}>, <EfficientNet: Rethinking model scaling for convolutional neural networks, {eid: 85074857178}>, <MixConv: Mixed depthwise convolutional kernels, {eid: 85082504513}>, <A survey of transfer learning, {eid: 85013880960, doi: 10.1186/s40537-016-0043-6}>, <Toward deep learning software repositories, {eid: 84957063236}>, <Machine learning in manufacturing: Advantages, challenges, and applications, {eid: 84995968996, doi: 10.1080/21693277.2016.1192517}>, <Convolutional neural networks: An overview and application in radiology, {eid: 85052299105, doi: 10.1007/s13244-018-0639-9}>, <Neural networks for classification: A survey, {eid: 0034313673}>, <Generalized cross entropy loss for training deep neural networks with noisy labels, {eid: 85062572898}>, <Object detection with deep learning: A review, {eid: 85060944960, doi: 10.1109/TNNLS.2018.2876865}>",,,Elsevier Inc.,,,2021-02-01,,,,,,,eng,,Journal,,,,2-s2.0-85096121119,True,False,True,False
54,,"Prado Lima J.A. (AUID: 57191879945), MendonÃ§a W.D.F. (AUID: 57204423179), Vergilio S.R. (AUID: 6506290092), AssunÃ§Ã£o W.K.G. (AUID: 37361009900)",,Cost-effective learning-based strategies for test case prioritization in continuous integration of highly-configurable software,2022,Empirical Software Engineering,,,,,,,0,10.1007/s10664-021-10093-3,https://www.doi.org/10.1007/s10664-021-10093-3,"<DINF, Federal University of ParanÃ¡ (UFPR)>, <Pontifical Catholic University of Rio de Janeiro (PUC-Rio)>",,"Â© 2022, The Author(s), under exclusive licence to Springer Science+Business Media, LLC, part of Springer Nature.Highly-Configurable Software (HCSs) testing is usually costly, as a significant number of variants need to be tested. This becomes more problematic when Continuous Integration (CI) practices are adopted. CI leads the software to be integrated and tested multiple times a day, subject to time constraints (budgets). To address CI challenges, a learning-based test case prioritization approach named COLEMAN has been successfully applied. COLEMAN deals with test case volatility, in which some test cases can be included/removed over the CI cycles. Nevertheless, such an approach does not consider HCS particularities such as, by analogy, the volatility of variants. Given such a context, this work introduces two strategies for applying COLEMAN in the CI of HCS: the Variant Test Set Strategy (VTS) that relies on the test set specific for each variant; and the Whole Test Set Strategy (WST) that prioritizes the test set composed by the union of the test cases of all variants. Both strategies are applied to two real-world HCSs, considering three test budgets. Independently of the time budget, the proposed strategies using COLEMAN have the best performance in comparison with solutions generated randomly and by another learning approach from the literature. Moreover, COLEMAN produces, in more than 92% of the cases, reasonable solutions that are near to the optimal solutions obtained by a deterministic approach. Both strategies spend less than one second to execute. WTS provides better results in the less restrictive budgets, and VTS the opposite. WTS seems to better mitigate the problem of beginning without knowledge, and is more suitable when a new variant to be tested is added.","Continuous integration, Highly-configurable software, Software product line, Test case prioritization",,,,,,,,"<Delta-oriented product prioritization for similarity-based product-line testing, {eid: 85027114086}>, <A practical guide for using statistical tests to assess randomized algorithms in software engineering, {eid: 79959871222}>, <Learning-to-rank vs ranking-to-learn: Strategies for regression testing in continuous integration, {eid: 85094318353}>, <None, {eid: 84961347393}>, <History-Based Test Case Prioritization for Failure Information, {eid: 85018510656}>, <A review of ten years of the symposium on search-based software engineering, {eid: 85072863599}>, <None, {eid: 0003414693}>, <An empirical study of the effect of time constraints on the cost-benefits of regression testing, {eid: 77950490739}>, <Continuous integration: Improving software quality and reducing risk, {eid: 84942757453}>, <Techniques for improving regression testing in continuous integration development environments, {eid: 84986877429}>, <Regression test selection and product line system testing, {eid: 77954527991}>, <Goal-oriented test case selection and prioritization for product line feature models, {eid: 80051528149}>, <Validation of constraints among configuration parameters using search-based combinatorial interaction testing, {eid: 84989813040}>, <Test prioritization in continuous integration environments, {eid: 85053760573, doi: 10.1016/j.jss.2018.08.061}>, <Automating system test case classification and prioritization for use case-driven testing in product lines, {eid: 85089602675}>, <Automated code-based test selection for software product line regression testing, {eid: 85072228048, doi: 10.1016/j.jss.2019.110419}>, <Rajkumar: Test case prioritization techniques for software product line: A survey, {eid: 85011114125}>, <Risk-based integration testing of software product lines, {eid: 85014902435}>, <Delta-oriented test case prioritization for integration testing of software product lines, {eid: 84982811054}>, <Adaptive operator selection with bandits for a multiobjective evolutionary algorithm based on decomposition, {eid: 84893865972}>, <Retest test selection for product-line regression testing of variants and versions of variants, {eid: 85054466985}>, <Incremental model-based testing of delta-oriented software product lines, {eid: 84862204405}>, <On a test of whether one of two random variables is stochastically larger than the other, {eid: 0002322469}>, <Multi-perspective regression test prioritization for time-constrained environments, {eid: 84962091042}>, <A learning algorithm for optimizing continuous integration development and testing practice, {eid: 85056634616}>, <A learning algorithm for optimizing continuous integration development and testing practice, {eid: 85056634616}>, <Test case prioritization for continuous regression testing: An industrial case study, {eid: 84891715780}>, <Test prioritization with optimally balanced configuration coverage, {eid: 85019254116}>, <Titan: Test suite optimization for highly configurable software, {eid: 85020723577}>, <A comparison of 10 sampling algorithms for configurable systems, {eid: 84971414235}>, <Discipline matters: Refactoring of preprocessor directives in the #ifdef hell, {eid: 85047010689}>, <Tackling combinatorial explosion: A study of industrial needs and practices for analyzing highly configurable systems, {eid: 85056534298}>, <On the evolution of feature dependencies: An exploratory study of preprocessor-based systems, {eid: 85123042832}>, <Stability of Product-Line Sampling in Continuous Integration. In: 15th international Conference on Variability Modelling of Software-Intensive Systems, VaMoSâ21, {eid: 85101085031}>, <Supplementary material - cost-effective learning-based strategies for test case prioritization in continuous integration of highly-configurable software, {eid: 85134588940}>, <Learning-based prioritization of test cases in continuous integration of highly-configurable software, {eid: 85104760635}>, <A multi-armed bandit approach for test case prioritization in continuous integration environments, {eid: 85097839526}>, <Multi-armed bandit test case prioritization in continuous integration environments: A trade-off analysis, {eid: 85134619248}>, <Test case prioritization in continuous integration environments: A systematic mapping study, {eid: 85078708254, doi: 10.1016/j.infsof.2020.106268}>, <Combinatorial interaction regression testing: A study of test case generation and prioritization, {eid: 47349111813}>, <System testing a scientific framework using a regression-test environment, {eid: 84858269563}>, <Design and rationale of a quality assurance process for a scientific framework, {eid: 84886704128}>, <None, {eid: 84893549814}>, <Improving regression testing in continuous integration development environments (Keynote), {eid: 85097820077}>, <Test case prioritization: An empirical study, {eid: 0033326792}>, <Chapter 7 - regression testing in software product line engineering, {eid: 84864138160}>, <Continuous integration, delivery and deployment: A systematic review on approaches, tools, challenges and practices, {eid: 85019140530}>, <Reinforcement Learning for Automatic Test Case Prioritization and Selection in Continuous Integration, {eid: 85026639599}>, <A critique and improvement of the cl common language effect size statistics of mcgraw and wong, {eid: 0034411339}>, <Exploration and exploitation in evolutionary algorithms: A survey, {eid: 84880120844, doi: 10.1145/2480741.2480752}>, <Presence-condition simplification in highly configurable systems, {eid: 84939514440}>, <Cost-effective test suite minimization in product lines using search techniques, {eid: 84924958712, doi: 10.1016/j.jss.2014.08.024}>, <A systematic test case selection methodology for product lines: results and insights from an industrial case study, {eid: 84918502049}>, <A study of regression test selection in continuous integration environments, {eid: 85059631520}>, <None, {eid: 0003639957}>, <Continuous test suite augmentation in software product lines, {eid: 84883894472}>, <Regression testing minimization, selection and prioritization: A survey, {eid: 84857550008, doi: 10.1002/stvr.430}>, <Beating random test case prioritization, {eid: 85110627843, doi: 10.1109/TR.2020.2979815}>",,,Springer,,,2022-11-01,,,,,,,eng,,Journal,,,,2-s2.0-85134618992,False,False,False,False
55,,"Rademacher F. (AUID: 57015087900), Sachweh S. (AUID: 54912166300), Zundorf A. (AUID: 56000503100)",,Deriving Microservice Code from Underspecified Domain Models Using DevOps-Enabled Modeling Languages and Model Transformations,2020,"46th Euromicro Conference on Software Engineering and Advanced Applications, SEAA 2020",,,,,,,10,10.1109/SEAA51224.2020.00047,https://www.doi.org/10.1109/SEAA51224.2020.00047,"<University of Applied Sciences and Arts Dortmund, IDiAL Institute>, <University of Kassel, Department of Computer Science and Electrical Engineering>",,"Â© 2020 IEEE.Domain-driven Design (DDD) is a model-based software design methodology, which focuses on close collaboration of domain experts and software engineers. It promotes to capture relevant domain concepts in domain models in order to define a ubiquitous language, whose terms are well understood by stakeholders and consistently used throughout the software engineering process. DDD is considered particularly useful in Microservice Architecture (MSA) engineering, because it specifies patterns to structure modeled domain concepts in isolated contexts. These contexts determine concepts' applicability and validity, and make relationships between domain concepts beyond context boundaries explicit. Consequently, DDD contexts may be used to prescribe microservices' granularities and interaction relationships. However, domain models are usually underspecified, which facilitates communication with domain experts, but hampers the derivation of microservice code.In this paper, we present a model-driven methodology towards deriving microservice code from underspecified domain models. It relies on a set of viewpoint-based MSA modeling languages, which respect the concerns of DevOps teams, and a set of automatic model transformations, which decrease modeling effort and systematize source code derivation. We validate the applicability of our methodology by means of two case studies.","Modeling of computer architecture, Services Architectures, Services Engineering",,,,,,,,"<None, {eid: 84950338538}>, <None, {eid: 2942742234}>, <None, {eid: 85010410859}>, <A pattern language for scalable microservices-based systems, {eid: 85055721495}>, <Microservices: Yesterday, today, and tomorrow, {eid: 85054938535}>, <Microservices in industry: Insights into technologies, characteristics, and software quality, {eid: 85066486037}>, <Challenges of domaindriven microservice design: A model-driven perspective, {eid: 85046890847}>, <Linking modeldriven development and software architecture: A case study, {eid: 60449116881}>, <Microservice ambients: An architectural meta-modelling approach for microservice granularity, {eid: 85021456926}>, <None, {eid: 84878326137}>, <Towards a uml profile for domain-driven design of microservice architectures, {eid: 85042075507}>, <Graphical and textual model-driven microservice development, {eid: 85086303989}>, <Aspect-oriented modeling of technology heterogeneity in microservice architecture, {eid: 85065789976}>, <Integration of handwritten and generated object-oriented code, {eid: 84955263298}>, <Systems and software engineering-architecture description, {eid: 72349086391}>, <Microservices architecture enables devops: Migration to a cloud-native architecture, {eid: 84968796741}>, <Continuous architecting with microservices and devops: A systematic mapping study, {eid: 85071500372}>, <Generative software module development for domain-driven design with annotation-based domain specific language, {eid: 85076243410}>, <Rapid realization of executable domain models via automatic code generation, {eid: 85049258166}>, <Development and evaluation of microbuilder: A model-driven tool for the specification of rest microservice software architectures, {eid: 85044973439}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2020-08-26,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85096547404,True,True,False,False
56,,"Mendoza C. (AUID: 57215292506), Garces K. (AUID: 35113054600), Casallas R. (AUID: 15064114500), Bocanegra J. (AUID: 41661082200)",,Detecting architectural issues during the continuous integration pipeline,2019,"22nd ACM/IEEE International Conference on Model Driven Engineering Languages and Systems Companion, MODELS-C 2019",,,,,,,2,10.1109/MODELS-C.2019.00090,https://www.doi.org/10.1109/MODELS-C.2019.00090,"<Department of Systems and Computing Engineering, School of Engineering, Universidad de Los Andes>",,"Â© 2019 IEEE.The use of a software reference architecture limits possible deviations and errors in the implementation of software projects, as the code must follow predefined rules that developers must respect to guarantee quality. However, when introducing new code to projects these rules can be violated. As a result, architectural erosion, bad smells, or even bugs that can be difficult to find are introduced to the projects. This paper proposes an approach for reviewing compliance to predefined rules that map architectural decisions to code. During the continuous integration process, the automatic analysis raises an issue for each rule violation. Developers can analyze and correct issues, and trace/visualize improvements, or lack thereof, through time. We present a validation experiment carried out in the context of a Software Development course, and we show how the approach helps developers to write better code.","Architectural rules, Continuous integration, Issue identification, Issue visualization, Rule violation",,,,,,,,"<Architectural bad smells in software product lines, {eid: 84904549333, doi: 10.1145/2578128.2578237}>, <None, {eid: 84889956825}>, <Software architecture in practice, {eid: 0004025223, doi: 10.1024/0301-1526.32.1.54}>, <An architectural smells detection tool for c and c++ projects, {eid: 85057141088}>, <Teaching clean code, {eid: 85044541080}>, <None, {eid: 0004061016}>, <A method for detecting bad smells and ITS application to software engineering education, {eid: 84918555406, doi: 10.1109/IIAI-AAI.2014.139}>, <Software architecture as A set of architectural design decisions, {eid: 33947154413}>, <Spotting the phenomenon of bad smells in MobileMedia product line architecture, {eid: 84908611568, doi: 10.1109/IC3.2014.6897200}>, <A comparison of static architecture compliance checking approaches, {eid: 34547169524}>, <Benefits and drawbacks of reference architectures, {eid: 84879860179, doi: 10.1007/978-3-642-39031-926}>, <Restructure101 for Java, {eid: 85080327241}>, <Software architecture: Foundations, theory, and practice, {eid: 77954720414, doi: 10.1145/1810295.1810435}>, <None, {eid: 33751002702}>, <Code smell analyzer: A tool to teaching support of refactoring techniques source code, {eid: 84963951626, doi: 10.1109/TLA.2016.7437235}>, <Recommending refactorings to reverse software architecture erosion, {eid: 84860503189}>, <How to improve code quality by measurement and refactoring, {eid: 85013761756, doi: 10.1109/QUATIC.2016.034}>, <Characterization and automatic detection of bad smells MVC, {eid: 85049189336, doi: 10.17013/risti.26.54-67}>, <Towards detecting MVC architectural smells, {eid: 85032694896, doi: 10.1007/978-3-319-69341-523}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2019-09-15,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85075921993,True,False,False,False
57,,"Munk P. (AUID: 57188765553), Schweizer M. (AUID: 57203943448)",,DevOps and Safety? SafeOps! Towards Ensuring Safety in Feature-Driven Development with Frequent Releases,2022,"Workshops on DECSoS, DepDevOps, SASSUR, SENSEI, USDAI, and WAISE, held in conjunction with the 41st International Conference on Computer Safety, Reliability, and Security, SAFECOMP 2022",,,,,,,0,10.1007/978-3-031-14862-0_11,https://www.doi.org/10.1007/978-3-031-14862-0_11,<Robert Bosch GmbH>,,"Â© 2022, The Author(s), under exclusive license to Springer Nature Switzerland AG.The increasing importance of software and rising level of connectivity of safety-critical products such as vehicles enable continuously improving and adding the functionality. DevOps development principles support such kind of continuous deployment. However, safety-critical products shall fulfill safety standards. In addition, it is impossible to show that a new or updated functionality is safe without considering the entire system. We introduce the SafeOps approach that leverages the DevOps principles automation, feature-driven development, and monitoring during operations to fulfill the requirements of the ISO 26262 when iteratively extending and improving safety-critical products. We present concepts and existing approaches to increase the level of automation of safety engineering tasks like safety analysis and generation of safety artifacts and we show how the management of these artifacts can be supported. Furthermore, we outline future research questions and propose a first concept to obtain quick and systematic feedback of the quality of the safety concept from the deployed products, enabling to enter the DevOps cycle from a safety point of view.","Agile, CD, Dependability, FMEA, FTA, MBSA, MBSE",,,,,,,,"<A structured and model-based hazard analysis and risk assessment method for automotive systemsâa disruptive study, {eid: 84992052014}>, <None, {eid: 85139011079}>, <Software trace-ability: Trends and future directions, {eid: 84908645050}>, <SafeOps: A concept of continuous safety, {eid: 85097175002}>, <Realization of a model-based DevOps process for industrial safety critical cyber physical systems, {eid: 85112350140}>, <Runtime verification monitoring for automotive embedded systems using the ISO 26262 Functional Safety Standard as a guide for the definition of the monitored properties, {eid: 84910654721}>, <None, {eid: 85061801235}>, <What is DevOps? A systematic mapping study on definitions and practices, {eid: 85101950847}>, <A proposal for model-based safety analysis, {eid: 33746265011}>, <A new component concept for fault trees, {eid: 24344487791}>, <Advances in component fault trees, {eid: 85056848167}>, <None, {eid: 80052110935}>, <Model-based safety assessment with SysML and component fault trees: Application and lessons learned, {eid: 85080047812}>, <None, {eid: 85139045442}>, <None, {eid: 0037680682}>, <Analysis and synthesis of the behaviour of complex programmable electronic systems in conditions of failure, {eid: 0035283779}>, <None, {eid: 84955687505}>, <A model-driven approach for dependent failure analysis in consideration of multicore processors using modified EAST-ADL, {eid: 85018375157}>, <FASTEN: An extensible platform to experiment with rigorous modeling of safety-critical systems, {eid: 85122621736}>, <None, {eid: 85139053380}>, <None, {eid: 85139041783}>, <Keeping continuous deliveries safe, {eid: 85026752449}>, <Towards continuous safety assessment in context of DevOps, {eid: 85115199750}>",,,Springer Science and Business Media Deutschland GmbH,,,2022-09-06,,,,,,,eng,,Book Series,,,,2-s2.0-85139059524,False,True,True,False
58,,"Lopez-Pena M.A. (AUID: 57217736195), Humanes H. (AUID: 57197750696), Diaz J. (AUID: 35092351500), Perez J.E. (AUID: 57218886032)",,DevOps for IoT Systems: Fast and Continuous Monitoring Feedback of System Availability,2020,IEEE Internet of Things Journal,,,,,,,26,10.1109/JIOT.2020.3012763,https://www.doi.org/10.1109/JIOT.2020.3012763,"<Department of Innovation and Development, Sistemas Avanzados de TecnologÃ­a, S.A.>, <Department of Sistemas InformÃ¡ticos, Universidad PolitÃ©cnica de Madrid>",,"Â© 2014 IEEE.Current Internet-of-Things (IoT) systems are highly distributed systems, which integrate cloud, fog, and edge computing approaches. Accelerating their maintenance and continuous improvement, while ensuring their availability, is complex. DevOps promotes fast and continuous feedback from operations to development to detect problems before customers are impacted, among other benefits. However, there is not any formal definition of how to do this. This article defines the 'fast and continuous monitoring feedback of system availability' activity (FCF availability) that supports automatic and continuous monitoring feedback from operations to the development of the IoT system availability. This activity has been formalized through the software and systems process engineering metamodel (SPEM). Its implementation is demonstrated in a real scenario that provides evidence that the formalization of the FCF availability activity helps teams in better diagnosing and fixing outage problems. The result is a distributed and configurable monitoring component developed through code [monitoring as code (MaC)]. This component is embedded in the IoT infrastructure. MaC enables DevOps team to configure their own metrics and indicators at runtime, i.e., monitoring on demand. The formalization of this activity, based on an MaC technique, enables the automation, versioning, and replication of monitoring elements.","Availability, continuous monitoring, DevOps, fast and continuous feedback activity, Internet-of-Things (IoT) systems",,,,,,,,"<Understanding the Internet of Things: Definition, potentials, and societal role of a fast evolving paradigm, {eid: 85009285034}>, <Introduction to the internet of things, {eid: 84956476081, doi: 10.1007/978-3-642-40403-0}>, <Cyber physical systems: Design challenges, {eid: 49649119406}>, <None, {eid: 85173029256}>, <Current and future challenges of software engineering for services and applications, {eid: 84998698759}>, <Relationship of DevOps to agile, lean and continuous deployment, {eid: 84999040028}>, <An exploratory study of DevOps extending the dimensions of DevOps with practices, {eid: 84998881112}>, <Towards definitions for release engineering and DevOps, {eid: 84962216125}>, <None, {eid: 85018529770}>, <Towards DevOps in the embedded systems domain: Why is it so hard?, {eid: 84975460866}>, <Agile processes: Challenges and strategies for undertaking continuous experimentation to embedded systems: Industry and research perspectives, {eid: 85048052155}>, <None, {eid: 77949517037}>, <A qualitative study of DevOps usage in practice, {eid: 85021358087}>, <Introduction to the minitrack on IT governance and its mechanisms, {eid: 85060475722}>, <None, {eid: 85073237331}>, <None, {eid: 84903828209}>, <A survey of commercial frameworks for the Internet of Things, {eid: 84952907595}>, <A survey of IoT cloud platforms, {eid: 85033708211}>, <None, {eid: 85092728057}>, <None, {eid: 84963757817}>, <None, {eid: 84958964990}>, <Fog computing and its role in the Internet of Things characterization of fog computing, {eid: 84866627419}>, <Future Internet: The Internet of Things architecture, possible applications and key challenges, {eid: 84874174122}>, <Fog computing: Platform and applications, {eid: 84969509112}>, <IFCIoT: Integrated fog cloud IoT: A novel architectural paradigm for the future Internet of Things, {eid: 85021058978}>, <INDICES: Exploiting edge resources for performanceaware cloud-hosted services, {eid: 85027465225}>, <Agile infrastructure and operations: How infra-gile are you?, {eid: 52949150488}>, <Toward unified DevOps model, {eid: 84958247265}>, <Key affordances of platform- asa-service: Self-organization and continuous feedback, {eid: 85055527652}>, <Microservices architecture enables DevOps: Migration to a cloud-native architecture, {eid: 84968796741}>, <Selfservice cybersecurity monitoring as enabler for DevSecOps, {eid: 85084859519}>, <ENACT: Development, operation, and quality assurance of trustworthy smart IoT systems, {eid: 85092710058}>, <DevOps for IoT applications using cellular networks and cloud, {eid: 84992036313}>, <Enabling operation data visibility for SmartX-MINI IoT-cloud playground, {eid: 84979996132}>, <Automated deployment of SmartX IoTcloud services based on continuous integration, {eid: 85015804380}>, <Cloud ecosystems support for Internet of Things and DevOps using patterns, {eid: 84977609466}>, <None, {eid: 85092739167}>, <Reliability and availability evaluation of wireless sensor networks for industrial applications, {eid: 84856247989}>, <None, {eid: 0003673547}>, <A documentation framework for architecture decisions, {eid: 84857356116}>, <Qualitative methods in empirical studies of software engineering, {eid: 0033163750}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2020-10-01,,,,,,,eng,,Journal,,,,2-s2.0-85092738657,True,True,False,False
59,,"Colantoni A. (AUID: 57220071865), Berardinelli L. (AUID: 23466256500), Wimmer M. (AUID: 14030698000)",,DevOpsML: Towards modeling DevOps processes and platforms,2020,"23rd ACM/IEEE International Conference on Model Driven Engineering Languages and Systems, MODELS-C 2020",,,,,,,16,10.1145/3417990.3420203,https://www.doi.org/10.1145/3417990.3420203,"<Institute of Business Informatics - Software Engineering, Johannes Kepler University>",,"Â© 2020 ACM.DevOps and Model Driven Engineering (MDE) provide differently skilled IT stakeholders with methodologies and tools for organizing and automating continuous software engineering activities-from development to operations, and using models as key engineering artifacts, respectively. Both DevOps and MDE aim at shortening the development life-cycle, dealing with complexity, and improve software process and product quality. The integration of DevOps and MDE principles and practices in low-code engineering platforms (LCEP) are gaining attention by the research community. However, at the same time, new requirements are upcoming for DevOps and MDE as LCEPs are often used by non-technical users, to deliver fully functional software. This is in particular challenging for current DevOps processes, which are mostly considered on the technological level, and thus, excluding most of the current LCEP users. The systematic use of models and modeling to lowering the learning curve of DevOps processes and platforms seems beneficial to make them also accessible for non-technical users. In this paper, we introduce DevOpsML, a conceptual framework for modeling and combining DevOps processes and platforms. Tools along with their interfaces and capabilities are the building blocks of DevOps platform configurations, which can be mapped to software engineering processes of arbitrary complexity. We show our initial endeavors on DevOpsML and present a research roadmap how to employ the resulting DevOpsML framework for different use cases.","DevOps, Model-driven engineering, Modeling languages",,,,,,,,"<The multi process challenge, {eid: 85075927615}>, <None, {eid: 85096751792}>, <Modeling devops deployment choices using process architecture design dimensions, {eid: 84952662031}>, <Model driven engineering: An emerging technical space, {eid: 33750045718}>, <None, {eid: 85096790510}>, <None, {eid: 85096779854}>, <Towards modeling framework for devops: Requirements derived from industry use case, {eid: 85079101956}>, <None, {eid: 84878326137}>, <Process-centered model engineering, {eid: 33645491644}>, <Contents for a model-based software engineering body of knowledge, {eid: 85069478287}>, <None, {eid: 85075598452}>, <Blended modelling-what, why and how, {eid: 85075926513}>, <Slebok: The software language engineering body of knowledge (dagstuhl seminar 17342), {eid: 85055482539}>, <Towards a model-based devops for cyber-physical systems, {eid: 85079099244}>, <Aiops: Real-world challenges and research innovations, {eid: 85071852727}>, <The tao of modeling spaces, {eid: 33846101237}>, <None, {eid: 84889269573}>, <None, {eid: 85096811836}>, <None, {eid: 85096743853}>, <Stepwise adoption of continuous delivery in model-driven engineering, {eid: 85061101819}>, <Characterizing and evaluating the quality of software process modeling language: Comparison of ten representative model-based languages, {eid: 85057788064}>, <None, {eid: 84969784175}>, <What is devops? A systematic mapping study on definitions and practices, {eid: 84991510816}>, <The Epsilon book, {eid: 84910613230}>, <A survey of devops concepts and challenges, {eid: 85075608026}>, <Model transformation intents and their properties, {eid: 84904275821}>, <Towards liquid models: An evolutionary modeling approach, {eid: 85010424048}>, <DevSecOps: A multivocal literature review, {eid: 85029742916}>, <None, {eid: 85096748837}>, <None, {eid: 85068600733}>, <Devops as a service: Pushing the boundaries of microservice adoption, {eid: 85048686688}>, <Foundations for the study of software architecture, {eid: 0001956194}>, <Supporting the understanding and comparison of low-code development platforms, {eid: 85096555654}>, <Three-view-concept for modeling process or manufacturing plants with AutomationML, {eid: 77949895994}>, <A megamodel for Software Process Line modeling and evolution, {eid: 84961678065}>, <None, {eid: 85069741151}>, <None, {eid: 34547319975}>, <None, {eid: 85051214413}>, <The essential deployment metamodel: A systematic review of deployment automation technologies, {eid: 85071420580}>",,,"Association for Computing Machinery, Inc",,,2020-10-16,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85096806448,True,True,False,False
60,,"Casale G. (AUID: 21742204200), PÃ©rez J. (AUID: 14523278100), Ardagna D. (AUID: 6508040906), Di Nitto E. (AUID: 6602196755), Rossi M. (AUID: 7403708768), Artac M. (AUID: 57060212700), VladuÅ¡iÄ D. (AUID: 9735302400), Barbier F. (AUID: 57188929787), Henry A. (AUID: 36813396200), Joubert C. (AUID: 57188927971), Merseguer J. (AUID: 6602569693), Iuhasz G. (AUID: 55636460100), Munteanu V. (AUID: 54584037900), Petcu D. (AUID: 6603604868), Sheridan C. (AUID: 37014892600), Spais I. (AUID: 8453001800)",,DICE: Quality-driven development of data-intensive cloud applications,2015,"7th International Workshop on Modeling in Software Engineering, MiSE 2015",,,,,,,54,10.1109/MiSE.2015.21,https://www.doi.org/10.1109/MiSE.2015.21,"<Imperial College London>, <Politecnico di Milano>, <XLAB>, <Netfective>, <Prodevelop>, <Universidad de Zaragoza>, <Institute E-Austria Timisoara>, <Flexiant Technologies>, <Athens Technology Center SA>",,"Â© 2015 IEEE.Model-driven engineering (MDE) often features quality assurance (QA) techniques to help developers creating software that meets reliability, efficiency, and safety requirements. In this paper, we consider the question of how quality-aware MDE should support data-intensive software systems. This is a difficult challenge, since existing models and QA techniques largely ignore properties of data such as volumes, velocities, or data location. Furthermore, QA requires the ability to characterize the behavior of technologies such as Hadoop/MapReduce, NoSQL, and stream-based processing, which are poorly understood from a modeling standpoint. To foster a community response to these challenges, we present the research agenda of DICE, a quality-aware MDE methodology for data-intensive cloud applications. DICE aims at developing a quality engineering tool chain offering simulation, verification, and architectural optimization for Big Data applications. We overview some key challenges involved in developing these tools and the underpinning models.","Big data, Model-driven engineering, Quality assurance",,,,,,,,"<MODAClouds: A modeldriven approach for the design and execution of applications on multiple Clouds, {eid: 84864997201}>, <Dependability modeling and analysis of software systems specified with UML, {eid: 84871237155}>, <Devops A software revolution in the making?, {eid: 84940375618}>, <A framework for utility-based service oriented design in SASSY, {eid: 77950509895}>, <Automatically improve software architecture models for performance, reliability, and cost using evolutionary algorithms, {eid: 77950538861}>, <Space4Cloud: A tool for system performance and cost evaluation of cloud systems, {eid: 84879756696}>, <Assessing SLA compliance from Palladio component models, {eid: 84904556663}>, <Estimating computational requirements in multi-threaded applications, {eid: 84925135842}>, <A unified modeling framework for distributed resource allocation of general fork and join processing networks, {eid: 77954909384}>, <None, {eid: 84866896733}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2015-05-16,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-84964265469,True,False,True,False
61,,"Zhou H. (AUID: 57888978100), Li M. (AUID: 35189040700), Sun Y. (AUID: 56131604800), Tian Z. (AUID: 9636602700), Yun L. (AUID: 58626623400)",,Digital Twin-Based Cyber Range for Industrial Internet of Things,2023,IEEE Consumer Electronics Magazine,,,,,,,1,10.1109/MCE.2022.3203202,https://www.doi.org/10.1109/MCE.2022.3203202,"<Guangzhou University>, <Information Security Research Center, CEPREI Laboratory>, <Key Laboratory of Ministry of Industry and Information Technology>",,"Â© 2012 IEEE.With the continuous integration of information technology and operation technology, the Industrial Internet of Things (IIoT) is gradually changing from closed to open. Operators can configure, monitor, or control the industrial production process remotely via Internet, which brings security threats to IIoTs. Since the IIoT focuses on the availability of industrial production, it is unfeasible to study security issues directly on the industrial field. Thus, constructing an IIoT cyber range to reproduce industrial scenarios for offensive and defensive confrontation research is necessary. However, the traditional IIoT cyber range relies on physical industrial field devices that are not reproducible and hard to recover from cyber-attacks. To solve these problems, in this article, we propose a framework for a digital twin-based cyber range and a digital twin construction method with multiple models. Cyber ranges with digital twins are more flexible and convenient. Based on the proposed method, an industrial scenario is reproduced using machine learning algorithms to predict temperature changes from different perspectives. The experimental result shows the ability of digital twins to construct an IIoT cyber range to reproduce production processes and replace field devices.",,,,,,,,,"<Multiclass routing and medium access control for heterogeneous mobile ad hoc networks, {eid: 32144440632, doi: 10.1109/TVT.2005.861183}>, <Stuxnet: Dissecting a cyberwarfare weapon, {eid: 79957616447, doi: 10.1109/MSP.2011.67}>, <Deep reinforcement learning for partially observable data poisoning attack in crowdsensing systems, {eid: 85089308646, doi: 10.1109/JIOT.2019.2962914}>, <Deepgreen: A dispersed energy-efficiency computing paradigm for green industrial IoT, {eid: 85102645232, doi: 10.1109/TGCN.2021.3064683}>, <Digital twin shop-floor: A new shop-floor paradigm towards smart manufacturing, {eid: 85030752762, doi: 10.1109/ACCESS.2017.2756069}>, <Digital twin: Mitigating unpredictable, undesirable emergent behavior in complex systems, {eid: 85006339863, doi: 10.1007/978-3-319-38756-7-4}>, <An application framework of digital twin and its case study, {eid: 85049576881, doi: 10.1007/s12652-018-0911-3}>, <Plug-and-simulate within modular assembly line enabled by digital twins and the use of AutomationML, {eid: 85044297204, doi: 10.1016/j.ifacol.2017.08.2360}>, <A methodology for digital twinmodeling and deployment for industry 4.0, {eid: 85098780861, doi: 10.1109/JPROC.2020.3032444}>, <Machine learning based digital twin framework for production optimization in petrochemical industry, {eid: 85066307148, doi: 10.1016/j.ijinfomgt.2019.05.020}>, <Cyber-physical security testbeds: Architecture, application, and evaluation for smart grid, {eid: 84878309013, doi: 10.1109/TSG.2012.2226919}>, <EPIC: A testbed for scientifically rigorous cyber-physical security experimentation, {eid: 84913609374, doi: 10.1109/TETC.2013.2287188}>, <CyberFactory# 1-Securing the industry 4.0 with cyber-ranges and digital twins, {eid: 85050025311, doi: 10.1109/WFCS.2018.8402377}>, <A digital twin-based cyber range for SOC analysts, {eid: 85112735183, doi: 10.1007/978-3-030-81242-3-17}>, <MiniCPS: A toolkit for security research on CPS networks, {eid: 84964840467, doi: 10.1145/2808705.2808715}>, <Automated attack and defense framework toward 5G security, {eid: 85084212972, doi: 10.1109/MNET.011.1900635}>, <OpenFlow: Enabling innovation in campus networks, {eid: 68649129121, doi: 10.1145/1355734.1355746}>, <OpenPLC: An open-source alternative to automation, {eid: 84936803658, doi: 10.1109/GHTC.2014.6970342}>, <Honeypot identification in softwarized industrial cyber-physical systems, {eid: 85098799112, doi: 10.1109/TII.2020.3044576}>, <Condition assessment, remaining useful life prediction and life extension decision making for offshore oil and gas assets, {eid: 85019130329, doi: 10.1016/j.jlp.2017.04.030}>, <Energy-efficient and traffic-aware service function chaining orchestration in multi-domain networks, {eid: 85053801008, doi: 10.1016/j.future.2018.09.037}>, <The connotation of digital twin, and the construction and applicationmethod of shop-floor digital twin, {eid: 85094857400, doi: 10.1016/j.rcim.2020.102075}>, <An approach to develop a digital twin for industry 4.0 systems: Manufacturing automation case studies, {eid: 85109762696, doi: 10.1080/0951192X.2021.1946857}>, <LightGBM: A highly efficient gradient boosting decision tree, {eid: 85055954505, doi: 10.5555/3294996.3295074}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2023-11-01,,,,,,,eng,,Trade Journal,,,,2-s2.0-85137911695,False,False,True,False
62,,"Bayram F. (AUID: 57222119151), Ahmed B.S. (AUID: 56591882100), Hallin E. (AUID: 57847489500), Engman A. (AUID: 57847489600)",,DQSOps: Data Quality Scoring Operations Framework for Data-Driven Applications,2023,"27th International Conference on Evaluation and Assessment in Software Engineering, EASE 2023",,,,,,,0,10.1145/3593434.3593445,https://www.doi.org/10.1145/3593434.3593445,"<Karlstad University>, <Uddeholms AB>",,"Â© 2023 Owner/Author.Data quality assessment has become a prominent component in the successful execution of complex data-driven artificial intelligence (AI) software systems. In practice, real-world applications generate huge volumes of data at speeds. These data streams require analysis and preprocessing before being permanently stored or used in a learning task. Therefore, significant attention has been paid to the systematic management and construction of high-quality datasets. Nevertheless, managing voluminous and high-velocity data streams is usually performed manually (i.e. offline), making it an impractical strategy in production environments. To address this challenge, DataOps has emerged to achieve life-cycle automation of data processes using DevOps principles. However, determining the data quality based on a fitness scale constitutes a complex task within the framework of DataOps. This paper presents a novel Data Quality Scoring Operations (DQSOps) framework that yields a quality score for production data in DataOps workflows. The framework incorporates two scoring approaches, an ML prediction-based approach that predicts the data quality score and a standard-based approach that periodically produces the ground-truth scores based on assessing several data quality dimensions. We deploy the DQSOps framework in a real-world industrial use case. The results show that DQSOps achieves significant computational speedup rates compared to the conventional approach of data quality scoring while maintaining high prediction performance.","Automated data scoring, data assessment, data quality dimensions, DataOps, mutation testing",,,,,,,,"<None, {eid: 77957553895}>, <None, {eid: 85133932274}>, <2011. The relative age effect and success in German elite U-17 soccer teams, {eid: 79958156034}>, <2014. The oracle problem in software testing: A survey, {eid: 84929331583}>, <2015. from data quality to big data quality, {eid: 84954422293}>, <2011. The effects and interactions of data quality and problem complexity on classification, {eid: 79951733500}>, <None, {eid: 85087392713}>, <None, {eid: 0035478854}>, <2022. End-To-End Data Quality Assessment Using Trust for Data Shared IoT Deployments, {eid: 85137896363}>, <2018. Validating data quality actions in scoring processes, {eid: 85041432648}>, <Tensorflow data validation: Data analysis and validation in continuous ml pipelines, {eid: 85086247414}>, <None, {eid: 85078944675}>, <2022. The Fault in Our Data Stars: Studying Mitigation Techniques against Faulty Training Data in Machine Learning Applications, {eid: 85136324853}>, <Xgboost: A scalable tree boosting system, {eid: 84984950690}>, <None, {eid: 85162248523}>, <None, {eid: 85062688379}>, <None, {eid: 0002496457}>, <2012 Inequality of wellbeing: A multidimensional approach. Economica, {eid: 84866448236}>, <A Conceptual Framework for Developing Quality Measures for Information Systems, {eid: 27944458700}>, <Lisa Ehrlinger andWolfram WÃ¶Ã A novel data quality metric for minimality, {eid: 85162234607}>, <2008. The distribution of the Kolmogorov-Smirnov, {eid: 49349084192}>, <2015. Data quality: From theory to practice, {eid: 84951937556}>, <Risk-based data validation in machine learning-based software systems, {eid: 85076402950}>, <2018. Requirements for data quality metrics, {eid: 85041435827}>, <None, {eid: 85046134634}>, <Overview and importance of data quality for machine learning tasks, {eid: 85090410666}>, <2010. An analysis and survey of the development of mutation testing, {eid: 80053606092}>, <2021. Towards mlops: A framework and maturity model, {eid: 85135054430}>, <2016 Application of an ontology for characterizing data quality for a secondary use of EHR data, {eid: 84958769417}>, <2021. An effective adaptive customization framework for small manufacturing plants using extreme gradient boosting-XGBoost and random, {eid: 85162237280}>, <2011. The combined conceptual life-cycle model of information quality: Part 1, an investigative framework, {eid: 79959369971}>, <None, {eid: 85151266883}>, <H2o automl: Scalable automatic machine learning, {eid: 85095511464}>, <Measures of distributional similarity. arXiv preprint cs/0001012, {eid: 85162216381}>, <2016. Test oracle strategies for model-based testing, {eid: 85019005181}>, <1991. Divergence measures based on the, {eid: 0025952277}>, <2021. RSSI Probability Density Functions Comparison Using Jensen-, {eid: 85162250575}>, <None, {eid: 85173804442}>, <2018. Learning under concept drift: A review, {eid: 85055030391}>, <Multivariate analysis of quality: An introduction. John, {eid: 0003658413}>, <2013. Big data management: Concepts, techniques and challenges, {eid: 84874754580}>, <2013 A multidimensional analysis of data quality for credit risk management: New insights and challenges, {eid: 84873686719}>, <How data science workers work with data: Discovery, capture, curation, design, creation, {eid: 85067313075}>, <Non-parametric jensen-shannon divergence, {eid: 84959351282}>, <None, {eid: 84902748879}>, <A review of missing data treatment methods, {eid: 70349131271}>, <2002 Data quality assessment. Commun, {eid: 85021679285}>, <None, {eid: 85162195731}>, <Online anomaly detection over big data streams, {eid: 85078702170}>, <2013 Covering and uncovering equivalent mutants, {eid: 84880304563}>, <2019 the utility of multivariate outlier detection techniques for data quality evaluation in large studies: An application within the ONDRI project, {eid: 85066041162}>, <2021. Big data quality framework: A holistic approach to continuous quality management, {eid: 85162215320}>, <2020. Sensor data quality: A systematic review, {eid: 85079387831}>, <2019 Measuring data quality with weighted metrics, {eid: 85020235870}>, <Anchoring data quality dimensions in ontological foundations. Commun, {eid: 0030288402}>, <1995. A framework for analysis of data quality research, {eid: 0029357731}>",,,Association for Computing Machinery,,,2023-06-14,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85162259466,False,True,True,False
63,,"Baumann N. (AUID: 57986582200), Kusmenko E. (AUID: 57195075206), Ritz J. (AUID: 57986533200), Rumpe B. (AUID: 55861872700), Weber M.B. (AUID: 57200340208)",,Dynamic data management for continuous retraining,2022,"25th ACM/IEEE International Conference on Model Driven Engineering Languages and Systems, MODELS 2022",,,,,,,1,10.1145/3550356.3561568,https://www.doi.org/10.1145/3550356.3561568,<RWTH Aachen University>,,"Â© 2022 ACM.Managing dynamic datasets intended to serve as training data for a Machine Learning (ML) model often emerges as very challenging, especially when data is often altered iteratively and already existing ML models should pertain to the data. For example, this applies when new data versions arise from either a generated or aggregated extension of an existing dataset a model has already been trained on. In this work, it is investigated on how a model-based approach for these training data concerns can be provided as well as how the complete process, including the resulting training and retraining process of the ML model, can therein be integrated. Hence, model-based concepts and the implementation are devised to cope with the complexity of iterative data management as an enabler for the integration of continuous retraining routines. With Deep Learning techniques becoming technically feasible and massively being developed further over the last decade, MLOps, aiming to establish DevOps tailored to ML projects, gained crucial relevance. Unfortunately, data-management concepts for iteratively growing datasets with retraining capabilities embedded in a model-driven ML development methodology are unexplored to the best of our knowledge. To fill in this gap, this contribution provides such agile data management concepts and integrates them and continuous retraining into the model-driven ML Framework MontiAnna [18]. The new functionality is evaluated in the context of a research project where ML is exploited for the optimal design of lattice structures for crash applications.","artificial intelligence, data management, model-driven engineering, retraining",,,,,,,,"<Data platform for machine learning, {eid: 85069440635}>, <None, {eid: 85102105267}>, <Software Engineering for Machine Learning: A Case Study, {eid: 85072111655}>, <Artifact and Reference Models for Generative Machine Learning Frameworks and Build Systems, {eid: 85120851738}>, <On the Co-evolution of ML Pipelines and Source Code-Empirical Study of DVC Projects, {eid: 85106644733}>, <Machine learning and semantic sentiment analysis based algorithms for suicide sentiment prediction in social networks, {eid: 85033461596}>, <Data management in machine learning systems, {eid: 85082126207}>, <Managing larger data on a github repository, {eid: 85099571714}>, <Machine learning in finance: The case of deep learning for option pricing, {eid: 85066331914}>, <An overview of the HDF5 technology suite and its applications, {eid: 79956025832}>, <Modeling Deep Reinforcement Learning Based Architectures for Cyber-Physical Systems, {eid: 85075937600}>, <Memory or time: Performance evaluation for iterative operation on hadoop and spark, {eid: 84903975456}>, <Getting Data into Databricks, {eid: 85142923630}>, <Overview and importance of data quality for machine learning tasks, {eid: 85090410666}>, <Modeling Dynamic Architectures of Self-Adaptive Cooperative Systems, {eid: 85075948566}>, <Hierarchical data format 5: HDF5, {eid: 83955161960}>, <MontiCore: A Framework for Compositional Development of Domain Specific Languages, {eid: 77955230740}>, <Modeling and Training of Neural Processing Systems, {eid: 85075936455}>, <Modeling and Training of Neural Processing Systems, {eid: 85075936455}>, <Highly-Optimizing and Multi-Target Compiler for Embedded System Models: C++ Compiler Toolchain for the Component and Connector Language EmbeddedMontiArc, {eid: 85056871758}>, <Learning without forgetting, {eid: 85035137409}>, <Learning under concept drift: A review, {eid: 85055030391}>, <A survey of big data architectures and machine learning algorithms in healthcare, {eid: 85032987630}>, <Big data analysis using Apache Hadoop, {eid: 84891103002}>, <Crashworthiness optimization of combined straight-Tapered tubes using genetic algorithm and neural networks, {eid: 85042259603}>, <Data management challenges in production machine learning, {eid: 85021190615}>, <Data lifecycle challenges in production machine learning: A survey, {eid: 85058810729}>, <Demystifying MLOps and Presenting a Recipe for the Selection of Open-Source Tools, {eid: 85115788129}>, <Accelerating the machine learning lifecycle with MLflow, {eid: 85072938346}>",,,"Association for Computing Machinery, Inc",,,2022-10-23,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85142938377,True,True,True,False
64,,"Ejersbo H. (AUID: 57226336274), Lausdahl K. (AUID: 35186177400), Frasheri M. (AUID: 55979636800), Esterle L. (AUID: 49963334900)",,Dynamic Runtime Integration of New Models in Digital Twins,2023,"18th IEEE/ACM Symposium on Software Engineering for Adaptive and Self-Managing Systems, SEAMS 2023",,,,,,,0,10.1109/SEAMS59076.2023.00016,https://www.doi.org/10.1109/SEAMS59076.2023.00016,"<Aarhus University, Department of Electrical and Computer Engineering Digit>",,"Â© 2023 IEEE.The development of cyber-physical systems is heavily relying on model-driven approaches. After deployment, these models can be utilised in a Digital Twin setting, acting as virtual replicas of the physical components and reflecting the behaviour of the running system in real-time. Complex systems often consist of numerous models interacting with each other and individual models may need to be updated after deployment. This means that new models need to be integrated and swapped during runtime without interrupting the running system. In this paper, we propose an approach for model-based Digital Twins to replace individual models without stopping or halting the operation of a cyber-physical system. Furthermore, our approach allows to replace not only individual models, but also update the overall structure of the interaction of models in the Digital Twin setting. The use of the proposed mechanism is illustrated through two case-studies with an agricultural robot prototype.","Co-simulation, Digital Twins, Functional Mock-up Interface, Model Swap, Model-driven engineering",,,,,,,,"<A survey of cyber-physical systems, {eid: 84555177840}>, <Cyber-physical systems: challenge of the 21st century, {eid: 84994378262}>, <A model-based design methodology for cyber-physical systems, {eid: 80052469409}>, <A comprehensive survey on modeling of cyber-physical systems, {eid: 85055255781}>, <Integrated Tool Chain for Model-Based Design of Cyber-Physical Systems, {eid: 85006151292}>, <Co-simulation: a Survey, {eid: 85051436184}>, <Product lifecycle management: the new paradigm for enterprises, {eid: 34047222275}>, <Multi-modelling and co-simulation in the engineering of cyber-physical systems: Towards the digital twin, {eid: 85073679094}>, <Characterising the digital twin: A systematic literature review, {eid: 85081219520}>, <Towards modular digital twins of robot systems, {eid: 85143058136}>, <Recent developments in hardware-in-the-loop testing, {eid: 85061083191}>, <The functional mockup interface for tool independent exchange of simulation models, {eid: 84871289819}>, <Functional Mockup Interface 2.0: The Standard for Tool independent Exchange of Simulation Models, {eid: 84871289819}>, <The fmi 3.0 standard interface for clocked and scheduled simulations, {eid: 85124046429}>, <Towards reuse of synchronization algorithms in co-simulation frameworks, {eid: 85091582766}>, <An fmi-based initialization plugin for into-cps maestro 2, {eid: 85101498944}>, <None, {eid: 84928170648}>, <The FMI 3.0 Standard Interface for Clocked and Scheduled Simulations, {eid: 85124046429}>, <Master for co-simulation using FMI, {eid: 84908292404}>, <Formally verified fmi enabled external data broker: Rabbitmq fmu, {eid: 85099278177}>, <Rmqfmu: Bridging the real world with co-simulation for practitioners, {eid: 85146053605}>, <Design Space Exploration in the Development of Agricultural Robots, {eid: 85073686308}>, <Addressing time discrepancy between digital and physical twins, {eid: 85146053531}>, <Assured and correct dynamic update of controllers, {eid: 84974593757}>, <Model-driven engineering tools and languages for cyber-physical systemsâa systematic literature review, {eid: 85103282925}>, <The disappearing boundary between development-time and run-time, {eid: 79951591300}>, <Dynamic software updating: a systematic mapping study, {eid: 85092103229}>, <Towards a model-based devops for cyber-physical systems, {eid: 85096956543}>, <Twinops - devops meets model-based engineering and digital twins for the engineering of cps, {eid: 85096747019}>, <Towards digital twin-enabled devops for cps providing architecture-based service adaptation & verification at runtime, {eid: 85134157307}>, <Structural dynamic model, {eid: 0022840390}>, <Model update: A model specification formalism with a generalized view of discontinuity, {eid: 33750715455}>, <Modeling formalisms for dynamic structure systems, {eid: 0031251544}>, <Dynamic model updating in simulation with multimodels: A taxonomy and a generic agent-based architecture, {eid: 84962890943}>, <Dynamic structures in modeling and simulation: A reflective approach, {eid: 0012330873}>, <Exploiting structural dynamism in functional hybrid modelling for simulation of ideal diodes, {eid: 84873415126}>, <Equation-based modeling of variable-structure systems, {eid: 84976437546}>, <A python framework to create and simulate models with variable structure in common simulation environments, {eid: 84905229522}>, <Holistic simulation of flexray networks by using run-time model switching, {eid: 77953099458}>, <Optimizing HW/SW co-simulation based on run-time model switching, {eid: 77951519937}>, <Efficient runtime co-simulation model switching for holistic analysis of embedded systems, {eid: 84888883376}>, <Online model swapping for architectural simulation, {eid: 85106013057}>, <Models@ run. time, {eid: 85008066028}>, <None, {eid: 84904814843}>, <Mechanisms for leveraging models at runtime in self-adaptive software, {eid: 84904817608}>, <Adaptive exchange of distributed partial models@ run. time for highly dynamic systems, {eid: 84953275230}>, <Models@ run. time: a guided tour of the state of the art and research challenges, {eid: 85059780955}>, <A dynamic component model for cyber physical systems, {eid: 84864044924}>, <Transactional execution of hierarchical reconfigurations in cyber-physical systems, {eid: 85011279078}>, <Goal-based modeling of dynamically adaptive system requirements, {eid: 44149110152}>, <Morph: A reference architecture for configuration and behaviour self-adaptation, {eid: 84960347471}>, <Activforms: A formally-founded model-based approach to engineer self-adaptive systems, {eid: 85129299009}>, <Trusting intelligent machines: Deepening trust within socio-technical systems, {eid: 85058196933}>, <Model-based development of dynamically adaptive software, {eid: 34247136847}>, <Easymodel: A refinement-based modeling and verification approach for self-adaptive software, {eid: 85094646667}>, <A survey of formal methods in self-adaptive systems, {eid: 84866043696}>, <Towards practical runtime verification and validation of self-adaptive software systems, {eid: 84883136062}>, <Probabilistic verification at runtime for self-adaptive systems, {eid: 84873844702}>, <Verifying self-adaptive applications suffering uncertainty, {eid: 84908608579}>, <Using runtime quantitative verification to provide assurance evidence for self-adaptive software, {eid: 85041808638}>, <Compositional synthesis of modular systems, {eid: 85127548706}>, <Formal verification and co-simulation in the design of a synchronous motor control algorithm, {eid: 85090917013}>, <Runtime verification for fmi-based co-simulation, {eid: 85140486602}>, <Verification and synthesis of co-simulation algorithms subject to algebraic loops and adaptive steps, {eid: 85140964663}>, <Formalizing correctness criteria of dynamic updates derived from specification changes, {eid: 84885004285}>, <Synthesizing dynamically updating controllers from changes in scenario-based specifications, {eid: 84865109366}>, <Dynamic update of discrete event controllers, {eid: 85055183478}>, <Control-theoretical software adaptation: A systematic literature review, {eid: 85052241956}>, <Self-improving system integration: Mastering continuous change, {eid: 85096831548}>, <Changing software in a changing world: How to test in presence of variability, adaptation and evolution?, {eid: 85073699762}>, <Process prediction with digital twins, {eid: 85121810059}>, <Devsecops in embedded systems: An empirical study of past literature, {eid: 85136963110}>, <Towards a devops approach in cyber physical production systems using digital twins, {eid: 85096529757}>, <Uncertainty Quantificatios and Runtime Monitoring Using Environment-Aware Digital Twins, {eid: 85115881589}>, <Rmqfmu: Bridging the real world with co-simulation for practitioners, {eid: 85146053605}>",,,IEEE Computer Society,,,2023-05-15,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85159598859,False,False,False,False
65,,"Idowu S. (AUID: 58352876500), StrÃ¼ber D. (AUID: 56503681700), Berger T. (AUID: 36607404500)",,EMMM: A Unified Meta-Model for Tracking Machine Learning Experiments,2022,"48th Euromicro Conference on Software Engineering and Advanced Applications, SEAA 2022",,,,,,,2,10.1109/SEAA56994.2022.00016,https://www.doi.org/10.1109/SEAA56994.2022.00016,"<Chalmers | University of Gothenburg>, <Radboud University>, <Ruhr University>",,"Â© 2022 IEEE.Traditional software engineering tools for managing assetsâspecifically, version control systemsâare inadequate to manage the variety of asset types used in machine-learning model development experiments. Two possible paths to improve the management of machine learning assets include 1) Adopting dedicated machine-learning experiment management tools, which are gaining popularity for supporting concerns such as versioning, traceability, auditability, collaboration, and reproducibility; 2) Developing new and improved version control tools with support for domain-specific operations tailored to machine learning assets. As a contribution to improving asset management on both paths, this work presents Experiment Management Meta-Model (EMMM), a meta-model that unifies the conceptual structures and relationships extracted from systematically selected machine-learning experiment management tools. We explain the metamodelâs concepts and relationships and evaluate it using real experiment data. The proposed meta-model is based on the Eclipse Modeling Framework (EMF) with its meta-modeling language, Ecore, to encode model structures. Our meta-model can be used as a concrete blueprint for practitioners and researchers to improve existing tools and develop new tools with native support for machine-learning-specific assets and operations.","Machine learning experiments, Management tools, MDE, Metamodeling",,,,,,,,"<Survey of machine-learning experimental methods at neurips2019 and iclr2020, {eid: 85094777862}>, <None, {eid: 85083077693}>, <Project repositories for machine learning with tensorflow, {eid: 85086630438}>, <Trials and tribulations of developers of intelligent systems: A field study, {eid: 85000434626}>, <Software Engineering Challenges of Deep Learning, {eid: 85057169222}>, <Sofware engineering challenges for machine learning applications: A literature review, {eid: 85102661501}>, <Asset management in machine learning: A survey, {eid: 85109085275}>, <None, {eid: 85138404749}>, <None, {eid: 85147684797}>, <Traceability for trustworthy ai: A review of models and tools, {eid: 85106151024}>, <Implicit Provenance for Machine Learning Artifacts, {eid: 85091940314}>, <A Survey of Software Development Process Models in Software Engineering, {eid: 84949498241}>, <CRISP-DM: Towards a Standard Process Model for Data Mining, {eid: 0003157840}>, <The KDD Process for Extracting Useful Knowledge from Volumes of Data, {eid: 0030285403}>, <Machine learning for networking: Workflow, advances and opportunities, {eid: 85036566955}>, <None, {eid: 85136041419}>, <None, {eid: 74549142762}>, <Adoption and effects of software engineering best practices in machine learning, {eid: 85095814265}>, <Out-of-the-Box Reproducibility: A Survey of Machine Learning Platforms, {eid: 85083260307}>, <Deep-water framework: The Swiss army knife of humans working with machine learning models, {eid: 85086427001}>, <Mapping platforms into a new open science model for machine learning, {eid: 85075184361}>, <On the Need for Artifact Models in, {eid: 85042655599}>, <None, {eid: 85147701586}>, <Artifact and reference models for generative machine learning frameworks and build systems, {eid: 85120851738}>, <Artifact-Based Analysis for the Development of Collaborative Embedded Systems, {eid: 85108965376}>, <None, {eid: 85095253828}>, <Machine learning pipelines: Provenance, reproducibility and fair data principles, {eid: 85147688840}>, <Cross-validation, {eid: 79954553074}>, <A Practical Taxonomy of Reproducibility for Machine Learning Research, {eid: 85080704884}>, <ModelDB: a system for machine learning model management, {eid: 84979752252}>, <Evaluating classification schema and classification decisions, {eid: 85050828867}>, <Toward methodological guidelines for process theories and taxonomies in software engineering, {eid: 85040976130}>, <On the effectiveness of machine learning experiment management tools, {eid: 85132832571}>, <Asset management in machine learning: State-of-research and state-of-practice, {eid: 85147701250}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2022-08-31,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85146495066,False,False,True,True
66,,"Ferry N. (AUID: 35291975700), Solberg A. (AUID: 14827375100), Song H. (AUID: 57195274282), Lavirotte S. (AUID: 13605275200), Tigli J.Y. (AUID: 6602916792), Winter T. (AUID: 57205679964), MuntÃ©s-Mulero V. (AUID: 8905990700), Metzger A. (AUID: 15119826600), Rios Velasco E. (AUID: 14050840000), Castelruiz Aguirre A. (AUID: 8653242100)",,"Enact: Development, operation, and quality assurance of trustworthy smart iot systems",2018,"1st International Workshop on Software Engineering Aspects of Continuous Development and New Paradigms of Software Production and Deployment, DEVOPS 2018",,,,,,,20,10.1007/978-3-030-06019-0_9,https://www.doi.org/10.1007/978-3-030-06019-0_9,"<SINTEF Digital>, <UniversitÃ© CÃ´te dâAzur, CNRS, I3S>, <EVIDIAN>, <Beawre>, <paluno (The Ruhr Institute for Software Technology), University of Duisburg-Essen>, <FundaciÃ³n Tecnalia Research & Innovation>",,"Â© 2019, Springer Nature Switzerland AG.To unleash the full potential of IoT and flourishing innovations in application domains such as eHealth or smart city, it is critical to facilitate the creation and operation of trustworthy Smart IoT Systems (SIS). Since SIS typically operate in a changing and often unpredictable environment, the ability of these systems to continuously evolve and adapt to their new environment is decisive to ensure and increase their trustworthiness, quality and user experience. The DevOps movement advocates a set of software engineering best practices and tools, to ensure Quality of Service whilst continuously evolving complex systems. However, there is no complete DevOps support for trustworthy SIS today. In this paper we present a research roadmap to enable DevOps in such systems and introduce the ENACT DevOps concepts and Framework.","DevOps, Internet of things, Trustworthiness",,,,,,,,"<None, {eid: 85061092817}>, <None, {eid: 84870773703}>, <Recommendations for ICT Work Programme 2018+, {eid: 85061091804}>, <None, {eid: 84858197925}>, <A roadmap to the programmable world: Software challenges in the IoT era, {eid: 85010433150}>, <A generative middleware for heterogeneous and distributed services, {eid: 84981516069}>, <CloudMF: Applying MDE to tame the complexity of managing multi-cloud applications, {eid: 84946685259}>, <The koala component model for consumer electronics software, {eid: 0033901302}>, <Think: A software framework for component-based operating system kernels, {eid: 85084161456}>, <A dynamic component model for cyber physical systems, {eid: 84864044924}>, <Software engineering for self-adaptive systems: A second research roadmap, {eid: 84879852118}>, <Taming uncertainty in self-adaptive software, {eid: 80053212005}>, <AutoRELAX: Automatically RELAXing a goal model to address uncertainty, {eid: 84907594075}>, <A learning-based framework for engineering feature-oriented self-adaptive software systems, {eid: 84887877241}>, <Learning and evolution in dynamic software product lines, {eid: 84974574995}>, <Addressing highly dynamic changes in service-oriented systems: Towards agile evolution and adaptation, {eid: 84944675741}>, <None, {eid: 84929547742}>, <None, {eid: 84979541826}>, <None, {eid: 84961385029}>, <Fast root cause analysis on distributed systems by composing precompiled Bayesian networks, {eid: 85013367886}>, <Internet of Things Top Ten, {eid: 85061076747}>, <Learning internet-of-things security âhands-on, {eid: 84962010405}>, <Classification of security risks in the IoT environment, {eid: 84987624024}>, <Modelling and simulation challenges in internet of things, {eid: 85017336051}>, <Simulation of the internet of things, {eid: 84991666309}>, <Multi-level simulation of internet of things on smart territories, {eid: 85005975921}>, <Multitier diversification in web-based software applications, {eid: 84922900995}>, <Dismantling megamos crypto: Wirelessly lock-picking a vehicle immobilizer, {eid: 84979836592}>, <DIVER-SIFY: Ecology-inspired software evolution for diversity emergence, {eid: 84898477308}>",,,Springer Verlag,,,2018-03-05,,,,,,,eng,,Book Series,,,,2-s2.0-85061085691,False,True,True,True
67,,"Teumert S. (AUID: 57315097000), Tegeler T. (AUID: 57210413680), SchÃ¼rmann J. (AUID: 57216758132), Busch D. (AUID: 57315516200), Wirkner D. (AUID: 57191825026)",,Evaluation of Graphical Modeling of CI/CD Workflows with Rig,2022,"11th International Symposium on Leveraging Applications of Formal Methods, Verification and Validation, ISoLA 2022",,,,,,,1,10.1007/978-3-031-19756-7_21,https://www.doi.org/10.1007/978-3-031-19756-7_21,"<Chair for Programming Systems, TU Dortmund University>",,"Â© 2022, The Author(s), under exclusive license to Springer Nature Switzerland AG.This evaluation is about our workshop on graphical modeling of CI/CD pipeline and how our self-developed tool Rig can support creating such workflows. We describe the three tasks the workshop covered and present the data we have gathered throughout the workshop via surveys of the participants. After that, the data is interpreted and discussed concerning its validity. Last, we draw conclusions from the data interpretations with regards to our future work with Rig and future workshops we plan to hold.","Continuous Integration and Deployment, DevOps, Domain-Specific Tools, Graphical Modeling, Language-Driven Engineering, Purpose-Specific Language, Software Engineering, Visual Authoring",,,,,,,,"<None, {eid: 85142692492}>, <Tutorial: An overview of malware detection and evasion techniques, {eid: 85056462075}>, <DIME: A programming-less modeling environment for web applications, {eid: 84993929512}>, <None, {eid: 85142698420}>, <Low-code development and model-driven engineering: Two sides of the same coin?, {eid: 85122676062}>, <None, {eid: 85142732469}>, <DSLs for decision services: A tutorial introduction to language-driven engineering, {eid: 85056450376}>, <A tutorial introduction to graphical modeling and metamodeling with CINCO, {eid: 85056457686}>, <Business process modelling in the jABC: The one-thing-approach, {eid: 84898095232}>, <None, {eid: 85142684303}>, <None, {eid: 33845584384}>, <The NIST definition of cloud computing, {eid: 77954051808}>, <When and how to develop domain-specific languages, {eid: 33745167684}>, <None, {eid: 85142714741}>, <CINCO: A simplicity-driven approach to full generation of domain-specific graphical modeling tools, {eid: 85019270516}>, <None, {eid: 84995360507}>, <Model-based development for high-assurance embedded systems, {eid: 85142770603}>, <None, {eid: 85142727826}>, <Continuous integration, delivery and deployment: A systematic review on approaches, tools, challenges and practices, {eid: 85019140530}>, <A model-driven approach to continuous practices for modern cloud-based web applications, {eid: 85070649037}>, <An introduction to graphical modeling of CI/CD workflows with rig, {eid: 85118135758}>, <None, {eid: 85142675149}>, <None, {eid: 85118123932}>, <Aligned, purpose-driven cooperation: The future way of system development, {eid: 85118172762}>",,,Springer Science and Business Media Deutschland GmbH,,,2022-10-22,,,,,,,eng,,Book Series,,,,2-s2.0-85142750884,True,False,True,False
68,,"Galindo J.A. (AUID: 55702520851), Benavides D. (AUID: 22333640600), Horcas J.M. (AUID: 55947780300), Felferning A. (AUID: 58685031400), Fernandez-Amoros D. (AUID: 36245122300)",,FLAMA: A collaborative effort to build a new framework for the automated analysis of feature models,2023,"27th ACM International Systems and Software Product Line Conference, SPLC 2023",,,,,,,0,10.1145/3579028.3609008,https://www.doi.org/10.1145/3579028.3609008,"<University of Seville>, <Itis Software, University of MÃ¡laga>, <Graz University of Technology>, <Uned>",,"Â© 2023 ACM.Nowadays, feature models are the de facto standard when representing commonalities and variability, with modern examples spanning up to 7000 features. Manual analysis of such models is challenging and error-prone due to sheer size. To help in this task, automated analysis of feature models (AAFM) has emerged over the past three decades. However, the diversity of these tools and their supported languages presents a significant challenge that motivated the MOD-EVAR community to initiate a project for a new tool that supports the UVL language. Despite the rise of machine learning and data science, along with robust Python-based libraries, most AAFM tools have been implemented in Java, creating a collaboration gap. This paper introduces Flama, an innovative framework that automates the analysis of variability models. It focuses on UVL model analysis and aims for easy integration and extensibility to bridge this gap and foster better community and cross-community collaboration.","data visualization, effective communication, graphs and tables, software product line, variability, visualization design process",,,,,,,,"<Familiar: A domain-specific language for large scale management of feature models, {eid: 84875729938}>, <Clafer: unifying class and feature modeling, {eid: 84917709136}>, <Automated analysis of feature models 20 years later: A literature review, {eid: 77955227439}>, <Fama, {eid: 84932635887}>, <API documentation, {eid: 85159783498}>, <Debian Packages Repositories as Software Product Line Models, {eid: 84871305316}>, <Automated analysis of feature models: Quo vadis?, {eid: 85051563856}>, <Uniform and scalable sampling of highly configurable systems, {eid: 85123378721}>, <FM fact label: a configurable and interactive visualization of feature model characterizations, {eid: 85139172754}>, <Empirical analysis of the tool support for software product lines, {eid: 85131551970}>, <FeatureIDE: A tool framework for featureoriented software development, {eid: 70349553079}>, <Advisory: vulnerability analysis in software development project dependencies, {eid: 85139148412}>, <Early Definition of Frozen and Hot Spots in the Development of Domain Frameworks, {eid: 85175978948}>, <An overview on analysis tools for software product lines, {eid: 84907809917}>, <CNF Encodings, {eid: 72949099058}>, <Selection of software product line implementation components using recommender systems: An application to wordpress, {eid: 85067252529}>, <BeTTy: benchmarking and testing on the automated analysis of feature models, {eid: 84857593568}>, <The Variability Model of The Linux Kernel, {eid: 78049370236}>, <PEP 8-style guide for python code, {eid: 84887076248}>",,,Association for Computing Machinery,,,2023-08-28,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85168118717,False,True,True,False
69,,"Safdar M. (AUID: 57210751342), Zhao Y.F. (AUID: 57196241702), Lamouche G. (AUID: 6602194091), Bescond C. (AUID: 6602803943), Wanjara P. (AUID: 6602592830), Paul P.P. (AUID: 23493286200), Wood G. (AUID: 55801728500), Zimmermann M. (AUID: 57837039000), Hannesen F. (AUID: 57214321641)",,Fundamental requirements of a machine learning operations platform for industrial metal additive manufacturing,2024,Computers in Industry,,,,,,,0,10.1016/j.compind.2023.104037,https://www.doi.org/10.1016/j.compind.2023.104037,"<Department of Mechanical Engineering, McGill University>, <National Research Council Canada>, <Braintoy AI>, <Apollo Clad Laser Cladding, a division of Apollo Machine and Welding Ltd>, <Faunhofer Institute for Laser Technology ILT>, <BCT Steuerungs, und DV-Systeme GmbH>",,"Â© 2023Metal-based Additive Manufacturing (AM) can realize fully dense metallic components and thus offers an opportunity to compete with conventional manufacturing based on the unique merits possible through layer-by-layer processing. Unsurprisingly, Machine Learning (ML) applications in AM technologies have been increasingly growing in the past several years. The trend is driven by the ability of data-driven techniques to support a range of AM concerns, including in-process monitoring and predictions. However, despite numerous ML applications being reported for different AM concerns, no framework exists to systematically manage these ML models for AM operations in the industry. Moreover, no guidance exists on fundamental requirements to realize such a cross-disciplinary platform. Working with experts in ML and AM, this work identifies the fundamental requirements to realize a Machine Learning Operations (MLOps) platform to support process-based ML models for industrial metal AM (MAM). Project-level activities are identified in terms of functional roles, processes, systems, operations, and interfaces. These components are discussed in detail and are linked with their respective requirements. In this regard, peer-reviewed references to identified requirements are made available. The requirements identified can help guide small and medium enterprises looking to implement ML solutions for AM in the industry. Challenges and opportunities for such a system are highlighted. The system can be expanded to include other lifecycle phases of metallic and non-metallic AM.","Computing infrastructure, Data analytics and machine learning, Fundamental and functional requirements, Industrial additive manufacturing, Machine learning operations platform",,,,,,,,"<None, {eid: 85175088322}>, <Securing cyber-physical additive manufacturing systems by in-situ process authentication using streamline video analysis, {eid: 85122279015}>, <None, {eid: 85175036146}>, <Understanding of a convolutional neural network, {eid: 85047877581}>, <None, {eid: 85175009830}>, <Design of experiment methods in manufacturing: basics and practical applications, {eid: 84928863422}>, <Additive manufacturing â General principles â Fundamentals and vocabulary, {eid: 85126342007}>, <A survey on knowledge transfer for manufacturing data analytics, {eid: 85056228240}>, <Prediction of geometry deviations in additive manufactured parts: comparison of linear regression with machine learning algorithms, {eid: 85083381523}>, <None, {eid: 85175029188}>, <A random forest guided tour, {eid: 84964330838}>, <None, {eid: 33846516584}>, <Data model for additive manufacturing digital thread: state of the art and perspectives, {eid: 85075754887}>, <The openCV library, {eid: 0242483561}>, <None, {eid: 85175067084}>, <Albumentations: fast and flexible image augmentations, {eid: 85081137755}>, <None, {eid: 85175076146}>, <Geometric machine learning: research and applications, {eid: 85127625269}>, <Non-destructive quality control methods in additive manufacturing: a survey, {eid: 85082176984}>, <A review on wire-arc additive manufacturing: typical defects, detection approaches, and multisensor data fusion-based model, {eid: 85111924840}>, <None, {eid: 85175059034}>, <None, {eid: 85175012693}>, <None, {eid: 85175071888}>, <Imagenet: A large-scale hierarchical image database, {eid: 72249100259}>, <Spreading process maps for powder-bed additive manufacturing derived from physics model-based machine learning, {eid: 85074413185}>, <A design for additive manufacturing ontology, {eid: 85013301869}>, <Zoning additive manufacturing process histories using unsupervised machine learning, {eid: 85077949298}>, <Think DSP: digital signal processing in Python, {eid: 85041737463}>, <Process optimization of complex geometries using feed forward control for laser powder bed fusion additive manufacturing, {eid: 85085254205}>, <Review of in-situ process monitoring and in-situ metrology for metal additive manufacturing, {eid: 84960155015}>, <Industrial additive manufacturing: A manufacturing systems perspective, {eid: 85029540806}>, <Fundamental requirements for data representations in laser-based powder bed fusion, {eid: 84945353277}>, <Additive manufacturing in situ and ex situ geometric data registration, {eid: 85130266728}>, <None, {eid: 85175074299}>, <Measured data alignments for monitoring metal additive manufacturing processes using laser powder bed fusion methods, {eid: 85096118726}>, <Modeling of additive manufacturing processes for metals: Challenges and opportunities, {eid: 85018341588}>, <Metal additive manufacturing: a review, {eid: 84905724414}>, <Machine learning algorithms for defect detection in metal laser-based additive manufacturing: a review, {eid: 85123585796}>, <Heterogeneous sensing and scientific machine learning for quality assurance in laser powder bed fusionâA single-track study, {eid: 85095609454}>, <On continuous integration/continuous delivery for automated deployment of machine learning models using mlops, {eid: 85127693591}>, <pyaudioanalysis: an open-source python library for audio signal analysis, {eid: 84961354674}>, <None, {eid: 85150103987}>, <None, {eid: 85150103987}>, <None, {eid: 85030472894}>, <None, {eid: 85030472894}>, <None, {eid: 78650365466}>, <None, {eid: 84964857035}>, <None, {eid: 84944216444}>, <Deep learning, {eid: 84944735469}>, <Data fusion methods for statistical process monitoring and quality characterization in metal additive manufacturing, {eid: 85061957493}>, <None, {eid: 85175073657}>, <None, {eid: 85175090829}>, <None, {eid: 27144544190}>, <Deep learning with Keras, {eid: 85042276044}>, <Machine learning for metal additive manufacturing: towards a physics-informed data-driven paradigm, {eid: 85120355687}>, <Array programming with NumPy, {eid: 85091129687}>, <Long short-term memory, {eid: 0031573117}>, <The fabrication of long carbon fiber reinforced polylactic acid composites via fused deposition modelling: experimental analysis and machine learning, {eid: 85095452907}>, <Matplotlib: a 2D graphics environment, {eid: 34247493236}>, <Mastering PyCharm, {eid: 85061897087}>, <Caffe: convolutional architecture for fast feature embedding, {eid: 84913580146}>, <Invited review: machine learning for materials developments in metals additive manufacturing, {eid: 85096006396}>, <Towards mlops: A framework and maturity model, {eid: 85119201202}>, <None, {eid: 85175049393}>, <Controlling interdependent meso-nanosecond dynamics and defect generation in metal 3D printing, {eid: 85085008338}>, <Streamlining the additive manufacturing digital spectrum: a systems approach, {eid: 84923081838}>, <Toward a digital thread and data package for metals-additive manufacturing, {eid: 85052125005}>, <An approach for composing predictive models from disparate knowledge sources in smart manufacturing environments, {eid: 85031926326}>, <What are decision trees?, {eid: 51349111653}>, <Machine learning and knowledge graph based design rule construction for additive manufacturing, {eid: 85092356888}>, <Machine learning based continuous knowledge engineering for additive manufacturing, {eid: 85072989581}>, <None, {eid: 0003410791}>, <K-nearest neighbors, {eid: 84959107725}>, <Machine learning operations (mlops): Overview, definition, and architecture, {eid: 85134392928}>, <Faster temperature prediction in the powder bed fusion process through the development of a surrogate model, {eid: 85105699404}>, <Toward zero defect manufacturing with the support of artificial intelligenceâinsights from an industrial application, {eid: 85149173024}>, <Review on quality control methods in metal additive manufacturing, {eid: 85102127776}>, <augmented reality, cyber-physical systems, and feedback control for additive manufacturing: a review, {eid: 85065058678}>, <An ontology-oriented knowledge methodology for process planning in additive layer manufacturing, {eid: 85044150707}>, <None, {eid: 85175024934}>, <Metal-based additive manufacturing condition monitoring methods: from measurement to control, {eid: 85102995747}>, <Additive manufacturing of structural materials, {eid: 85103581845}>, <Digital twin-enabled collaborative data management for metal additive manufacturing systems, {eid: 85125680828}>, <Machine Learning-enabled feedback loops for metal powder bed fusion additive manufacturing, {eid: 85093360705}>, <Machine learning for knowledge transfer across multiple metals additive manufacturing printers, {eid: 85101382260}>, <None, {eid: 0003602164}>, <Towards an integrated data schema design for additive manufacturing: conceptual modeling, {eid: 84978976114}>, <A collaborative data management system for additive manufacturing. in International design engineering technical conferences and computers and information in engineering conference, {eid: 85175006934}>, <Camera-based coaxial melt pool monitoring data registration for laser powder bed fusion additive manufacturing, {eid: 85101248921}>, <Applications of machine learning in process monitoring and controls of L-PBF additive manufacturing: a review, {eid: 85121233680}>, <Overview of non-destructive evaluation techniques for metal-based additive manufacturing, {eid: 85067640190}>, <Toward an integrated computational system for describing the additive manufacturing process for metallic materials, {eid: 84915789011}>, <Cyber acoustic analysis of additively manufactured objects, {eid: 85040952851}>, <librosa: audio and music signal analysis in python, {eid: 84973347802}>, <None, {eid: 85175056834}>, <Recurrent neural networks: design and applications, {eid: 0004069064}>, <The potential of additive manufacturing in the smart factory industrial 4.0: a review, {eid: 85072373457}>, <Machine learning in additive manufacturing: a review, {eid: 85083854723}>, <Overview of additive manufacturing informatics:âa digital threadâ, {eid: 85016157772}>, <Towards vision-based closed-loop additive manufacturing: a review, {eid: 85087496257}>, <Mechanistic artificial intelligence (mechanistic-AI) for modeling, design, and control of advanced manufacturing processes: Current state and perspectives, {eid: 85122618505}>, <A metallographic review of 3D printing/additive manufacturing of metal and alloy products and components, {eid: 85045386264}>, <Application of machine learning in fused deposition modeling: A review. in AIP Conference Proceedings, {eid: 85175082093}>, <None, {eid: 85175039149}>, <Continuous Eulerian tool path strategies for wire-arc additive manufacturing of rib-web structures with machine-learning-based adaptive void filling, {eid: 85084863391}>, <Thermal control of laser powder bed fusion using deep reinforcement learning, {eid: 85107970213}>, <Process monitoring for material extrusion additive manufacturing: a state-of-the-art review, {eid: 85106013289}>, <Signal processing with SciPy, {eid: 85083035857}>, <Deep learning with tensorflow: a review, {eid: 85074001158}>, <A framework for identifying and prioritizing data analytics opportunities in additive manufacturing, {eid: 85175097967}>, <Pytorch: an imperative style, high-performance deep learning library, {eid: 85090176877}>, <Scikit-learn: machine learning in Python, {eid: 80555140075}>, <A digital twin hierarchy for metal additive manufacturing, {eid: 85129570104}>, <Business models with additive manufacturingâopportunities and challenges from the perspective of economics and management, {eid: 84949495948}>, <Autoencoders, {eid: 85102400426}>, <Research and application of machine learning for additive manufacturing, {eid: 85124976638}>, <Applying neural-network-based machine learning to additive manufacturing: current applications, challenges, and future perspectives, {eid: 85069873413}>, <Status, comparison, and future of the representations of additive manufacturing data, {eid: 85062084956}>, <Deep learning-driven particle swarm optimisation for additive manufacturing energy optimisation, {eid: 85074398648}>, <Python machine learning, {eid: 84978659968}>, <In-process closed-loop control for stabilising the melt pool temperature in selective laser melting, {eid: 85069965935}>, <Ontology-based process map for metal additive manufacturing, {eid: 85117725839}>, <Ontology-based laser and thermal metamodels for metal-based additive manufacturing, {eid: 85007591746}>, <Data-driven modeling of thermal history in additive manufacturing, {eid: 85078015648}>, <3d is here: Point cloud library (pcl), {eid: 84871699277}>, <A cloud-based manufacturing control system with data integration from multiple autonomous agents, {eid: 85052998214}>, <None, {eid: 85175079936}>, <Feature Engineering in Additive Manufacturing, {eid: 85161364775}>, <Engineering of Additive Manufacturing Features for Data-Driven Solutions: Sources, Techniques, Pipelines, and Applications, {eid: 85175022909}>, <Challenges and opportunities in additive manufacturing data preparation, {eid: 85161374598}>, <Ontology-based knowledge representation for additive manufacturing, {eid: 85065250424}>, <Anomaly detection and classification in a laser powder bed additive manufacturing process using a trained computer vision algorithm, {eid: 85035797198}>, <Overview of materials qualification needs for metal additive manufacturing, {eid: 84955605501}>, <Interactive notebooks: sharing the code, {eid: 84924292102}>, <Microstructural control in metal laser powder bed fusion additive manufacturing using laser beam shaping strategy, {eid: 85075998761}>, <Edge computing: vision and challenges, {eid: 84987842183}>, <Unsupervised K-means clustering algorithm, {eid: 85084934885}>, <A review of unsupervised feature selection methods, {eid: 85061026421}>, <A review on non-destructive evaluation and characterization of additively manufactured components, {eid: 85161438281}>, <Support vector machines, {eid: 68949128341}>, <Introduction to multi-layer feed-forward neural networks, {eid: 0342871690}>, <None, {eid: 85175046153}>, <A review on process monitoring and control in metal-based additive manufacturing, {eid: 84924378016}>, <Distributed heterogeneous compute infrastructure for the study of additive manufacturing systems, {eid: 85088303938}>, <Dataâdriven approaches toward smarter additive manufacturing, {eid: 85122630296}>, <Introducing MLOps, {eid: 85115770919}>, <Image processing in python, {eid: 85016120728}>, <Convolutional neural network applications in additive manufacturing: a review, {eid: 85125535512}>, <Applied metallography, {eid: 85088417416}>, <SciPy 1.0: fundamental algorithms for scientific computing in Python, {eid: 85079119586}>, <scikit-image: image processing in Python, {eid: 84903840343}>, <Data-driven modeling of process, structure and property in additive manufacturing: a review and future directions, {eid: 85126105371}>, <Production planning for cloud-based additive manufacturingâA computer vision-based approach, {eid: 85062502010}>, <Model-based feedforward control of laser powder bed fusion additive manufacturing, {eid: 85076528035}>, <The FAIR guiding principles for scientific data management and stewardship, {eid: 85032172932}>, <None, {eid: 85081135868}>, <Detecting cyber-physical attacks in CyberManufacturing systems with machine learning methods, {eid: 85013677546}>, <Experimental study of the process failure diagnosis in additive manufacturing based on acoustic emission, {eid: 85059532149}>, <In situ monitoring methods for selective laser melting additive manufacturing process based on imagesâA review, {eid: 85115088190}>, <A sequential cross-product knowledge accumulation, extraction and transfer framework for machine learning-based production process modelling, {eid: 85169887382}>, <A knowledge-based process planning framework for wire arc additive manufacturing, {eid: 85086820545}>, <In-process data fusion for process monitoring and control of metal additive manufacturing, {eid: 85142485598}>, <A systematic review on data of additive manufacturing for machine learning applications: the data quality, type, preprocessing, and management, {eid: 85171822769}>, <Predictive manufacturability assessment system for laser powder bed fusion based on a hybrid machine learning model, {eid: 85102868085}>, <Applications of machine learning in metal powder-bed fusion in-process monitoring and control: status and challenges, {eid: 85161301392}>, <A knowledge transfer framework to support rapid process modeling in aerosol jet printing, {eid: 85101372951}>, <None, {eid: 85175089087}>, <Metal-based additive manufacturing condition monitoring: a review on machine learning based approaches, {eid: 85137684584}>, <Electrodynamic machine-learning-enhanced fault-tolerance of robotic free-form printing of complex mixtures, {eid: 85053531355}>, <Version control system: a review, {eid: 85053164602}>",,,Elsevier B.V.,,,2024-01-01,,,,,,,eng,,Journal,,,,2-s2.0-85175009245,False,False,True,True
70,,"Rademacher F. (AUID: 57015087900), Sorgalla J. (AUID: 57194283105), Wizenty P. (AUID: 57199279170), Sachweh S. (AUID: 54912166300), ZÃ¼ndorf A. (AUID: 56000503100)",,Graphical and textual model-driven microservice development,2019,Microservices: Science and Engineering,,,,,,,18,10.1007/978-3-030-31646-4_7,https://www.doi.org/10.1007/978-3-030-31646-4_7,"<IDiAL Institute, University of Applied Sciences and Arts Dortmund>, <Department of Computer Science and Electrical Engineering, University of Kassel>",,"Â© Springer Nature Switzerland AG 2020.Model-driven development (MDD) is an approach to software engineering that aims to enable analysis, validation, and code generation of software on the basis of models expressed with dedicated modeling languages. MDD is particularly useful in the engineering of complex, possibly distributed software systems. It is therefore sensible to investigate the adoption of MDD to support and facilitate the engineering of distributed software systems based on microservice architecture (MSA). This chapter presents recent insights from studying and developing two approaches for employing MDD in MSA engineering. The first approach uses a graphical notation to model the topology and interactions of MSA-based software systems. The second approach emerged from the first one and exploits viewpoint-based modeling to better cope with MSAâs inherent complexity. It also considers the distributed nature of MSA teams, as well as the technology heterogeneity introduced by MSA adoption. Both approaches are illustrated and discussed in the context of a case study. Moreover, we present a catalog of research questions for subsequent investigation of employing MDD to support and facilitate MSA engineering.","Metamodeling, Microservice architecture, Model-driven development, Modeling languages, Software architecture, Software design",,,,,,,,"<Infrastructure-as-code for data-intensive architectures: A model-driven development approach, {eid: 85051103640}>, <Microservices architecture enables DevOps: Migration to a cloud-native architecture, {eid: 84968796741}>, <None, {eid: 0004025223}>, <Towards integrating microservices with adaptable enterprise architecture, {eid: 84992626303}>, <Microservices in industry: Insights into technologies, characteristics, and software quality, {eid: 85066486037}>, <None, {eid: 85023646999}>, <None, {eid: 85054938535}>, <Model-driven generation of microservice architectures for benchmarking performance and resilience engineering approaches, {eid: 85019479213}>, <None, {eid: 4644300495}>, <None, {eid: 2942742234}>, <Model-driven development of complex software: A research roadmap, {eid: 34748861160}>, <Collaborative model-driven software engineering: A classification framework and a research map, {eid: 85030632465}>, <Classification of concrete textual syntax mapping approaches, {eid: 70349852882}>, <None, {eid: 0003518498}>, <Towards recovering the software architecture of microservice-based systems, {eid: 85025689600}>, <The hidden dividends of microservices, {eid: 84976307780}>, <Investigation of impacts on network performance in the advance of a microservice design, {eid: 85024389666}>, <Model transformation intents and their properties, {eid: 84904275821}>, <Models in software engineering-an introduction, {eid: 14244260708}>, <Comparison of a textual versus a graphical notation for the maintainability of MDE domain models: An empirical pilot study, {eid: 84949748738}>, <None, {eid: 84908871569}>, <None, {eid: 85010410859}>, <None, {eid: 84950338538}>, <None, {eid: 84870676587}>, <None, {eid: 0013137299}>, <None, {eid: 84886743417}>, <None, {eid: 85118523856}>, <Why looking isnât always seeing: Readership skills and graphical programming, {eid: 0029327901}>, <Challenges of domain-driven microservice design: A model-driven perspective, {eid: 85046890847}>, <Microservice architecture and model-driven development: Yet singles, soon married (?), {eid: 85058570602}>, <Aspect-oriented modeling of technology heterogeneity in microservice architecture, {eid: 85065789976}>, <A model-driven workflow for distributed microservice development, {eid: 85065640931}>, <Viewpoint-specific model-driven microservice development with interlinked modeling languages, {eid: 85065782256}>, <None, {eid: 85010958676}>, <All the services large and micro: Revisiting industrial practice in services computing, {eid: 84964803678}>, <Ajil: Enabling model-driven microservice development, {eid: 85055702323}>, <None, {eid: 74549142762}>, <On the definition of microservice bad smells, {eid: 85046708734}>, <None, {eid: 85044973439}>, <The state of practice in model-driven engineering, {eid: 84899687758}>",,,Springer International Publishing,,,2019-01-01,,,,,,,eng,,Book,,,,2-s2.0-85086303989,True,True,True,True
71,,"Mihoubi B. (AUID: 57160129100), Bouzouia B. (AUID: 6602694007), Tebani K. (AUID: 57191279415), Gaham M. (AUID: 35317402100)",,Hardware in the loop simulation for product driven control of a cyber-physical manufacturing system,2020,Production Engineering,,,,,,,11,10.1007/s11740-020-00957-w,https://www.doi.org/10.1007/s11740-020-00957-w,"<Laboratoire (LERICA), UniversitÃ© Badji Mokhtar>, <Division Productique et Robotique, Centre de DÃ©veloppement des Technologies AvancÃ©es (CDTA)>",,"Â© 2020, German Academic Society for Production Engineering (WGP).Cyber-physical system (CPS) is considered as a building block of industry 4.0. They are formulated as a network of interacting cyberspace and physical elements. Dealing with this new industrial context, distributed control systems (DCS) are increasingly involved because they permit meeting flexibility and adaptability requirements, which can give scope to CPS. The product driven control system (PDS) is considered as DCS in which the product plays a major role in decision-making. However, the PDS paradigm has not yet received sufficient attention within the CPS. Relying on multi-agents system as implementation framework, radio frequency identity as auto-identity technologies, and hardware in the loop simulation as a practical methodology, the paper proposes a validation and practical framework of PDS applied to the highly automated flexible robotized assembly system. An efficient CPS is developed for a discrete flexible manufacturing system.","Cyber-physical systems, Distributed control system, Hardware in the loop simulation, Multi-agents system, Product driven system, RFID technologies",,,,,,,,"<Past, present and future of Industry 4.0âa systematic literature review and research agenda proposal, {eid: 85018651607}>, <Glocalized cyber physical production systems, {eid: 84869491730}>, <Integration of classical components into industrial cyber physical systems, {eid: 84964264756}>, <The expected contribution of Industry 4.0 technologies for industrial performance, {eid: 85053112719}>, <Smart agents in industrial cyberâphysical systems, {eid: 84977992593}>, <Classification of cyber-physical production systems applications: proposition of an analysis framework, {eid: 85054842368}>, <Industry 4.0: a way from mass customization to mass personalization production, {eid: 85038089248}>, <Cyber-physical systems in manufacturing, {eid: 84990841502}>, <A cyber-physical systems architecture for industry 4.0-based manufacturing systems, {eid: 84921300723}>, <Review of job shop scheduling research and its new perspectives under Industry 4.0, {eid: 85028015443}>, <Agent-based systems for intelligent manufacturing: a state-of-the-art survey, {eid: 85133749042}>, <Reducing myopic behavior in FMS control: a semi-heterarchical simulationâoptimization approach, {eid: 84902547429}>, <None, {eid: 84958520292}>, <Distributed maintenance planning in manufacturing industries, {eid: 85017101376}>, <On agent-based software engineering, {eid: 0033904095}>, <Ant colony intelligence in multi-agent dynamic manufacturing scheduling, {eid: 36249018423}>, <The performance of product-driven manufacturing control: an emulation-based benchmarking study, {eid: 60249088993}>, <Design and validation of a product-driven control system based on a six sigma methodology and discrete event simulation, {eid: 70349105124}>, <How smart, connected products are transforming competition, {eid: 84908338932}>, <None, {eid: 85015544037}>, <The intelligent product in manufacturing control and management, {eid: 84867041018}>, <Intelligent products: a survey, {eid: 60249087640}>, <Product intelligence in industrial control: theory and practice, {eid: 84878255100}>, <Intelligent products: the grace experience, {eid: 84934895148}>, <Agent and cyber-physical system based self-organizing and self-adaptive intelligent shopfloor, {eid: 85014892131}>, <A cyber-physical view of automated warehouse systems, {eid: 85000916490}>, <Auto ID systems and intelligent manufacturing control, {eid: 0141792959}>, <RFID enabled manufacturing: fundamentals, methodology and applications, {eid: 34248383959}>, <Intelligent and integrated RFID (II-RFID) system for improving traceability in manufacturing, {eid: 84937697577}>, <An RFID-based intelligent decision support system architecture for production monitoring and scheduling in a distributed manufacturing environment, {eid: 84915733989}>, <None, {eid: 85042136723}>, <Semi-heterarchical architecture to AGV adjustable autonomy within FMSs, {eid: 85075903057}>, <Self-aware smart products: systematic literature review, conceptual design and prototype implementation, {eid: 85029876301}>, <Simulation in agent-oriented software engineering: the SODA case study, {eid: 84875701894}>, <Model-based systems engineering: motivation, current status, and research opportunities, {eid: 85046694426}>, <Online verification in cyber-physical systems: practical bounds for meaningful temporal costs, {eid: 85043704724, doi: 10.1002/smr.1880}>, <A testbed architecture for auto-ID technologies, {eid: 33645709889}>, <None, {eid: 85061083191}>, <From hardware-in-the-loop to hybrid process simulation: an ontology for the implementation phase of a manufacturing system, {eid: 84855348243}>, <State of the art: hardware in the loop modeling and simulation with its applications in design, development and implementation of system and control software, {eid: 84975263079}>, <A digital twin-based approach for designing and multi-objective optimization of hollow glass production line, {eid: 85032451877}>, <Virtual fusion: a hybrid environment for improved commissioning in manufacturing systems, {eid: 85020281121}>, <The complexity of flowshop and jobshop scheduling, {eid: 0016952078}>, <Classification of flexible manufacturing systems, {eid: 0000424475}>, <None, {eid: 84889374036}>, <None, {eid: 84897708830}>, <A learning algorithm for optimizing continuous integration development and testing practice, {eid: 85056634616}>, <Improving software testing process: feature prioritization to make winners of success-critical stakeholders, {eid: 84871458054}>, <Benchmarking flexible job-shop scheduling and control systems, {eid: 84879820648}>, <None, {eid: 85082797379}>, <Coupling a genetic algorithm with the distributed arrival-time control for the JIT dynamic scheduling of flexible job-shops, {eid: 84898023488}>, <A survey of dynamic scheduling in manufacturing systems, {eid: 68249099005}>, <A simulation optimisation approach for real-time scheduling in an open shop environment using a composite dispatching rule, {eid: 85017279176}>, <A neural network meta-model for identification of optimal combination of priority dispatching rules and makespan in a deterministic job shop scheduling problem, {eid: 84888638744}>, <Flexsim simulation environment, {eid: 0036923904}>, <Hardware in the loop simulation of production systems dynamics, {eid: 79956275643}>, <A rule-based harmony search simulation-optimization approach for intelligent control of a robotic assembly cell, {eid: 85082806578}>, <A stigmergic approach for dynamic routing of active products in FMS, {eid: 60249085603}>, <None, {eid: 85086606612}>",,,Springer,,,2020-06-01,,,,,,,eng,,Journal,,,,2-s2.0-85082823339,False,False,False,False
72,,"Kusmenko E. (AUID: 57195075206), Rumpe B. (AUID: 55861872700), Schneiders S. (AUID: 57204735174), Von Wenckstern M. (AUID: 57188928304)",,Highly-optimizing and multi-target compiler for embedded system models :C++ compiler toolchain for the component and connector language Embeddedmontiarc,2018,"21st ACM/IEEE International Conference on Model Driven Engineering Languages and Systems, MODELS 2018",,,,,,,16,10.1145/3239372.3239388,https://www.doi.org/10.1145/3239372.3239388,"<Software Engineering, RWTH Aachen University>",,"Â© 2018 Copyright held by the owner/author(s). Publication rights licensed to ACM.Component and Connector (C&C) models, with their corresponding code generators, are widely used by large automotive manufacturers to develop new software functions for embedded systems interacting with their environment; C&C example applications are engine control, remote parking pilots, and traffic sign assistance. This paper presents a complete toolchain to design and compile C&C models to highly-optimized code running on multiple targets including x86/x64, ARM and WebAssembly. One of our contributions are algebraic and threading optimizations to increase execution speed for computationally expensive tasks. A further contribution is an extensive case study with over 50 experiments. This case study compares the runtime speed of the generated code using different compilers and mathematical libraries. These experiments showed that programs produced by our compiler are at least two times faster than the ones compiled by MATLAB/Simulink for machine learning applications such as image clustering for object detection. Additionally, our compiler toolchain provides a complete model-based testing framework and plug-in points for middleware integration. We make all materials including models and toolchains electronically available for inspection and further research.","Code generation, Model-driven software engineering",,,,,,,,"<A decade of agile methodologies: Towards explaining agile software development, {eid: 84859527852}>, <Accurate real-time relative localization using single-frequency GPS, {eid: 84914155190}>, <None, {eid: 85056908316}>, <None, {eid: 0003761296}>, <An open source modelica graphic editor integrated with electronic notebooks and interactive simulation, {eid: 84861903229}>, <None, {eid: 85056824435}>, <An Open Continuous Deployment Infrastructure for a Self-driving Vehicle Ecosystem, {eid: 84971500502}>, <Component and connector views in practice: An experience report, {eid: 85040631558}>, <None, {eid: 85056841349}>, <None, {eid: 85056814209}>, <None, {eid: 85056883752}>, <None, {eid: 84899089919}>, <None, {eid: 85020420641}>, <None, {eid: 85056834473}>, <OpenModelica-A free open-source environment for system modeling, simulation, and teaching, {eid: 43049176427}>, <Simulation framework for executing component and connector models of self-driving vehicles, {eid: 85041433031}>, <Engineering tagging languages for DSLs, {eid: 84961634193}>, <None, {eid: 85056851283}>, <Model-Based Development of Self-Adaptive Autonomous Vehicles using the SMARDT Methodology, {eid: 85052024078}>, <Lead system transformation for pooling of body surface map data: A surface Laplacian approach, {eid: 0028820812}>, <None, {eid: 0004193224}>, <None, {eid: 85053070397}>, <None, {eid: 85056850193}>, <None, {eid: 33646566908}>, <None, {eid: 77952650268}>, <Hyperthreading technology in the netburst microarchitecture, {eid: 0038633602}>, <Modeling architectures of cyber-physical systems, {eid: 85025124378}>, <LLVM: A compilation framework for lifelong program analysis & transformation, {eid: 3042658703}>, <None, {eid: 85056884212}>, <The inverse of a tridiagonal matrix, {eid: 0035631290}>, <Consistent extra-functional properties tagging for component and connector models, {eid: 85025163766}>, <None, {eid: 85056822022}>, <None, {eid: 85056851928}>, <None, {eid: 85056861453}>, <None, {eid: 85056861453}>, <None, {eid: 85056824273}>, <None, {eid: 85056811269}>, <None, {eid: 85056813951}>, <None, {eid: 85056815825}>, <None, {eid: 85056904808}>, <On spectral clustering: Analysis and an algorithm, {eid: 84899013108}>, <ROS: An open-source Robot Operating System, {eid: 77957352104}>, <None, {eid: 85056817186}>, <Armadillo: A template-based C++ library for linear algebra, {eid: 85017260755}>, <A survey of Cyber-Physical Systems, {eid: 84555177840}>, <None, {eid: 85033687701}>, <None, {eid: 4043148124}>, <None, {eid: 85034754239}>, <A tutorial on spectral clustering, {eid: 34548583274}>, <None, {eid: 85056874045}>, <None, {eid: 85056810104}>, <None, {eid: 85056810104}>, <Intel math kernel library, {eid: 84945118616}>, <None, {eid: 85056807163}>, <None, {eid: 84947908098}>, <Emscripten: An LLVM-to-JavaScript compiler, {eid: 81355123361}>, <Test-driven modeling for model-driven development, {eid: 4644363382}>",,,"Association for Computing Machinery, Inc",,,2018-10-14,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85056871758,True,False,True,False
73,,"Brito M. (AUID: 58085862600), Cunha J. (AUID: 23983985900), Saraiva J. (AUID: 57203315736)",,Identification of microservices from monolithic applications through topic modelling,2021,"36th Annual ACM Symposium on Applied Computing, SAC 2021",,,,,,,14,10.1145/3412841.3442016,https://www.doi.org/10.1145/3412841.3442016,"<University of Minho>, <University of Minho, HASLab/INESC Tec>",,"Â© 2021 ACM.Microservices emerged as one of the most popular architectural patterns in the recent years given the increased need to scale, grow and flexibilize software projects accompanied by the growth in cloud computing and DevOps. Many software applications are being submitted to a process of migration from its monolithic architecture to a more modular, scalable and flexible architecture of microservices. This process is slow and, depending on the project's complexity, it may take months or even years to complete. This paper proposes a new approach on microservice identification by resorting to topic modelling in order to identify services according to domain terms. This approach in combination with clustering techniques produces a set of services based on the original software. The proposed methodology is implemented as an open-source tool for exploration of monolithic architectures and identification of microservices. A quantitative analysis using the state of the art metrics on independence of functionality and modularity of services was conducted on 200 open-source projects collected from GitHub. Cohesion at message and domain level metrics' showed medians of roughly 0.6. Interfaces per service exhibited a median of 1.5 with a compact interquartile range. Structural and conceptual modularity revealed medians of 0.2 and 0.4 respectively. Our first results are positive demonstrating beneficial identification of services due to overall metrics' results.",,,,,,,,,"<None, {eid: 85104946324}>, <None, {eid: 85105021364}>, <Microservices migration patterns, {eid: 85054788373}>, <Latent dirichlet allocation, {eid: 0141607824}>, <Fast unfolding of communities in large networks, {eid: 56349094785}>, <Understanding the factors that impact the popularity of github repositories, {eid: 85013103870}>, <Using cohesion and coupling for software remodularization: Is it enough?, {eid: 84978101496}>, <None, {eid: 85045955954}>, <None, {eid: 85104944007}>, <None, {eid: 85068383036}>, <Feature location in source code: A taxonomy and survey, {eid: 84875382544}>, <Resolution limit in community detection, {eid: 33846126275}>, <None, {eid: 85077195980}>, <Community structure in social and biological networks, {eid: 0037062448}>, <None, {eid: 84984794874}>, <Latent dirichlet allocation (lda) and topic modeling: Models, applications, a survey, {eid: 85057797692}>, <Service candidate identification from monolithic systems based on execution traces, {eid: 85106015844}>, <Functionality-oriented microservice extraction based on execution trace clustering, {eid: 85054018170}>, <Extracting candidates of microservices from monolithic application code, {eid: 85066800642}>, <Topic modeling: A comprehensive review, {eid: 85122847664}>, <Featuregathering dependency-based software clustering using dedication and modularity, {eid: 84873197599}>, <None, {eid: 84885991436}>, <Random walks, markov processes and the multiscale modular organization of complex networks, {eid: 84922728356}>, <Towards real-time community detection in large networks, {eid: 67649881239}>, <What are the dominant projects in the github python ecosystem?, {eid: 85010403220}>, <Extraction of microservices from monolithic software architectures, {eid: 85032372980}>, <None, {eid: 85105022711}>, <Modularity and community structure in networks, {eid: 33745012299}>, <None, {eid: 84950338538}>, <None, {eid: 84979776387}>, <On the criteria to be used in decomposing systems into modules, {eid: 0015482049}>, <How effectively is defective code actually tested? An analysis of junit tests in seven open source systems, {eid: 85056717868}>, <Topological and functional comparison of community detection algorithms in biological networks, {eid: 85064871520}>, <Exploring the space of topic coherence measures, {eid: 84926673043}>, <LDAvis: A method for visualizing and interpreting topics, {eid: 84956473495}>, <Exploring topic coherence over many models and many topics, {eid: 84875509718}>, <Clustering classes in packages for program comprehension, {eid: 85018815330}>, <Exploring topic models in software engineering data analysis: A survey, {eid: 84983331655}>, <None, {eid: 84949178783}>",,,Association for Computing Machinery,,,2021-03-22,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85104997385,False,True,False,False
74,,"Jongeling R. (AUID: 57188564750), Carlson J. (AUID: 7402114423), Cicchetti A. (AUID: 22733357800)",,Impediments to Introducing Continuous Integration for Model-Based Development in Industry,2019,"45th Euromicro Conference on Software Engineering and Advanced Applications, SEAA 2019",,,,,,,12,10.1109/SEAA.2019.00071,https://www.doi.org/10.1109/SEAA.2019.00071,"<MÃ¤lardalen University, Department of Innovation, Design and Engineering>",,"Â© 2019 IEEE.Model-based development and continuous integration each separately are methods to improve the productivity of development of complex modern software systems. We investigate industrial adoption of these two phenomena in combination, i.e., applying continuous integration practices in model-based development projects. Through semi-structured interviews, eleven engineers at three companies with different modelling practices share their views on perceived and experienced impediments to this adoption. We find some cases in which this introduction is undesired and expected to not be beneficial. For other cases, we find and categorize several impediments and discuss how they are dealt with in industrial practice. Model synchronization and tool interoperability are found the most challenging to overcome and the ways in which they are circumvented in practice are detrimental for introducing continuous integration.","Continuous integration, Interview study, Model-based development",,,,,,,,"<Model-driven engineering, {eid: 33344465743}>, <Model-driven engineering in a large industrial context-motorola case study, {eid: 33646192696}>, <Empirical assessment of mde in industry, {eid: 79959917914}>, <An empirical study of the state of the practice and acceptance of model-driven engineering in four industrial cases, {eid: 84872279471}>, <Modelbased engineering in the embedded systems domain: An industrial survey on the state-of-practice, {eid: 84962207101}>, <Experienced benefits of continuous integration in industry software product development: A case study, {eid: 84875501070}>, <A hundred days of continuous integration, {eid: 52949092458}>, <None, {eid: 0006705483}>, <Agile model-driven development in practice, {eid: 78649730252}>, <Agile model-driven engineering in mechatronic systems-an industrial case study, {eid: 84921391979}>, <Combining the continuous integration practice and the model-driven engineering approach, {eid: 84981165314}>, <The impact of integrating agile software development and model-driven development: A comparative case study, {eid: 85054784046}>, <None, {eid: 36448929181}>, <Guidelines for conducting and reporting case study research in software engineering, {eid: 61849169018}>, <Model-driven engineering practices in industry: Social, organizational and managerial factors that lead to success or failure, {eid: 84900499307}>, <Climbing the stairway to heaven-a mulitiple-case study exploring barriers in the transition from agile development towards continuous deployment of software, {eid: 84869851477}>, <Continuous integration impediments in large-scale industry projects, {eid: 85021428023}>, <Continuous integration support in modeling tools, {eid: 85063092120}>, <The integration of agile development and model driven development-a systematic literature review, {eid: 85041446030}>, <Continuous integration beyond the team: A tooling perspective on challenges in the automotive industry, {eid: 84991687521}>, <Stepwise adoption of continuous delivery in model-driven engineering, {eid: 85080701791}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2019-08-28,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85075941988,True,True,False,False
75,,"Ali S. (AUID: 57203224747), Hafeez Y. (AUID: 58070344600), Abbasi T.R. (AUID: 57207735789), Haider W. (AUID: 57202746491), Salam A. (AUID: 57201505347), Imran M. (AUID: 58742772000)",,Improving Component Based Software Integration Testing Using Data Mining Technique,2018,"12th International Conference on Mathematics, Actuarial Science, Computer Science and Statistics, MACS 2018",,,,,,,3,10.1109/MACS.2018.8628368,https://www.doi.org/10.1109/MACS.2018.8628368,"<UIIT, PMAS Arid Agriculture University>, <National Center for Physics>",,"Â© 2018 IEEE.To increase rapid and high-quality product delivery, companies divide applications into different components and reuse these components to reduce complexity in product development. This increases agility and flexibility in continuous integration within limited resources. Consequently, interaction among reusable components results in mismatch of components specification and retrieval due to encapsulated functionalities. Therefore, most of the components-based software fail during integration testing. In this paper, we propose a framework for component based software specification and integration testing. The proposed framework considers multiple contexts for component specification and uses a data mining technique for improving the integration testing process. We evaluated the proposed framework using empirical study. The results show significant improvement for various parameters in the proposed framework as compared to traditional approaches of component based software development.","CBSE, components, generation, MBT, Sequence Diagram, test case, testing, UML",,,,,,,,"<A model-based testing technique for component-based real-time embedded systems, {eid: 84934300238}>, <A proposal for new software testing technique for component based software system, {eid: 85046336643}>, <Software paradigms, assessment types and non-functional requirements in model-based integration testing: A systematic literature review, {eid: 84905489438}>, <The AGEDIS tools for model-based testing, {eid: 23744455146}>, <A UML-based approach to system testing, {eid: 4344612500}>, <Automatic test generation: A use case driven approach, {eid: 33645820260}>, <Functional test case generation based on model driven testing using FSM and UML activity diagram, {eid: 85053265336}>, <A picture from the model-based testing area: Concepts, techniques, and challenges, {eid: 80052143861}>, <A model-based trace testing approach for validation of formal co-simulation models, {eid: 84928102507}>, <A UML-based approach to system testing, {eid: 4344612500}>, <Automated transition from use cases to UML state machines to support state-based testing, {eid: 79959243446}>, <Facilitating the transition from use case models to analysis models: Approach and experiments, {eid: 84874828402}>, <Automatic generation of system test cases from use case specifications, {eid: 84975763819}>, <A model-based trace testing approach for validation of formal co-simulation models, {eid: 84928102507}>, <A model-based test case generation method for function testing of Train Control Systems, {eid: 84995477028}>, <Towards an integrated approach to verification and model-based testing in system engineering, {eid: 85041811373}>, <An approach to generate test cases from sequence diagram, {eid: 84918590141}>, <Towards model-based integration of component-based automotive software systems, {eid: 85046253871}>, <An empirical study on the effect of testing on code quality using topic models: A case study on software development systems, {eid: 85023162278}>, <Comparing LDA and LSA topic models for content-based movie recommendation systems, {eid: 84952670175}>, <Stability of topic modeling via matrix factorization, {eid: 85028880663}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2018-11-24,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85062789555,False,True,True,False
76,,"Schulze C. (AUID: 57207719196), Cleaveland R. (AUID: 7004445501)",,Improving invariant mining via static analysis,2017,ACM Transactions on Embedded Computing Systems,,,,,,,3,10.1145/3126504,https://www.doi.org/10.1145/3126504,<University of Maryland>,,"Â© 2017 ACM.This paper proposes the use of static analysis to improve the generation of invariants from test data extracted from Simulink models. Previous work has shown the utility of such automatically generated invariants as a means for updating and completing system specifications; they also are useful as a means of understanding model behavior. This work shows how the scalability and accuracy of the data mining process can be dramatically improved by using information from data/control flow analysis to reduce the search space of the invariant mining and to eliminate false positives. Comparative evaluations of the process show that the improvements significantly reduce execution time and memory consumption, thereby supporting the analysis of more complex models, while also improving the accuracy of the generated invariants.","Automated test generation, Invariant mining, Model-based development, Verification and validation",,,,,,,,"<Automatic requirement extraction from test cases, {eid: 78650130252}>, <Semantic translation of simulink/stateflow models to hybrid automata using graph transformations, {eid: 10444269559}>, <Mining association rules between sets of items in large databases, {eid: 0027621699}>, <On the complexity of mining association rules, {eid: 3142659104}>, <Mining temporal invariants from partially ordered logs, {eid: 81055155516}>, <Simulation-directed invariant mining for software verification, {eid: 49749119976}>, <None, {eid: 84963820509}>, <The daikon system for dynamic detection of likely invariants, {eid: 35348872682}>, <None, {eid: 85030694687}>, <The SPMF open-source data mining library version 2, {eid: 84988603099}>, <Artshop: A continuous integration and quality assessment framework for model-based software artifacts, {eid: 84996742929}>, <Similarity measures in scientometric research: The jaccard index versus saltons cosine formula, {eid: 0024904643}>, <Mining frequent patterns without candidate generation, {eid: 0039253846}>, <Real-time heart model for implantable cardiac device validation and verification, {eid: 77958454649}>, <Modular code generation from synchronous block diagrams: Modularity vs. Code size, {eid: 67649868329}>, <Modular code generation fromtriggered and timed block diagrams, {eid: 51249100059}>, <Modularity vs. Reusability: Code generation fromsynchronous block diagrams, {eid: 49749123427}>, <Tool for translating simulink models into input language of a model checker, {eid: 33845247797}>, <Exploratory mining and pruning optimizations of constrained associations rules, {eid: 0032092760}>, <A toolset for simulink: Improving software engineering practices in development with simulink, {eid: 84939537353}>, <Mining frequent itemsets with convertible constraints, {eid: 0035016447}>, <GoldMine: Automatic assertion generation using data mining and static analysis, {eid: 77953089806}>, <None, {eid: 0003639957}>",,,Association for Computing Machinery,,,2017-09-01,,,,,,,eng,,Journal,,,,2-s2.0-85030672741,True,False,True,False
77,,"Nogueira A. (AUID: 55370436500), Zenha-Rela M. (AUID: 25823576100), Ribeiro J. (AUID: 55947747200), Craske A. (AUID: 57205728517)",,Improving la redoute's CI/CD pipeline and devops processes by applying machine learning techniques,2018,"11th International Conference on the Quality of Information and Communications Technology, QUATIC 2018",,,,,,,24,10.1109/QUATIC.2018.00050,https://www.doi.org/10.1109/QUATIC.2018.00050,"<CISUC, University of Coimbra, PÃ³lo II - Pinhal de Marrocos>, <Polytechnic Institute of Leiria, Morro Do Lena - Alto Do Vieiro>, <La Redoute S.A>",,"Â© 2018 IEEE.The complexity inherent to software development and maintenance - not only in technical terms, but also from a human perspective - entails challenges that can be addressed as learning problems. Machine learning techniques may be employed as tools to gain insight about strategies that can lead to the improvement of the quality of software processes and products. Defect proneness prediction, in particular, may be identified as an active research field. As stated by DevOps guidelines, the possibility of obtaining quick feedback allows teams to operate in an agile mode in which communication, decision taking and problem solving are expeditious, allowing companies to boost business value. This paper describes ongoing research for applying machine learning techniques to improve the quality of processes and products inside the DevOps pipeline of the La Redoute's IT department.","CI/CD Pipeline, DevOps, Machine Learning, Software Defect Prediction, Software Development Life Cycle, Software Quality",,,,,,,,"<A survey in the area of machine learning and its application for software quality prediction, {eid: 84886782277}>, <Comparative study of soft computing techniques for software quality model, {eid: 84891351072}>, <The dynamic models for software development projects and the machine learning techniques, {eid: 85061338820}>, <Predicting faults in high assurance software, {eid: 79951935271}>, <Software process evaluation: A machine learning approach, {eid: 84855456136}>, <Software process evaluation: A machine learning framework with application to defect management process, {eid: 84910019187}>, <A systematic review of machine learning techniques for software fault prediction, {eid: 84919754115}>, <Improved approach for software defect prediction using artificial neural networks, {eid: 85010505608}>, <A machine learning based software process model recommendation method, {eid: 84967329239}>, <None, {eid: 85018529770}>, <None, {eid: 85061311124}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2018-09-04,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85061305992,False,True,True,True
78,,"Barriga A. (AUID: 57207860282), Rutle A. (AUID: 26967894200), Heldal R. (AUID: 6602582740)",,Improving model repair through experience sharing,2020,Journal of Object Technology,,,,,,,12,10.5381/JOT.2020.19.2.A13,https://www.doi.org/10.5381/JOT.2020.19.2.A13,<Western Norway University of Applied Sciences>,,"Â© 2020 Association Internationale pour les Technologies Objets.In model-driven software engineering, models are used in all phases of the development process. These models may get broken due to various editions throughout their life-cycle. There are already approaches that provide an automatic repair of models, however, the same issues might not have the same solutions in all contexts due to different user preferences and business policies. Personalization would enhance the usability of automatic repairs in different contexts, and by reusing the experience from previous repairs we would avoid duplicated calculations when facing similar issues. By using reinforcement learning we have achieved the repair of broken models allowing both automation and personalization of results. In this paper, we propose transfer learning to reuse the experience learned from each model repair. We have validated our approach by repairing models using different sets of personalization preferences and studying how the repair time improved when reusing the experience from each repair.","Model repair, Reinforcement learning, Transfer learning",,,,,,,,"<Amor-towards adaptable model versioning, {eid: 79956310521}>, <None, {eid: 85075955114}>, <Apprenticeship learning via inverse reinforcement learning, {eid: 14344251217}>, <None, {eid: 85089507410}>, <Algorithms for hyper-parameter optimization, {eid: 85162384813}>, <Quality-driven detection and resolution of metamodel smells, {eid: 85061749093}>, <None, {eid: 34547932110}>, <Automatic model repair using reinforcement learning, {eid: 85063099879}>, <Personalized and automatic model repairing using reinforcement learning, {eid: 85075917035}>, <None, {eid: 85089540176}>, <None, {eid: 79953812664}>, <Interactive and incremental business process model repair, {eid: 85032666523}>, <Assessing uml model quality by utilizing metrics, {eid: 85061337719}>, <None, {eid: 84876381003}>, <An automated and instant discovery of concrete repairs for model inconsistencies, {eid: 85049674679}>, <Detecting and exploring side effects when repairing model inconsistencies, {eid: 85076794544}>, <Search-based detection of model level changes, {eid: 84988735029}>, <Assessing the quality of meta-models, {eid: 84911484484}>, <None, {eid: 85075956634}>, <Model repair and transformation with echo, {eid: 84893569792}>, <A feature-based classification of model repair approaches, {eid: 85029226586}>, <Rule-based repair of emf models: An automated interactive approach, {eid: 85025137338}>, <None, {eid: 85075941591}>, <Revision: A tool for history-based model repair recommendations, {eid: 85049665911}>, <Resolving model inconsistencies using automated regression planning, {eid: 84922337776}>, <A survey on transfer learning, {eid: 77956031473}>, <Computing repair trees for resolving inconsistencies in design models, {eid: 84866911610}>, <None, {eid: 0004007508}>, <None, {eid: 74549142762}>, <Change-preserving model repair, {eid: 85016408527}>, <Transfer learning, {eid: 84866381873}>, <The state of practice in model-driven engineering, {eid: 84899687758}>",,,Association Internationale pour les Technologies Objets,,,2020-07-01,,,,,,,eng,,Journal,,,,2-s2.0-85089499795,True,True,False,True
79,,"ZÃºÃ±iga-Prieto M. (AUID: 56524481200), Insfran E. (AUID: 6506793505), Abrahao S. (AUID: 8211929700), Cano-Genoves C. (AUID: 57192005049)",,Incremental integration of microservices in cloud applications,2016,"25th International Conference on Information Systems Development, ISD 2016",,,,,,,4,,,"<University of Cuenca>, <Universitat PolitÃ¨cnica de ValÃ¨ncia>",,"Microservices have recently appeared as a new architectural style that is native to the cloud. The high availability and agility of the cloud demands organizations to migrate or design microservices, promoting the building of applications as a suite of small and cohesive services (microservices) that are independently developed, deployed and scaled. Current cloud development approaches do not support the incremental integration needed for microservice platforms, and the agilityofgetting new functionalities out to customers is consequently affected by the lack of support for the integration design and automation of the development and deployment tasks. This paper presents an approach for the incremental integration of microservices that will allow developers to specify and design microservice integration, and provide mechanisms with which to automatically obtain the implementation code for business logic and interoperation among microservices along with deployment and architectural reconfiguration scripts specific to the cloud environment in which the microservice will be deployed.","Cloud, Cloud architectures, Incremental, Integration, Microservices",,,,,,,,"<None, {eid: 84864997201}>, <None, {eid: 84995906617}>, <UML-based cloud application modeling with libraries, profiles, and templates, {eid: 84911965669}>, <Towards CloudML, a modelbased approach to provision resources in the clouds, {eid: 84879762752}>, <SeaClouds: A European project on seamless management of multi-cloud applications, {eid: 84920511449}>, <Controlling data in the cloud: Outsourcing computation without outsourcing control, {eid: 74049093526}>, <Evaluating REST architectures-approach, tooling and guidelines, {eid: 84951064164}>, <None, {eid: 84995938045}>, <Development and deployment at facebook, {eid: 84880146979}>, <None, {eid: 84964234114}>, <The CloudMIG approach: Model-based migration of software systems to cloud-optimized apps, {eid: 84886445739}>, <Developing migratable multicloud applications based on MDE and adaptation techniques, {eid: 84884637858}>, <A UML profile for modeling multicloud applicat, {eid: 84885733995}>, <Service functional test automation, {eid: 84995934968}>, <None, {eid: 84858197925}>, <Designing a smart city internet of things platform with microservice architecture, {eid: 84959050879}>, <None, {eid: 84950338538}>, <None, {eid: 84867643299}>, <None, {eid: 85018761953}>, <Framework for platform agnostic enterprise app. Development supporting multiple clouds, {eid: 84937500863}>, <None, {eid: 84995934978}>, <None, {eid: 84950310360}>, <An incremental and model driven approach for the dynamic reconfiguration of cloud application architectures, {eid: 84992731072}>, <A UML profile for modeling the integration of cloud services in incremental software development (Spanish), {eid: 84995872488}>, <Towards a model-driven dynamic architecture reconfiguration process for cloud services integration, {eid: 84923259718}>",,,Association for Information Systems,,,2016-08-24,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-84995923681,False,False,False,False
80,,"Bergelin J. (AUID: 57713657400), Strandberg P.E. (AUID: 57193354005)",,Industrial requirements for supporting AI-enhanced model-driven engineering,2022,"25th ACM/IEEE International Conference on Model Driven Engineering Languages and Systems, MODELS 2022",,,,,,,1,10.1145/3550356.3561609,https://www.doi.org/10.1145/3550356.3561609,"<MÃ¤lardalen University>, <Westermo Network Technologies Ab>",,"Â© 2022 Owner/Author.There is an increasing interest in research on the combination of AI techniques and methods with MDE. However, there is a gap between AI and MDE practices, as well as between researchers and practitioners. This paper tackles this gap by reporting on industrial requirements in this field. In the AIDOaRt research project, practitioners and researchers collaborate on AI-Augmented automation supporting modeling, coding, testing, monitoring, and continuous development in cyber-physical systems. The project specifically lies at the intersection of industry and academia collaboration with several industrial use cases. Through a process of elicitation and refinement, 78 high-level requirements were defined, and generalized into 30 generic requirements by the AIDOaRt partners. The main contribution of this paper is the set of generic requirements from the project for enhancing the development of cyber-physical systems with artificial intelligence, DevOps, and model-driven engineering, identifying the hot spots of industry needs in the interactions of MDE and AI. Future work will refine, implement and evaluate solutions toward these requirements in industry contexts.","artificial intelligence, cyber-physical systems, model-driven engineering, requirements",,,,,,,,"<2018. A survey on modeling and model-driven engineering practices in the embedded software industry, {eid: 85053702722}>, <2016. AI-Augmented Automation for DevOps, a Model-Based Framework for Continuous Development in Cyber-Physical Systems, {eid: 85137201900}>, <2017 Model-driven software engineering in practice, {eid: 84878326137}>, <2021. What is the future of modeling?, {eid: 85101111198}>, <2017. Cognifying model-driven software engineering, {eid: 85042643413}>, <2019. Towards a model-based DevOps for cyber-physical systems, {eid: 85096956543}>, <2021. AIDOaRt: AI-Augmented Automation for DevOps, a Model-based Framework for Continuous Development in Cyber-Physical Systems, {eid: 85119884136}>, <2018 Testing embedded software: A survey of the literature, {eid: 85050473678}>, <2016 A systematic literature review of literature reviews in software testing, {eid: 84987968030}>, <2016 Challenges and best practices in industry-Academia collaborations in software engineering: A systematic literature review, {eid: 84980410074}>, <2019 the global landscape of AI ethics guidelines, {eid: 85089606091}>, <2007 A collection of definitions of intelligence, {eid: 85118477371}>, <2020. Towards an assessment grid for intelligent modeling assistance, {eid: 85096779067}>, <2021. An MDE Method for Improving Deep Learning Dataset Requirements Engineering using Alloy and UML, {eid: 85103060952}>, <None, {eid: 85142920011}>, <2006 Model-driven engineering, {eid: 38049090407}>, <2017. Continuous Integration Delivery and Deployment: A Systematic Review on Approaches Tools Challenges and Practices, {eid: 85019140530}>, <2021. Ethical AI-Powered Regression Test Selection, {eid: 85142931288}>",,,"Association for Computing Machinery, Inc",,,2022-10-23,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85142919611,True,True,False,False
81,,"KÅikava F. (AUID: 36175849100), Rouvoy R. (AUID: 23089521900), Seinturier L. (AUID: 6603303741)",,Infrastructure as runtime models: Towards Model-Driven resource management,2015,"18th ACM/IEEE International Conference on Model Driven Engineering Languages and Systems, MODELS 2015",,,,,,,3,10.1109/MODELS.2015.7338240,https://www.doi.org/10.1109/MODELS.2015.7338240,"<Czech Technical University>, <Inria / University of Lille>",,"Â© 2015 IEEE.The importance of continuous delivery and the emergence of tools allowing to treat infrastructure configurations programmatically have revolutionized the way computing resources and software systems are managed. However, these tools keep lacking an explicit model representation of underlying resources making it difficult to introspect, verify or reconfigure the system in response to external events. In this paper, we outline a novel approach that treats system infrastructure as explicit runtime models. A key benefit of using such models@run.time representation is that it provides a uniform semantic foundation for resources monitoring and reconfiguration. Adopting models at runtime allows one to integrate different aspects of system management, such as resource monitoring and subsequent verification into an unified view which would otherwise have to be done manually and require to use different tools. It also simplifies the development of various self-adaptation strategies without requiring the engineers and researchers to cope with low-level system complexities.","Biological system modeling, Cloud computing, Computational modeling, Monitoring, Object oriented modeling, Runtime, Virtual machining",,,,,,,,"<Software engineering for self-adaptive systems: A research roadmap, {eid: 70350033987}>, <None, {eid: 84941067484}>, <None, {eid: 84873544676}>, <Rainbow: Architecture-based self-adaptation with reusable infrastructure, {eid: 7244223259}>, <Integrating adaptation mechanisms using control theory centric architecture models: A case study, {eid: 84929652618}>, <ACTRESS: Domain-specific modeling of self-adaptive software architectures, {eid: 84905647601}>, <SIGMA: Scala internal domain-speciic languages for model manipulations, {eid: 84962490068}>, <Model querying with funnyQT, {eid: 84961653698}>, <Demonstration of runtime model based management of diverse cloud resources, {eid: 84961653696}>, <Modeling dynamic virtualized resource landscapes, {eid: 84864049213}>, <None, {eid: 74549142762}>, <Viewing control structures as patterns of passing messages, {eid: 0017504498}>, <Mechanisms for leveraging models at runtime in self-adaptive software, {eid: 84904817608}>, <Model-driven engineering of self-adaptive software with EUREMA, {eid: 84893551450}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2015-09-30,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-84961653122,True,True,False,False
82,,"Hua Y. (AUID: 57192067904), Hein B. (AUID: 23008891600)",,Interactive Learning Engineering Concepts in AutomationML,2019,"24th IEEE International Conference on Emerging Technologies and Factory Automation, ETFA 2019",,,,,,,2,10.1109/ETFA.2019.8869182,https://www.doi.org/10.1109/ETFA.2019.8869182,"<Faculty of Informatics, Karlsruhe Institute of Technology>, <Faculty of Management Science and Engineering, Karlsruhe University of Applied Science>",,"Â© 2019 IEEE.In the era of digitization, industrial engineering process generates a vast amount of data. To organize, store, and exchange such data, dedicated international standards are developed, including the XML-based data format AutomationML (AML). AML is standardized as IEC 62714 and is recommended for managing data flow in continuous engineering. Nevertheless, engineering data is inherently heterogeneous, and the harmonization of various data sources presents a bottleneck in the vision of an integrated engineering toolchain. In this paper, we present AMLLearner - a semi-automated system for learning engineering concepts from AML data. The results of learning are formal ontological definitions of engineering artifacts that naturally serve as knowledge for information integration. Based on the previous works on learning in AML, this paper emphasizes the involvement of end users, i.e. domain experts, for providing suggestions and feedback to the learner. To show the interactivity of AMLLearner, we discuss its characteristics regarding the recent study on interactive machine learning systems.",,,,,,,,,"<Concept for AutomationML-based interoperability between multiple independent engineering tools without semantic harmonization: Experiences with AutomationML, {eid: 85044442278}>, <Concept for managing multiple semantics with AutomationML Maturity level concept of semantic standardization, {eid: 84876369167}>, <Knowledge-based integration of industrial plant models, {eid: 84893616803}>, <Modeling AutomationML: Semantic web technologies vs. Model-driven engineering, {eid: 84952900461}>, <Ontology building for cyber-physical systems: A domain expert-centric approach, {eid: 85055502867}>, <Concept learning in AutomationML with formal semantics and inductive logic programming, {eid: 85053811509}>, <Concept learning in engineering based on refinement operator, {eid: 85053754206}>, <Power to the people: The role of humans in interactive machine learning, {eid: 84920541067}>, <A review of user interface design for interactive machine learning, {eid: 85058625902}>, <Interpreting owl complex classes in automationml based on bidirectional translation (accepted), {eid: 85074194554}>, <AutomationML-The glue for seamless automation engineering, {eid: 56349149489}>, <The flow and reuse of data: Capabilities of AutomationML in the production system life cycle, {eid: 85049184054}>, <None, {eid: 84872893043}>, <None, {eid: 85074205030}>, <DL-learner-A framework for inductive learning on the semantic web, {eid: 84990248391}>, <Class expression learning for ontology engineering, {eid: 79951681303}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2019-09-10,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85074194830,True,True,True,False
83,,"Damasceno C.D.N. (AUID: 57125912500), Simao A.d.S. (AUID: 35618293600), Mousavi M.R. (AUID: 7005703024)",,Learning by sampling: learning behavioral family models from software product lines,2021,Empirical Software Engineering,,,,,,,10,10.1007/s10664-020-09912-w,https://www.doi.org/10.1007/s10664-020-09912-w,"<Universidade de Sao Paulo â Instituto de CiÃªncias MatemÃ¡ticas e de ComputaÃ§Ã£o>, <University of Leicester â Department of Informatics>",,"Â© 2021, The Author(s), under exclusive licence to Springer Science+Business Media, LLC part of Springer Nature.Family-based behavioral analysis operates on a single specification artifact, referred to as family model, annotated with feature constraints to express behavioral variability in terms of conditional states and transitions. Family-based behavioral modeling paves the way for efficient model-based analysis of software product lines. Family-based behavioral model learning incorporates feature model analysis and model learning principles to efficiently unify product models into a family model and integrate the behavior of various products into a behavioral family model. Albeit reasonably effective, the exhaustive analysis of product lines is often infeasible due to the potentially exponential number of valid configurations. In this paper, we first present a family-based behavioral model learning techniques, called FFSMDiff. Subsequently, we report on our experience on learning family models by employing product sampling. Using 105 products of six product lines expressed in terms of Mealy machines, we evaluate the precision of family models learned from products selected from different settings of the T-wise product sampling criterion. We show that product sampling can lead to models as precise as those learned by exhaustive analysis and hence, reduce the costs for family model learning.","Family model, Model learning, Software product lines, T-wise sampling",,,,,,,,"<Automata learning through counterexample guided abstraction refinement, {eid: 84866000299}>, <Model learning and model-based testing, {eid: 85051109384}>, <Incling: Efficient product-line testing using incremental pairwise sampling, {eid: 85084189184}>, <Delta-oriented product prioritization for similarity-based product-line testing, {eid: 85027114086}>, <Matching UML class diagrams using a hybridized greedy-genetic algorithm, {eid: 85040780347}>, <Reverse engineering feature models from software configurations using formal concept analysis, {eid: 84961377139}>, <Learning regular sets from queries and counterexamples, {eid: 0023453626, doi: 10.1016/0890-5401(87)90052-6}>, <None, {eid: 84979494516}>, <Exploring feature interactions in the wild: The new feature-interaction challenge, {eid: 84890043412}>, <A practical guide for using statistical tests to assess randomized algorithms in software engineering, {eid: 79959871222}>, <Formal description of variability in product families, {eid: 80054070983}>, <A compositional framework to derive product line behavioural descriptions, {eid: 84868275563}>, <Merging features in featured transition systems, {eid: 84960970353}>, <None, {eid: 51949106265}>, <Analyzing program behavior through active automata learning, {eid: 84906948261, doi: 10.1007/s10009-014-0333-2}>, <Automated analysis of feature models 20 years later: a literature review, {eid: 77955227439, doi: 10.1016/j.is.2010.01.001}>, <A survey on modeling techniques for formal behavioral verification of software product lines, {eid: 84961245105}>, <Inputâoutput conformance testing for software product lines, {eid: 85008682089, doi: 10.1016/j.jlamp.2016.09.007}>, <Basic behavioral models for software product lines: expressiveness and testing pre-orders, {eid: 84937604468, doi: 10.1016/j.scico.2015.06.005}>, <A study of variability models and languages in the systems software domain, {eid: 84890065386, doi: 10.1109/TSE.2013.34}>, <Similarity testing for access control, {eid: 84914157978, doi: 10.1016/j.infsof.2014.07.003}>, <When 150 % is too much: Supporting product centric viewpoints in an industrial product line, {eid: 84991628008}>, <Intraprocedural dataflow analysis for software product lines, {eid: 84860443937}>, <Part i. Testing of finite state machines, {eid: 85099089266}>, <On the use of a similarity function for test case selection in the context of model-based testing, {eid: 79957438659, doi: 10.1002/stvr.413}>, <Learning the language of error, {eid: 84951824160}>, <Testing software design modeled by finite-state machines, {eid: 0017973244, doi: 10.1109/TSE.1978.231496}>, <ProFeat: feature-oriented engineering for family-based probabilistic model checking, {eid: 85026898529, doi: 10.1007/s00165-017-0432-4}>, <A greedy heuristic for the set-covering problem, {eid: 0000301097, doi: 10.1287/moor.4.3.233}>, <None, {eid: 77954732987}>, <Model checking lots of systems: Efficient verification of temporal properties in software product lines, {eid: 77954715140}>, <Featured transition systems: foundations for verifying variability-intensive systems and their application to ltl model checking, {eid: 84883057503, doi: 10.1109/TSE.2012.86}>, <None, {eid: 0004161809}>, <Discovering models of software processes from event-based data, {eid: 0032108294, doi: 10.1145/287000.287001}>, <Generative programming for embedded software: An industrial experience report, {eid: 84937393539}>, <None, {eid: 15244361735}>, <Evaluating test characteristics and effectiveness of fsm-based testing methods on rbac systems, {eid: 85053674302}>, <Similarity testing for role-based access control systems, {eid: 85092437415, doi: 10.1186/s40411-017-0045-x}>, <Learning to reuse: Adaptive model learning for evolving systems, {eid: 85076982200}>, <Learning from difference: an automated approach for learning family models from software product lines, {eid: 85123041275}>, <Protocol state fuzzing of tls implementations, {eid: 84977530212}>, <None, {eid: 85099099939}>, <Covering spl behaviour with sampled configurations: An initial assessment, {eid: 84961237579}>, <Search-based similarity-driven behavioural SPL testing, {eid: 84961186674}>, <Distances and similarities in data analysis, {eid: 77953961475}>, <Feature models, grammars, and propositional formulas, {eid: 33646190894}>, <Evolutionary search-based test generation for software product line feature models, {eid: 84867835895}>, <None, {eid: 85099086425}>, <A taxonomy of software product line reengineering, {eid: 84897645145}>, <A foundation for behavioural conformance in software product line architectures, {eid: 34247370256}>, <Learning-based testing the sliding window behavior of tcp implementations, {eid: 85029512537}>, <None, {eid: 85072885003}>, <Hierarchical featured state machines, {eid: 85056800984, doi: 10.1016/j.scico.2018.10.001}>, <Extending HSI test generation method for software product lines, {eid: 85056787978, doi: 10.1093/comjnl/bxy046}>, <None, {eid: 0003690974}>, <Validated test models for software product lines: Featured finite state machines, {eid: 85018251728}>, <Statecharts: a visual formalism for complex systems, {eid: 0023365727, doi: 10.1016/0167-6423(87)90035-9}>, <Reverse engineering feature models from programsâ feature sets, {eid: 83455213219}>, <Bypassing the combinatorial explosion: using similarity to generate and prioritize t-wise test configurations for software product lines, {eid: 84904278397}>, <Robust confidence intervals for effect sizes: A comparative study of cohenâs d and cliffâs delta under non-normality and heterogeneous variances, {eid: 84870041220}>, <Family model mining for function block diagrams in automation software, {eid: 84907857152}>, <Adaptive learning for learn-based regression testing, {eid: 85053602861}>, <Domain-specific optimization in automata learning, {eid: 33750547975}>, <Chapter 3 - model inference and testing, {eid: 84875297940}>, <The open-source learnlib, {eid: 84951090020}>, <Properties of realistic feature models make combinatorial testing of product lines feasible, {eid: 80054081086}>, <A systematic review of effect size in software engineering experiments, {eid: 34648846182, doi: 10.1016/j.infsof.2007.02.015}>, <Feature-oriented domain analysis (Foda) feasibility study, {eid: 0003512056}>, <Formal verification of parallel programs, {eid: 0016972709, doi: 10.1145/360248.360251}>, <None, {eid: 84903617643}>, <Software fault interactions and implications for software testing, {eid: 3042622265, doi: 10.1109/TSE.2004.24}>, <Generation of failure models through automata learning, {eid: 84978245358}>, <A systematic mapping study on software product line evolution: from legacy system reengineering to product line refactoring, {eid: 84878225914, doi: 10.1016/j.scico.2012.05.003}>, <Results of the abbadingo one dfa learning competition and a new evidence-driven state merging algorithm, {eid: 84947908042}>, <A modal process logic, {eid: 0024140798}>, <Modal i/o automata for interface and product line theories, {eid: 37149013404}>, <The SAT4J library, release 2.2, system description, {eid: 79959232722}>, <None, {eid: 84892241478}>, <Comparative analysis of classical multi-objective evolutionary algorithms and seeding strategies for pairwise testing of software product lines, {eid: 84907860137}>, <Modeling and testing product lines with unbounded parametric real-time constraints, {eid: 85032295332}>, <None, {eid: 85059456237, doi: 10.1016/j.jss.2018.12.028}>, <Chapter four - recent advances in automatic black-box testing, {eid: 84945439434}>, <Software product line evolution: a systematic literature review, {eid: 85052991664, doi: 10.1016/j.infsof.2018.08.014}>, <Open science in software engineering, {eid: 85099092239}>, <Damascenodiego/learningFFSM: Learning By Sampling @ EMSE, {eid: 85099105115}>, <Benchmarks for automata learning and conformance testing, {eid: 85067967376}>, <Matching and merging of variant feature specifications, {eid: 84870554847, doi: 10.1109/TSE.2011.112}>, <Automated continuous quality assurance, {eid: 84864184192}>, <Feature model-based software product line testing, {eid: 84868286575}>, <Black box checking, {eid: 15844378350}>, <Automated and scalable t-wise test case generation strategies for software product lines, {eid: 77954510052}>, <Efficiency and early fault detection with lower and higher strength combinatorial interaction testing, {eid: 84883698011}>, <None, {eid: 84892351987}>, <Dynamic testing via automata learning, {eid: 70350430875, doi: 10.1007/s10009-009-0120-7}>, <Learnlib: A library for automata learning and experimentation, {eid: 33745790495}>, <None, {eid: 85072884659}>, <Chapter 7 - regression testing in software product line engineering, {eid: 84864138160}>, <Extraction of feature models from formal contexts, {eid: 80052652058}>, <Delta modeling and model checking of product families, {eid: 84886444473}>, <Deriving usage model variants for model-based testing: An industrial case study, {eid: 84908432976}>, <Delta-oriented programming of software product lines, {eid: 78049372449}>, <Software diversity: state of the art and perspectives, {eid: 84866293757, doi: 10.1007/s10009-012-0253-y}>, <Refactoring of legacy software using model learning and equivalence checking: An industrial experience report, {eid: 84977599369}>, <Incremental upgrade checking, {eid: 84943766997}>, <Inferring mealy machines, {eid: 70649106324}>, <Component-based product line development of avionics software, {eid: 33748286866}>, <Ralib: A learnlib extension for inferring efsms, {eid: 85099111588}>, <A systematic analysis of performance measures for classification tasks, {eid: 65649138430, doi: 10.1016/j.ipm.2009.03.002}>, <None, {eid: 85099089702}>, <Industrial evaluation of pairwise spl testing with moso-polite, {eid: 84857519681}>, <A survey of grammatical inference in software engineering, {eid: 84908351504, doi: 10.1016/j.scico.2014.05.008}>, <Developing a software product line for train control: A case study of CVL, {eid: 78049365870}>, <Modelling and analysing variability in product families: model checking of modal transition systems with variability constraints, {eid: 84996671077, doi: 10.1016/j.jlamp.2015.11.006}>, <Family-based model checking with mcrl2, {eid: 85016429689}>, <On the expressiveness of modal transition systems with variability constraints, {eid: 85054403553, doi: 10.1016/j.scico.2018.09.006}>, <Static analysis of featured transition systems: research, {eid: 85123043092}>, <A classification and survey of analysis strategies for software product lines, {eid: 84905827308, doi: 10.1145/2580950}>, <Featureide: an extensible framework for feature-oriented software development, {eid: 84885591794, doi: 10.1016/j.scico.2012.06.002}>, <Abstract features in feature modeling, {eid: 80054080510}>, <Effsize: Efficient effect size computation (v. 0.7.1), {eid: 85099081773}>, <A taxonomy of model-based testing approaches, {eid: 84862325128, doi: 10.1002/stvr.456}>, <Model learning, {eid: 85010790123, doi: 10.1145/2967606}>, <Philips consumer electronics software for televisions, {eid: 84892241478}>, <Philips medical systems, {eid: 84892241478}>, <Siemens medical solutions, {eid: 84892241478}>, <Presence-condition simplification in highly configurable systems, {eid: 84939514440}>, <A critique and improvement of the CL common language effect size statistics of McGraw and Wong, {eid: 0034411339, doi: 10.3102/10769986025002101}>, <A classification of product sampling for software product lines, {eid: 85055486094}>, <Discrete time markov chain families: Modeling and verification of probabilistic software product lines, {eid: 84890488509}>, <Failure diagnosis of automata, {eid: 0037917045, doi: 10.1007/BF01068590}>, <None, {eid: 85099095032}>, <None, {eid: 85099095032}>, <None, {eid: 85099095032}>, <Chapter 1 - reverse-engineering software behavior, {eid: 84882258522}>, <Automated comparison of state-based software models in terms of their language and structure, {eid: 84876138196, doi: 10.1145/2430545.2430549}>, <Systematic literature reviews, {eid: 84949178783}>, <None, {eid: 84949178783, doi: 10.1007/978-3-642-29044-2}>, <Regression testing minimization, selection and prioritization: a survey, {eid: 84857550008, doi: 10.1002/stv.430}>",,,Springer,,,2021-01-01,,,,,,,eng,,Journal,,,,2-s2.0-85099082851,False,False,True,True
84,,"Bertolino A. (AUID: 7006797074), Guerriero A. (AUID: 57205344124), Pietrantuono R. (AUID: 23135531000), Russo S. (AUID: 7102994111), Miranda B. (AUID: 56405278100)",,Learning-to-rank vs ranking-to-learn: Strategies for regression testing in continuous integration,2020,"42nd ACM/IEEE International Conference on Software Engineering, ICSE 2020",,,,,,,51,10.1145/3377811.3380369,https://www.doi.org/10.1145/3377811.3380369,"<Isti - Cnr>, <Universita di Napoli Federico Ii>, <Federal University of Pernambuco>",,"Â© 2020 Association for Computing Machinery.In Continuous Integr tion (CI), regression testing is constr ined by the time between commits. This dem nds for c reful selection nd/or prioritiz tion of test c ses within test suites too l rge to be run entirely. To this im, some M chine Le rning (ML) techniques h ve been proposed, s n ltern tive to deterministic ppro ches. Two bro d str tegies for ML-b sed prioritiz tion re le rning-tor nk nd wh t we c ll r nking-to-le rn (i.e., reinforcement le rning). V rious ML lgorithms c n be pplied in e ch str tegy. In this p per we introduce ten of such lgorithms for doption in CI pr ctices, nd perform comprehensive study comp ring them g inst e ch other using subjects from the Ap che Commons project.We n lyze the influence of sever l fe tures of the code under test nd of the test process. The results llow to dr w criteri to support testers in selecting nd tuning the technique th t best fits their context.","Continuous integration, Machine learning, Regression testing, Test prioritization, Test selection",,,,,,,,"<Learning for test prioritization: An industrial case study, {eid: 84997235107}>, <Scmamp: Statistical comparison of multiple algorithms in multiple problems, {eid: 85010411560}>, <An empirical study of the effect of time constraints on the cost-benefits of regression testing, {eid: 77950490739}>, <Machine learning applied to software testing: A systematic mapping study, {eid: 85074632279}>, <Techniques for improving regression testing in continuous integration development environments, {eid: 84986877429}>, <Advanced nonparametric tests for multiple comparisons in the design of experiments in computational intelligence and data mining: Experimental analysis of power, {eid: 77549084648}>, <Practical regression test selection with dynamic file dependencies, {eid: 84964268054}>, <Test prioritization in continuous integration environments, {eid: 85053760573}>, <Prioritizing manual test cases in traditional and rapid release environments, {eid: 84935083544}>, <Multivariate quality control, {eid: 0002199780}>, <Approximations of the critical region of the fbietkan statistic, {eid: 0001750957}>, <Test case prioritization approaches in regression testing: A systematic literature review, {eid: 85028775957}>, <Supporting continuous integration by code-churn based test selection, {eid: 84945976974}>, <Estimating mutual information, {eid: 84913560692}>, <System-level test case prioritization using machine learning, {eid: 85015360836}>, <An extensive study of static regression test selection in modern software evolution, {eid: 84997112179}>, <Linking software testing results with a machine learning approach, {eid: 84876919615}>, <None, {eid: 81855213402}>, <Self-improving reactive agents based on reinforcement learning, planning and teaching, {eid: 0000123778}>, <Feature selection using principal feature analysis, {eid: 37849000197}>, <None, {eid: 85094326943}>, <Taming google-scale continuous testing, {eid: 85026802755}>, <A hundred days of continuous integration, {eid: 52949092458}>, <None, {eid: 0003572833}>, <Identifying effective test cases through k-means clustering for enhancing regression testing, {eid: 84899440164}>, <The pervasiveness of data mining asnd machine learning, {eid: 85008020245}>, <On the use of a friedman-type statistic in balanced and unbalanced block designs, {eid: 0006278076}>, <Reinforcement learning for automatic test case prioritization and selection in continuous integration, {eid: 85026639599}>, <Experienced benefits of continuous integration in industry software product development: A case study, {eid: 84875501070}>, <Static test case prioritization using topic models, {eid: 84893811711}>, <Probabilistic principal component analysis, {eid: 0038959172}>, <Using the case-based ranking methodology for test case prioritization, {eid: 34547244888}>, <Reinforcement learning in continuous state and action spaces, {eid: 85042095332}>, <A study of regression test selection in continuous integration environments, {eid: 85059631520}>, <A learning-to-rank approach to software defect prediction, {eid: 85027924052}>, <Regression testing minimization, selection and prioritization: A survey, {eid: 84857550008}>, <Machine learning and software engineering, {eid: 3543055259}>",,,IEEE Computer Society,,,2020-06-27,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85094318353,False,False,False,False
85,,"LourenÃ§o H. (AUID: 57094816800), Tavares J. (AUID: 57220071537), EugÃ©nio R. (AUID: 57745495100), LourenÃ§o M. (AUID: 57220068344), SimÃµes T. (AUID: 57517471600)",,LUV is not the answer: Continuous delivery of a model driven development platform,2020,"23rd ACM/IEEE International Conference on Model Driven Engineering Languages and Systems, MODELS-C 2020",,,,,,,3,10.1145/3417990.3419502,https://www.doi.org/10.1145/3417990.3419502,<OutSystems>,,"Â© 2020 ACM.The OutSystems Platform is a visual model-driven development and delivery platform that allows developers to create enterprise-grade cross platform web and mobile applications. The platform consists of several inter-dependent components, most notably Service Studio, the Platform Server, and LifeTime. Service Studio is an integrated development environment used to create applications that are then compiled by the Platform Server. LifeTime is used to stage applications between different environments (e.g., development, testing, production). Our meta-model is versioned using a version number that we call Last Upgrade Version (LUV). Service Studio, the Platform Server, and the models they create/process are associated with a particular LUV. As a general rule, a platform component is only able to process models with the same LUV as the component itself. This approach is not very flexible: a change to the meta-model requires releasing a new set of platform components that our customers then need to install. Although there's low resistance to installing new versions of Service Studio, the same is not true for the Platform Server. Thus, for all practical purposes LUV changes are tied to releases of major versions of the OutSystems Platform. In this paper we share the techniques that allowed us to transition to a Continuous Delivery process in which our meta-model can evolve freely with no impact on our installed base.","Continuous delivery, Meta-model evolution, Model driven development, Model evolution",,,,,,,,"<None, {eid: 85096742698}>, <Approaches to co-evolution of metamodels and models: A survey, {eid: 85021770842}>, <None, {eid: 84956534232}>, <Metamodel-specific coupled evolution based ondynamically typed graph transformations, {eid: 84884323976}>, <Truechange (tm) under the hood: How we check the consistency of large models (almost) instantly, {eid: 85075948222}>, <Graph transformation concepts for meta-model evolution guaranteeing permanent type conformance throughout model migration, {eid: 84867880463}>, <None, {eid: 85080499649}>, <None, {eid: 85096618284}>",,,"Association for Computing Machinery, Inc",,,2020-10-16,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85096761857,True,False,False,False
86,,"Da Roza E.A. (AUID: 57451970300), Lima J.A.P. (AUID: 57191879945), Silva R.C. (AUID: 57451970400), Vergilio S.R. (AUID: 6506290092)",,Machine Learning Regression Techniques for Test Case Prioritization in Continuous Integration Environment,2022,"29th IEEE International Conference on Software Analysis, Evolution and Reengineering, SANER 2022",,,,,,,2,10.1109/SANER53432.2022.00034,https://www.doi.org/10.1109/SANER53432.2022.00034,"<Federal University of ParanÃ¡, Department of Computer Science>",,"Â© 2022 IEEE.Test Case Prioritization (TCP) techniques are a key factor in reducing the regression testing costs even more when Continuous Integration (CI) practices are adopted. TCP approaches based on failure history have been adopted in this context because they are more suitable for CI environment constraints: test budget and test case volatility, that is, test cases may be added or removed over the CI cycles. Promising approaches are based on Reinforcement Learning (RL), which learns with past prioritization, guided by a reward function. In this work, we introduce a TCP approach for CI environments based on the sliding window method, which can be instantiated with different Machine Learning (ML) algorithms. Unlike other ML approaches, it does not require retraining the model to perform the prioritization and any code analysis. As an alternative for the RL approaches, we apply the Random Forest (RF) algorithm and a Long Short Term Memory (LSTM) deep learning network in our evaluation. We use three time budgets and eleven systems. The results show the applicability of the approach considering the prioritization time and the time between the CI cycles. Both algorithms take just a few seconds to execute. The RF algorithm obtained the best performance for more restrictive budgets compared to the RL approaches described in the literature. Considering all systems and budgets, RF reaches Normalized Average Percentage of Faults Detected (NAPFD) values that are the best or statistically equivalent to the best ones in around 72% of the cases, and the LSTM network in 55% of them. Moreover, we discuss some implications of our results for the usage of the algorithms evaluated.","Continuous Integration, Machine Learning, Recurrent Neural Networks, Regression Testing",,,,,,,,"<Continuous software engineering: A roadmap and agenda, {eid: 84937109068}>, <Test case prioritization in continuous integration environments: A systematic mapping study, {eid: 85078708254}>, <Regression Testing Minimization, Selection and Prioritization: A Survey, {eid: 84857550008}>, <Techniques for Improving Regression Testing in Continuous Integration Development Environments, {eid: 84986877429}>, <Comparing White-box and Black-box Test Prioritization, {eid: 84971425590}>, <Learning-to-rank vs ranking-to-1earn: Strategies for regression testing in continuous integration, {eid: 85094318353}>, <Reinforcement Learning for Automatic Test Case Prioritization and Selection in Continuous Integration, {eid: 85026639599}>, <A multi-armed bandit approach for test case prioritization in continuous integration environments, {eid: 85095865061}>, <Machine learning for sequential data: A review, {eid: 84951778046}>, <Some aspects of the sequential design of experiments, {eid: 84966203785}>, <Random forests, {eid: 0035478854}>, <Long short-term memory, {eid: 0031573117}>, <Combinatorial Interaction Regression Testing: A Study of Test Case Generation and Prioritization, {eid: 47349111813}>, <None, {eid: 85135851250}>, <Test Case Prioritizationfor Continuous Regression Testing: An Industrial Case Study, {eid: 84891715780}>, <Multi-perspective Regression Test Prioritization for Time-Constrained Environments, {eid: 84962091042}>, <TITAN: Test Suite Optimization for Highly Configurable Software, {eid: 85020723577}>, <A learning algorithm for optimizing continuous integration development and testing practice, {eid: 85056634616}>, <Test case prioritization and selection technique in continuous integration development environments: A case study, {eid: 85047379940}>, <Test prioritization in continuous integration environments, {eid: 85053760573}>, <Learning for Test Prioritization: An Industrial Case Study, {eid: 84997235107}>, <None, {eid: 85061363347}>, <None, {eid: 85116290224}>, <None, {eid: 85104045394}>, <A framework for continuous regression and integration testing in loT systems based on deep learning and search-based techniques, {eid: 85097184092}>, <Clustering test cases in web application regression testing using se1forganizing maps, {eid: 84941274303}>, <LSTM-based deep learning for spatial-temporal software testing, {eid: 85084417507}>, <A survey on deep learning: Algorithms, techniques, and applications, {eid: 85053880872}>, <TERMINATOR: better automated ill test case prioritization, {eid: 85071929398}>, <None, {eid: 85135801841}>, <Test Case Prioritization: An Empirical Study, {eid: 0033326792}>, <Use of Ranks in One-Criterion Variance Analysis, {eid: 84943709252}>, <On a test of whether one of two random variables is stochastically larger than the other, {eid: 0002322469}>, <A comparison of alternative tests of significance for the problem of m rankings, {eid: 0001837148}>, <A Critique and Improvement of the CL Common Language Effect Size Statistics of McGraw and Wong, {eid: 0034411339}>, <None, {eid: 84944081816}>, <None, {eid: 84958264664}>, <None, {eid: 84971640658}>, <Scoot-learn: Machine learning in Python, {eid: 80555140075}>, <Geui: A federated testbed for innovative network experiments, {eid: 84897114787}>, <Robust prediction of fau1tproneness by random forests, {eid: 16244370106}>, <None, {eid: 85043308170}>, <None, {eid: 0003639957}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2022-03-15,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85135774956,False,False,True,True
87,,"Kirchhof J.C. (AUID: 57004585200), Kusmenko E. (AUID: 57195075206), Ritz J. (AUID: 57986533200), Rumpe B. (AUID: 55861872700), Moin A. (AUID: 57207861618), Badii A. (AUID: 17341855100), GÃ¼nnemann S. (AUID: 35242528700), Challenger M. (AUID: 55910368200)",,MDE for Machine Learning-Enabled Software Systems: A Case Study and Comparison of MontiAnna and ML-Quadrat,2022,"25th ACM/IEEE International Conference on Model Driven Engineering Languages and Systems, MODELS 2022",,,,,,,1,10.1145/3550356.3561576,https://www.doi.org/10.1145/3550356.3561576,"<Software Engineering, RWTH Aachen University>, <School of Computation, Information and Technology, Technical University of Munich>, <University of Antwerp and Flanders Make>, <Department of Computer Science, University of Reading>, <School of Computation, Information and Technology, Technical University of Munich and Munich Data Science Institute>, <Department of Computer Science, University of Antwerp and Flanders Make>",,"Â© 2022 ACM.In this paper, we propose to adopt the MDE paradigm for the development of Machine Learning (ML)-enabled software systems with a focus on the Internet of Things (IoT) domain. We illustrate how two state-of-The-Art open-source modeling tools, namely MontiAnna and ML-Quadrat can be used for this purpose as demonstrated through a case study. The case study illustrates using ML, in particular deep Artificial Neural Networks (ANNs), for automated image recognition of handwritten digits using the MNIST reference dataset, and integrating the machine learning components into an IoT-system. Subsequently, we conduct a functional comparison of the two frameworks, setting out an analysis base to include a broad range of design considerations, such as the problem domain, methods for the ML integration into larger systems, and supported ML methods, as well as topics of recent intense interest to the ML community, such as AutoML and MLOps. Accordingly, this paper is focused on elucidating the potential of the MDE approach in the ML domain. This supports the ML-engineer in developing the (ML/software) model rather than implementing the code, and additionally enforces reusability and modularity of the design through enabling the out-of-The-box integration of ML functionality as a component of the IoT or cyber-physical systems.","artificial intelligence, domain specific modeling, machine learning, model-driven engineering, tools",,,,,,,,"<None, {eid: 84888639273}>, <Machine learning at Microsoft with ML. NET, {eid: 85071184378}>, <None, {eid: 85140204632}>, <Artifact and Reference Models for Generative Machine Learning Frameworks and Build Systems, {eid: 85120851738}>, <None, {eid: 85142932200}>, <KNIME-The Konstanz Information Miner: Version 2.0 and beyond, {eid: 78651076564}>, <Model-Based Machine Learning, {eid: 84874128594}>, <None, {eid: 84990032982}>, <None, {eid: 84971640658}>, <Torch7: A Matlab-like Environment for Machine Learning, {eid: 84888340666}>, <Adanet: Adaptive structural learning of artificial neural networks, {eid: 85048410351}>, <None, {eid: 85142922493}>, <None, {eid: 84958264664}>, <Modeling Deep Reinforcement Learning Based Architectures for Cyber-Physical Systems, {eid: 85075937600}>, <The WEKA Data Mining Software: An Update, {eid: 76749092270}>, <ThingML: A Language and Code Generation Framework for Heterogeneous Targets, {eid: 85008457888}>, <None, {eid: 85074209842}>, <None, {eid: 85040582253}>, <The next evolution of MDE: A seamless integration of machine learning into domain modeling, {eid: 85019693871}>, <Modeling Dynamic Architectures of Self-Adaptive Cooperative Systems, {eid: 85075948566}>, <MontiThings: Model-driven Development and Deployment of Reliable IoT Applications, {eid: 85116410296}>, <None, {eid: 85142935266}>, <Modeling and Training of Neural Processing Systems, {eid: 85075936455}>, <On the Engineering of AI-Powered Systems, {eid: 85079270211}>, <Modeling Architectures of Cyber-Physical Systems, {eid: 85025124378}>, <Highly-Optimizing and Multi-Target Compiler for Embedded System Models: C++ Compiler Toolchain for the Component and Connector Language EmbeddedMontiArc, {eid: 85056871758}>, <Deep learning, {eid: 84930630277}>, <None, {eid: 84952760942}>, <None, {eid: 85076144943}>, <None, {eid: 85142926591}>, <A model-driven approach to machine learning and software modeling for the IoT, {eid: 85123102237}>, <None, {eid: 85142928357}>, <None, {eid: 85142924937}>, <Scikit-learn: Machine Learning in Python, {eid: 80555140075}>, <None, {eid: 85142927466}>, <None, {eid: 85142937433}>, <None, {eid: 85142925794}>, <The State of Practice in Model-Driven Engineering, {eid: 84899687758}>, <None, {eid: 85142920478}>",,,"Association for Computing Machinery, Inc",,,2022-10-23,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85142937814,False,False,True,True
88,,"Castellanos C. (AUID: 55418649100), Correal D. (AUID: 16306282100), Varela C.A. (AUID: 8382441200)",,Measuring performance quality scenarios in big data analytics applications: A DevOps and domain-specific model approach,2019,"13th European Conference on Software Architecture, ECSA 2019",,,,,,,0,10.1145/3344948.3344986,https://www.doi.org/10.1145/3344948.3344986,"<Universidad de los Andes>, <Rensselaer Polytechnic Institute>",,"Â© 2019 ACM.Big data analytics (BDA) applications use advanced analysis algorithms to extract valuable insights from large, fast, and heterogeneous data sources. These complex BDA applications require software design, development, and deployment strategies to deal with volume, velocity, and variety (3vs) while sustaining expected performance levels. BDA software complexity frequently leads to delayed deployments, longer development cycles and challenging performance monitoring. This paper proposes a DevOps and Domain Specific Model (DSM) approach to design, deploy, and monitor performance Quality Scenarios (QS) in BDA applications. This approach uses high-level abstractions to describe deployment strategies and QS enabling performance monitoring. Our experimentation compares the effort of development, deployment and QS monitoring of BDA applications with two use cases of near mid-air collisions (NMAC) detection. The use cases include different performance QS, processing models, and deployment strategies. Our results show shorter (re)deployment cycles and the fulfillment of latency and deadline QS for micro-batch and batch processing.","Big data analytics, DevOps, Domain specific model, Performance quality scenarios, Software architecture",,,,,,,,"<None, {eid: 85057250097}>, <Infrastructure-as-code for data-intensive architectures: A model-driven development approach, {eid: 85051103640}>, <None, {eid: 0004025223}>, <None, {eid: 84943326563}>, <Executing architectural models for big data analytics, {eid: 85057231099}>, <Agile big data analytics forweb-based systems: An architecture-centric approach, {eid: 85014709685}>, <Adaptive application performance management for big data stream processing, {eid: 84964475332}>, <A performance modeling framework for lambda architecture based applications, {eid: 85026670445}>, <Towards a model-driven design tool for big data architectures, {eid: 84974539619}>, <Towards model based approach to hadoop deployment and configuration, {eid: 84964299938}>, <A family of well-clear boundary models for the integration of uas in the nas, {eid: 85085403874}>, <Streaming big data processing in datacenter clouds, {eid: 84961627543}>, <None, {eid: 33751002702}>, <Scheduling of big data applications on distributed cloud based on qos parameters, {eid: 84939980804}>, <None, {eid: 70349441583}>",,,Association for Computing Machinery,,,2019-09-09,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85081976722,False,True,True,False
89,,"Liu Y. (AUID: 55976861600), Zhang L. (AUID: 56031107200), Laili Y. (AUID: 35220331000), Liu Y. (AUID: 36834231200), Zhang W. (AUID: 8688730900)",,Model maturity-based model service composition in cloud environments,2021,Simulation Modelling Practice and Theory,,,,,,,3,10.1016/j.simpat.2021.102389,https://www.doi.org/10.1016/j.simpat.2021.102389,"<School of Automation Science and Electrical Engineering, Beihang University (BUAA)>, <Engineering Research Center of Complex Product Advanced Manufacturing Systems Ministry of Education>, <Beijing Advanced Innovation Center for Big Data-Based Precision Medicine>, <School of Mechano-Electronic Engineering, Xidian University>, <School of Automation and Electrical Engineering University of Science and Technology Beijing>",,"Â© 2021 Elsevier B.V.With the development of cloud computing (CC), service-oriented architecture (SOA), and container technology, modeling and simulation (M&S) resources, such as simulation software and different sorts of models, can be shared and reused in a cloud environment. Modeling and Simulation as a Service (MSaaS), as a new paradigm, supports sharing simulation models or modeling tools and has enabled a wide range of model reuse. However, reusing or combining some immature models may result in inefficient M&S activities or even false simulation results. To make sure the appropriate reuse and composition of simulation models in cloud environments, which is also termed as model service composition for simulation (MSCS), this paper incorporates model maturity with service cooperation as a metric to evaluate the quality of model composition in cloud. Then, as a multi-objective optimization problem with multiple constraints, the MSCS problem and its process are described in detail. To solve the MSCS problem, a novel evolutionary algorithm named CA-AO-NSGAII is proposed. In the algorithm, adaptive crossover and mutation operators, as well as probabilistic initialization are developed. Furthermore, a half-local search algorithm in an elitist mechanism is designed for efficient decision-making. To validate the performance of CA-AO-NSGAII, experiments with respect to four different cases are conducted. Results show that the proposed method for addressing MSCS issue is effective and feasible.","Cloud computing, Evolutionary algorithm, Model maturity, Model service composition for simulation (MSCS), Modeling and simulation (M&S), MSaaS",,,,,,,,"<DEVS/SOA: A cross-platform framework for net-centric modeling and simulation in DEVS unified process, {eid: 67650606762}>, <A DEVS Based Modelling and Methodology-COSIM, {eid: 84896873864}>, <A Survey and Preliminary Research on Service Federation Based Modeling and Simulation, {eid: 84962081992}>, <A review of Web-based simulation and supporting tools, {eid: 74449088143}>, <Networked Modeling & Simulation Platform Based on Concept of Cloud Computing Cloud Simulation Platform, {eid: 70349400264}>, <None, {eid: 85113278460}>, <Modeling and simulation as a cloud service: a survey, {eid: 84894157608}>, <SimSaaS: simulation software-as-a-service, {eid: 84896330895}>, <Model maturity towards modeling and simulation: Concepts, index system framework and evaluation method, {eid: 85086280964}>, <Optimal Operation of Active Distribution Grids: a System of Systems Framework, {eid: 84899961551}>, <Real-time load balancing scheduling algorithm for periodic simulation models, {eid: 85027930932}>, <A Practical Guide to SysML: The Systems Modeling Language. In: A Practical Guide to SysML: The Systems Modeling Language, {eid: 85113275224, doi: 10.1115/DETC2004-57751}>, <None, {eid: 85113272704}>, <Onesaf: A product line approach to simulation development. Technical Report, {eid: 16244391261}>, <A formal basis for a theory of semantic composability, {eid: 25144477277}>, <CPN-Based Composition in Modeling Command and Control of Surface Air Defense, Communications and Information Processing, {eid: 85113275251}>, <SiMA: a discrete event system specification-based modelling and simulation framework to support model composability, {eid: 84868649406}>, <DEVS/SOA: a cross-platform framework for net-centric modeling and simulation in DEVS unified process, {eid: 67650606762}>, <Software frameworks for model composition, {eid: 84896285875}>, <The CloudSME simulation platform and its applications: A generic multi-cloud platform for developing and executing commercial cloud-based simulations, {eid: 85048935442}>, <Modeling and simulation as a service architecture for deploying resources in the Cloud, {eid: 84960409984}>, <Microservices Architecture Enables DevOps: Migration to a Cloud-Native Architecture, {eid: 84968796741}>, <A mashup architecture with modeling and simulation as a service, {eid: 85020408174}>, <MAMS: Mashup architecture with modeling and simulation as a service, {eid: 85020408174}>, <Ahybrid approach for efficient Web service composition with end-to-end QoS constraints, {eid: 84863617430}>, <QoS ontology for service selection and reuse, {eid: 85027956359}>, <Logistics-involved qos-aware service composition in cloud manufacturing with deep reinforcement learning, {eid: 85086141998}>, <A many-objective memetic algorithm for correlation-aware service composition in cloud manufacturing, {eid: 85088848658}>, <Service Selection for Composition with QoS Correlations, {eid: 84963800143}>, <Business Correlation-Aware Modelling and Services Selection in Business Service Ecosystem, {eid: 84881369412}>, <The NATO MSG-136 Reference Architecture for M&S as a Service, {eid: 85074823406}>, <Architectural Design Space for Modelling and Simulation as a Service: a Review, {eid: 85088899853}>, <An integrated modeling, simulation and analysis framework for engineering complex systems, {eid: 85067231383}>, <A concept for credibility assessment of aircraft system simulators, {eid: 85113279446}>, <Pattern-based validation metric for simulation models, {eid: 85073232445}>, <A novel cloud-based framework for the elderly healthcare services using digital twin, {eid: 85065103886}>, <Service-oriented computing and web software integration: from principles to development, {eid: 84857304009}>, <Multiobjective immune algorithm with nondominated neighbor-based selection, {eid: 47749112044}>",,,Elsevier B.V.,,,2021-12-01,,,,,,,eng,,Journal,,,,2-s2.0-85113271971,False,False,False,False
90,,"Ferry N. (AUID: 35291975700), Song H. (AUID: 57195274282), Dautov R. (AUID: 56626911600), Nguyen P. (AUID: 55646510700), Chauvel F. (AUID: 13104917300)",,Model-based Continuous Deployment of SIS,2021,Devops for Trustworthy Smart Iot Systems,,,,,,,0,10.1561/9781680838251.ch4,https://www.doi.org/10.1561/9781680838251.ch4,"<UniversitÃ© Cote dâAzur, I3S/INRIA>, <SINTEF Digital>",,,,,,,,,,,"<Understanding the software communications architecture, {eid: 70350324202}>, <Satisfiability modulo theories: An efficient approach for the resource-constrained project scheduling problem, {eid: 85139652424}>, <Model-driven continuous deployment for quality devops, {eid: 85054816400}>, <None, {eid: 0004025223}>, <The Multiple Facets of Software Diversity: RecentDevelopments in Year 2000 and Beyond, {eid: 84945937656, doi: 10.1145/2807593}>, <Models@run.time, {eid: 85008066028}>, <Solving constraint satisfaction problems with SAT modulo theories, {eid: 84865267600}>, <Satisfiability modulo theories and assignments, {eid: 85026756975}>, <Exploiting multi-level modelling for designing and deploying gameful systems, {eid: 85076095969}>, <D-lite: Distributed logic for internet of things services, {eid: 84857617841}>, <A Standard-Based Open Source IoT Platform: FIWARE, {eid: 85086591264, doi: 10.1109/IOTM.0001.1800022}>, <Towards a Model-Based DevOps for Cyber-Physical Systems, {eid: 85096956543}>, <Towards AgileManagement of Containerised Software at the Edge, {eid: 85098731119}>, <Towards IoT Diversity via Automated Fleet Management, {eid: 85072774564}>, <A Light-Weight Approach to Software Assignment at the Edge, {eid: 85099568584}>, <Bringing DSE to life: Exploring the design space of an industrial automotive use case, {eid: 85040592290}>, <From deployment to platform exploration: Automatic synthesis of distributed automotive hardware architectures, {eid: 85054797688}>, <Towards Model-Based Continuous Deployment of Secure IoT Systems, {eid: 85075910586}>, <CloudMF: Model-Driven Management of Multi-Cloud Applications, {eid: 85041437398}>, <Continuous Deployment of Trustworthy Smart IoT Systems, {eid: 85089665982}>, <Genesis: Continuous orchestration and deployment of smart IoT systems, {eid: 85072692587}>, <Evaluating Critical Security Issues of the IoTWorld: Present and Future Challenges, {eid: 85032723989, doi: 10.1109/JIOT.2017.2767291}>, <Making the Internet of Things More Reliable Thanks to Dynamic Access Control, {eid: 85139685846}>, <Developing IoT applications in the fog: A distributed dataflow approach, {eid: 84962284412}>, <Deployment and Configuration of Component-based Distributed Applications Specification, {eid: 85139638482}>, <ThingML: A Language and Code Generation Framework for Heterogeneous Targets, {eid: 85008457888}>, <A generic service oriented software platform to design ambient intelligent systems, {eid: 84962524282}>, <Calvin Constrained-A Framework for IoT Applications in Heterogeneous Environments, {eid: 85027276378}>, <Engineering software diversity: A model-based approach to systematically diversify communications, {eid: 85056814752}>, <DevSecOps: A Multivocal Literature Review, {eid: 85029742916}>, <None, {eid: 85067431815}>, <SoSPa: A system of Security design Patterns for Systematically engineering secure systems, {eid: 84961642292, doi: 10.1109/MODELS.2015.7338255}>, <A Security Policy Enforcement Framework for Controlling IoT Tenant Applications in the Edge, {eid: 85139630379}>, <Advances in deployment and orchestration approaches for IoT - A systematic review, {eid: 85072691780}>, <An extensive systematic review on the Model-Driven Development of Secure Systems, {eid: 84942611940}>, <Towards a Smart Applications Development Framework, {eid: 85089682565}>, <None, {eid: 24344495942}>, <A survey of the generalized assignment problem and its applications, {eid: 45749151027}>, <A conceptual foundation for component-based software deployment, {eid: 0035878887}>, <Assignment problems: A golden anniversary survey, {eid: 33749569898}>, <Chariot: Goal-driven orchestration middleware for resilient IoT systems, {eid: 85067935788}>, <None, {eid: 85028730621}>, <OpenTOSCA for IoT: Automating the deployment of IoT applications based on the mosquitto message broker, {eid: 85000926700}>, <Model-based fleet deployment of edge computing applications, {eid: 85097001114}>, <On architectural diversity of dynamic adaptive systems, {eid: 84951732317}>, <A scalable framework for provisioning large-scale IoT deployments, {eid: 84963811933}>, <Energy-efficient resource allocation for mobile-edge computation offloading, {eid: 85015263422}>",,,Now Publishers,,,2021-01-01,,,,,,,eng,,Book,,,,2-s2.0-85139627940,False,False,False,False
91,,"Combemale B. (AUID: 24343217800), Jezequel J.M. (AUID: 35618077100), Perez Q. (AUID: 57210745319), Vojtisek D. (AUID: 56507460600), Jansen N. (AUID: 57204976543), Michael J. (AUID: 55341586200), Rademacher F. (AUID: 57015087900), Rumpe B. (AUID: 55861872700), Wortmann A. (AUID: 56581745100), Zhang J. (AUID: 58813182600)",,Model-Based DevOps: Foundations and Challenges,2023,"2023 ACM/IEEE International Conference on Model Driven Engineering Languages and Systems, MODELS-C 2023",,,,,,,0,10.1109/MODELS-C59198.2023.00076,https://www.doi.org/10.1109/MODELS-C59198.2023.00076,"<University of Rennes 1>, <Rwth Aachen University, Software Engineering>, <Institute for Control Engineering of Machine Tools and Manufacturing Units (ISW), University of Stuttgart>",,"Â© 2023 IEEE.Time-to-market and continuous improvement are key success indicators to deliver for Industry 4.0 Cyber-Physical Systems (CPSs). There is thus a growing interest in adapting DevOps approaches coming from software systems to CPSs. However, CPSs are made not only of software but also of physical parts that need to be monitored at runtime. In this paper, we claim that Model-Driven Engineering can facilitate DevOps for CPSs by automatically connecting a CPS design model to its runtime monitoring, in the form of a digital twin.","DevOps, digital twins, evolution of engineering models, model-based software engineering, models at runtime, self-adaptation",,,,,,,,"<None, {eid: 84943326563}>, <A cyber-physical systems architecture for industry 4.0-based manufacturing systems, {eid: 84921300723}>, <Conceptualizing digital twins, {eid: 85120045327}>, <Industry 4.0, {eid: 84926457128}>, <Digital twins for sustainable software systems, {eid: 85168134336}>, <None, {eid: 85161813629}>, <None, {eid: 85168144723}>, <None, {eid: 85092345471}>, <Environment, economy and society: Fitting them together into sustainable development, {eid: 0036856605}>, <None, {eid: 85023646999}>, <Models@run.time, {eid: 85008066028}>, <Models@run.time to support dynamic adaptation, {eid: 70350345225}>, <Model-driven Digital Twin Construction: Synthesizing the Integration of Cyber-Physical Systems with Their Information Systems, {eid: 85096992990}>, <A survey on engineering approaches for self-adaptive systems, {eid: 84924224388}>, <Toward self-healing infrastructure systems, {eid: 0342845322}>, <Towards a devops approach in cyber physical production systems using digital twins, {eid: 85096529757}>, <Process-Aware Digital Twin Cockpit Synthesis from Event Logs, {eid: 85131671533}>, <Requirements and design patterns for adaptive, autonomous, and context-aware digital twins in industry 4.0 digital factories, {eid: 85152477901}>, <Model-Driven Development of a Digital Twin for Injection Molding, {eid: 85086228557}>, <AML4DT: A model-driven framework for developing and maintaining digital twins with automationml, {eid: 85122957318}>, <CPSAML: A language and code generation framework for digital twin based monitoring of mobile cyber-physical systems, {eid: 85142923460}>, <Towards a Model-Driven Architecture for Interactive Digital Twin Cockpits, {eid: 85097375593}>, <Process Prediction with Digital Twins, {eid: 85121810059}>, <Systematic literature review of the objectives, techniques, kinds, and architectures of models at runtime, {eid: 84956643403}>, <MRUBiS: An exemplar for model-based architectural selfhealing and self-optimization, {eid: 85051484080}>, <Using trace alignments for measuring the similarity between a physical and its digital twin, {eid: 85142936475}>, <TwinOps-DevOps Meets Model-Based Engineering and Digital Twins for the Engineering of CPS, {eid: 85096747019}>, <Reactive Links across Multi-Domain Engineering Models, {eid: 85141855846}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2023-10-01,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85182393081,False,True,False,False
92,,"Song H. (AUID: 57195274282), Dautov R. (AUID: 56626911600), Ferry N. (AUID: 35291975700), Solberg A. (AUID: 14827375100), Fleurey F. (AUID: 8582683100)",,Model-based fleet deployment in the IoTâedgeâcloud continuum,2022,Software and Systems Modeling,,,,,,,6,10.1007/s10270-022-01006-z,https://www.doi.org/10.1007/s10270-022-01006-z,"<SINTEF Digital>, <I3S/INRIA Kairos, UniversitÃ© Cote dâAzur>, <Tellu IoT AS>",,"Â© 2022, The Author(s).With the increasing computing and networking capabilities, IoT devices and edge gateways have become part of a larger IoTâedgeâcloud computing continuum, where processing and storage tasks are distributed across the whole network hierarchy, not concentrated only in the cloud. At the same time, this also introduced continuous delivery practices to the development of software components for network-connected gateways and sensing/actuating nodes. These devices are placed on end usersâ premises and are characterized by continuously changing cyber-physical contexts, forcing software developers to maintain multiple application versions and frequently redeploy them on a distributed fleet of devices with respect to their current contexts. Doing this correctly and efficiently goes beyond manual capabilities and requires an intelligent and reliable automated solution. This paper describes a model-based approach to automatically assigning multiple software deployment plans to hundreds of edge gateways and connected IoT devices implemented in collaboration with a smart healthcare application provider. From a platform-specific model of an existing edge computing platform, we extract a platform-independent model that describes a list of target devices and a pool of available deployment plans. Next, we use constraint solving to automatically assign deployment plans to devices at once with respect to their specific contexts. The result is transformed back into the platform-specific model and includes a suitable deployment plan for each device, which is then consumed by our engine to deploy software components not only on edge gateways but also on their downstream IoT devices with constrained resources and connectivity. We validate the approach with a fleet deployment prototype integrated into a DevOps toolchain used by the partner application provider. Initial experiments demonstrate the viability of the approach and its usefulness in supporting DevOps for edge and IoT software development.","Constraint solving, Device fleet, DevOps, IoT, Model-based software engineering, Software deployment",,,,,,,,"<How to make firmware updates over LoRaWAN possible, {eid: 85096548032}>, <IoT device firmware update over LoRa: The blockchain solution, {eid: 85091743330}>, <Satisfiability modulo theories: An efficient approach for the resource-constrained project scheduling problem, {eid: 84879506276}>, <Lightweight multicast forwarding for service discovery in low-power IoT networks, {eid: 84988286442}>, <Model-driven continuous deployment for quality DevOps, {eid: 85054816400}>, <ASSURED: architecture for secure software update of realistic embedded devices, {eid: 85055291101, doi: 10.1109/TCAD.2018.2858422}>, <None, {eid: 84943326563}>, <Automated analysis of feature models 20 years later: a literature review, {eid: 77955227439, doi: 10.1016/j.is.2010.01.001}>, <A systematic review of cloud modeling languages, {eid: 85042469266, doi: 10.1145/3150227}>, <None, {eid: 84979642473}>, <Software product line engineering with feature models, {eid: 84968666710}>, <Opentoscaâa runtime for TOSCA-based cloud applications, {eid: 84892400015}>, <Models@ run. time, {eid: 85008066028, doi: 10.1109/MC.2009.326}>, <Solving constraint satisfaction problems with SAT modulo theories, {eid: 84865267600, doi: 10.1007/s10601-012-9123-1}>, <Satisfiability modulo theories and assignments, {eid: 85026756975}>, <Modeling and verifying systems using a logic of counter arithmetic with lambda expressions and uninterpreted functions, {eid: 84937570704}>, <Exploiting multi-level modelling for designing and deploying gameful systems, {eid: 85076095969}>, <Secure firmware validation and update for consumer devices in home networking, {eid: 84964317984, doi: 10.1109/TCE.2016.7448561}>, <Towards a model-based DevOps for cyber-physical systems, {eid: 85096956543}>, <Targeted content delivery to IoT devices using Bloom filters, {eid: 85030177250}>, <Stream processing on clustered edge devices, {eid: 85132318226, doi: 10.1109/TCC.2020.2983402}>, <Towards a global intelligent surveillance system, {eid: 85047726635}>, <Towards IoT diversity via automated fleet management, {eid: 85072774564}>, <A light-weight approach to software assignment at the edge, {eid: 85099568584}>, <Towards a sustainable IoT with last-mile software deployment, {eid: 85123206042}>, <Z3: An efficient SMT solver, {eid: 45749085681}>, <From deployment to platform exploration: Automatic synthesis of distributed automotive hardware architectures, {eid: 85054797688}>, <Bringing DSE to life: Exploring the design space of an industrial automotive use case, {eid: 85040592290}>, <None, {eid: 85106886947}>, <Cloudmf: model-driven management of multi-cloud applications, {eid: 85041437398, doi: 10.1145/3125621}>, <Continuous deployment of trustworthy smart IoT systems, {eid: 85089665982, doi: 10.5381/jot.2020.19.2.a16}>, <Understanding the software communications architecture, {eid: 70350324202, doi: 10.1109/MCOM.2009.5277455}>, <None, {eid: 84908623904}>, <A model-based approach to software deployment in robotics, {eid: 84893740439}>, <Infield firmware update: Challenges and solutions, {eid: 85006716777}>, <Distributed service discovery in mobile IoT environments using hierarchical bloom filters, {eid: 84937402729}>, <None, {eid: 0344990694}>, <A secure IoT firmware update framework based on MQTT protocol, {eid: 85072842375}>, <Fabryq: Using phones as gateways to prototype internet of things applications using web scripting, {eid: 84962019267}>, <None, {eid: 85129332726}>, <Engineering software diversity: A model-based approach to systematically diversify communications, {eid: 85056814752}>, <Advances in deployment and orchestration approaches for IoTâa systematic review, {eid: 85072691780}>, <Research firmware update over the air from the cloud, {eid: 85059991840}>, <Deployment and Configuration of Component-based Distributed Applications Specification, {eid: 85129246312}>, <A survey of the generalized assignment problem and its applications, {eid: 45749151027}>, <Assignment problems: a golden anniversary survey, {eid: 33749569898, doi: 10.1016/j.ejor.2005.09.014}>, <None, {eid: 84892363672}>, <Chariot: goal-driven orchestration middleware for resilient IoT systems, {eid: 85067935788, doi: 10.1145/3134844}>, <MUP: simplifying secure over-the-air update with MQTT for constrained IoT devices, {eid: 85098513514, doi: 10.3390/s21010010}>, <Deep customization of multi-tenant SaaS using intrusive microservices, {eid: 85049770038}>, <Model-based fleet deployment of edge computing applications, {eid: 85097001114}>, <On architectural diversity of dynamic adaptive systems, {eid: 84951732317}>, <A scalable framework for provisioning large-scale IoT deployments, {eid: 84963811933, doi: 10.1145/2850416}>, <Generating range fixes for software configuration, {eid: 84864197259}>, <Blockchain-based firmware update framework for internet-of-things environment, {eid: 85066783379}>, <Energy-efficient resource allocation for mobile-edge computation offloading, {eid: 85015263422, doi: 10.1109/TWC.2016.2633522}>",,,Springer Science and Business Media Deutschland GmbH,,,2022-10-01,,,,,,,eng,,Journal,,,,2-s2.0-85129268131,True,True,False,False
93,,"Song H. (AUID: 57195274282), Dautov R. (AUID: 56626911600), Ferry N. (AUID: 35291975700), Solberg A. (AUID: 14827375100), Fleurey F. (AUID: 8582683100)",,Model-based fleet deployment of edge computing applications,2020,"23rd ACM/IEEE International Conference on Model Driven Engineering Languages and Systems, MODELS 2020",,,,,,,14,10.1145/3365438.3410951,https://www.doi.org/10.1145/3365438.3410951,"<Sintef Digital>, <Tellu IoT As>",,"Â© 2020 ACM.Edge computing brings software in close proximity to end users and IoT devices. Given the increasing number of distributed Edge devices with various contexts, as well as the widely adopted continuous delivery practices, software developers need to maintain multiple application versions and frequently (re-)deploy them to a fleet of many devices with respect to their contexts. Doing this correctly and efficiently goes beyond manual capabilities and requires employing an intelligent and reliable automated approach. Accordingly this paper describes a joint research with a Smart Healthcare application provider on a model-based approach to automatically assigning multiple software deployments to hundreds of Edge gateways. From a Platform-Specific Model obtained from the existing Edge computing platform, we extract a Platform-Independent Model that describes a list of target devices and a pool of available deployments. Next, we use constraint solving to automatically assign deployments to devices at once, given their specific contexts. The resulting solution is transformed back to the PSM as to proceed with software deployment accordingly. We validate the approach with a Fleet Deployment prototype integrated into the DevOps toolchain currently used by the application provider. Initial experiments demonstrate the viability of the approach and its usefulness in supporting DevOps in Edge computing applications.","device fleet, DevOps, IoT, model-based software engineering, software deployment",,,,,,,,"<None, {eid: 85089234282}>, <Satisfability modulo theories: An efcient approach for the resource-constrained project scheduling problem, {eid: 84879506276}>, <Model-driven continuous deployment for quality devops, {eid: 85054816400}>, <Satisfability modulo theories, {eid: 85049937506}>, <Solving constraint satisfaction problems with sat modulo theories, {eid: 84865267600}>, <Satisfability modulo theories and assignments, {eid: 85026756975}>, <Modeling and verifying systems using a logic of counter arithmetic with lambda expressions and uninterpreted functions, {eid: 84937570704}>, <Exploiting multi-level modelling for designing and deploying gameful systems, {eid: 85076095969}>, <None, {eid: 85096971209}>, <Towards a model-based de-vops for cyber-physical systems, {eid: 85096956543}>, <Towards iot diversity via automated fleet management, {eid: 85072774564}>, <Z3: An efcient smt solver, {eid: 45749085681}>, <From deployment to platform exploration: Automatic synthesis of distributed automotive hardware architectures, {eid: 85054797688}>, <Bringing dse to life: Exploring the design space of an industrial automotive use case, {eid: 85040592290}>, <Understanding the software communications architecture, {eid: 70350324202}>, <None, {eid: 85096998052}>, <None, {eid: 85096963638}>, <None, {eid: 84995576343}>, <None, {eid: 85096953664}>, <None, {eid: 85096971256}>, <A survey of the generalized assignment problem and its applications, {eid: 45749151027}>, <Assignment problems: A golden anniversary survey, {eid: 33749569898}>, <Chariot: Goal-driven orchestration middleware for resilient iot systems, {eid: 85067935788}>, <A scalable framework for provisioning large-scale iot deployments, {eid: 84963811933}>, <Energy-efcient resource allocation for mobile-edge computation ofoading, {eid: 85015263422}>, <The quest for efcient boolean satisfability solvers, {eid: 84937545785}>",,,"Association for Computing Machinery, Inc",,,2020-10-18,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85097001114,False,True,False,False
94,,"Creff S. (AUID: 35572876000), Champeau J. (AUID: 6603324671), JÃ©zÃ©quel J.M. (AUID: 35618077100), MonÃ©gier A. (AUID: 55389195600)",,Model-based product line evolution: An incremental growing by extension,2012,"16th International Software Product Line Conference, SPLC 2012",,,,,,,5,10.1145/2364412.2364430,https://www.doi.org/10.1145/2364412.2364430,"<Lab-STICC, ENSTA Bretagne, UEB>, <IRISA, UniversitÃ© de Rennes 1>, <Thales Air Systems>",,"Model-Based Engineering (MBE) and Product Line Engineering (PLE) have been combined, to handle new system development constraints like: increasing complexity, higher product quality, faster time-to-market and cost reduction. As observed by some authors, the derivation of a product from product line shared core assets has been insufficiently addressed and can remain tedious in practice. We cope with this issue focusing on having a flexible and reactive model-based derivation, and propose an incremental evolution by extension of the product line coupled with this derivation activity. Process and tools bridge the gap between Application and Domain Engineering introducing a semi-automatic feedback to benefits from the developments made in the Application Engineering. The approach is applied to a model-based product line dedicated to Class diagrams, and is tooled within the Eclipse environment. Copyright 2012 ACM.","Design tools, Evolution by extension, Methodology, Model based engineering, Product derivation, Product line engineering",,,,,,,,"<Difference and union of models, {eid: 0242370962}>, <Feature models, grammars, and propositional formulas, {eid: 33646190894}>, <Variant management with pure variant, {eid: 84867484377}>, <Evofm: Feature-driven planning of product-line evolution, {eid: 77954741565}>, <None, {eid: 0004161809}>, <Mapping features to models: A template approach based on superimposed variants, {eid: 33646131839}>, <Model-driven software product lines, {eid: 79957978998}>, <None, {eid: 0004014411}>, <Verifying feature-based model templates against well-formedness ocl constraints, {eid: 34547477639}>, <Product derivation in software product families: A case study, {eid: 6444234242}>, <Model driven architecture as approach to manage variability in software product families, {eid: 6444222864}>, <Supporting the evolution of product line architectures with variability model fragments, {eid: 49949106324}>, <Variability in time- product line variability and evolution revisited, {eid: 84867481888}>, <A generic approach for automatic model composition, {eid: 47749136281}>, <A generic language and tool for variability modeling, {eid: 78049403003}>, <Reactive variability management in agile software development, {eid: 77957992085}>, <None, {eid: 25844484052}>, <Implementing product-line features with component reuse, {eid: 84945243505}>, <FeatureMapper: Mapping Features to Models, {eid: 57349097632}>, <A feature-oriented reuse method with domain-specific reference architectures, {eid: 0032343158}>, <Feature-oriented domain analysis (foda) feasibility study, {eid: 0003512056}>, <Easing the transition to software mass customization, {eid: 84944046672}>, <Supporting the grow-and-prune model in software product lines evolution using clone detection, {eid: 50249120730}>, <Weaving variability into domain metamodels, {eid: 77249123516}>, <An agile process model for product derivation in software product line engineering, {eid: 79958244700}>, <Reconciling automation and flexibility in product derivation, {eid: 55049092059}>, <None, {eid: 84892351987}>, <Key activities for product derivation in software product lines, {eid: 78650624335}>, <Model composition- A signature-based approach, {eid: 44149105073}>, <A requirements-based taxonomy of software product line evolution, {eid: 84866714347}>, <Generic semantics of feature diagrams, {eid: 33750723486}>, <An mda-based framework for model-driven product derivation, {eid: 11144248398}>, <Towards a uml profile for software product lines, {eid: 35048847051}>, <Product line engineering with the UML: Deriving products, {eid: 77951718024}>",,,,,,2012-09-02,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-84867447641,True,True,False,False
95,,"ArtaÄ M. (AUID: 57060212700), BorovÅ¡ak T. (AUID: 57203285817), Di Nitto E. (AUID: 6602196755), Guerriero M. (AUID: 57162975400), Tamburri D. (AUID: 35488974800)",,Model-Driven continuous deployment for quality devops,2016,"2nd International Workshop on Quality-Aware DevOps, QUDOS 2016, co-located with the International Symposium on Software Testing and Analysis, ISSTA 2016",,,,,,,32,10.1145/2945408.2945417,https://www.doi.org/10.1145/2945408.2945417,"<XLAB>, <Politecnico di Milano>",,"Â© 2016 ACM.DevOps entails a series of software engineering strategies and tools that promise to deliver quality and speed at the same time with little or no additional expense. In our work we strived to enable a DevOps way of working, combining Model-Driven Engineering tenets with the challenges of de- livering a model-driven continuous deployment tool that al- lows quick (re-)deployment of cloud applications for the purpose of continuous improvement. This paper illustrates the DICER tool and elaborates on how it can bring about the DevOps promise and enable the quality-awareness.","Continuous deployment, Model-driven engineering, Quality-aware devops",,,,,,,,"<None, {eid: 85055100906}>, <Dice: Quality-driven development of data-intensive cloud applications, {eid: 84964265469}>, <Big data: A survey, {eid: 84898796363}>, <Modern devops: Optimizing software development through effective system interactions, {eid: 84998797474}>, <Cloud mf: Applying MDE to tame the complexity of managing multi-cloud applications, {eid: 84946685259}>, <Towards a model-driven design tool for big data architectures, {eid: 84974539619}>",,,"Association for Computing Machinery, Inc",,,2016-07-21,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85054816400,True,True,True,False
96,,"van den Heuvel W.J. (AUID: 7005472245), Tamburri D.A. (AUID: 35488974800)",,"Model-driven ml-ops for intelligent enterprise applications: vision, approaches and challenges",2020,"10th International Symposium on Business Modeling and Software Design, BMSD 2020",,,,,,,13,10.1007/978-3-030-52306-0_11,https://www.doi.org/10.1007/978-3-030-52306-0_11,"<Jheronimus Academy of Data Science (JADS), Tilburg University>, <Jheronimus Academy of Data Science (JADS), Eindhoven University of Technology>",,"Â© Springer Nature Switzerland AG 2020.This paper explores a novel vision for the disciplined, repeatable, and transparent model-driven development and Machine-Learning operations (ML-Ops) of intelligent enterprise applications. The proposed framework treats model abstractions of AI/ML models (named AI/ML Blueprints) as first-class citizens and promotes end-to-end transparency and portability from raw data detection- to model verification, and, policy-driven model management. This framework is grounded on the intelligent Application Architecture (iA2) and entails a first attempt to incorporate requirements stemming from (more) intelligent enterprise applications into a logically-structured architecture. The logical separation is grounded on the need to enact MLOps and logically separate basic data manipulation requirements (data-processing layer), from more advanced functionality needed to instrument applications with intelligence (data intelligence layer), and continuous deployment, testing and monitoring of intelligent application (knowledge-driven application layer). Finally, the paper sets out exploring a foundational metamodel underpinning blueprint-model-driven MLOps for iA2 applications, and presents its main findings and open research agenda.","AI software engineering, Methodological support to AI, ML Blueprints, ML-Ops, TOSCA",,,,,,,,"<Artificial intelligence in business: from research and innovation to market deployment, {eid: 85084412679}>, <Artificial intelligence and software engineering: a tutorial introduction to their relationship, {eid: 8844229430}>, <None, {eid: 85088509160}>, <The AI transparency paradox, {eid: 85088510551}>, <None, {eid: 85086735146}>, <Automated machine learning in practice: state of the art and recent results, {eid: 85071385770}>, <Statistical aspects of neural networks, {eid: 0002983776}>, <Hyper parameter optimization, {eid: 85065146640}>, <AIOps: predictive analytics & machine learning in operations, {eid: 85082140101}>, <DevOps, {eid: 84968831988}>, <Improving La Redouteâs CI/CD pipeline and DevOps Processes by applying machine learning techniques, {eid: 85061305992}>, <A layered model for AI governance, {eid: 85037745862}>, <None, {eid: 85088500770}>, <None, {eid: 85088509103}>, <Data science data governance, {eid: 85061310869}>, <A survey on transfer learning, {eid: 77956031473}>, <A survey on heterogeneous transfer learning, {eid: 85029935438}>, <Model-driven engineering, {eid: 33344465743}>, <Grand challenges in model-driven engineering: an analysis of the state of the research, {eid: 85077634676}>, <Service oriented architectures: approaches, technologies and research issues, {eid: 34249080831}>, <Understanding DevOps & bridging the gap from continuous integration to continuous delivery, {eid: 84946553533}>, <None, {eid: 0004025223}>, <None, {eid: 85088533020}>, <Software engineering approaches to ontology development, {eid: 85088518441}>",,,Springer,,,2020-07-06,,,,,,,eng,,Book Series,,,,2-s2.0-85088507116,False,False,True,True
97,,"Brabra H. (AUID: 57191072465), Gaaloul W. (AUID: 6506968790), Mtibaa A. (AUID: 27267841100), Benatallah B. (AUID: 6701493053), Gargouri F. (AUID: 6602113319)",,Model-driven orchestration for cloud resources,2019,"12th IEEE International Conference on Cloud Computing, CLOUD 2019",,,,,,,8,10.1109/CLOUD.2019.00074,https://www.doi.org/10.1109/CLOUD.2019.00074,"<TeÄºecom SudParis, CNRS UMR SAMOVAR, University of Paris-Saclay>, <FSEG, Miracl Laboratory, Universiy of Sfax>, <ENETCOM, Miracl Laboratory, University of Sfax>, <UNSW>, <ISIMS, Miracl Laboratory, University of Sfax>",,"Â© 2019 IEEE.Several DevOps tools have emerged to orchestrate cloud resources. However, inherent heterogeneity and complex implementation within these tools make it hard for DevOps users to design required resource-related artifacts. Currently, the defacto standard for cloud resource modeling and orchestration is TOSCA. Nonetheless, TOSCA is usually bound to TOSCA-compliant orchestration tools. Moreover, the actual integration between TOSCA and DevOps tools is still performed using costly coding and in ad-hoc manner. To resolve this, we believe that mapping and translation mechanisms between TOSCA and DevOps tools should be provided. In this paper, we propose a new model-driven approach for cloud resource orchestration. Our approach (i) adopts TOSCA to design resource-related artifacts regardless of a specific DevOps tool; (ii) enables a new model-driven translation technique that serves to translate the designed artifacts using TOSCA into DevOps specific artifacts and (iii) provides Connectors that intend to establish the bridge between DevOps-specific artifacts and the DevOps tools. Our approach provides a powerful enhancement to DevOps productivity and reusability by assisting toward a seamless integration between TOSCA and DevOps tools.","Artifact, MDE, Orchestration, TOSCA, Transformation",,,,,,,,"<A taxonomy and survey of cloud resource orchestration techniques, {eid: 85019878673}>, <Cloud resource orchestration programming: Overview, issues, and directions, {eid: 84941037480}>, <Declarative automated cloud resource orchestration, {eid: 82155203084}>, <None, {eid: 85072344652}>, <Cloud application portability with tosca, chef and open-stack, {eid: 84908602463}>, <Tosker: Orchestrating applications with tosca and docker, {eid: 85045248556}>, <None, {eid: 85072332301}>, <None, {eid: 85072334518}>, <None, {eid: 85072321693}>, <None, {eid: 85072323854}>, <Streamlining devops automation for cloud applications using tosca as standardized metamodel, {eid: 84958740530}>, <None, {eid: 85072340079}>, <From architecture modeling to application provisioning for the cloud by combining uml and tosca, {eid: 84979642473}>, <Survey on template-based code generation, {eid: 85041446287}>, <A model-driven framework for interoperable cloud resources management, {eid: 84989298330}>, <None, {eid: 85072320278}>, <Model transformation: The heart and soul of model-driven software development, {eid: 0141725642}>, <A model-driven tool chain for occi, {eid: 85032666576}>, <Model-driven generation of microservice architectures for benchmarking performance and resilience engineering approaches, {eid: 85019479213}>, <An infrastructure modelling tool for cloud provisioning, {eid: 85032348388}>, <Model-driven elasticity for cloud resources, {eid: 85048474527}>",,,IEEE Computer Society,,,2019-07-08,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85072317965,True,True,False,False
98,,"Wurster M. (AUID: 57191865623), Breitenbucher U. (AUID: 54929864700), Leymann F. (AUID: 6603379902), Kopp O. (AUID: 23467541000)",,Modeling and automated execution of application deployment tests,2018,"22nd IEEE International Enterprise Distributed Object Computing Conference, EDOC 2018",,,,,,,9,10.1109/EDOC.2018.00030,https://www.doi.org/10.1109/EDOC.2018.00030,"<Institute of Architecture of Application Systems, University of Stuttgart>, <Institute for Parallel and Distributed Systems, University of Stuttgart>",,"Â© 2018 IEEE.In recent years, many deployment systems have been developed that process deployment models to automatically provision applications. The main objective of these systems is to shorten delivery times and to ensure a proper execution of the deployment process. However, these systems mainly focus on the correct technical execution of the deployment, but do not check whether the deployed application is working properly. Especially in DevOps scenarios where applications are modified frequently, this can quickly lead to broken deployments, for example, if a wrong component version was specified in the deployment model that has not been adapted to a new database schema. Ironically, even hardly noticeable errors in deployment models quickly result in technically successful deployments, which do not work at all. In this paper, we tackle these issues. We present a modeling concept that enables developers to define deployment tests directly along with the deployment model. These tests are then automatically run by a runtime after deployment to verify that the application is working properly. To validate the technical feasibility of the approach, we applied the concept to TOSCA and extended an existing open source TOSCA runtime.","Declarative Application Deployement, Model-based Testing, Test Automation, Testing, TOSCA",,,,,,,,"<Why enterprises must adopt devops to enable continuous delivery, {eid: 84860316008}>, <Why do internet services fail, what can be done about it, {eid: 84875570984}>, <Integrated cloud application provisioning: Interconnecting service-centric and script-centric management technologies, {eid: 84886738018}>, <None, {eid: 85059053971}>, <None, {eid: 85059080207}>, <A systematic review of cloud modeling languages, {eid: 85042469266}>, <None, {eid: 84886743417}>, <None, {eid: 84902315977}>, <Declarative vs imperative: Two modeling patterns for the automated deployment of applications, {eid: 85050411724}>, <Combining Declarative and Imperative Cloud Application Provisioning based on TOSCA, {eid: 84908563698}>, <None, {eid: 85059077974}>, <How do developers react to RESTful API evolution, {eid: 85059072808}>, <Migrating to cloud-native architectures using microservices: An experience report, {eid: 84966526539}>, <None, {eid: 85059067756}>, <Internet of things out of the Box: Using TOSCA for automating the deployment of iot environments, {eid: 85024391376}>, <Generic driver injection for automated IoT application deployments, {eid: 85059069362}>, <Standards-based devops automation and integration using TOSCA, {eid: 84946692273}>, <Integrating configuration management with model-driven cloud management based on TOSCA, {eid: 84884491041}>, <Policy4TOSCA: A policy-aware cloud service provisioning approach to enable secure cloud computing, {eid: 84979757687}>, <Policy-aware provisioning plan generation for TOSCA-based applications, {eid: 85061523056}>, <None, {eid: 85018343171}>, <Winery-A modeling tool for TOSCA-based cloud applications, {eid: 84903571458}>, <Open TOSCA-A runtime for TOSCA-based cloud applications, {eid: 84903571458}>, <A taxonomy of model-based testing approaches, {eid: 84862325128}>, <None, {eid: 3943049689}>, <Model-based testing in practice, {eid: 0032660359}>, <Model-based approach to security test automation, {eid: 0006564418}>, <Requirement-based automated black-box test generation, {eid: 0035170677}>, <A UML-Based approach to system testing, {eid: 4344612500}>, <Towards deploying model-based testing with a domain-specific modeling approach, {eid: 38049107184}>, <Model-based test case generation for web applications, {eid: 84921039377}>, <Automated model-based performance testing for paas cloud services, {eid: 84931024462}>, <A survey on model-based testing approaches: A systematic review, {eid: 69549103676}>, <Service functional test automation, {eid: 85059070586}>, <None, {eid: 84858197925}>, <A survey of software testing in the cloud, {eid: 84866935316}>, <Testing idempotence for infrastructure as code, {eid: 84902547810}>, <None, {eid: 85024364052}>, <A GENTL approach for cloud application topologies, {eid: 85059075727}>, <Topology splitting and matching for multi-cloud deployments, {eid: 85019266003}>, <Portable cloud services using TOSCA, {eid: 84860434499}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2018-10-16,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85059064282,False,False,False,False
99,,"Kusmenko E. (AUID: 57195075206), Nickels S. (AUID: 57212167503), Pavlitskaya S. (AUID: 57212167862), Rumpe B. (AUID: 55861872700), Timmermanns T. (AUID: 57190581702)",,Modeling and Training of Neural Processing Systems,2019,"22nd ACM/IEEE International Conference on Model Driven Engineering Languages and Systems, MODELS 2019",,,,,,,15,10.1109/MODELS.2019.00012,https://www.doi.org/10.1109/MODELS.2019.00012,"<Chair of Software Engineering, RWTH Aachen University>",,"Â© 2019 IEEE.The field of deep learning has become more and more pervasive in the last years as we have seen varieties of problems being solved using neural processing techniques. Image analysis and detection, control, speech recognition, translation are only a few prominent examples tackled successfully by neural networks. Thereby, the discipline imposes a completely new problem solving paradigm requiring a rethinking of classical software development methods. The high demand for deep learning technology has led to a large amount of competing frameworks mostly having a Python interface - a quasi standard in the community. Although, existing tools often provide great flexibility and high performance, they still lack to deliver a completely domain oriented problem view. Furthermore, using neural networks as reusable building blocks with clear interfaces in productive systems is still a challenge. In this work we propose a domain specific modeling methodology tackling design, training, and integration of deep neural networks. Thereby, we distinguish between three main modeling concerns: architecture, training, and data. We integrate our methodology in a component-based modeling toolchain allowing one to employ and reuse neural networks in large software architectures.","deep learning, model-driven software engineering, neural networks",,,,,,,,"<None, {eid: 84961087827}>, <Speech recognition with deep recurrent neural networks, {eid: 84890543083}>, <Deepdriving: Learning affordance for direct perception in autonomous driving, {eid: 84973888858}>, <None, {eid: 85029443880}>, <None, {eid: 6344235947}>, <None, {eid: 85075941065}>, <None, {eid: 33646566908}>, <Highly-optimizing and multi-target compiler for embedded system models: C++ compiler toolchain for the component and connector language embedded monti arc, {eid: 85056871758}>, <None, {eid: 0003880013}>, <ROS: An open-source robot operating system, {eid: 77957352104}>, <Benchmarking state-of-The-art deep learning software tools, {eid: 85027446064}>, <None, {eid: 84979557463}>, <The numpy array: A structure for efficient numerical computation, {eid: 79952595565}>, <Torch7: A matlab-like environment for machine learning, {eid: 84888340666}>, <None, {eid: 5044234815}>, <Tensorflow: A system for large-scale machine learning, {eid: 85075670920}>, <None, {eid: 84978978745}>, <Caffe: Convolutional architecture for fast feature embedding, {eid: 84913580146}>, <None, {eid: 82655166506}>, <An overview of the hdf5 technology suite and its applications, {eid: 79956025832}>, <Deep residual learning for image recognition, {eid: 84986274465}>, <None, {eid: 84990032982}>, <Cntk: Microsofts open-source deeplearning toolkit, {eid: 85040107379}>, <None, {eid: 0003396255}>, <An overview of the HDF5 technology suite and its applications, {eid: 80052992397}>, <None, {eid: 85076103141}>, <None, {eid: 85053070397}>, <MorphNet: Fast & simple resource-constrained structure learning of deep networks, {eid: 85058146752}>, <None, {eid: 85076105694}>, <Convolutional networks and applications in vision, {eid: 77955998889}>, <Modeling architectures of cyber-physical systems, {eid: 85025124378}>, <Backpropagation applied to handwritten zip code recognition, {eid: 0000359337}>, <None, {eid: 0040406981}>, <None, {eid: 84919728106}>, <On the properties of neural machine translation: Encoder-decoder approaches, {eid: 85097641926}>, <None, {eid: 84941620184}>, <Embedded MontiArc: Textual modeling alternative to simulink, {eid: 85060443298}>, <Model-based development of self-adaptive autonomous vehicles using the SMARDT methodology, {eid: 85052024078}>, <Component-based integration of interconnected vehicle architectures, {eid: 85072280010}>, <OCL framework to verify extra-functional properties in component and connector models, {eid: 85041439005}>, <Component and connector views in practice: An experience report, {eid: 85040631558}>, <Behavioral compatibility of simulink models for product line maintenance and evolution, {eid: 85009379870}>, <None, {eid: 76249122848}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2019-09-15,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85075936455,True,False,True,False
100,,"Gatto N. (AUID: 57212105778), Kusmenko E. (AUID: 57195075206), Rumpe B. (AUID: 55861872700)",,Modeling deep reinforcement learning based architectures for cyber-physical systems,2019,"22nd ACM/IEEE International Conference on Model Driven Engineering Languages and Systems Companion, MODELS-C 2019",,,,,,,8,10.1109/MODELS-C.2019.00033,https://www.doi.org/10.1109/MODELS-C.2019.00033,"<Department of Software Engineering, RWTH Aachen University>",,"Â© 2019 IEEE.Reinforcement learning is a sub-field of machine learning where an agent aims to learn a behavior or a policy maximizing a reward function by trial and error. The approach is particularly interesting for the design of autonomous cyber-physical systems such as self-driving cars. In this work we present a generative, domain-specific modeling framework for the design, training and integration of reinforcement learning systems. It consists of a neural network modeling language which is used to design the models to be trained, e.g. actor and critic networks, and a training language used to describe the training procedure and set the corresponding hyperparameters. The underlying component model allows the modeler to embed the trained networks in larger component & connector architectures. We illustrate our framework by the example of a self-driving racing car.","Cyber-physical systems, Domain-specific languages, Machine learning, Reinforcement learning",,,,,,,,"<None, {eid: 85075941065}>, <Bridge view and labview: g programming reference manual, {eid: 33646566908}>, <Modeling and training of neural processing systems, {eid: 85075936455}>, <Modeling architectures of cyber-physical systems, {eid: 85025124378}>, <Highly-optimizing and multi-target compiler for embedded system models: C++ compiler toolchain for the component and connector language embeddedmontiarc, {eid: 85056871758}>, <None, {eid: 0004102479}>, <None, {eid: 85044675243}>, <None, {eid: 84904867557}>, <None, {eid: 84965135289}>, <None, {eid: 0003673017}>, <Deterministic policy gradient algorithms, {eid: 85030997365}>, <TensorFlow: Large-scale machine learning on heterogeneous systems, 2015, {eid: 85010814719}>, <None, {eid: 84979557463}>, <None, {eid: 85050596935}>, <None, {eid: 85075936413}>, <None, {eid: 85057255740}>, <None, {eid: 85073625968}>, <None, {eid: 85075932055}>, <Torcs, the open racing car simulator, {eid: 85046286984}>, <None, {eid: 85057110784}>, <None, {eid: 85057283496}>, <ROS: An open-source robot operating system, {eid: 77957352104}>, <Component-based integration of interconnected vehicle architectures, {eid: 85072280010}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2019-09-15,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85075937600,False,False,False,True
101,,"Babar Z. (AUID: 56728038900), Yu E. (AUID: 7202680853), Lapouchnian A. (AUID: 15033549000)",,Modeling devOps deployment choices using process architecture design dimensions,2015,"8th Working Conference on the Practice of Enterprise Modelling, PoEM 2015",,,,,,,17,10.1007/978-3-319-25897-3_21,https://www.doi.org/10.1007/978-3-319-25897-3_21,"<University of Toronto>, <Department of Computer Science, University of Toronto>",,"Â© IFIP International Federation for Information Processing 2015.DevOps is a software development approach that enables enterprises to rapidly deliver software product features through process automation, greater inter-team collaboration and increased efficiency introduced through monitoring and measuring activities. No two enterprise-adopted DevOps approaches would be similar as each enterprise has unique characteristics and requirements. At present, there is no structured method in enterprise architecture modeling that would enable enterprises to devise a DevOps approach suitable for their requirements while considering possible process reconfigurations. Any DevOps implementation can have variations at different points across development and operational processes and enterprises need to be able to systematically map these variation points and understand the tradeoffs involved in selecting one alternative over another. In this paper, we use our previously proposed Business Process Architecture modeling technique to express and analyze DevOps alternatives and help enterprises select customized DevOps processes that match their contexts and requirements.","Adaptive enterprise, Business process modeling, Devops, Enterprise modeling, Goal modeling, Software processes",,,,,,,,"<Designing an âadaptiveâ enterprise architecture, {eid: 33845214146}>, <Organisational agility: How business can survive and thrive in turbulent times, {eid: 84952667135}>, <None, {eid: 84952674803}>, <A mapping study on cooperation between information system development and operations, {eid: 84911942952}>, <A grounded theory analysis of modern web applications: Knowledge, skills, and abilities for DevOps, {eid: 84887277016}>, <Dimensions of DevOps, {eid: 84942757647}>, <DevOps: A definition and perceived adoption impediments, {eid: 84942761879}>, <Continuous Software Engineering, {eid: 84930742728}>, <Requirements-driven design and configuration management of business processes, {eid: 38049160532}>, <None, {eid: 84952674805}>, <Modeling continuous integration practice differences in industry software development, {eid: 84888645752}>, <Using scrum in distributed agile development: A multiple case study, {eid: 70449368614}>, <Continuous software engineering and beyond: Trends and challenges, {eid: 84942514935}>, <None, {eid: 0003524263}>, <None, {eid: 0003845868}>, <Re-designing process architectures towards a framework of design dimensions, {eid: 84937901681}>, <Towards variability design for business process architecture, {eid: 84952674806}>, <Building software process lines with CASPER, {eid: 84864376621}>, <A systematic review of software process tailoring, {eid: 55849097112}>, <Modelling software process variability: An empirical study, {eid: 79959889533}>, <Managing process diversity by applying rationale management in variant rich processes, {eid: 79960248781}>, <Software process modeling languages: A systematic literature review. Inf. Softw, {eid: 84889885711}>, <Goal-driven agent-oriented software processes, {eid: 34547475195}>, <Deriving project-specific processes from process line architecture with commonality and variability, {eid: 38949125801}>, <On the notion of variability in software product lines, {eid: 84954068722}>, <Integrated software process and product lines, {eid: 33745159962}>, <Building software process line architectures from bottom up, {eid: 33746238091}>, <Fundamentals of Business Process Management, {eid: 84878217700}>, <Business process architecture: Use and correctness, {eid: 84866392752}>, <Business process variability modeling: A survey, {eid: 84903212049}>, <Change patterns and change support features â enhancing flexibility in process-aware information systems, {eid: 47849117407}>, <Feature-oriented domain analysis (FODA) feasibility study, {eid: 0003512056}>, <Strategically balanced process adoption, {eid: 79960616089}>, <None, {eid: 78649325089}>, <None, {eid: 0003409221}>, <Enterprise architecture for the adaptive enterprise â a vision paper, {eid: 84868323690}>, <Architecting the enterprise to leverage a confluence of emerging technologies, {eid: 84952674808}>, <None, {eid: 84952650589}>",,,Springer Verlag,,,2015-11-10,,,,,,,eng,,Book Series,,,,2-s2.0-84952662031,False,True,False,False
102,,"Estivill-Castro V. (AUID: 55915978700), Hexel R. (AUID: 23396845500), Stover J. (AUID: 57191905873)",,"Modeling, validation, and continuous integration of software behaviours for embedded systems",2015,"9th UKSim-AMSS IEEE European Modelling Symposium on Computer Modelling and Simulation, EMS 2015",,,,,,,6,10.1109/EMS.2015.24,https://www.doi.org/10.1109/EMS.2015.24,"<School of ICT, Griffith University, Nathan Campus>",,"Â© 2015 IEEE.We propose to test software models with software models. Model-Driven Software Development proposes that software is to be constructed by developing high-level models that directly execute or generate most of the code. On the other hand, Test-Driven development proposes to produce tests that validate the functionality of the code. This paper brings both together by using Logic-Labeled Finite-State Machines to deploy executable models of embedded systems and also to configure the corresponding tests. The advantage is a much more efficient validation of the models, with more robust and durable representations, that ensure effective and efficient quality assurance throughout the development process, saving the costly exercise of formal model-checking until the system is complete enough to meet all requirements.","Finite-State Machines, Model-Driven Development, Real-Time Systems, Software Models, Test-Driven Development, Validation and Model-Checking",,,,,,,,"<None, {eid: 85159115952}>, <None, {eid: 84959243564}>, <Security challenges for medical devices, {eid: 84925779811}>, <Software health management: A necessity for safety critical systems, {eid: 84888297725}>, <Requirements engineering via non-monotonic logics and state diagrams, {eid: 83755216028}>, <Arrangements of finite-state machines semantics, simulation, and model checking, {eid: 84878096152}>, <High performance relaying of C++11 objects across processes and logic-labeled finite-state machines, {eid: 84921693633}>, <Correctness by construction with logic-labeled finite-state machines -comparison with Event-B, {eid: 84903531179}>, <Efficient modelling of embedded software systems and their formal verification, {eid: 84874629026}>, <Module isolation for efficient model checking and its application to FMEA in model-driven engineering, {eid: 84887041149}>, <NuSMV: A new symbolic model checker, {eid: 84896869660}>, <Efficient model checking and FMEA analysis with deterministic scheduling of transition-labeled finite-state machines, {eid: 84873686788}>, <Visual-trace simulation of concurrent finite-state machines for validation and model-checking of complex behavior, {eid: 84868031470}>, <Embedded systems in UML, {eid: 84868006865}>, <None, {eid: 0003546951}>, <None, {eid: 85055229985}>, <From requirements to embedded software -formalising the key steps, {eid: 70349514686}>, <Reasoning about goal-directed real-time teleo-reactive programs, {eid: 84900855679}>, <Improving the trustworthiness of medical device software with formal verification methods, {eid: 84883573451}>, <A safety-assured development approach for real-time software, {eid: 78449302431}>, <Ui-design driven model-based testing, {eid: 84881490451}>, <None, {eid: 0003962322}>, <None, {eid: 70649097503}>, <None, {eid: 84869854783}>, <Model-based testing of embedded systems in hardware in the loop environment, {eid: 84866874472}>, <Model-based testing of automotive software: Some challenges and solutions, {eid: 84944111601}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2015-10-06,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-84994571015,True,False,True,False
103,,"Kirchhof J.C. (AUID: 57004585200), Rumpe B. (AUID: 55861872700), Schmalzing D. (AUID: 57201335290), Wortmann A. (AUID: 56581745100)",,MontiThings: Model-Driven Development and Deployment of Reliable IoT Applications,2022,Journal of Systems and Software,,,,,,,25,10.1016/j.jss.2021.111087,https://www.doi.org/10.1016/j.jss.2021.111087,"<Software Engineering, RWTH Aachen University>, <Institute for Control Engineering of Machine Tools and Manufacturing Units (ISW), University of Stuttgart>",,"Â© 2021 Elsevier Inc.Internet of Things (IoT) applications are exposed to harsh conditions due to factors such as device failure, network problems, or implausible sensor values. We investigate how the inherent encapsulation of component and connector (C&C) architectures can be used to develop and deploy reliable IoT applications. Existing C&C languages for the development of IoT applications mainly focus on the description of architectures and the distribution of components to IoT devices. Furthermore, related approaches often pollute the models with low-level implementation details, tying the models to a particular platform and making them harder to understand. In this paper, we introduce MontiThings, a C&C language offering automatic error handling capabilities and a clear separation between business logic and implementation details. The error-handling methods presented in this paper can make C&C-based IoT applications more reliable without cluttering the business logic with error-handling code that is time-consuming to develop and makes the models hard to understand, especially for non-experts.","Architecture modeling, Code generation, Deployment, Internet of Things, Model-driven engineering",,,,,,,,"<Model-driven separation of concerns for service robotics, {eid: 85015193041}>, <Enterprise information systems in academia and practice: Lessons learned from a MBSE project, {eid: 85115262972}>, <On the deployment of IoT systems: An industrial survey, {eid: 85085747272}>, <Requirement-based deployment of applications in Calvin, {eid: 85018622215}>, <MSL: A pattern language for engineering self-adaptive systems, {eid: 85080064786}>, <Integrated data management for a fleet of search-and-rescue robots, {eid: 84978500286}>, <Situational context in the programmable world, {eid: 85050184835}>, <Implementing Domain-Specific Languages with Xtext and Xtend, {eid: 84906918277}>, <Modern Control Systems Analysis and Design using MATLAB and SIMULINK, {eid: 0004064857}>, <Toward a distributed data flow platform for the web of things (distributed node-RED), {eid: 84984984329}>, <A component architecture for the internet of things, {eid: 85045755257}>, <Specification and Development of Interactive Systems. Focus on Streams, Interfaces and Refinement, {eid: 0038688057}>, <Grand challenges in model-driven engineering: an analysis of the state of the research, {eid: 85077634676}>, <A library of literals, expressions, types, and statements for compositional language design, {eid: 85100195692}>, <Systematic language extension mechanisms for the MontiArc architecture description language, {eid: 85025126026}>, <Architectural programming with MontiArcAutomaton, {eid: 85058218229}>, <Continuously analyzing finite, message-driven, time-synchronous component & connector systems during architecture evolution, {eid: 85058783827}>, <Modeling reusable, platform-independent robot assembly processes, {eid: 85071365924}>, <Embedding component behavior DSLs into the MontiArcAutomaton ADL, {eid: 84999133847}>, <The MPS Language Workbench: Volume I, Vol. 1, {eid: 84940485278}>, <System Model Semantics of Class Diagrams: Informatik-Bericht 2008â05, {eid: 79957643944}>, <Three models for the description of language, {eid: 0004449398}>, <MDE4IoT: Supporting the internet of things with model-driven engineering, {eid: 85032279360}>, <Language engineering with the GEMOC studio, {eid: 85025599751}>, <A Guide to SQL Standard, {eid: 0004081967}>, <Domain-specific languages: An annotated bibliography, {eid: 0001813087}>, <SMArDT modeling for automotive software testing, {eid: 85055705898}>, <IoT developer survey 2019, {eid: 85090367575}>, <Model-based testing for the second generation of integrated modular avionics, {eid: 80051619278}>, <New trends in robotics for agriculture: integration and assessment of a real fleet of robots, {eid: 84899441301}>, <On the potential of event sourcing for retroactive actor-based programming, {eid: 85009899315}>, <The state of the art in language workbenches, {eid: 84891295467}>, <Empirical language analysis in software linguistics, {eid: 79952260717}>, <Model-Based Engineering with AADL: An Introduction to the SAE Architecture Analysis & Design Language, {eid: 84878057078}>, <Towards model-based continuous deployment of secure IoT systems, {eid: 85075910586}>, <GeneSIS: Continuous orchestration and deployment of smart IoT systems, {eid: 85072692587}>, <Continuous deployment of trustworthy smart IoT systems, {eid: 85089665982}>, <MDE to manage communications with and between resource-constrained systems, {eid: 80054085491}>, <Model-driven development of complex software: A research roadmap, {eid: 34748861160}>, <Detection and exploration of outlier regions in sensor data streams, {eid: 62449325312}>, <A Practical Guide to SysML: The Systems Modeling Language, {eid: 85107187033}>, <Midgar: Domain-specific language to generate smart objects for an internet of things platform, {eid: 84938677362}>, <Generated enterprise information systems: MDSE for maintainable co-development of frontend and backend, {eid: 85080937709}>, <Developing IoT applications in the fog: A distributed dataflow approach, {eid: 84962284412}>, <Industry 4.0: The Industrial Internet of Things, {eid: 85181385491}>, <MCM-BPM: A domain-specific language for business processes analysis, {eid: 66249096682}>, <Engineering tagging languages for DSLs, {eid: 84961634193}>, <OMG unified modeling language (OMG UML), infrastructure version 2.3 (10-05-03), {eid: 79958728594}>, <Integration of heterogeneous modeling languages via extensible and composable language components, {eid: 84939549902}>, <MontiArc - Architectural Modeling of Interactive Distributed and Cyber-Physical Systems: Technical Report AIB-2012-03, {eid: 84868359117}>, <ThingML: A language and code generation framework for heterogeneous targets, {eid: 85008457888}>, <Integrating OCL and textual modelling languages, {eid: 79957644161}>, <Compositional language engineering using generated, extensible, static type safe visitors, {eid: 84977498652}>, <None, {eid: 85053070397}>, <Software language engineering in the large: Towards composing and deriving languages, {eid: 85053063379}>, <13 AutoFocus 3 - A scientific tool prototype for model-based development of component-based, reactive, distributed systems, {eid: 84893476540}>, <Model-driven development of adaptive IoT systems, {eid: 85041450972}>, <ATL: A model transformation tool, {eid: 45849085734}>, <ATL: a QVT-like transformation language, {eid: 34248352650}>, <Model transformation language MOLA, {eid: 33644896630}>, <A model-driven architecture-based data quality management framework for the internet of things, {eid: 85013765900}>, <MontiBelle - Toolbox for a model-based development and verification of distributed critical systems for compliance with functional safety, {eid: 85091930330}>, <Automated semantics-preserving parallel decomposition of finite component and connector architectures, {eid: 85083769685}>, <Model-driven digital twin construction: Synthesizing the integration of cyber-physical systems with their information systems, {eid: 85096992990}>, <The epsilon transformation language, {eid: 54249141728}>, <Raising the level of abstraction in the development of GMF-based graphical model editors, {eid: 77949837351}>, <What industry needs from architectural languages: A survey, {eid: 84878389746}>, <Internet of things: Vision, applications and research challenges, {eid: 84861997111}>, <IoT reliability: a review leading to 5 key research directions, {eid: 85103659797}>, <Model-based software engineering to tame the IoT jungle, {eid: 85010402413}>, <Modeling cloud architectures as interactive systems, {eid: 84922922622}>, <Advances in deployment and orchestration approaches for IoT - A systematic review, {eid: 85072691780}>, <A survey on domain-specific languages in robotics, {eid: 84921626192}>, <Calvin â Merging cloud and IoT, {eid: 84939195246}>, <Kappa: Serverless IoT deployment, {eid: 85050674397}>, <None, {eid: 85116482118}>, <Internet of Things-from Hype to Reality: The Road to Digitization, {eid: 85008967582}>, <What are IoT systems for real? An expertsâ survey on software engineering aspects, {eid: 85105008082}>, <Internet of things patterns, {eid: 85015166666}>, <Analysis and Synthesis of Interactive Component and Connector Systems, {eid: 85009425521}>, <A little synopsis on streams, stream processing functions, and state-based stream processing, {eid: 84910030296}>, <Teaching agile model-driven engineering for cyber-physical systems, {eid: 85026747612}>, <Formale Methodik des Entwurfs Verteilter Objektorientierter Systeme, {eid: 0005266243}>, <Modeling with UML: Language, Concepts, Methods, {eid: 85125489900}>, <Abstraction and refinement in hierarchically decomposable and underspecified CPS-architectures, {eid: 85052702289}>, <Securing IoT for smart home system, {eid: 84953339812}>, <None, {eid: 0029723625}>, <Modeling and Analysis of Real-Time and Embedded Systems with UML and MARTE: Developing Cyber-Physical Systems, {eid: 84903657274}>, <ROOM: An object-oriented methodology for developing real-time systems, {eid: 0027088429}>, <OpenTOSCA for IoT: Automating the deployment of IoT applications based on the mosquitto message broker, {eid: 85000926700}>, <Model-based fleet deployment of edge computing applications, {eid: 85097001114}>, <EMF: Eclipse Modeling Framework, {eid: 74549142762}>, <EMF: Eclipse Modeling Framework, {eid: 74549142762}>, <SimTD: a car-to-X system architecture for field operational tests Topics in Automotive Networking, {eid: 77952115963}>, <A roadmap to the programmable world: Software challenges in the IoT era, {eid: 85010433150}>, <Beyond the next 700 lot platforms, {eid: 85044360052}>, <Liquid software manifesto: The era of multiple device ownership and its implications for software architecture, {eid: 84928633216}>, <A new skill based robot programming language using UML/P statecharts, {eid: 84887300711}>, <Neverlang: A framework for feature-oriented language development, {eid: 84938739142}>, <None, {eid: 84900017627}>, <DSL Engineering - Designing, Implementing and Using Domain-Specific Languages, {eid: 84882302510}>, <Language design with the spoofax language workbench, {eid: 84907989410}>, <Supporting the DSL spectrum, {eid: 85040714645}>, <Modeling languages in industry 4.0: an extended systematic mapping study, {eid: 85074431675}>",,,Elsevier Inc.,,,2022-01-01,,,,,,,eng,,Journal,,,,2-s2.0-85116410296,False,False,False,False
104,,"Bertram V. (AUID: 57192954469), BoÃ M. (AUID: 57988128500), Kusmenko E. (AUID: 57195075206), Nachmann I.H. (AUID: 57894980200), Rumpe B. (AUID: 55861872700), Trotta D. (AUID: 57987799300), Wachtmeister L. (AUID: 57212111969)",,Neural Language Models and Few Shot Learning for Systematic Requirements Processing in MDSE,2022,"15th ACM SIGPLAN International Conference on Software Language Engineering, SLE 2022, co-located with the ACM SIGPLAN conference on Systems, Programming, Languages, and Applications. SPLASH 2022",,,,,,,2,10.1145/3567512.3567534,https://www.doi.org/10.1145/3567512.3567534,<Rwth Aachen University>,,"Â© 2022 ACM.Systems engineering, in particular in the automotive domain, needs to cope with the massively increasing numbers of requirements that arise during the development process. The language in which requirements are written is mostly informal and highly individual. This hinders automated processing of requirements as well as the linking of requirements to models. Introducing formal requirement notations in existing projects leads to the challenge of translating masses of requirements and the necessity of training for requirements engineers. In this paper, we derive domain-specific language constructs helping us to avoid ambiguities in requirements and increase the level of formality. The main contribution is the adoption and evaluation of few-shot learning with large pretrained language models for the automated translation of informal requirements to structured languages such as a requirement DSL.","few-shot learning, model-driven engineering, model-driven requirements engineering, natural language processing",,,,,,,,"<A Zero-Shot Learning Approach to Classifying Requirements: A Preliminary Study, {eid: 85127051029}>, <Artifact and Reference Models for Generative Machine Learning Frameworks and Build Systems, {eid: 85120851738}>, <Interoperable Toolchain for Requirements-Driven Model-Based Development, {eid: 85146981366}>, <None, {eid: 85147039607}>, <Component and Connector Views in Practice: An Experience Report, {eid: 85040631558}>, <None, {eid: 85090303288}>, <Grand Challenges in Model-Driven Engineering: An Analysis of the State of Research, {eid: 85077634676}>, <None, {eid: 85092112367}>, <None, {eid: 85057019815}>, <A Methodology for Retrofitting Generative Aspects in Existing Applications, {eid: 85122045750}>, <SMArDT modeling for automotive software testing, {eid: 85055705898}>, <Modellierung, Verifikation und Synthese von validen PlanungszustÃ¤nden fÃ¼r Fernsehausstrahlungen, {eid: 85147040543}>, <Semantic Evolution Analysis of Feature Models, {eid: 85143076817}>, <Model-driven Development of Complex Software: A Research Roadmap, {eid: 34748861160}>, <Meaningful Modeling: Whats the Semantics of ""Semantics"", {eid: 7244261750}>, <NoRBERT: Transfer learning for requirements classification, {eid: 85091480468}>, <Clustering Natural Language Test Case Instructions as Input for Deriving Automotive Testing DSLs, {eid: 85109428691}>, <Modeling Dynamic Architectures of Self-Adaptive Cooperative Systems, {eid: 85075948566}>, <An Approach for Logic-based Knowledge Representation and Automated Reasoning over Underspecification and Refinement in Safety-Critical Cyber-Physical Systems, {eid: 85082966829}>, <Modeling and Training of Neural Processing Systems, {eid: 85075936455}>, <On the Engineering of AI-Powered Systems, {eid: 85079270211}>, <Modeling Architectures of Cyber-Physical Systems, {eid: 85025124378}>, <None, {eid: 85143067431}>, <A Systematic Reviewof the Use of Requirements Engineering Techniques in Model-Driven Development, {eid: 80055026559}>, <Software requirement-specific entity extraction using transformer models, {eid: 85143058768}>, <A Machine Learning Approach to Software Requirements Prioritization, {eid: 84875692349}>, <None, {eid: 82455195427}>, <None, {eid: 85056475484}>, <Detection of Hidden Feature Requests from Massive Chat Messages via Deep Siamese Network, {eid: 85094317439}>, <Cyber Physical Systems: Analyses, challenges and possible solutions, {eid: 85134027388}>, <Attention is all you need, {eid: 85043317328}>, <None, {eid: 85119143718}>, <None, {eid: 85110956191}>",,,"Association for Computing Machinery, Inc",,,2022-12-06,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85143075634,False,False,False,False
105,,"Kusmenko E. (AUID: 57195075206), Pavlitskaya S. (AUID: 57212167862), Rumpe B. (AUID: 55861872700), Stuber S. (AUID: 57206668572)",,On the engineering of ai-powered systems,2019,"34th IEEE/ACM International Conference on Automated Software Engineering Workshops, ASEW 2019",,,,,,,7,10.1109/ASEW.2019.00042,https://www.doi.org/10.1109/ASEW.2019.00042,"<Department of Software Engineering, RWTH Aachen University>",,"Â© 2019 IEEE.More and more tasks become solvable using deep learning technology nowadays. Consequently, the amount of neural network code in software rises continuously. To make the new paradigm more accessible, frameworks, languages, and tools keep emerging. Although, the maturity of these tools is steadily increasing, we still lack appropriate domain specific languages and a high degree of automation when it comes to deep learning for productive systems. In this paper we present a multi-paradigm language family allowing the AI engineer to model and train deep neural networks as well as to integrate them into software architectures containing classical code. Using input and output layers as strictly typed interfaces enables a seamless embedding of neural networks into component-based models. The lifecycle of deep learning components can then be governed by a compiler accordingly, e.g. detecting when (re-)training is necessary or when network weights can be shared between different network instances. We provide a compelling case study, where we train an autonomous vehicle for the TORCS simulator. Furthermore, we discuss how the methodology automates the AI development process if neural networks are changed or added to the system.","Deep learning, Mde, Neural networks",,,,,,,,"<Modeling and training of neural processing systems, {eid: 85075936455}>, <Modeling architectures of cyber-physical systems, {eid: 85025124378}>, <Highly-optimizing and multi-Target compiler for embedded system models: C++ compiler toolchain for the component and connector language embeddedmontiarc, {eid: 85056871758}>, <Simulink user?s guide.Technical report r2019a, {eid: 85080014559}>, <Tensorflow: A system for large-scale machine learning, {eid: 85075670920}>, <Torch7: A matlab-like environment for machine learning, {eid: 84888340666}>, <None, {eid: 85079977198}>, <Collaborative hyperparameter tuning, {eid: 84882279850}>, <None, {eid: 85079981380}>, <Imagenet classification with deep convolutional neural networks, {eid: 84876231242}>, <Convolutional networks and applications in vision, {eid: 77955998889}>, <Deepdriving: Learning affordance for direct perception in autonomous driving, {eid: 84973888858}>, <Torcs, the open racing car simulator, {eid: 85046286984}>, <None, {eid: 85010075270}>, <None, {eid: 85053070397}>, <Pedram mir seyed nazari, {eid: 85079968713}>, <Imagenet classification with deep convolutional neural networks, {eid: 84876231242}>, <Engineering tagging languages for dsls, {eid: 84961634193}>, <Ros: An open-source robot operating system, {eid: 77957352104}>, <Component-based integration of interconnected vehicle architectures, {eid: 85072280010}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2019-11-10,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85079270211,True,True,False,False
106,,"Elaasar M. (AUID: 8835817100), Rouquette N. (AUID: 6505834104), Wagner D. (AUID: 57213115862), Hamou-Lhadj A. (AUID: 24314702300), Oakes B.J. (AUID: 56289881100), Hamdaqa M. (AUID: 35810456100)",,openCAESAR: Balancing Agility and Rigor in Model-Based Systems Engineering,2023,"2023 ACM/IEEE International Conference on Model Driven Engineering Languages and Systems, MODELS-C 2023",,,,,,,1,10.1109/MODELS-C59198.2023.00051,https://www.doi.org/10.1109/MODELS-C59198.2023.00051,"<California Institute of Technology, Nasa Jet Propulsion Lab>, <Concordia University, Electrical and Computer Engineering>, <Diro, UniversitÃ© de MontrÃ©al>, <Polytechnique MontrÃ©al, Computer and Software Engineering>",,"Â© 2023 IEEE.Model-Based System Engineering (MBSE) employs models and formal languages to support development of complex (systems-of-) systems. NASA Jet Propulsion Laboratory (JPL) sees MBSE as a key approach to managing the complexity of system development. However, balancing agility and rigor in MBSE has been reported as a challenging task not yet addressed by modeling tools and frameworks. This is because existing MBSE approaches may enable agility but compromise rigor, or enhance rigor but impede agility. We discuss the challenges of balancing agility and rigor in MBSE across seven systems engineering architectural functions defined by the JPL Integrated Model-Centric Engineering (IMCE) initiative. We demonstrate how openCAESAR, an open-source MBSE methodology and framework created at JPL, can strike a balance between agility and rigor through a case study of the Kepler16b project and discussion of lessons learned from past projects.","Model-Based Systems Engineering, OML, Ontology-based Modeling, openCAESAR, Systems Engineering",,,,,,,,"<Model-based systems engineering: Motivation, current status, and research opportunities, {eid: 85046694426}>, <Value and benefits of model-based systems engineering (MBSE): Evidence from the literature, {eid: 85098450048}>, <State-of-practice survey of model-based systems, {eid: 85052963713}>, <None, {eid: 2342509886}>, <A survey of devops concepts and challenges, {eid: 85075608026}>, <CAESAR model-based approach to harness design, {eid: 85092558185}>, <Ontological Metamodeling and Analysis Using openCAESAR, {eid: 85182396192}>, <Ontology building for cyber-physical systems: Application in the manufacturing domain, {eid: 85085751213}>, <Balancing systems engineering rigor with agile software development flexibility, {eid: 85171892288}>, <Investigating relationships and semantic sets amongst system lifecycle properties (ilities), {eid: 84938572797}>, <Agility in the future of systems engineering (FuSE)-a roadmap of foundational concepts, {eid: 85163738551}>, <Models as enablers of agility in complex systems engineering, {eid: 85130817821}>, <Systematic literature review of MBSE tool-chains, {eid: 85127743743}>, <A Survey on MBSE Adoption Challenges, {eid: 85106386252}>, <Model-based systems engineering: An emerging approach for modern systems, {eid: 84655170010}>, <None, {eid: 85182394753}>, <Towards agile model-based systems engineering, {eid: 85041433552}>, <DSMCompare: Domain-specific model differencing for graphical domainspecific languages, {eid: 85122347279}>, <Semantically-rigorous systems engineering modeling using SysML and OWL, {eid: 84906870818}>, <Application of agile model-based systems engineering in aircraft conceptual design, {eid: 85060448994}>, <10.5. 1 an MBSE case study and research challenges, {eid: 84939228470}>, <Applying model based systems engineering (MBSE) to a standard cubesat, {eid: 84861121452}>, <MBSE applications for the MSR SRC Mars Ascent Vehicle, {eid: 85137577843}>, <An MBSE architectural framework for the agile definition of system stakeholders, needs and requirements, {eid: 85124455676}>, <Ontologybased design of space systems, {eid: 84992660381}>, <Towards an open platform for democratized model-based design and engineering of cyber-physical systems, {eid: 85182390527}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2023-10-01,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85182402872,False,False,False,False
107,,"Yussupov V. (AUID: 57204498259), Breitenbucher U. (AUID: 54929864700), Krieger C. (AUID: 57094718000), Leymann F. (AUID: 6603379902), Wurster M. (AUID: 57191865623), Soldani J. (AUID: 56203938200)",,"Pattern-based Modelling, Integration, and Deployment of Microservice Architectures",2020,"24th IEEE International Enterprise Distributed Object Computing Conference, EDOC 2020",,,,,,,15,10.1109/EDOC49727.2020.00015,https://www.doi.org/10.1109/EDOC49727.2020.00015,"<University of Stuttgart, Institute of Architecture of Application Systems>, <University of Pisa, Department of Computer Science>",,"Â© 2020 IEEE.Microservice-based architectures (MSAs) gained momentum in industrial and research communities since finer-grained and more independent components foster reuse and reduce time to market. However, to come from the design of MSAs to running applications, substantial knowledge and technology-specific expertise in the deployment and integration of microservices is needed. In this paper, we propose a model-driven and pattern-based approach for composing microservices, which facilitates the transition from architectural models to running deployments. Using a unified modelling for MSAs, including both their integration based on Enterprise Integration Patterns (EIPs) and deployment aspects, our approach enables automatically generating the artefacts for deploying microservice compositions. This helps abstracting away the underlying infrastructure including container orchestration platforms and middleware layer for service integration. To validate the feasibility of our approach, we illustrate its prototypical implementation, with Kubernetes used as container orchestration system and OpenFaaS used for managing integration logic, and we present a case study.","Enterprise Integration Pattern, Microservice Architecture, Model-driven Engineering, Service Composition",,,,,,,,"<None, {eid: 84950338538}>, <None, {eid: 84964234114}>, <Microservices tenets, {eid: 84995489225}>, <The pains and gains of microservices: A systematic grey literature review, {eid: 85054175054}>, <Architectural patterns for microservices: A systematic mapping study, {eid: 85093984653}>, <None, {eid: 10044221068}>, <Towards a taxonomy of microservices architectures, {eid: 85042125420}>, <Contextual understanding of microservice architecture: Current and future directions, {eid: 85049370573}>, <None, {eid: 84937681996}>, <Containers and cloud: From lxc to docker to kubernetes, {eid: 84923248887}>, <Declarative vs. Imperative: Two Modeling Patterns for the Automated Deployment of Applications, {eid: 85050411724}>, <None, {eid: 0003752204}>, <None, {eid: 85096576488}>, <Microservices: Yesterday, today, and tomorrow, {eid: 85054938535}>, <Microservices: The journey so far and challenges ahead, {eid: 85046893906}>, <Towards integrating microservices with adaptable enterprise architecture, {eid: 84992626303}>, <Microart: A software architecture recovery tool for maintaining microservice-based systems, {eid: 85025579355}>, <Microservice ambients: An architectural meta-modelling approach for microservice granularity, {eid: 85021456926}>, <Freshening the air in microservices: Resolving architectural smells via refactoring, {eid: 85084862852}>, <Microservices-lightweight service descriptions for rest architectural style, {eid: 77956283865}>, <Aspect-oriented challenges in system integration with microservices, soa and iot, {eid: 85045152190}>, <Incremental integration of microservices in cloud applications, {eid: 84995923681}>, <Microservices: A language-based approach, {eid: 85041830332}>, <Circuit breakers, discovery, and API gateways in microservices, {eid: 85048621033}>, <None, {eid: 85096558746}>, <An architecture for self-managing microservices, {eid: 84958972998}>, <Container and microservice driven design for cloud infrastructure devops, {eid: 84978128210}>, <Beethoven: An event-driven lightweight platform for microservice orchestration, {eid: 85057285607}>, <A dashboard for microservice monitoring and management, {eid: 85025678915}>, <Model-based engineering for microservice architectures using enterprise integration patterns for inter-service communication, {eid: 85031757791}>, <Medley: An event-driven lightweight platform for service composition, {eid: 84977485477}>, <The edmm modeling and transformation system, {eid: 85084788084}>, <None, {eid: 85046797891}>, <Leveraging Pattern Application via Pattern Refinement, {eid: 85038447563}>, <Cloud Data Patterns for Confidentiality, {eid: 84864874794}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2020-10-05,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85096537599,False,False,False,True
108,,"Barriga A. (AUID: 57207860282), Rutle A. (AUID: 26967894200), Heldal R. (AUID: 6602582740)",,Personalized and automatic model repairing using reinforcement learning,2019,"22nd ACM/IEEE International Conference on Model Driven Engineering Languages and Systems Companion, MODELS-C 2019",,,,,,,17,10.1109/MODELS-C.2019.00030,https://www.doi.org/10.1109/MODELS-C.2019.00030,"<Department of Software Engineering, Western Norway University of Applied Sciences>",,"Â© 2019 IEEE.When performing modeling activities, the chances of breaking a model increase together with the size of development teams and number of changes in software specifications. Model repair research mostly proposes two different solutions to this issue: fully automatic, non-interactive model repairing tools or support systems where the repairing choice is left to the developer's criteria. In this paper, we propose the use of reinforcement learning algorithms to achieve the repair of broken models allowing both automation and personalization. We validate our proposal by repairing a large set of broken models randomly generated with a mutation tool.","Model repair, Personalization, Reinforcement learning",,,,,,,,"<The state of practice in model-driven engineering, {eid: 84899687758}>, <None, {eid: 85075940490}>, <Automatic model repair using reinforcement learning, {eid: 85063099879}>, <None, {eid: 0004007508}>, <Cognifying modeldriven software engineering, {eid: 85042643413}>, <None, {eid: 84877770961}>, <Online img2uml repository: An online repository for UML, {eid: 84925010640}>, <Mdeforge: An extensible web-based modeling platform, {eid: 84911959056}>, <None, {eid: 34547932110}>, <Reinforcement learning: A survey, {eid: 0029679044}>, <None, {eid: 74549142762}>, <None, {eid: 85075921623}>, <None, {eid: 85075956634}>, <None, {eid: 85075941591}>, <None, {eid: 85075955114}>, <None, {eid: 85075938557}>, <None, {eid: 85075941052}>, <Amor-towards adaptable model versioning, {eid: 79956310521}>, <Wodel: A domainspecific language for model mutation, {eid: 84975841244}>, <Resolving model inconsistencies using automated regression planning, {eid: 84922337776}>, <Rule-based repair of EMF models: An automated interactive approach, {eid: 85025137338}>, <Change-preserving model repair, {eid: 85016408527}>, <An automated and instant discovery of concrete repairs for model inconsistencies, {eid: 85049674679}>, <Searchbased detection of model level changes, {eid: 84988735029}>, <EMF metrics: Specification and calculation of model metrics within the eclipse modeling framework, {eid: 84924957768}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2019-09-15,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85075917035,True,False,False,True
109,,"De La Vega A. (AUID: 57031617600), Sanchez P. (AUID: 57219994433), Kolovos D.S. (AUID: 8895714200)",,Pinset: A DSL for extracting datasets from models for data mining-based quality analysis,2018,"11th International Conference on the Quality of Information and Communications Technology, QUATIC 2018",,,,,,,1,10.1109/QUATIC.2018.00021,https://www.doi.org/10.1109/QUATIC.2018.00021,"<Software Engineering and Real-Time, Universidad de Cantabria>, <Department of Computer Science, University of York>",,"Â© 2018 IEEE.Data mining techniques have been successfully applied to software quality analysis and assurance, including quality of modeling artefacts. Before such techniques can be used, though, data under analysis commonly need to be formatted into two-dimensional tables. This constraint is imposed by data mining algorithms, which typically require a collection of records as input for their computations. The process of extracting data from the corresponding sources and formatting them properly can become error-prone and cumbersome. In the case of models, this process is mostly carried out through scripts written in a model management language, such as EOL or ATL. To improve this situation, we present Pinset, a domain-specific language devised for the extraction of tabular datasets from software models. Pinset offers a tailored syntax and built-in facilities for common activities in dataset extraction. For evaluation, Pinset has been used on UML class diagrams to calculate metrics that can be employed as input for several fault-prediction algorithms. The use of Pinset for this calculations led to more compact and high-level specifications when compared to equivalent scripts written in generic model management languages.","Data Mining, Domain-Specific Languages, Model-Driven Engineering, Software Quality",,,,,,,,"<None, {eid: 85009962818}>, <A systematic review of machine learning techniques for software fault prediction, {eid: 84919754115}>, <Investigating code smell co-occurrences using association rule learning: A replicated study, {eid: 85018335521}>, <Using machine learning to design a flexible LOC counter, {eid: 85018331426}>, <Predictive mutation testing, {eid: 85062193490}>, <An extensive comparison of bug prediction approaches, {eid: 77953782938}>, <Travistorrent: Synthesizing travis ci and github for full-stack research on continuous integration, {eid: 85026557876}>, <Mining metrics for understanding metamodel characteristics, {eid: 84911465837}>, <None, {eid: 0004121211}>, <ATL: A model transformation tool, {eid: 45849085734}>, <The design of a conceptual framework and technical infrastructure for model management language engineering, {eid: 70350041761}>, <A metrics suite for object oriented design, {eid: 0028446078}>, <The quest for open source projects that use uml: Mining github, {eid: 85008473064}>, <The epsilon transformation language, {eid: 54249141728}>, <The KDD process for extracting useful knowledge from volumes of data, {eid: 0030285403}>, <Automatic feature selection by regularization to improve bug prediction accuracy, {eid: 85018351732}>, <Predicting software defects with causality tests, {eid: 84900800922}>, <Automated parameter optimization of classification techniques for defect prediction models, {eid: 84971421988}>, <Combining unit and specification-based testing for meta-model validation and verification, {eid: 84994525407}>, <The epsilon object language (EOL), {eid: 33746467089}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2018-09-04,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85061315485,False,False,True,False
110,,"Wang B. (AUID: 57195149059), Boehm B.W. (AUID: 7102111447)",,Process implications of executable domain models for microservices development,2020,"2020 IEEE/ACM International Conference on Software and System Processes, ICSSP 2020",,,,,,,0,10.1145/3379177.3388896,https://www.doi.org/10.1145/3379177.3388896,<University of Southern California>,,"Â© 2020 ACM.Microservice architecture has been recognized as an important enabler for continuous development of many cloud-based systems. Code generation has been tried in the tool chain of building microservices. However, most existing tools generally do not consider the risks from continuous development. We have been developing a toolkit which generates microservices from application domain models. Our approach aligns development process to this toolkit and coordinates domain modeling activity over project life cycles. In this paper, we describe its framework and corresponding development process which eliminates delays brought by the uncertainty of a project at a relatively early stage. Several minimum viable products have been built upon the proposed approach during the past years, including automated generation of code from domain decomposition. Our result shows 10% saving of effort and fewer issues. Effort saving increases to 30% under an extreme condition with high-rate personnel turnover. We also discuss our findings on running these projects and raise discussion and questions for future enhancement.","agile, code generation, continuous development, domain modeling, microservices",,,,,,,,"<None, {eid: 85049258745}>, <Continuous software engineering-a microservices architecture perspective, {eid: 85017406300}>, <None, {eid: 84902500464}>, <Requirements that handle ikiwisi, cots, and rapid change, {eid: 0034225745}>, <None, {eid: 0003567818}>, <None, {eid: 84945421024}>, <None, {eid: 85072677005}>, <None, {eid: 85092502208}>, <None, {eid: 85092463737}>, <None, {eid: 26444461500}>, <None, {eid: 85092461991}>, <None, {eid: 85092482656}>, <None, {eid: 85092446543}>, <None, {eid: 85092464832}>, <Xpand: A closer look at the model2text transformation language, {eid: 84876008007}>, <None, {eid: 85092507302}>, <None, {eid: 85092456531}>, <Modeling data-orientedweb applications using uml, {eid: 33847791018}>, <None, {eid: 85092505302}>, <Systematic mapping study of template-based code generation, {eid: 85038035398}>, <None, {eid: 85092487582}>, <None, {eid: 85092515186}>, <Domain modeling and domain engineering: Key tasks in requirements engineering, {eid: 84929561538}>, <Use case driven object modeling with uml: Theory and practice, {eid: 84892311286}>, <Feature-based survey of model transformation approaches, {eid: 33748289548}>, <Xsl transformations (xslt), {eid: 0003247033}>, <None, {eid: 85092494578}>, <None, {eid: 85075142452}>, <The stanford corenlp natural language processing toolkit, {eid: 85117622017}>, <The parallel agile process: Applying parallel processing techniques to software engineering, {eid: 85067873971}>, <Rapid, evolutionary, reliable, scalable system and software development: The resilient agile process, {eid: 85025822289}>, <A field study of the software design process for large systems, {eid: 0024105910}>, <Identifying domain elements from textual specifications, {eid: 84989189561}>, <Extracting conceptual models from user stories with visual narrator, {eid: 85019539096}>, <Automated extraction of conceptual models from user stories via nlp, {eid: 85007173628}>, <A survey of schema-based matching approaches, {eid: 36849011504}>, <A survey of schema matching research using database schemas and instances, {eid: 85062423632}>, <Rapid realization of executable domain models via automatic code generation, {eid: 85049258166}>",,,"Association for Computing Machinery, Inc",,,2020-10-10,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85092467157,True,False,False,False
111,,"Gautham S. (AUID: 57202302784), Jayakumar A.V. (AUID: 57219110729), Rajagopala A. (AUID: 57215564269), Elks C. (AUID: 6507194517)",,Realization of a model-based DevOps process for industrial safety critical cyber physical systems,2021,"4th IEEE International Conference on Industrial Cyber-Physical Systems, ICPS 2021",,,,,,,7,10.1109/ICPS49255.2021.9468213,https://www.doi.org/10.1109/ICPS49255.2021.9468213,"<Dependable Cyber-Physical Systems Lab, Virginia Commonwealth University>",,"Â© 2021 IEEE.Safety critical Industrial Cyber Physical Systems (CPS) have stringent safety and security requirements and need assurance of deterministic behavior during system operation. In many safety critical application domains, runtime monitors (or runtime verification) are used to enforce operational safety and security. One of the challenges in runtime verification is to identify the critical safety properties that we want to monitor at runtime. In this paper, we explore how structural verification activities in a Model Based Design and Engineering (MBDE) context help formulate more effective monitoring specifications to cover vulnerable areas in a system. We assert that leveraging synergy between design and runtime verification produces more informed runtime safety monitors. This approach of integrating design assurance and runtime safety and security is an important aspect of the dependable DevOps continuum process. To demonstrate this, we perform verification of an Emergency Diesel Generator Startup Sequencer (EDGSS) implemented on an FPGA overlay architecture using model-based verification techniques. We present our key findings on synergy between runtime verification and design processes to support a more inclusive safety case.","DevOps, Industrial Cyber Physical Systems, Model-based engineering, Runtime verification",,,,,,,,"<Model-based systems engineering: An emerging approach for modern systems, {eid: 84655170010}>, <None, {eid: 84883136062}>, <Towards a model-based devops for cyber-physical systems, {eid: 85079099244}>, <Towards a secure devops approach for cyber-physical systems: An industrial perspective, {eid: 85106659186}>, <Overview of iec 61508. design of electrical/electronic/programmable electronic safety-related systems, {eid: 0033902909}>, <None, {eid: 85112350776}>, <None, {eid: 85112359412}>, <Assume-guarantee testing, {eid: 79959259531}>, <Property-based fault injection: A novel approach to model-based fault injection for safety critical systems, {eid: 85091292067}>, <None, {eid: 1642497296}>, <Your what is my how: Why requirements and architectural design should be iterative, {eid: 84870841976}>, <Industry 4. 0 as a cyber-physical system study, {eid: 84956605744}>, <Towards a taxonomy for eliciting design-operation continuum requirements of cyber-physical systems, {eid: 85093982993}>, <Twinops-devops meets model-based engineering and digital twins for the engineering of cps, {eid: 85096747019}>, <Combining testing and runtime verification techniques, {eid: 84883352338}>, <Dependable adas by combining design time testing and runtime monitoring, {eid: 84922323290}>, <Safety and security in cyber-physical systems and internet-of-things systems, {eid: 85048031318}>, <Testing meets static and runtime verification, {eid: 85052058154}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2021-05-10,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85112350140,False,False,False,False
112,,"Holmes T. (AUID: 24469746000), Zdun U. (AUID: 55908948800)",,Refactoring architecture models for compliance with custom requirements,2018,"21st ACM/IEEE International Conference on Model Driven Engineering Languages and Systems, MODELS 2018",,,,,,,5,10.1145/3239372.3239379,https://www.doi.org/10.1145/3239372.3239379,"<Technology and Innovation, Deutsche Telekom AG Darmstadt>, <Faculty of Computer Science, University of Vienna>",,"Â© 2018 Association for Computing Machinery.In the process of software-intensive systems engineering, architectures need to be designed that are compliant to the requirements. For this, architects need to examine those requirements with regard to their architectural impact. Accessing and interpreting the requirements is however not always possible, for instance if custom requirements are yet unknown at the time when the architecture is modeled. Ideally, architectural knowledge as derived from custom requirements could be imposed upon architecture models. This paper proposes a novel concept for automated refactoring of architecture models in order to meet such requirements by formalizing architectural knowledge using model verification and model transformations. Industrial application within a telecommunications service provider is demonstrated in the domain of cloud application orchestration: service providers are enabled to autonomously customize solutions predefined by vendors according to their own internal requirements.",,,,,,,,,"<Antipattern-based model refactoring for software performance improvement, {eid: 84864066029}>, <Model refactoring in Eclipse by LTK, EWL, and EMF refactor: A case study, {eid: 84864712008}>, <A systematic review of cloud modeling languages, {eid: 85042469266}>, <UML-based Cloud Application Modeling with Libraries, Profiles, and Templates, {eid: 84911965669}>, <EMF model refactoring based on graph transformation concepts, {eid: 84871551093}>, <TOSCA: Portable automated deployment and management of cloud applications, {eid: 84930424951}>, <None, {eid: 84886745724}>, <Towards Model-Driven Provisioning, Deployment, Monitoring, and Adaptation of Multi-cloud Systems, {eid: 85184840384}>, <None, {eid: 0004061016}>, <A metamodeling approach to pattern-based model refactoring, {eid: 0141502278}>, <Model refactoring in web applications, {eid: 78751538422}>, <Repetitive model refactoring strategy for the design space exploration of intensive signal processing applications, {eid: 80052419181}>, <CloudML: An integrated language for resource, service and request description for D-clouds, {eid: 84857171458}>, <Refactoring local to cloud data types for mobile apps, {eid: 84903553875}>, <Cloud migration patterns: A multi-cloud service architecture perspective, {eid: 84966630752}>, <Evaluation of model transformation approaches for model refactoring, {eid: 84897094918}>, <The epsilon object language (EOL), {eid: 33746467089}>, <Update transformations in the small with the epsilon wizard language, {eid: 36048961543}>, <Cloud refactoring: Automated transitioning to cloud-based services, {eid: 84902289227}>, <Moving applications to the cloud: An approach based on application model enrichment, {eid: 80052998424}>, <On the use of graph transformations for model refactoring, {eid: 33750084999}>, <A taxonomy of model transformation, {eid: 33644921482}>, <None, {eid: 34748812695}>, <None, {eid: 85056909208}>, <None, {eid: 85056886148}>, <Refactoring to rich internet applications. A model-driven approach, {eid: 52049093867}>, <Migrating application data to the cloud using cloud data, {eid: 84884469493}>, <Migrating enterprise applications to the cloud: Methodology and evaluation, {eid: 84976471683}>, <None, {eid: 84866136327}>, <Model transformation by example, {eid: 33750321819}>, <Requirements as first-class citizens: Integrating Requirements closely with Implementation Artifacts, {eid: 85056869862}>, <Standards-based Devops automation and integration using TOSCA, {eid: 84946692273}>, <A DSL toolkit for deferring architectural decisions in DSL-based software design, {eid: 77955779391}>, <Generic and domain-specific model refactoring using a model transformation engine, {eid: 84892321793}>, <Architectural refactoring: A task-centric view on software evolution, {eid: 84925036831}>",,,"Association for Computing Machinery, Inc",,,2018-10-14,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85056854251,False,False,False,False
113,,"Spieker H. (AUID: 57189329650), Gotlieb A. (AUID: 56247674500), Marijan D. (AUID: 34872942800), Mossige M. (AUID: 55842764600)",,Reinforcement learning for automatic test case prioritization and selection in continuous integration,2017,"26th ACM SIGSOFT International Symposium on Software Testing and Analysis, ISSTA 2017",,,,,,,163,10.1145/3092703.3092709,https://www.doi.org/10.1145/3092703.3092709,"<Simula Research Laboratory>, <University of Stavanger>, <ABB Robotics>",,"Â© 2017 Association for Computing Machinery.Testing in Continuous Integration (CI) involves test case prioritization, selection, and execution at each cycle. Selecting the most promising test cases to detect bugs is hard if there are uncertainties on the impact of committed code changes or, if traceability links between code and tests are not available. This paper introduces Retecs, a new method for automatically learning test case selection and prioritization in CI with the goal to minimize the round-trip time between code commits and developer feedback on failed test cases. The Retecs method uses reinforcement learning to select and prioritize test cases according to their duration, previous last execution and failure history. In a constantly changing environment, where new test cases are created and obsolete test cases are deleted, the Retecs method learns to prioritize error-prone test cases higher under guidance of a reward function and by observing previous CI cycles. By applying Retecs on data extracted from three industrial case studies, we show for the first time that reinforcement learning enables fruitful automatic adaptive test case selection and prioritization in CI and regression testing.","Continuous Integration, Machine Learning, Regression testing, Reinforcement Learning, Test case prioritization, Test case selection",,,,,,,,"<Apprenticeship learning via inverse reinforcement learning, {eid: 31844444663}>, <Improving proceeding test case prioritization with learning software agents, {eid: 84902356655}>, <Active learning for automatic classification of software behavior, {eid: 22944435659}>, <Learning for test prioritization: An industrial case study, {eid: 84997235107}>, <Clustering based novel test case prioritization technique, {eid: 84983233375}>, <Using semi-supervised clustering to improve regression test selection techniques, {eid: 79958759034}>, <A multi-objective particle swarm optimization for test case selection based on functional requirements coverage and execution effort, {eid: 84855811230}>, <Search based constrained test case selection using execution effort, {eid: 84885031013}>, <Coverage-based regression test case selection, minimization and prioritization: A case study on an industrial system, {eid: 84928926856}>, <None, {eid: 38549173069}>, <None, {eid: 85026650757}>, <Techniques for improving regression testing in continuous integration development environments, {eid: 84986877429}>, <None, {eid: 0006705483}>, <Ekstazi: Lightweight test selection, {eid: 84951764887}>, <Lightweight automated testing with adaptation-based programming, {eid: 84876394399}>, <A history-based test prioritization technique for regression testing in resource constrained environments, {eid: 0036041041}>, <Test case prioritization based on information retrieval concepts, {eid: 84951272973}>, <Self-improving reactive agents based on reinforcement learning, planning and teaching, {eid: 0000123778}>, <Test case prioritization for continuous regression testing: An industrial case study, {eid: 84891715780}>, <Reward functions for accelerated learning, {eid: 84957895797}>, <Size-constrained regression test case selection using multicriteria optimization, {eid: 84864606587}>, <History-based test case prioritization for black box testing using ant colony optimization, {eid: 84935096380}>, <A similarity-based approach for test case prioritization using historical failure data, {eid: 84964844271}>, <Software testing: A research travelogue (2000-2014), {eid: 84979703490}>, <Historical value-based approach for cost- cognizant test case prioritization to improve the effectiveness of regression testing, {eid: 51749110666}>, <Scikit-learn: Machine Learning in Pjython, {eid: 80555140075}>, <Test case prioritization for multiple processing queues, {eid: 62449129360}>, <Combinatorial interac-tionregressiontesting: Astudyoftestcase generationandprioritization, {eid: 47349111813}>, <Risk-based interoperability testing using reinforcement learning, {eid: 85026664193}>, <Neural fitted Q iteration - First experiences with a data efficient neural Reinforcement Learning method, {eid: 33646398129}>, <Test case prioritization: An empirical study, {eid: 0033326792}>, <Prioritizing test cases for regression testing, {eid: 0035481183}>, <An information retrieval approach for regression test prioritization basedon program changes, {eid: 84951789291}>, <Enabling agile testing through continuous integration, {eid: 70449678931}>, <Experience report: Automated system level regression test prioritization using multiple factors, {eid: 85013287871}>, <None, {eid: 0004102479}>, <Reinforcement learning in continuous action spaces, {eid: 34548807200}>, <None, {eid: 0013153953}>, <None, {eid: 43049140624}>, <Time-aware test suite prioritization, {eid: 34247327814}>, <None, {eid: 84855242052}>, <None, {eid: 78650186589}>, <Time-aware test-case prioritization using integer linear programming, {eid: 85008264025}>, <Solving large scale linear prediction problems using stochastic gradient descent algorithms, {eid: 14344259207}>",,,"Association for Computing Machinery, Inc",,,2017-07-10,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85026639599,True,False,True,False
114,,"Di Rocco J. (AUID: 55877197500), Di Sipio C. (AUID: 57215525221)",,ResyDuo: Combining Data Models and CF-Based Recommender Systems to Develop Arduino Projects,2023,"2023 ACM/IEEE International Conference on Model Driven Engineering Languages and Systems, MODELS-C 2023",,,,,,,0,10.1109/MODELS-C59198.2023.00091,https://www.doi.org/10.1109/MODELS-C59198.2023.00091,<University of lAquila>,,"Â© 2023 IEEE.While specifying an IoT-based system, software developers have to face a set of challenges, spanning from selecting the hardware components to writing the actual source code. Even though dedicated development environments are in place, a non-expert user might struggle with the over-choice problem in selecting the proper component. By combining MDE and recommender systems, this paper proposes an initial prototype, called ResyDuo, to assist Arduino developers by providing two different artifacts, i.e., hardware components and software libraries. In particular, we make use of a widely adopted collaborative filtering algorithm by collecting relevant information by means of a dedicated data model. ResyDuo can retrieve hardware components by using tags or existing Arduino projects stored on the ProjectHub repository. Then, the system can eventually retrieve corresponding software libraries based on the identified hardware devices. ResyDuo is equipped with a web-based interface that allows users to easily select and configure the under-developing Arduino project. To assess ResyDuo's performances, we run the ten-fold cross-validation by adopting the grid search strategy to optimize the hyperparameters of the CF-based algorithm. The conducted evaluation shows encouraging results even though there is still room for improvement in terms of the examined metrics.","IoT development, Model-Driven Engineering, Recommendation Systems",,,,,,,,"<Internet of Things: Applications and Challenges in Technology and Standardization, {eid: 79959280293}>, <The Internet of Things: A survey, {eid: 77956877124}>, <IoT technologies for embedded computing: A survey, {eid: 84995379866}>, <Iot bugs and development challenges, {eid: 85115711213}>, <None, {eid: 85171336790}>, <A model-based framework for IoT systems in wastewater treatment plants, {eid: 85166905440}>, <Modelbased analysis support for dependable complex systems in CHESS, {eid: 85171322972}>, <None, {eid: 84948114701}>, <None, {eid: 77955202099}>, <Software assistants in software engineering: A systematic mapping study, {eid: 85144071056}>, <None, {eid: 85069151852}>, <Cross-validation, {eid: 79954553074}>, <None, {eid: 85065146640}>, <None, {eid: 85171350885}>, <ThingML: A Language and Code Generation Framework for Heterogeneous Targets, {eid: 85008457888}>, <Modeling iot applications with sysml4iot, {eid: 85020698595}>, <Model-driven engineering for mission-critical iot systems, {eid: 85010302951}>, <Building blocks for IoT testing-a benchmark of IoT apps and a functional testing framework, {eid: 85136201974}>, <Multi-paradigm modelling for cyber-physical systems: A descriptive framework, {eid: 85107508780}>, <Conceptualizing digital twins, {eid: 85120045327}>, <Devopsml: Towards modeling devops processes and platforms, {eid: 85096806448}>, <None, {eid: 34249990939}>, <Recommender systems and linked open data, {eid: 84951007211}>, <User-based collaborative-filtering recommendation algorithms on hadoop, {eid: 77952180804}>, <Item-based collaborative filtering recommendation algorithms, {eid: 85052617391}>, <Crossed wires: Investigating the problems of end-user developers in a physical computing task, {eid: 84995787982}>, <Surprise: A python library for recommender systems, {eid: 85095915907}>, <Performance evaluation of recommender systems, {eid: 85038570002}>, <Nearest neighbor pattern classification, {eid: 84926662675}>, <Grid search in hyperparameter optimization of machine learning models for prediction of HIV/aids test results, {eid: 85114673688}>, <Collaborative filtering recommender systems, {eid: 34249990939}>, <Cosine similarity to determine similarity measure: Study case in online essay assessment, {eid: 84994086881}>, <None, {eid: 85139430410}>, <MUDABlue: An automatic categorization system for open source repositories, {eid: 18944403532}>, <Tag-aware recommender systems based on deep neural networks, {eid: 84963829745}>, <TGCN: Tag Graph Convolutional Network for Tag-Aware Recommendation, {eid: 85095862694}>, <JIT2R: A Joint Framework for Item Tagging and Tag-based Recommendation, {eid: 85090145629}>, <Automated library recommendation, {eid: 84893346645}>, <Diversified thirdparty library prediction for mobile app development, {eid: 85072166366}>, <Crossrec: Supporting software developers by recommending thirdparty libraries, {eid: 85075896516}>, <Req2lib: A semantic neural model for software library recommendation, {eid: 85083549113}>, <Embedding app-library graph for neural third party library recommendation, {eid: 85116207161}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2023-10-01,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85182400005,False,False,True,False
115,,"Li P. (AUID: 57222485779), Thomas J. (AUID: 57222476061), Wang X. (AUID: 56912474600), Khalil A. (AUID: 57352500900), Doufexi A. (AUID: 56228099700), Piechocki R.J. (AUID: 7003301240), Ahmad A. (AUID: 57351754500), Inacio R. (AUID: 57352196000), Kapoor S. (AUID: 36131665800), Parekh A. (AUID: 57219597844), Shojaeifard A. (AUID: 54386020900)",,RLOps: Development Life-Cycle of Reinforcement Learning Aided Open RAN,2022,IEEE Access,,,,,,,9,10.1109/ACCESS.2022.3217511,https://www.doi.org/10.1109/ACCESS.2022.3217511,"<University of Bristol, Department of Electrical and Electronic Engineering>, <Vilicom U.K. Ltd.>, <Applied Research>, <InterDigital Communications Inc.>",,"Â© 2013 IEEE.Radio access network (RAN) technologies continue to evolve, with Open RAN gaining the most recent momentum. In the O-RAN specifications, the RAN intelligent controllers (RICs) are software-defined orchestration and automation functions for the intelligent management of RAN. This article introduces principles for machine learning (ML), in particular, reinforcement learning (RL) applications in the O-RAN stack. Furthermore, we review the state-of-the-art research in wireless networks and cast it onto the RAN framework and the hierarchy of the O-RAN architecture. We provide a taxonomy for the challenges faced by ML/RL models throughout the development life-cycle: from the system specification to production deployment (data acquisition, model design, testing and management, etc.). To address the challenges, we integrate a set of existing MLOps principles with unique characteristics when RL agents are considered. This paper discusses a systematic model development, testing and validation life-cycle, termed: RLOps. We discuss fundamental parts of RLOps, which include: model specification, development, production environment serving, operations monitoring and safety/security. Based on these principles, we propose the best practices for RLOps to achieve an automated and reproducible model development process. At last, a holistic data analytics platform rooted in the O-RAN deployment is designed and implemented, aiming to embrace and fulfil the aforementioned principles and best practices of RLOps.","data engineering, digital twins, machine learning, MLOps, O-RAN, reinforcement learning, RLOps",,,,,,,,"<Open, programmable, and virtualized 5G networks: State-of-the-art and the road ahead, {eid: 85090233031}>, <None, {eid: 85090205109}>, <Deep learning-based channel estimation, {eid: 85064478835}>, <Machine learning techniques applied to wireless ad-hoc networks: Guide and survey, {eid: 51349134582}>, <Optimized computation offloading performance in virtual edge computing systems via deep reinforcement learning, {eid: 85055025077}>, <None, {eid: 85109806275}>, <DevOps, {eid: 84968831988}>, <Machine learning & artificial intelligence in the quantum domain: A review of recent progress, {eid: 85045331288}>, <Deep clustering for unsupervised learning of visual features, {eid: 85058442862}>, <None, {eid: 85050992891}>, <None, {eid: 33846516584}>, <Multi-agent reinforcement learning: A selective overview of theories and algorithms, {eid: 85111796839}>, <None, {eid: 85119840376}>, <Open RAN_Radio access network evolution, benefits and market trends, {eid: 85122086333}>, <Threat of adversarial attacks on deep learning in computer vision: A survey, {eid: 85042198914}>, <A survey of the usages of deep learning for natural language processing, {eid: 85100707985}>, <Reinforcement learning in dual-arm trajectory planning for a free-floating space robot, {eid: 85077502803}>, <Mastering the game of go without human knowledge, {eid: 85031918331}>, <AliGraph: A comprehensive graph neural network platform, {eid: 85083540986}>, <Highly accurate protein structure prediction with AlphaFold, {eid: 85110248105}>, <Toward ubiquitous massive accesses in 3GPP machine-to-machine communications, {eid: 79953793010}>, <Elastic O-RAN slicing for industrial monitoring and control: A distributed matching game and deep reinforcement learning approach, {eid: 85134243210}>, <Intelligence and learning in O-RAN for data-driven NextG cellular networks, {eid: 85119879211}>, <None, {eid: 85131138633}>, <Reinforcement learning based dynamic function splitting in disaggregated green open RANs, {eid: 85115728964}>, <ColO-RAN: Developing machine learning-based xApps for open RAN closed-loop control on programmable experimental platforms, {eid: 85134217734, doi: 10.1109/TMC.2022.3188013}>, <Session management for URLLC in 5G open radio access network: A machine learning approach, {eid: 85125635812}>, <Energyaware dynamic DU selection and NF relocation in O-RAN using actor-critic learning, {eid: 85133203171}>, <Connection management xAPP for O-RAN RIC: A graph neural network and reinforcement learning approach, {eid: 85125864316}>, <Self-play learning strategies for resource assignment in open-RAN networks, {eid: 85123581219}>, <Multi-agent team learning in virtualized open radio access networks (O-RAN), {eid: 85135110795}>, <An RL approach for radio resource management in the ORAN architecture, {eid: 85111771685}>, <Team learning-based resource allocation for open radio access network (O-RAN), {eid: 85126837825}>, <Supporting intelligence in disaggregated open radio access networks: Architectural principles, AI/ML workflow, and use cases, {eid: 85128300188}>, <OpenRAN Gym: An open toolbox for data collection and experimentation with AI in O-RAN, {eid: 85130728927}>, <None, {eid: 85142188274}>, <None, {eid: 85119867894}>, <Deep learning-based detector for OFDM-IM, {eid: 85071168928}>, <OFDMautoencoder for end-to-end learning of communications systems, {eid: 85053476001}>, <Deep learning-based downlink channel prediction for FDD massiveMIMOsystem, {eid: 85077734800}>, <PrecoderNet: Hybrid beamforming for millimeter wave systems with deep reinforcement learning, {eid: 85092740543}>, <A unified deep learning based polar-LDPC decoder for 5G communication systems, {eid: 85059964948}>, <Cooperative communication resource allocation strategies for 5G and beyond networks: A review of architecture, challenges and opportunities, {eid: 85136714896}>, <An optimal multitier resource allocation of cloud RAN in 5G using machine learning, {eid: 85065711553}>, <A survey of reinforcement learning algorithms for dynamically varying environments, {eid: 85111978118}>, <Evaluating the performance of reinforcement learning algorithms, {eid: 85105235491}>, <Deep reinforcement learning: A brief survey, {eid: 85040312540}>, <None, {eid: 85095081592}>, <Explainable reinforcement learning: A survey, {eid: 85090173628}>, <Digital twin: Enabling technologies, challenges and open research, {eid: 85087331367}>, <Digital twin for 5G and beyond, {eid: 85102889168}>, <Sim-to-real transfer in deep reinforcement learning for robotics: A survey, {eid: 85099677583}>, <Sim2Real predictivity: Does evaluation in simulation predict real-world performance?, {eid: 85090913476}>, <Bayesian optimization with robust Bayesian neural networks, {eid: 85015791874}>, <None, {eid: 85029416652}>, <None, {eid: 85059179592}>, <None, {eid: 85129481823}>, <Modelling performance & resource management in kubernetes, {eid: 85009084303}>, <None, {eid: 85113635591}>, <None, {eid: 85126423720}>, <Devsecops: A multivocal literature review, {eid: 85029742916}>, <Adversarial attack and defense in reinforcement learning-from AI security view, {eid: 85089737014}>, <Adversarial reinforcement learning in a cyber security simulation, {eid: 85060273333}>, <None, {eid: 85053884273}>, <None, {eid: 85015444377}>, <Challenges of real-world reinforcement learning: Definitions, benchmarks and analysis, {eid: 85105161247}>, <Machine learning: The high interest credit card of technical debt, {eid: 84962699841}>, <None, {eid: 85094776074}>, <The ML test score: A rubric for ML production readiness and technical debt reduction, {eid: 85047767117}>, <Joint optimization of handover control and power allocation based on multi-agent deep reinforcement learning, {eid: 85096217033}>, <Stochastic games, {eid: 0000392613}>, <Stochastic neural networks for hierarchical reinforcement learning, {eid: 85040130246}>, <None, {eid: 85105868875}>, <None, {eid: 84904867557}>, <Long short-term memory, {eid: 0031573117}>, <None, {eid: 0004102479}>, <Learning curriculum policies for reinforcement learning, {eid: 85077025805}>, <Imitation learning: A survey of learning methods, {eid: 85017424752}>, <Using neuroevolved binary neural networks to solve reinforcement learning environments, {eid: 85078706988}>, <Bayesian reinforcement learning: A survey, {eid: 84973621947}>, <A Bayesian framework for reinforcement learning, {eid: 14344258433}>, <None, {eid: 85142146687}>, <None, {eid: 85073615989}>, <None, {eid: 85010746053}>, <Explainable reinforcement learning: A Survey, {eid: 85090173628}>, <Learning with safety constraints: Sample complexity of reinforcement learning for constrained MDPs, {eid: 85128423319}>, <None, {eid: 85106607105}>, <Self-service cybersecurity monitoring as enabler for DevSecOps, {eid: 85084859519}>, <Digital twins: Understanding the added value of integrated models for through-life engineering services, {eid: 85068447880}>, <Distributed prioritized experience replay, {eid: 85083951402}>, <IMPALA: Scalable distributed deep-RL with importance weighted actor-learner architectures, {eid: 85057327371}>, <Measuring sample efficiency and generalization in reinforcement learning benchmarks: Neurips 2020 procgen benchmark, {eid: 85160572687}>, <Deep reinforcement learning that matters, {eid: 85057337632}>, <A survey on data collection for machine learning: A big data_AI integration perspective, {eid: 85102237692}>, <None, {eid: 85097553332}>, <Graph of virtual actors (GOVA): A big data analytics architecture for IoT, {eid: 85017628137}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2022-01-01,,,,,,,eng,,Journal,,,,2-s2.0-85141535529,False,False,True,True
116,,"Lantz J. (AUID: 56487324500), Eliasson U. (AUID: 56487816900)",,Scaling agile mechatronics: An industrial case study,2014,Continuous software engineering,,,,,,,1,10.1007/978-3-319-11283-1_17,https://www.doi.org/10.1007/978-3-319-11283-1_17,<Volvo Car Group>,,"Â© 2014 Springer International Publishing Switzerland. All rights reserved.The automotive industry is currently in a state of rapid change. The traditional mechanical industry has, forced by electronic revolution and global threats of climate change, transformed into a computerized electromechanical industry. A hybrid or electric car of 2013 can have, in the order of 100 electronic control units, running gigabytes of code, working together in a complex network within the car as well as being connected to networks in the world outside. This exponential increase of software has posed new challenges for the R&D organizations. In many cases the commonly used method of requirement engineering towards external suppliers in a waterfall process has shown to be unmanageable. Part of the solution has been to introduce more in-house software development and the new standardized platform for embedded software, AUTOSAR. During the past few years, Volvo Cars has focused on techniques and processes for continuous integration of embedded software for active safety, body functions, and motor and hybrid technology. The feedback times for ECU system test have decreased from months to, in the best cases, hours. Domain-specific languages (DSL), for both software and physical models, have been used to great extent when developing in-house embedded software at Volvo Cars. The main reasons are the close connection with mechatronic systems (motors, powertrain, servos, etc.), the advantage of having domain experts (not necessarily software experts) developing control software, and the facilitated reuse of algorithms. Model-driven engineering also provides a method for agile development and early learning in projects where hardware and mechanics usually are available only late. Model-based testing of the software is performed, both as pure simulation (MIL) and in hardware-in-the-loop (HIL) rigs, before it is deployed in real cars. This testing is currently being automated for several rigs, as part of the continuous integration strategy. The progress is, however, not without challenges. Details of the work split with Tier 1 suppliers, using the young AUTOSAR standard, and the efficiency of AUTOSAR code are still open problems. Another challenge is to manage the complex model framework required for virtual verification when applied on system level and numerous DSLs have to be executed together.",,,,,,,,,"<None, {eid: 85025583418}>, <None, {eid: 85025606032}>, <None, {eid: 85025689773}>, <None, {eid: 77954495643}>, <Embedded software: Facts, figures, and future, {eid: 65749098082}>, <Archetypical approaches of fast software development and slow embedded projects, {eid: 84889005076}>, <Extending agile practices in automotive MDE, {eid: 84923852912}>, <Agile model-driven engineering in mechatronic systems -an industrial case study (2014), {eid: 84921391979}>, <AUTOSAR-A worldwide standard is on the road, {eid: 79751532776}>, <A light-weight defect classification scheme for embedded automotive software and its initial evaluation, {eid: 84876399424}>",,,Springer International Publishing,,,2014-08-01,,,,,,,eng,,Book,,,,2-s2.0-84930695275,True,False,False,False
117,,"Wiecher C. (AUID: 57212110875), Wolff C. (AUID: 54421696300), Japs S. (AUID: 57219564724), Kaiser L. (AUID: 35750063500), Dumitrescu R. (AUID: 35101763000), Greenyer J. (AUID: 22979533400)",,Scenarios in the loop: Integrated requirements analysis and automotive system validation,2020,"23rd ACM/IEEE International Conference on Model Driven Engineering Languages and Systems, MODELS-C 2020",,,,,,,12,10.1145/3417990.3421264,https://www.doi.org/10.1145/3417990.3421264,"<Dortmund University of Applied Sciences and Arts>, <Fraunhofer IEM>, <Leibniz UniversitÃ¤t Hannover>",,"Â© 2020 ACM.The development of safety-relevant systems in the automotive industry requires the definition of high-quality requirements and tests for the coordination and monitoring of development activities in an agile development environment. In this paper we describe a Scenarios in the Loop (SCIL) approach. SCIL combines (1) natural language requirements specification based on Behavior-Driven Development (BDD) with (2) formal and test-driven requirements modeling and analysis, and (3) integrates discipline-specific tools for software and system validation during development. A central element of SCIL is a flexible and executable scenario-based modeling language, the Scenario Modeling Language for Kotlin (SMLK). SMLK allows for an intuitive requirements formalization, and supports engineers to move iteratively, and continuously aided by automated checks, from stakeholder requirements to the validation of the implemented system. We evaluated the approach using a real example from the field of e-mobility.","Automotive systems engineering, BizDevOps, Requirements analysis, System validation",,,,,,,,"<Modellbasiertes Anforderungsmanagement von Systems-of-Systems am Beispiel des vernetzten Fahrzeugs, {eid: 85051268771}>, <None, {eid: 85096776710}>, <{scenariotools} real-time play-out for test sequence validation in an automotive case study, {eid: 84988009390}>, <Soap opera testing, {eid: 34247584681}>, <{LSCs}: Breathing life into message sequence charts, {eid: 0035393979}>, <None, {eid: 85096810277}>, <SMArDT modeling for automotive software testing, {eid: 85055705898}>, <None, {eid: 84944037468}>, <None, {eid: 84867963508}>, <Towards definitions for release engineering and devops, {eid: 84962216125}>, <Usage of agile practices in mechatronics system desing-potentials, challenges and actual surveys, {eid: 85051557873}>, <ScenarioTools-A tool suite for the scenario-based modeling and analysis of reactive systems, {eid: 85027394534}>, <Evaluating a formal scenario-based method for the requirements analysis in automotive software engineering, {eid: 84960399450}>, <Behavioral programming, {eid: 84863756164}>, <Die Zukunft im Griff, Virtualisierte Tests und XiL fÃ¼r automatisiertes Fahren Fahrerassistenzsysteme, {eid: 85096762101}>, <Integrated and iterative systems engineering and software requirements engineering for technical systems, {eid: 84971484567}>, <Model-driven engineering practices in industry: Social, organizational and managerial factors that lead to success or failure, {eid: 84900499307}>, <None, {eid: 85096749880}>, <None, {eid: 0003726721}>, <None, {eid: 85096797445}>, <None, {eid: 85096800583}>, <None, {eid: 85096765476}>, <None, {eid: 85096744727}>, <None, {eid: 79953862404}>, <None, {eid: 85096746928}>, <Use, potential, and showstoppers of models in automotive requirements engineering, {eid: 85047393082}>, <Organisation and communication problems in automotive requirements engineering, {eid: 84994509953}>, <Verifikation und Validierung im Produktentstehungsprozess, {eid: 84978065480}>, <Where is the proof-A review of experiences from applying mde in industry, {eid: 70349858084}>, <None, {eid: 85096763954}>, <Synthesizing tests for combinatorial coverage of modal scenario specifications, {eid: 84961636947}>, <Status of the development of iso/sae 21434, {eid: 85053121537}>, <Twelve systems engineering roles, {eid: 24044504613}>, <None, {eid: 85096788201}>, <Scenario-based requirements engineering, {eid: 84897615313}>, <None, {eid: 85091753206}>, <None, {eid: 85089542039}>, <None, {eid: 85018396952}>, <None, {eid: 85096798351}>, <Feature dependencies in automotive software systems: Extent, awareness, and refactoring, {eid: 85074794408}>, <Test-driven scenario specification of automotive software components, {eid: 85075925849}>",,,"Association for Computing Machinery, Inc",,,2020-10-16,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85096773418,False,False,False,False
118,,"Rios E. (AUID: 14050840000), Iturbe E. (AUID: 56991048200), Palacios M.C. (AUID: 57195943390)",,Self-healing multi-cloud application modelling,2017,"12th International Conference on Availability, Reliability and Security, ARES 2017",,,,,,,5,10.1145/3098954.3104059,https://www.doi.org/10.1145/3098954.3104059,<Tecnalia Research and Innovation>,,"Â© 2017 Association for Computing Machinery.Cloud computing market forecasts and technology trends confirm that Cloud is an IT disrupting phenomena and that the number of companies with multi-cloud strategy is continuously growing. Cost optimization and increased competitiveness of companies that exploit multi-cloud will only be possible when they are able to leverage multiple cloud offerings, while mastering both the complexity of multiple cloud provider management and the protection against the higher exposure to attacks that multi-cloud brings. .is paper presents the MUSA Security modelling language for multi-cloud applications which is based on the Cloud Application Modelling and Execution Language (CAMEL) to overcome the lack of expressiveness of state-of-the-art modelling languages towards easing: A) the automation of distributed deployment, b) the computation of composite Service Level Agreements (SLAs) that include security and privacy aspects, and c) the risk analysis and service match-making taking into account not only functionality and business aspects of the cloud services, but also security aspects. .e paper includes the description of the MUSA Modeller as the Web tool supporting the modelling with the MUSA modelling language. the paper introduces also the MUSA SecDevOps framework in which the MUSA Modeller is integrated and with which the MUSA Modeller will be validated.","Cloud, Deployment, Modelling, Multi-cloud, Security",,,,,,,,"<Security and privacy-enhancing multicloud architectures, {eid: 84897586246}>, <Security-by-design in clouds: A security-SLA driven methodology to build secure cloud applications, {eid: 84999025090}>, <None, {eid: 84887757193}>, <Scoring cloud services through digital ecosystem community analysis, {eid: 85030315222}>, <None, {eid: 84950162059}>, <None, {eid: 84885817796}>, <None, {eid: 85030308200}>, <None, {eid: 85030314694}>, <None, {eid: 85030323107}>, <None, {eid: 85020656221}>, <None, {eid: 85030321895}>, <None, {eid: 85030308676}>, <None, {eid: 85030326332}>, <An integrated meta-model for cloud application security modelling, {eid: 84999025026}>, <None, {eid: 84892489614}>, <None, {eid: 85030322605}>, <None, {eid: 85030327436}>, <None, {eid: 85030324854}>, <None, {eid: 85030308714}>, <None, {eid: 84958809025}>, <None, {eid: 85030309052}>, <None, {eid: 85030319706}>, <None, {eid: 85030311534}>, <None, {eid: 85048435112}>, <None, {eid: 84992186118}>, <None, {eid: 84969792687}>, <SLA-driven monitoring of multi-cloud application components using the MUSA framework, {eid: 85006699521}>, <None, {eid: 84969906985}>, <The Byzantine empire in the intercloud, {eid: 79955805332}>, <None, {eid: 84877107646}>",,,Association for Computing Machinery,,,2017-08-29,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85030312256,False,False,False,False
119,,"Li N. (AUID: 55722805100), Escalona A. (AUID: 56704784500), Kamal T. (AUID: 57190806744)",,Skyfire: Model-Based Testing with Cucumber,2016,"9th IEEE International Conference on Software Testing, Verification and Validation, ICST 2016",,,,,,,19,10.1109/ICST.2016.41,https://www.doi.org/10.1109/ICST.2016.41,"<Research and Development, Medidata Solutions>",,"Â© 2016 IEEE.In the software industry, a Behavior-Driven Development (BDD) tool, Cucumber, has been widely used by practitioners. Usually product analysts, developers, and testers manually write BDD test scenarios that describe system behaviors. Testers write implementation for the BDD scenarios by hand and execute the Cucumber tests. Cucumber provides transparency about what test scenarios are covered and how the test scenarios are mapped to executable tests. One drawback of the Cucumber BDD approach is that test scenarios are generated manually. Thus, the test scenarios are usually weak. More importantly, practitioners do not have a metric to measure test coverage. In this paper, we present a Model-Based Testing (MBT) tool, skyfire. Skyfire can automatically generate effective Cucumber test scenarios to replace manually generated test scenarios. Skyfire reads a behavioral UML diagram (e.g., a state machine diagram), identifies all necessary elements (e.g., transitions) of the diagram, generates effective tests to satisfy various graph coverage criteria, and converts the tests into Cucumber scenarios. Then testers write Cucumber mappings for the generated scenarios. Skyfire does not only generate effective tests but is also completely compatible with the existing agile development and continuous integration (CI) rhythm. We present the design architecture and implementation of skyfire, as well as an industrial case study to show how skyfire is used in practice.",,,,,,,,,"<None, {eid: 77952017756}>, <None, {eid: 84983236359}>, <None, {eid: 84934305775}>, <None, {eid: 84983366604}>, <A UML-based approach to system testing, {eid: 84948995039}>, <Automatic test generation: A use case driven approach, {eid: 33645820260}>, <A test automation language framwork for behavioral models, {eid: 84983287973}>, <None, {eid: 84903153672}>, <None, {eid: 84983337695}>, <None, {eid: 84983366620}>, <None, {eid: 84983287989}>, <None, {eid: 84938799121}>, <None, {eid: 3142731744}>, <None, {eid: 85123212227}>, <Better algorithms to minimize the cost of test paths, {eid: 84862321303}>, <None, {eid: 84983325781}>, <None, {eid: 84983255308}>, <None, {eid: 84983246167}>, <None, {eid: 84983246159}>, <Towards automatic scenario generation from coverage information, {eid: 84885007510}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2016-04-10,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-84983329182,True,False,False,False
120,,"Petrovic N. (AUID: 57206900973), Tosic M. (AUID: 7006349903)",,SMADA-Fog: Semantic model driven approach to deployment and adaptivity in fog computing,2020,Simulation Modelling Practice and Theory,,,,,,,20,10.1016/j.simpat.2019.102033,https://www.doi.org/10.1016/j.simpat.2019.102033,"<Faculty of Electronic Engineering, Univeristy of Nis>",,"Â© 2019 Elsevier B.V.The deployment, monitoring and configuration of applications in Fog Computing are becoming quite challenging, due to heterogeneity of mobile and IoT devices involved, data movement constraints imposed by legal regulations as well as frequent changes in the execution environment that may affect quality of service. As a consequence, the system administration procedures are becoming more complex and time-consuming, especially if done manually. In this paper, a Semantic Model driven Approach to Deployment and Adaptivity of container-based applications in Fog Computing (SMADA-Fog) is proposed. Modeling tools, semantic framework, linear optimization model, simulation environment and infrastructure management code generator leveraging the semantic annotations are implemented and presented. According to results of the two experimentally tested scenarios, the proposed approach improves the application performance, while the time required for deployment as well as service adaptation is reduced for at least an order of magnitude.","DevOps, Fog Computing, Infrastructure as code, Linear optimization, Model-driven engineering, Semantic technology",,,,,,,,"<A research perspective on fog computing, {eid: 85049018742, doi: 10.1007/978-3-319-91764-1_16}>, <Information logistics and fog computing: the DITAS approach, {eid: 85020533059}>, <Simulating fog and edge computing scenarios: an overview and research challenges, {eid: 85063588970, doi: 10.3390/fi11030055}>, <An aspect-oriented framework for service adaptation, {eid: 77149169725, doi: 10.1007/11948148_2}>, <Adaptive wireless video streaming based on edge computing: opportunities and approaches, {eid: 85045740301, doi: 10.1109/TSC.2018.2828426}>, <Adaptation of service-based systems, service research challenges and solutions for the future Internet, {eid: 79956134701, doi: 10.1007/978-3-642-17599-2_5}>, <Enabling Flexibility of Data-Intensive Applications on Container-Based Systems with Node-RED in Fog Environments, Master Thesis, {eid: 85067346514}>, <A containerized big data streaming architecture for edge cloud computing on clustered single-board devices, {eid: 85067470840, doi: 10.5220/0007695000680080}>, <Infrastructure as Code: Managing Servers in the Cloud, {eid: 85026761147}>, <DevOps, {eid: 84968831988, doi: 10.1109/ms.2016.68}>, <Infrastructure-as-code for data-intensive architectures: a model-driven development approach, {eid: 85051103640, doi: 10.1109/ICSA.2018.00025}>, <Formalisation of Information Systems Modelling (thesis), {eid: 0004119079}>, <Toward principles for the design of ontologies used for knowledge sharing, {eid: 58149365542}>, <Unified IoT ontology to enable interoperability and federation of testbeds, {eid: 85015182893}>, <Semantic driven code generation for networking testbed experimentation, {eid: 85053036166, doi: 10.1080/17517575.2018.1509135}>, <The SCOR ontologies framework for robotics testbed, {eid: 85062056944, doi: 10.1109/telfor.2018.8611841}>, <A semantic framework for design-time RIoT device mission coordination, {eid: 85062088297, doi: 10.1109/telfor.2018.8611845}>, <Formalizing device coordination in IoT systems: the SCOR case study, {eid: 85076552257}>, <Linear Programming 1 - Introduction, {eid: 0011480480}>, <AMPL: A Modeling Language for Mathematical Programming, {eid: 0003404231}>, <The generalized simplex method for minimizing a linear form under linear inequality restraints, {eid: 84972521846}>, <Elastic allocation of Docker containers in cloud environments, {eid: 85019248340}>, <Virtual network functions routing and placement for edge cloud latency minimization, {eid: 85053313374, doi: 10.1109/jsac.2018.2869955}>, <MODAClouds: a model-driven approach for the design and execution of applications on multiple clouds, {eid: 84864997201, doi: 10.1109/mise.2012.6226014}>, <A UML Profile for the design, quality assessment and deployment of data-intensive applications, {eid: 85064569230, doi: 10.1007/s10270-019-00730-3}>, <Managing multi-cloud systems with CloudMF, {eid: 84884604847}>, <CloudMF: applying MDE to tame the complexity of managing multi-cloud applications, {eid: 84946685259}>, <DITAS: unleashing the potential of fog computing to improve data-intensive applications, {eid: 85045233594, doi: 10.1007/978-3-319-79090-9_11}>, <The Cloud Application Modelling and Execution Language (CAMEL), {eid: 85041451210, doi: 10.18725/OPARU-4339}>, <Docker enabled virtualized nanoservices for local IoT edge networks, {eid: 85076580010}>, <qCon: QoS-Aware network resource management for fog computing, {eid: 85054888814, doi: 10.3390/s18103444}>, <Model-driven approach for deployment of container-based applications in fog computing, {eid: 85067362126}>, <Model-driven management of Docker containers, {eid: 84989312971}>, <Framework for model-driven semantic-enabled deployment of container-based virtual network functions to support edge computing and future internet services, {eid: 85060287755}>, <Resource provisioning in fog computing: from theory to practice, {eid: 85066349917, doi: 10.3390/s19102238}>, <Modelling and simulation of fog and edge computing environments using iFogSim toolkit, {eid: 85061313992}>, <RECAP simulator: simulation of cloud/edge/fog computing scenarios, {eid: 85044520900, doi: 10.1109/wsc.2017.8248208}>, <Energy efficient scheduling for heterogeneous fog computing architectures, {eid: 85055419603, doi: 10.1109/compsac.2018.00085}>, <Energy efficiency of Fog computing and networking services in 5G networks, {eid: 85029383070, doi: 10.1109/eurocon.2017.8011159}>, <TaaSOR â Testbed-as-a-service ontology repository, {eid: 84873647179, doi: 10.1007/978-3-642-35576-9_49}>, <Data mining for interference avoidance in smart cities IoT networks, {eid: 85076539202, doi: 10.22190/FUACR1801013N}>, <Fog computing security challenges and future directions, {eid: 85064344660, doi: 10.1109/MCE.2019.2893674}>, <UAVFog: a UAV-based fog computing for internet of things, {eid: 85050229413, doi: 10.1109/uic-atc.2017.8397657}>",,,Elsevier B.V.,,,2020-05-01,,,,,,,eng,,Journal,,,,2-s2.0-85076510068,True,False,True,False
121,,"Fortuna C. (AUID: 25122210000), Yetgin H. (AUID: 55323124900), Mohorcic M. (AUID: 6603024958)",,Smart Infrastructures: Artificial Intelligence-Enabled Lifecycle Automation,2023,IEEE Industrial Electronics Magazine,,,,,,,2,10.1109/MIE.2022.3165673,https://www.doi.org/10.1109/MIE.2022.3165673,"<Networked Embedded Systems Laboratory, JoÅ¾ef Stefan Institute>, <Bitlis Eren University, Department of Electrical and Electronics Engineering>, <JoÅ¾ef Stefan Institute, Department of Communication Systems and A Scientific Counselor>, <JoÅ¾ef Stefan International Postgraduate School>",,"Â© 2007-2011 IEEE.The deployment and maintenance of large smart infrastructures used for powering data-driven decision making, regardless of retrofitted or newly deployed infrastructures, still lack automation and mostly rely on extensive manual effort. In this article, we focus on the two main challenges in the lifecycle of smart infrastructures: deployment and operation, each of which is rather generic and applies to all infrastructures. We discuss the existing technologies designed to help improve and automate deployment and operation for smart infrastructures in general and use the smart grid as a guiding example to ground some examples across the article. Next, we identify and discuss opportunities where the broad field of artificial intelligence (AI) can help further improve and automate the lifecycle of smart infrastructures to eventually improve their reliability and drive down their deployment and operation costs. Finally, based on the usage of AI for web and social networks as well as our previous experience in AI for networks and cyber-physical systems, we provide decision guidelines for the adoption of AI.",,,,,,,,,"<The forthcoming Artificial Intelligence (AI) revolution: Its impact on society and firms, {eid: 85018991558, doi: 10.1016/j.futures.2017.03.006}>, <Automatic intent-based secure service creation through a multilayer SDN network orchestration, {eid: 85045421173, doi: 10.1364/JOCN.10.000289}>, <None, {eid: 85163305659}>, <Drivers, barriers and social considerations for AI adoption in business and management: A tertiary study, {eid: 85085273894, doi: 10.1016/j.techsoc.2020.101257}>, <Smart infrastructure: An emerging frontier for multidisciplinary research, {eid: 85177063829, doi: 10.1680/jsmic.16.00002}>, <Whitepaper on IoT onboarding - a device manufacturerâs perspective, {eid: 85163294168}>, <None, {eid: 84880742273}>, <A survey on smart grid communication infrastructures: Motivations, requirements and challenges, {eid: 84873743210, doi: 10.1109/SURV.2012.021312.00034}>, <Towards sustainable smart cities: A review of trends, architectures, components, and open challenges in smart cities, {eid: 85041485794, doi: 10.1016/j.scs.2018.01.053}>, <A survey of data mining and machine learning methods for cyber security intrusion detection, {eid: 84971516631, doi: 10.1109/COMST.2015.2494502}>, <Energy-efficient information and communication infrastructures in the smart grid: A survey on interactions and open issues, {eid: 84925841329, doi: 10.1109/COMST.2014.2341600}>, <Deepint.net: A rapid deployment platform for smart territories, {eid: 85098948613, doi: 10.3390/s21010236}>, <Toward intelligent cyber-physical systems: Digital twin meets artificial intelligence, {eid: 85114809478, doi: 10.1109/MCOM.001.2001237}>, <Practical lessons from the deployment and management of a smart city internet-of-things infrastructure: The smartsantander testbed case, {eid: 85023158980, doi: 10.1109/ACCESS.2017.2723659}>, <Time-to-provision evaluation of IoT devices using automated zero-touch provisioning, {eid: 85101238402, doi: 10.1109/GLOBECOM42002.2020.9348119}>, <A SCADA system for energy management in intelligent buildings, {eid: 84861797535, doi: 10.1016/j.enbuild.2012.01.041}>, <Cisco zero-touch provisioning configuration guide, {eid: 85163364073}>, <Brute forcing Wi-Fi protected setup, {eid: 84871944473}>, <IoTivity easy setup, {eid: 85163317918}>, <Recognition of QR code with mobile phones, {eid: 52349112746, doi: 10.1109/CCDC.2008.4597299}>, <Evaluation of off-the-shelf speech recognizers across diverse dialogue domains, {eid: 85096528409}>, <VIVoNet: Visually-represented, intent-based, voice-assisted networking, {eid: 85063410120, doi: 10.5121/ijcnc.2019.11201}>, <âAlexa, letâs talk about my productivity:â The impact of digital assistants on work productivity, {eid: 85122659846, doi: 10.1016/j.jbusres.2022.01.015}>, <None, {eid: 0003690625}>, <Sensor network software update management: A survey, {eid: 22744446393, doi: 10.1002/nem.574}>, <Reprogramming embedded systems at run-time, {eid: 85083992336, doi: 10.21307/ijssis-2019-078}>, <GITAR: Generic extension for internet-of-things architectures enabling dynamic updates of network and application modules, {eid: 84948716101, doi: 10.1016/j.adhoc.2015.05.017}>, <Devops, {eid: 84968831988, doi: 10.1109/MS.2016.68}>, <Cost comparison of running web applications in the cloud using monolithic, microservice, and AWS lambda architectures, {eid: 85018282953, doi: 10.1007/s11761-017-0208-y}>, <Service provider DevOps for large scale modern network services, {eid: 84942610708, doi: 10.1109/INM.2015.7140502}>, <Foggy: A framework for continuous automated iot application deployment in fog computing, {eid: 85032296582, doi: 10.1109/AIMS.2017.14}>, <Continuous integration in wireless technology development, {eid: 85055881129, doi: 10.1109/MCOM.2018.1800107}>, <Firmware over-the-air programming techniques for iot networks - a survey, {eid: 85121120128, doi: 10.1145/3472292}>, <A lightweight and cost effective edge intelligence architecture based on containerization technology, {eid: 85066245119, doi: 10.1007/s11280-019-00692-y}>, <Energy services: A conceptual review, {eid: 85016142569, doi: 10.1016/j.erss.2017.02.010}>, <FENDE: Marketplace-based distribution, execution, and life cycle management of VNFs, {eid: 85060542861, doi: 10.1109/MCOM.2018.1800507}>, <DockerFinder: Multi-attribute search of docker images, {eid: 85020206143, doi: 10.1109/IC2E.2017.41}>, <Knowledge graph identification, {eid: 84891936872}>, <AZTEC: Anticipatory capacity allocation for zero-touch network slicing, {eid: 85090284651, doi: 10.1109/INFOCOM41043.2020.9155299}>, <AI-driven zero touch network and service management in 5G and beyond: Challenges and research directions, {eid: 85079587457, doi: 10.1109/MNET.001.1900252}>, <AIOps: Real-world challenges and research innovations, {eid: 85071852727, doi: 10.1109/ICSE-Companion.2019.00023}>, <Learning to detect anomalous wireless links in IoT networks, {eid: 85096860989, doi: 10.1109/AC-CESS.2020.3039333}>, <A comprehensive survey on network anomaly detection, {eid: 85049560113, doi: 10.1007/s11235-018-0475-8}>, <Online anomaly detection over big data streams, {eid: 85078702170}>, <Current time series anomaly detection benchmarks are flawed and are creating the illusion of progress, {eid: 85115186826, doi: 10.1109/TKDE.2021.3112126}>, <Outlier detection for temporal data: A survey, {eid: 84959505571, doi: 10.1109/TKDE.2013.184}>, <Survey on time series motif discovery, {eid: 85013319135, doi: 10.1002/widm.1199}>, <How much AI do you require? Decision factors for adopting AI technology, {eid: 85099537611}>, <Artificial intelligence adoption: AI-readiness at firm-level, {eid: 85085914730}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2023-06-01,,,,,,,eng,,Journal,,,,2-s2.0-85129370599,True,False,False,True
122,,"Amershi S. (AUID: 23007675700), Begel A. (AUID: 6506114539), Bird C. (AUID: 17433640400), DeLine R. (AUID: 6602118069), Gall H. (AUID: 56223438700), Kamar E. (AUID: 23009039400), Nagappan N. (AUID: 8261920700), Nushi B. (AUID: 54581306500), Zimmermann T. (AUID: 16308551800)",,Software Engineering for Machine Learning: A Case Study,2019,"41st IEEE/ACM International Conference on Software Engineering: Software Engineering in Practice, ICSE-SEIP 2019",,,,,,,492,10.1109/ICSE-SEIP.2019.00042,https://www.doi.org/10.1109/ICSE-SEIP.2019.00042,<Microsoft Research>,,"Â© 2019 IEEE.Recent advances in machine learning have stimulated widespread interest within the Information Technology sector on integrating AI capabilities into software and services. This goal has forced organizations to evolve their development processes. We report on a study that we conducted on observing software teams at Microsoft as they develop AI-based applications. We consider a nine-stage workflow process informed by prior experiences developing AI applications (e.g., search and NLP) and data science tools (e.g. application diagnostics and bug reporting). We found that various Microsoft teams have united this workflow into preexisting, well-evolved, Agile-like software engineering processes, providing insights about several essential engineering challenges that organizations may face in creating large-scale AI solutions for the marketplace. We collected some best practices from Microsoft teams to address these challenges. In addition, we have identified three aspects of the AI domain that make it fundamentally different from prior software application domains: 1) discovering, managing, and versioning the data needed for machine learning applications is much more complex and difficult than other types of software engineering, 2) model customization and model reuse require very different skills than are typically found in software teams, and 3) AI components are more difficult to handle as distinct modules than traditional software components-models may be 'entangled' in complex ways and experience non-monotonic error behavior. We believe that the lessons learned by Microsoft teams will be valuable to other organizations.","Artifical Intelligence, Data, Machine Learning, Process, Software Engineering",,,,,,,,"<Microsoft AI Platform, {eid: 85080663569}>, <Usage and perceptions of agile software development in an industrial context: An exploratory study, {eid: 47949129866}>, <Pair programming: What?s in it for me?, {eid: 62949088997}>, <Have agile techniques been the silver bullet for software development at microsoft?, {eid: 84893262671}>, <DevOps capabilities, practices, and challenges: Insights from a case study, {eid: 85066020410}>, <Maintaining mental models: A study of developer work habits, {eid: 33947315724}>, <The emerging role of data scientists on software development teams, {eid: 84971418613}>, <Data scientists in software teams: State of the art and challenges, {eid: 85030636707}>, <Trials and tribulations of developers of intelligent systems: A field study, {eid: 85000434626}>, <None, {eid: 85080714651}>, <Investigating statistical machine learning as a tool for software development, {eid: 57649217503}>, <None, {eid: 85080729745}>, <The KDD process for extracting useful knowledge from volumes of data, {eid: 0030285403}>, <CRISP-DM: Towards a standard process model for data mining, {eid: 0003157840}>, <How do scientists develop and use scientific software?, {eid: 70349904776}>, <Hardware/software co-design, {eid: 0031101696}>, <Rapid development of multimodal interactive systems: A demonstration of platform for situated intelligence, {eid: 85046681631}>, <Hidden technical debt in machine learning systems, {eid: 84965107309}>, <On human intellect and machine failures: Troubleshooting integrative machine learning systems., {eid: 85030469300}>, <What went wrong and why? Diagnosing situated interaction failures in the wild, {eid: 85035745281}>, <None, {eid: 85051101383}>, <TFX: A tensorflow-based production-scale machine learning platform, {eid: 85029121317}>, <Model governance: Reducing the anarchy of production ML, {eid: 85075761598}>, <Machine learning in manufacturing: Advantages, challenges, and applications, {eid: 84995968996}>, <App-directed learning: An exploratory study, {eid: 84886788510}>, <None, {eid: 0003748768}>, <None, {eid: 85069156786}>, <Data management challenges in production machine learning, {eid: 85021190615}>, <Principles of explanatory debugging to personalize interactive machine learning, {eid: 84939637881}>, <Modeltracker: Redesigning performance analysis tools for machine learning, {eid: 84946584360}>, <Towards accountable AI: Hybrid human-machine analyses for characterizing system failure, {eid: 85167407995}>, <Explainable artificial intelligence (XAI), {eid: 85030164208}>, <None, {eid: 85063146790}>, <Datasheets for datasets, {eid: 85056730810}>, <Data diff: Interpretable, executable summaries of changes in distributions for data wrangling, {eid: 85051461646}>, <""breaking the Code moving between private and public work in collaborative software development, {eid: 18744368769}>, <Sometimes you need to see through walls: A field study of application programming interfaces, {eid: 21644444880}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2019-05-25,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85072111655,True,False,True,True
123,,"Garcia J. (AUID: 58083558200), Cabot J. (AUID: 8963493600)",,Stepwise adoption of continuous delivery in model-driven engineering,2018,"1st International Workshop on Software Engineering Aspects of Continuous Development and New Paradigms of Software Production and Deployment, DEVOPS 2018",,,,,,,8,10.1007/978-3-030-06019-0_2,https://www.doi.org/10.1007/978-3-030-06019-0_2,"<IK4-IKERLAN>, <ICREA-UOC>",,"Â© 2019, Springer Nature Switzerland AG.Continuous Delivery (CD) and, in general, Continuous Software Engineering (CSE) is becoming the norm. Still, current practices and available integration platforms are too code-oriented. They are not well adapted to work with other, non text-based, software artifacts typically produced during early phases of the software engineering life-cycle. This is especially problematic for teams adopting a Model-Driven Engineering (MDE) approach to software development where several (meta)models (and model transformations) are built and executed as part of the development process. Typically, (part of) the code is automatically generated from such models. Therefore, in a complete CD process, changes in a model should trigger changes on the generated code when appropriate. A step further would be to apply CD practices to the development of modeling artefacts themselves. Analogously to âtraditionalâ CD, where the goal is to have the mainline codebase always in a deployable state, the aim would be to have the modeling infrastructure always ready to be used. Those models could be the final product themselves or an intermediate artifact in a complete CSE process as described above. Either way, a tighter integration between CD and MDE would benefit software practitioners by providing them with complete CSE, covering also analysis and design stages of the process.","Continuous delivery, Continuous evolution, Model-driven engineering",,,,,,,,"<None, {eid: 85061088999}>, <Agile software development, {eid: 84862080030}>, <Model-driven continuous deployment for quality DevOps, {eid: 85054816400}>, <None, {eid: 4243422367}>, <None, {eid: 84878326137}>, <None, {eid: 84977560005}>, <None, {eid: 77955162010}>, <Co-evolution of metamodels and models through consistent change propagation, {eid: 84925249904}>, <Automated co-evolution of GMF editor models, {eid: 79952273948}>, <Models@Runtime for continuous design and deployment, {eid: 85028707045}>, <Continuous software engineering: A roadmap and agenda, {eid: 84991441356}>, <Model transformation co-evolution: A semiautomatic approach, {eid: 84872726686}>, <Combining the continuous integration practice and the model-driven engineering approach, {eid: 84981165314}>, <MORSE: A model-aware service environment, {eid: 77949633453}>, <Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation, {eid: 84903601568}>, <EMFStore: A model repository for EMF models, {eid: 77954724460}>, <Merging models with the epsilon merging language (EML), {eid: 33750362774}>, <A framework for composing modular and interoperable model management tasks, {eid: 70350086431}>, <Evolving models in model-driven engineering: State-of-the-art and future challenges, {eid: 84949883493}>, <An infrastructure modelling tool for cloud provisioning, {eid: 85032348388}>, <Presentation of EMF compare utility, {eid: 47749101164}>, <The state of practice in model-driven engineering, {eid: 84899687758}>, <Industrial adoption of model-driven engineering: Are the tools really the problem?, {eid: 84886821083}>",,,Springer Verlag,,,2018-03-05,,,,,,,eng,,Book Series,,,,2-s2.0-85061101819,True,True,False,False
124,,"Wettinger J. (AUID: 55860881600), BreitenbÃ¼cher U. (AUID: 54929864700), Kopp O. (AUID: 23467541000), Leymann F. (AUID: 6603379902)",,Streamlining DevOps automation for Cloud applications using TOSCA as standardized metamodel,2016,Future Generation Computer Systems,,,,,,,66,10.1016/j.future.2015.07.017,https://www.doi.org/10.1016/j.future.2015.07.017,"<Institute of Architecture of Application Systems (IAAS), University of Stuttgart>",,"Â© 2015 Elsevier B.V.DevOps as an emerging paradigm aims to tightly integrate developers with operations personnel. This enables fast and frequent releases in the sense of continuously delivering new iterations of a particular application. Users and customers of today's Web applications and mobile apps running in the Cloud expect fast feedback to problems and feature requests. Thus, it is a critical competitive advantage to be able to respond quickly. Besides cultural and organizational changes that are necessary to apply DevOps in practice, tooling is required to implement end-to-end automation of deployment processes. Automation is the key to efficient collaboration and tight integration between development and operations. The DevOps community is constantly pushing new approaches, tools, and open-source artifacts to implement such automated processes. However, as all these proprietary and heterogeneous DevOps automation approaches differ from each other, it is hard to integrate and combine them to deploy applications in the Cloud using an automated deployment process. In this paper we present a systematic classification of DevOps artifacts and show how different kinds of artifacts can be discovered and transformed toward TOSCA, which is an emerging standard. We present an integrated modeling and runtime framework to enable the seamless and interoperable integration of different approaches to model and deploy application topologies. The framework is implemented by an open-source, end-to-end toolchain. Moreover, we validate and evaluate the presented approach to show its practical feasibility based on a detailed case study, in particular considering the performance of the transformation toward TOSCA.","Cloud computing, Cloud standards, Deployment automation, DevOps, TOSCA, Transformation",,,,,,,,"<None, {eid: 84887309406}>, <None, {eid: 84860316008}>, <None, {eid: 84858197925}>, <None, {eid: 84884493217}>, <None, {eid: 84923681810}>, <None, {eid: 84978418140}>, <None, {eid: 84958809022}>, <Standards-based DevOps automation and integration using TOSCA, {eid: 84946692273}>, <None, {eid: 84941941478}>, <TOSCA: Portable automated deployment and management of cloud applications, {eid: 84930424951}>, <The Emergence of governance in an open source community, {eid: 36749092836}>, <A framework for creating hybrid-open source software communities, {eid: 0036108945}>, <Any2API - Automated APIfication, {eid: 84969848923}>, <Container-based operating system virtualization: A scalable, high-performance alternative to hypervisors, {eid: 34548029519}>, <None, {eid: 84923681808}>, <None, {eid: 84958809023}>, <None, {eid: 84884482931}>, <None, {eid: 84880300218}>, <None, {eid: 84908235036}>, <None, {eid: 78651521953}>, <None, {eid: 77957994724}>, <BPMN4TOSCA: A domain-specific language to model management plans for composite applications, {eid: 84870341884}>, <Automated capturing and systematic usage of DevOps knowledge for cloud applications, {eid: 84944329323}>, <None, {eid: 84944333558}>, <Integrating configuration management with model-driven cloud management based on TOSCA, {eid: 84884491041}>, <None, {eid: 84863232801}>, <None, {eid: 84893925034}>, <Winery - A modeling tool for TOSCA-based cloud applications, {eid: 84892397400}>, <OpenTOSCA - A runtime for TOSCA-based cloud applications, {eid: 84892400015}>, <None, {eid: 58149225100}>, <None, {eid: 0004002692}>, <None, {eid: 84899456507}>, <Combining declarative and imperative cloud application provisioning based on TOSCA, {eid: 84908563698}>, <Unified invocation of scripts and services for provisioning, deployment, and management of cloud applications based on TOSCA, {eid: 84902315977}>, <None, {eid: 84958809025}>, <Blueprinting the Cloud, {eid: 80555156126}>, <None, {eid: 84923681804}>, <None, {eid: 84907080574}>, <Sr DevOpSlang - Bridging the gap between development and operations, {eid: 84923681803}>, <Ubicrawler: A scalable fully distributed web crawler, {eid: 3042680184}>, <Mercator: A scalable, extensible web crawler, {eid: 79951675059}>, <The social compute unit, {eid: 79955550220}>, <The rise of crowdsourcing, {eid: 33847246935}>, <None, {eid: 0344990694}>, <None, {eid: 78651322278}>",,,Elsevier,,,2016-03-01,,,,,,,eng,,Journal,,,,2-s2.0-84958740530,False,True,False,False
125,,"Bernard E. (AUID: 57219183437), Ambert F. (AUID: 55580956100), Legeard B. (AUID: 6603012582)",,Supporting efficient test automation using lightweight MBT,2020,"13th IEEE International Conference on Software Testing, Verification and Validation Workshops, ICSTW 2020",,,,,,,1,10.1109/ICSTW50294.2020.00028,https://www.doi.org/10.1109/ICSTW50294.2020.00028,"<Univ. Bourgogne Franche-ComtÃ©, Cnrs, FEMTO-ST Institute>",,"Â© 2020 IEEE.The Agile and DevOps transformation of software development practices enhances the need for increased automation of functional testing, especially for regression testing. This poses challenges both in the effort that needs to be devoted to the creation and maintenance of automated test scripts, and in their relevance (i.e. their alignment with business needs). Test automation is still difficult to implement and maintain and the return on investment comes late while projects tend to be short. In this context, we have experimented a lightweight model-based test automation approach to address both productivity and relevance challenges. It integrates test automation through a simple process and tool-chain experimented on large IT projects.",,,,,,,,,"<An experience report on applying software testing academic results in industry: We need usable automated test generation, {eid: 85035083036}>, <A taxonomy of model-based testing approaches, {eid: 84862325128}>, <End-to-end automatic business process validation, {eid: 85051251425}>, <Design of a tool for generating test cases from bpmn, {eid: 84946687742}>, <Design and implementation of automation testing framework based on keyword driven, {eid: 84906514519}>, <A framework for testing web applications using action word based testing, {eid: 84964515042}>, <Agile testing concepts based on keyword-driven testing for industrial automation systems, {eid: 84872900487}>, <An adapter framework for keyword-driven testing, {eid: 77950625334}>, <Lightweight modelbased testing for enterprise it, {eid: 85050968271}>, <On the evolution of keyword-driven test suites, {eid: 85067954868}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2020-03-23,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85091755014,False,True,False,False
126,,"Benni B. (AUID: 57202099197), Mosser S. (AUID: 25654364800), Collet P. (AUID: 8947110100), Riveill M. (AUID: 55800387900)",,Supporting micro-services deployment in a safer way: A static analysis and automated rewriting approach,2018,"33rd Annual ACM Symposium on Applied Computing, SAC 2018",,,,,,,5,10.1145/3167132.3167314,https://www.doi.org/10.1145/3167132.3167314,"<UniversitÃ© CÇte dAzur, CNRS, I3S>",,"Â© 2018 ACM.The SOA ecosystem has drastically evolved since its childhood in the early 2000s. From monolithic services, micro-services now cooperate together in ultra-large scale systems. In this context, there is a tremendous need to deploy frequently new services, or new version of existing services. Container-based technologies (e.g., Docker) emerged recently to tool such deployments, promoting a black-box reuse mechanism to support off-the-shelf deployments. Unfortunately, from the service deployment point of view, such form of black-box reuse prevent to ensure what is really shipped inside the container with the service to deploy. In this paper, we propose a formalism to model and statically analyze service deployment artifacts based on state of the art deployment platforms. The static analysis mechanism leverages the hierarchy of deployment descriptors to verify a given deployment, as well as rewrite it to automatically fix common errors. The approach is validated through the automation of the guidelines provided by the user community associated to the reference Docker engine, and the analysis of 20,000 real deployment descriptors (hosted on GitHub).","Container, Docker, Microservice, Static analysis",,,,,,,,"<None, {eid: 85050513152}>, <Microservices architecture enables DevOps: Migration to a cloud-native architecture, {eid: 84968796741}>, <Detecting model inconsistency through operation-based model construction, {eid: 57349190141}>, <An introduction to docker for reproducible research, {eid: 84930642023}>, <None, {eid: 0003885315}>, <None, {eid: 85025659978}>, <CaDAnCE: A criticality-aware deployment and configuration engine, {eid: 49649124090}>, <DevOps com and clusterhq, {eid: 85050520638}>, <An updated performance comparison of virtual machines and Linux containers, {eid: 84937435024}>, <CloudMF: Applying MDE to tame the complexity of managing multicloud applications, {eid: 84946685259}>, <Deploying on the grid with deployware, {eid: 50649090767}>, <None, {eid: 51749119047}>, <HashiCorp, {eid: 85050565151}>, <None, {eid: 85050541680}>, <None, {eid: 84924414777}>, <Docker: Lightweight linux containers for consistent development and deployment, {eid: 84926444656}>, <Hypervisors vs lightweight virtualization: A performance comparison, {eid: 84944351058}>, <A commutative model composition operator to support software adaptation, {eid: 84864072985}>, <None, {eid: 85010410859}>, <Docker cluster management for the cloud-survey results and own solution, {eid: 84963690007}>, <Linux containers and the future cloud, {eid: 84962848574}>, <None, {eid: 85050525050}>, <None, {eid: 85050572740}>, <A unification algorithm for associative-commutative functions, {eid: 84976741234}>, <Performance evaluation of container-based virtualization for high performance computing environments, {eid: 84877674458}>",,,Association for Computing Machinery,,,2018-04-09,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85050555290,False,False,False,False
127,,"Hegedus C. (AUID: 57193084519), Varga P. (AUID: 8562009900)",,Tailoring MLOps Techniques for Industry 5.0 Needs,2023,"19th International Conference on Network and Service Management, CNSM 2023",,,,,,,0,10.23919/CNSM59352.2023.10327814,https://www.doi.org/10.23919/CNSM59352.2023.10327814,"<Budapest University of Technology and Economics, Department of Telecommunications and Media Informatics>",,"Â© 2023 IFIP.It is a very popular era for machine learning (ML) applications, and Industry5.0 aims to have AI as one of its key technologies. Still, only a few ML initiatives make it to a production-grade implementation, mostly due to lacking proper Continuous Integration and Delivery framework and MLOps practices. This is especially true for industrial use cases, where the trust and reliability of ML applications are mission-critical. Most of these applications fail during the final stage of the development lifecycle, i.e. acceptance testing and validation of the ML application, while being integrated into Cyber-Physical System of Systems (CPSoS). This paper explores the key requirements for deploying ML applications in industrial scenarios, emphasizing the critical role of Digital Twins, edge AI, and responsible-explainable AI techniques in ensuring efficient and responsible operations. Building upon previous models, this paper suggests two process models: (i) the Olympics model for MLOps-coupled CPS engineering and (ii) the MLOps engineering toolchain for industrial applications.",,,,,,,,,"<None, {eid: 85134560362}>, <Industry 5.0: A survey on enabling technologies and potential applications, {eid: 85114389472}>, <Machine learning operations (mlops): Overview, definition, and architecture, {eid: 85134392928}>, <Tackling faults in the industry 4.0 era-a survey of machine-learning solutions and key aspects, {eid: 85077254717}>, <A survey on machine learning based smart maintenance and quality control solutions, {eid: 85125272990}>, <None, {eid: 85180013954}>, <Towards a devops approach in cyber physical production systems using digital twins, {eid: 85096529757}>, <Industrial applications of digital twins, {eid: 85113295605}>, <A survey on AIdriven digital twins in industry 4.0: Smart manufacturing and advanced robotics, {eid: 85115401810}>, <None, {eid: 85098817727}>, <Industry 4.0: A survey on technologies, applications and open research issues, {eid: 85020118455}>, <Security safety and organizational standard compliance in cyber physical systems, {eid: 85068873395}>, <Smart manufacturing: Characteristics, technologies and enabling factors, ? Proceedings of the Institution of Mechanical Engineers, Part B, {eid: 85045051227}>, <None, {eid: 85180014514}>, <Machine Learning Operations: A Survey on MLOps Tool Support, {eid: 85133747714}>, <None, {eid: 85180013748}>, <Mlops: A taxonomy and a methodology, {eid: 85132730765}>, <None, {eid: 85180011571}>, <None, {eid: 85180012812}>, <Digital twin in industry: State-of-the-art, {eid: 85054374767}>, <Digital twins in industry 5.0: Challenges in modeling and communication, {eid: 85164658186}>, <Modeling an industrial revolution: How to manage large-scale, complex iot ecosystems?, {eid: 85113598035}>, <None, {eid: 85144951265}>, <A devops approach for cyber-physical system-of-systems engineering through arrowhead, {eid: 85113686616}>, <Securing the ml lifecycle, {eid: 85180009357}>, <Structured verification of machine learning models in industrial settings, {eid: 85140199025}>, <Supporting digital supply chains by iot frameworks: Collaboration, control, combination, {eid: 85101332600}>, <Artificial intelligence applications in supply chain management, {eid: 85114030536}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2023-10-30,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85180014841,True,False,True,True
128,,"Ringert J.O. (AUID: 35085244600), Rumpe B. (AUID: 55861872700), Schulze C. (AUID: 57191918656), Wortmann A. (AUID: 56581745100)",,Teaching agile model-driven engineering for cyber-physical systems,2017,"39th IEEE/ACM International Conference on Software Engineering: Software Engineering and Education Track, ICSE-SEET 2017",,,,,,,15,10.1109/ICSE-SEET.2017.16,https://www.doi.org/10.1109/ICSE-SEET.2017.16,"<School of Computer Science, Tel Aviv University>, <Software Engineering, RWTH Aachen>",,"Â© 2017 IEEE.Agile development methods, model-driven engineering, and cyber-physical systems are important topics in software engineering education. It is not obvious how to teach their combination while respecting individual challenges posed to students and educators. We have devised a software project class for teaching the agile MDE for CPS. The project class was held in three different semesters. In this paper, we report on the setup of our exploratory study and its goals for teaching. We base our evaluation and insights on interviews and questionnaires. Our results show the feasibility of combination of agile MDE for CPS but also the challenges this combination poses to students and educators.","case study, cyber-physical systems, model-driven engineering, teaching",,,,,,,,"<Introduction for freshmen to embedded systems using lego mindstorms, {eid: 60549092513}>, <Teaching introductory Java through lego mindstorms models, {eid: 0036377027}>, <A case study of lego mindstorms? Suitability for artificial intelligence and robotics courses at the college level, {eid: 0036375342}>, <Teaching domain specific modeling, {eid: 84912120256}>, <Experiences of teaching model-driven engineering in a software design course, {eid: 85026650015}>, <The impact of the model-driven approach to software engineering on software engineering education, {eid: 77951137453}>, <A case study on model-based development of robotic systems using montiarc with embedded automata, {eid: 85086442858}>, <Pragmatic model-driven software development from the viewpoint of a programmer: Teaching experience, {eid: 84912143345}>, <Software engineering project courses with industrial clients, {eid: 84954327014}>, <Learning agile software development in high school: An investigation, {eid: 85021838978}>, <None, {eid: 2342509886}>, <None, {eid: 85009429756}>, <Managing complexity of automotive electronics using the east-Adl, {eid: 46749144944}>, <Model-driven engineering practices in industry, {eid: 79959907898}>, <What industry needs from architectural languages: A survey, {eid: 84878389746}>, <The state of practice in model-driven engineering, {eid: 84899687758}>, <Model-driven development of complex software: A research roadmap, {eid: 34748861160}>, <Cps foundations, {eid: 77956210272}>, <Teaching modeling: Why, when, what?, {eid: 78650400990}>, <None, {eid: 84880160418}>, <Language and code generator composition for model-driven engineering of robotics component & connector systems, {eid: 84998622881}>, <A road map for teaching introductory programming using lego mindstorms robots, {eid: 22244447088}>, <Using lego mindstorms nxt and lejos in an advanced software engineering course, {eid: 77953739930}>, <Teaching model engineering in the large, {eid: 84858787539}>, <Teaching agile: Addressing the conflict between project delivery and application of agile methods, {eid: 85021171536}>, <A classification and comparison framework for software architecture description languages, {eid: 0033892696}>, <None, {eid: 0005266243}>, <Transforming platform-independent to platform-specific component and connector software architecture models, {eid: 84949766019}>, <Ros: An open-source robot operating system, {eid: 77957352104}>, <Model-driven software development in robotics: Communication patterns as key for a robotics component model, {eid: 84255213741}>, <Monticore: Modular development of textual domain specific languages, {eid: 70349315655}>, <Modeling robot and world interfaces for reusable tasks, {eid: 84958162708}>, <Specification and development of interactive systems, {eid: 0038688057}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2017-05-20,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85026747612,True,False,False,False
129,,"Mamata R. (AUID: 57215323826), Azim A. (AUID: 36023296200), Liscano R. (AUID: 56086121100), Smith K. (AUID: 58593004600), Chang Y.K. (AUID: 57217595523), Seferi G. (AUID: 58508425200), Tauseef Q. (AUID: 58509413000)",,Test Case Prioritization using Transfer Learning in Continuous Integration Environments,2023,"4th IEEE/ACM International Conference on Automation of Software Test, AST 2023",,,,,,,0,10.1109/AST58925.2023.00023,https://www.doi.org/10.1109/AST58925.2023.00023,"<Ontario Tech University>, <International Business Machines Corporation (IBM)>",,"Â© 2023 IEEE.The continuous Integration (CI) process runs a large set of automated test cases to verify software builds. The testing phase in the CI systems has timing constraints to ensure software quality without significantly delaying the CI builds. Therefore, CI requires efficient testing techniques such as Test Case Prioritization (TCP) to run faulty test cases with priority. Recent research studies on TCP utilize different Machine Learning (ML) methods to adopt the dynamic and complex nature of CI. However, the performance of ML for TCP may decrease for a low volume of data and less failure rate, whereas using existing data with similar patterns from other domains can be valuable. We formulate this as a transfer learning (TL) problem. TL has proven to be beneficial for many real-world applications where source domains have plenty of data, but the target domains have a scarcity of it. Therefore, this research investigates leveraging the benefit of transfer learning for test case prioritization (TCP). However, only some industrial CI datasets are publicly available due to data privacy protection regulations. In such cases, model-based transfer learning is a potential solution to share knowledge among different projects without revealing data to other stakeholders. This paper applies TransBoost, a tree-kernel-based TL algorithm, to evaluate the TL approach for 24 study subjects and identify potential source datasets.","Continuous Integration (CI), Test Case Prioritization (TCP), Transfer Learning (TL)",,,,,,,,"<Techniques for improving regression testing in continuous integration development environments, {eid: 84986877429}>, <Test case prioritization: A family of empirical studies, {eid: 0036472965}>, <Test cases prioritization using open dependency structure algorithm, {eid: 84938909933}>, <Empirically evaluating readily available information for regression test optimization in continuous integration, {eid: 85111442372}>, <Rtptorrent: An open-source dataset for evaluating regression test prioritization, {eid: 85088915265}>, <Transfer learning for automated test case prioritization using xcsf, {eid: 85107515532}>, <None, {eid: 85089600740}>, <Transboost: A boosting-tree kernel transfer learning algorithm for improving financial inclusion, {eid: 85147607385}>, <Learning to rank for information retrieval and natural language processing, {eid: 84943760329}>, <Learning-to-rank vs ranking-to-learn: Strategies for regression testing in continuous integration, {eid: 85094318353}>, <Systemlevel test case prioritization using machine learning, {eid: 85015360836}>, <Using the case-based ranking methodology for test case prioritization, {eid: 34547244888}>, <Optimizing search engines using clickthrough data, {eid: 0242456822}>, <Learning for test prioritization: An industrial case study, {eid: 84997235107}>, <Optimizing test prioritization via test distribution analysis, {eid: 85058263302}>, <Recurrent neural network for web services performance forecasting, ranking and regression testing, {eid: 85082392258}>, <Incorporating fault-proneness estimations into coverage-based test case prioritization methods, {eid: 85079054649}>, <Test case design and test case prioritization using machine learning, {eid: 85074628474}>, <An empirical study on bayesian networkbased approach for test case prioritization, {eid: 50649115541}>, <Studying test case failure prediction for test case prioritization, {eid: 85053197930}>, <An improvement to test case failure prediction in the context of test case prioritization, {eid: 85056719436}>, <Machine learning based test case prioritization in object oriented testing, {eid: 85073755471}>, <A framework for continuous regression and integration testing in iot systems based on deep learning and search-based techniques, {eid: 85097184092}>, <Reinforcement learning for automatic test case prioritization and selection in continuous integration, {eid: 85026639599}>, <Reinforcement learning for test case prioritization, {eid: 85135266050}>, <Test case selection and prioritization using machine learning: A systematic literature review, {eid: 85121144062}>, <Test re-prioritization in continuous testing environments, {eid: 85058303599}>, <Redefining prioritization: continuous prioritization for continuous integration, {eid: 85049407641}>, <Continuous test suite failure prediction, {eid: 85111456523}>, <Reinforcement learning based test case prioritization for enhancing the security of software, {eid: 85098011611}>, <A clustering approach to improving test case prioritization: An industrial case study, {eid: 83455213915}>, <Xcs as a reinforcement learning approach to automatic test case prioritization, {eid: 85089750472}>, <Prioritizing test cases for regression testing, {eid: 0034592889}>, <None, {eid: 85070701944}>, <Application of transfer learning for object detection on manually collected data, {eid: 85072822759}>, <Fastlane: Test minimization for rapidly deployed large-scale online services, {eid: 85072284134}>, <Combinatorial interaction regression testing: A study of test case generation and prioritization, {eid: 47349111813}>, <Machine learning regression techniques for test case prioritization in continuous integration environment, {eid: 85135774956}>, <None, {eid: 85165984191}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2023-05-15,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85165992019,False,False,True,False
130,,"Mossige M. (AUID: 55842764600), Gotlieb A. (AUID: 56247674500), Meling H. (AUID: 22734926800)",,Testing robot controllers using constraint programming and continuous integration,2015,Information and Software Technology,,,,,,,20,10.1016/j.infsof.2014.09.009,https://www.doi.org/10.1016/j.infsof.2014.09.009,"<ABB Robotics>, <Simula Research Laboratory>, <University of Stavanger>",,"Â© 2014 Elsevier B.V. All rights reserved.Context: Testing complex industrial robots (CIRs) requires testing several interacting control systems. This is challenging, especially for robots performing process-intensive tasks such as painting or gluing, since their dedicated process control systems can be loosely coupled with the robot's motion control. Objective: Current practices for validating CIRs involve manual test case design and execution. To reduce testing costs and improve quality assurance, a trend is to automate the generation of test cases. Our work aims to define a cost-effective automated testing technique to validate CIR control systems in an industrial context. Method: This paper reports on a methodology, developed at ABB Robotics in collaboration with SIMULA, for the fully automated testing of CIRs control systems. Our approach draws on continuous integration principles and well-established constraint-based testing techniques. It is based on a novel constraintbased model for automatically generating test sequences where test sequences are both generated and executed as part of a continuous integration process. Results: By performing a detailed analysis of experimental results over a simplified version of our constraint model, we determine the most appropriate parameterization of the operational version of the constraint model. This version is now being deployed at ABB Robotics's CIR testing facilities and used on a permanent basis. This paper presents the empirical results obtained when automatically generating test sequences for CIRs at ABB Robotics. In a real industrial setting, the results show that our methodology is not only able to detect reintroduced known faults, but also to spot completely new faults. Conclusion: Our empirical evaluation shows that constraint-based testing is appropriate for automatically generating test sequences for CIRs and can be faithfully deployed in an industrial context.","Agile development, Constraint programming, Continuous integration, Distributed real time systems, Robotized painting, Software testing",,,,,,,,"<Test generation for robotized paint systems using constraint programming in a continuous integration environment, {eid: 84883352915}>, <None, {eid: 0003426802}>, <None, {eid: 0006705483}>, <Continuous software engineering and beyond: Trends and challenges, {eid: 84942514935}>, <Communicating continuous integration servers for increasing effectiveness of automated testing, {eid: 84866917846}>, <Software testing: A research travelogue 2000-2014, {eid: 84942057973}>, <Empirical studies of test case prioritization in a JUnit testing environment, {eid: 16244385003}>, <A new heuristic for test suite reduction, {eid: 0032115945}>, <Test case prioritization for continuous regression testing: An industrial case study, {eid: 84891715780}>, <Unit test virtualization with vmvm, {eid: 84994138689}>, <On-demand test suite reduction, {eid: 84864269921}>, <CiCUTS: Combining system execution modeling tools with continuous integration environments, {eid: 44149100080}>, <A programming model for time-synchronized distributed real-time systems, {eid: 34548134817}>, <The control of discrete event systems, {eid: 0024479313}>, <None, {eid: 84892236938}>, <Ieee-1588 standard for a precision clock synchronization protocol for networked measurement and control systems, {eid: 4544372422}>, <Time synchronization in a local area network, {eid: 1842680834}>, <Cyber-physical systems: The next computing revolution, {eid: 77956217277}>, <Cyber-physical systems: A new frontier, {eid: 84892198803}>, <Cyber physical systems: Design challenges, {eid: 49649119406}>, <Crosslayer analysis testing and verification of automotive control software, {eid: 80455179700}>, <None, {eid: 85013703606}>, <Specification and verification: The spec# experience, {eid: 79959994169}>, <Automatic test data generation using constraint solving techniques, {eid: 84951817396}>, <Test selection strategies for lustre descriptions in gatel, {eid: 11244264152}>, <Stress testing of task deadlines: A constraint programming approach, {eid: 84893212634}>, <Goal-oriented test data generation for pointer programs, {eid: 34347374293}>, <Stress testing of task deadlines: A constraint programming approach, {eid: 84893212634}>, <Test architectures for testing distributed systems, {eid: 57349196017}>, <None, {eid: 84922566253}>, <Python reference manual, {eid: 0013153953}>, <A taxonomy of model-based testing approaches, {eid: 84862325128}>, <None, {eid: 0003683967}>, <None, {eid: 33748706709}>, <Z3: An efficient SMT solver, {eid: 45749085681}>, <Search-based software test data generation: A survey, {eid: 3142725712}>, <None, {eid: 82955189952}>, <An open-ended finite domain constraint solver, {eid: 84923057783}>, <Optimisation modelling for software developers, {eid: 84868266728}>, <The future of optimization technology, {eid: 84902474528}>",,,Elsevier B.V.,,,2015-01-01,,,,,,,eng,,Journal,,,,2-s2.0-84922513915,True,False,True,False
131,,"Ma T. (AUID: 57195984064), Ali S. (AUID: 56962801700), Yue T. (AUID: 25651096400)",,Testing self-healing cyber-physical systems under uncertainty with reinforcement learning: an empirical study,2021,Empirical Software Engineering,,,,,,,11,10.1007/s10664-021-09941-z,https://www.doi.org/10.1007/s10664-021-09941-z,"<Simula Research Laboratory>, <University of Oslo>, <Nanjing University of Aeronautics and Astronautics>",,"Â© 2021, The Author(s), under exclusive licence to Springer Science+Business Media, LLC, part of Springer Nature.Self-healing is becoming an essential feature of Cyber-Physical Systems (CPSs). CPSs with this feature are named Self-Healing CPSs (SH-CPSs). SH-CPSs detect and recover from errors caused by hardware or software faults at runtime and handle uncertainties arising from their interactions with environments. Therefore, it is critical to test if SH-CPSs can still behave as expected under uncertainties. By testing an SH-CPS in various conditions and learning from testing results, reinforcement learning algorithms can gradually optimize their testing policies and apply the policies to detect failures, i.e., cases that the SH-CPS fails to behave as expected. However, there is insufficient evidence to know which reinforcement learning algorithms perform the best in terms of testing SH-CPSs behaviors including their self-healing behaviors under uncertainties. To this end, we conducted an empirical study to evaluate the performance of 14 combinations of reinforcement learning algorithms, with two value function learning based methods for operation invocations and seven policy optimization based algorithms for introducing uncertainties. Experimental results reveal that the 14 combinations of the algorithms achieved similar coverage of system states and transitions, and the combination of Q-learning and Uncertainty Policy Optimization (UPO) detected the most failures among the 14 combinations. On average, the Q-Learning and UPO combination managed to discover two times more failures than the others. Meanwhile, the combination took 52% less time to find a failure. Regarding scalability, the time and space costs of the value function learning based methods grow, as the number of states and transitions of the system under test increases. In contrast, increasing the systemâs complexity has little impact on policy optimization based algorithms.","Cyber-physical systems, Empirical evaluation, Model execution, Reinforcement learning, Self-healing, Uncertainty",,,,,,,,"<Generating test data from OCL constraints with search techniques, {eid: 84884878316, doi: 10.1109/TSE.2013.17}>, <None, {eid: 85042614022}>, <Controlling the false discovery rate: A practical and powerful approach to multiple testing, {eid: 0001677717}>, <Model-based fault diagnosis and reconfiguration of robot drives, {eid: 51349162241}>, <Model-based hypothesis testing of uncertain software systems, {eid: 85079042885}>, <Automated test sequence generation for finite state machines using genetic algorithms, {eid: 52249113028}>, <Benchmarking Deep Reinforcement Learning for Continuous Control, {eid: 85019241632}>, <Multiple comparisons using rank sums, {eid: 84861604521, doi: 10.1080/00401706.1964.10490181}>, <Lightweight automated testing with adaptation-based programming, 2012 IEEE 23rd international symposium on software reliability engineering, {eid: 84876394399, doi: 10.1109/ISSRE.2012.1}>, <Safety and dependability analysis of self-adaptive systems, second international symposium on leveraging applications of formal methods, {eid: 77956422483}>, <Deep reinforcement learning that matters. Proceedings of the AAAI Conference on, {eid: 85057337632}>, <None, {eid: 85056996295}>, <Reporting experiments in software engineering, {eid: 84890169938, doi: 10.1007/978-1-84800-044-5_8}>, <Uncovering unknown system behaviors in uncertain networks with model and search-based testing, {eid: 85048452481}>, <None, {eid: 85103834364}>, <Preliminary guidelines for empirical research in software engineering, {eid: 0036704729, doi: 10.1109/TSE.2002.1027796}>, <Optimal and autonomous control using reinforcement learning: a survey, {eid: 85038353072, doi: 10.1109/TNNLS.2017.2773458}>, <Reinforcement learning in robotics: a survey, {eid: 84884276459, doi: 10.1177/0278364913495721}>, <Use of ranks in one-criterion variance analysis, {eid: 84943709252, doi: 10.1080/01621459.1952.10483441}>, <Automatic state-based test generation using genetic algorithms, vol 2007, {eid: 48049120649}>, <Runtime analysis of the (1+ 1) EA on computing unique input output sequences, {eid: 84889670582, doi: 10.1016/j.ins.2010.01.031}>, <None, {eid: 85007167143}>, <Modeling foundations for executable model-based testing of self-healing cyber-physical systems, {eid: 85057563276, doi: 10.1007/s10270-018-00703-y}>, <Testing self-healing cyber-physical systems under uncertainty: a fragility-oriented approach, {eid: 85063237133, doi: 10.1007/s11219-018-9437-3}>, <AutoBlackTest: Automatic black-box testing of interactive applications, {eid: 84862331561}>, <Optimizing neural networks with Kronecker-factored approximate curvature, {eid: 84944469420}>, <Testing automated vehicles against actuator inaccuracies in a large state space, {eid: 84991096035, doi: 10.1016/j.ifacol.2016.07.611}>, <Human-level control through deep reinforcement learning, {eid: 84924051598, doi: 10.1038/nature14236}>, <Asynchronous methods for deep reinforcement learning, {eid: 84971448181}>, <None, {eid: 85047001601}>, <Object constraint language V2.4, {eid: 85103848098}>, <None, {eid: 84993982230}>, <Precise semantics of UML State Machines (PSSM). V1.0, {eid: 85103843560}>, <None, {eid: 85016407140}>, <None, {eid: 84969925262}>, <Timed Hazard analysis of self-healing systems, {eid: 84873855429, doi: 10.1007/978-3-642-36249-1_5}>, <Automatically exploring how uncertainty impacts behavior of dynamically adaptive systems, {eid: 84855419196, doi: 10.1109/ASE.2011.6100127}>, <Risk-based testing of self-adaptive systems using run-time predictions, {eid: 85061915840}>, <Risk-based interoperability testing using reinforcement learning, {eid: 84992458338, doi: 10.1007/978-3-319-47443-4_4}>, <Remark AS R94: a remark on algorithm AS 181: the W-test for normality, {eid: 21844510079}>, <Trust region policy optimization, {eid: 84969963490}>, <None, {eid: 85041194636}>, <Convergence results for single-step on-policy reinforcement-learning algorithms, {eid: 0033901602, doi: 10.1023/A:1007678930559}>, <Reinforcement learning for automatic test case prioritization and selection in continuous integration, {eid: 85026639599, doi: 10.1145/3092703.3092709}>, <Real-time diagnosis and repair of faults of robot control software, {eid: 37249006911, doi: 10.1007/11780519_2}>, <None, {eid: 0004102479}>, <A critique and improvement of the CL common language effect size statistics of McGraw and Wong, {eid: 0034411339}>, <Online testing with reinforcement learning, {eid: 43049140624, doi: 10.1007/11940197_16}>, <A review of process fault detection and diagnosis: part I: quantitative model-based methods, {eid: 0037443770, doi: 10.1016/S0098-1354(02)00160-6}>, <Uncertainty-driven black-box test data generation, {eid: 85020739714}>, <None, {eid: 85031087674}>, <Evolutionary function approximation for reinforcement learning, {eid: 33646714634}>, <Experimentation in software engineering, {eid: 0022757468, doi: 10.1109/TSE.1986.6312975}>, <None, {eid: 85041239261}>, <Uncertainty-wise test case generation and minimization for cyber-physical systems, {eid: 85063204143}>",,,Springer,,,2021-05-01,,,,,,,eng,,Journal,,,,2-s2.0-85103819087,False,False,False,True
132,,"Ma T. (AUID: 57195984064), Ali S. (AUID: 56962801700), Yue T. (AUID: 25651096400), Elaasar M. (AUID: 8835817100)",,Testing self-healing cyber-physical systems under uncertainty: a fragility-oriented approach,2019,Software Quality Journal,,,,,,,15,10.1007/s11219-018-9437-3,https://www.doi.org/10.1007/s11219-018-9437-3,"<Simula Research Laboratory>, <University of Oslo>, <Carleton University>",,"Â© 2019, Springer Science+Business Media, LLC, part of Springer Nature.As an essential feature of smart cyber-physical systems (CPSs), self-healing behaviors play a major role in maintaining the normality of CPSs in the presence of faults and uncertainties. It is important to test whether self-healing behaviors can correctly heal faults under uncertainties to ensure their reliability. However, the autonomy of self-healing behaviors and impact of uncertainties make it challenging to conduct such testing. To this end, we devise a fragility-oriented testing approach, which is comprised of two novel algorithms: fragility-oriented testing (FOT) and uncertainty policy optimization (UPO). The two algorithms utilize the fragility, obtained from test executions, to learn the optimal policies for invoking operations and introducing uncertainties, respectively, to effectively detect faults. We evaluated their performance by comparing them against a coverage-oriented testing (COT) algorithm and a random uncertainty generation method (R). The evaluation results showed that the fault detection ability of FOT+UPO was significantly higher than the ones of FOT+R, COT+UPO, and COT+R, in 73 out of 81 cases. In the 73 cases, FOT+UPO detected more than 70% of faults, while the others detected 17% of faults, at the most.","Cyber-physical systems, Model execution, Reinforcement learning, Self-healing, Uncertainty",,,,,,,,"<Generating test data from OCL constraints with search techniques, {eid: 84884878316, doi: 10.1109/TSE.2013.17}>, <None, {eid: 0003844191}>, <Intelligent agent-based stimulation for testing robotic software in human-robot interactions, {eid: 85030683872}>, <A practical guide for using statistical tests to assess randomized algorithms in software engineering, {eid: 79959871222}>, <None, {eid: 0003655704}>, <None, {eid: 85042614022}>, <A survey on testing for cyber physical system, {eid: 84952786814}>, <Software engineering for smart cyber-physical systems--towards a research agenda: report on the First International Workshop on Software Engineering for Smart CPS, {eid: 84993962773, doi: 10.1145/2830719.2830736}>, <On-the-fly conformance testing using SPIN, {eid: 84896693311, doi: 10.1007/s100090050044}>, <Model and object verification by using Dresden OCL, {eid: 79951889367}>, <Benchmarking deep reinforcement learning for continuous control, {eid: 85019241632}>, <A controlled experiment in testing of safety-critical embedded software, {eid: 84983326093}>, <Uncertainty in self-adaptive software systems, {eid: 84883580334}>, <Towards run-time adaptation of test cases for self-adaptive systems in the face of uncertainty, {eid: 84903746086}>, <Importance sampling for stochastic simulations, {eid: 0001240715, doi: 10.1287/mnsc.35.11.1367}>, <Model-based testing in practice, {eid: 85054050987}>, <Lightweight automated testing with adaptation-based programming, {eid: 84876394399}>, <Methods of conjugate gradients for solving linear systems, {eid: 0000135303, doi: 10.6028/jres.049.044}>, <Reinforcement learning: a survey, {eid: 0029679044, doi: 10.1613/jair.301}>, <Approximately optimal approximate reinforcement learning, {eid: 1942514728}>, <Online testing of real-time systems using uppaal, {eid: 67349165874}>, <None, {eid: 85029416652}>, <Fragility-oriented testing with model execution and reinforcement learning, {eid: 85030696798}>, <Modeling foundations for executable model-based testing of self-healing cyber-physical systems, {eid: 85068943818}>, <None, {eid: 0003830923}>, <A taxonomy of uncertainty for dynamically adaptive systems, {eid: 84865127075}>, <Trust region policy optimization, {eid: 84969963490}>, <Current challenges in the verification of hybrid systems, {eid: 84952657055}>, <None, {eid: 0004102479}>, <Mokaâa simulation platform for Papyrus based on OMG specifications for executable UML, {eid: 85057527028}>, <A taxonomy of model-based testing approaches, {eid: 84862325128, doi: 10.1002/stvr.456}>, <Online testing with reinforcement learning, {eid: 43049140624}>, <None, {eid: 84949178783, doi: 10.1007/978-3-642-29044-2}>, <Verifying self-adaptive applications suffering uncertainty, {eid: 84908608579}>, <None, {eid: 0004312284}>, <Understanding uncertainty in cyber-physical systems: A conceptual model, {eid: 85063200977}>, <None, {eid: 85014574153}>, <Verification and validation in cyber physical systems: Research challenges and a way forward, {eid: 84946222990}>",,,Springer New York LLC,,,2019-01-01,,,,,,,eng,,Journal,,,,2-s2.0-85063237133,False,False,False,False
133,,"Truong H.L. (AUID: 7006826705), Berardinelli L. (AUID: 23466256500)",,Testing uncertainty of cyber-physical systems in IoT cloud infrastructures: Combining model-driven engineering and elastic execution,2017,"1st ACM SIGSOFT International Workshop on Testing Embedded and Cyber-Physical Systems, TECPS 2017",,,,,,,9,10.1145/3107091.3107093,https://www.doi.org/10.1145/3107091.3107093,"<Distributed Systems Group, TU Wien>",,"Â© 2017 Copyright held by the owner/author(s).Today's cyber-physical systems (CPS) span IoT and cloud-based datacenter infrastructures, which are highly heterogeneous with various types of uncertainty. Thus, testing uncertainties in these CPS is a challenging and multidisciplinary activity. We need several tools for modeling, deployment, control, and analytics to test and evaluate uncertainties for different configurations of the same CPS. In this paper, we explain why using state-of-the art model-driven engineering (MDE) and model-based testing (MBT) tools is not adequate for testing uncertainties of CPS in IoT Cloud infrastructures. We discus how to combine them with techniques for elastic execution to dynamically provision both CPS under test and testing utilities to perform tests in various IoT Cloud infrastructures.","Cloud, Elasticity, IoT, MBT, MDE, Testing, Uncertainty",,,,,,,,"<None, {eid: 85027729341}>, <None, {eid: 85027728327}>, <A DSL-based approach for elasticity testing of cloud systems, {eid: 85015190973}>, <None, {eid: 84904817736}>, <Distributed model-to-model transformation with ATL on MapReduce, {eid: 84962516937}>, <Model-based testing: Where does it stand?, {eid: 84921905086}>, <None, {eid: 84992363346}>, <Towards a model-driven design tool for big data architectures, {eid: 84974539619}>, <SALSA: A framework for dynamic configuration of cloud services, {eid: 84937925214}>, <None, {eid: 85027714200}>, <Model driven development for internet of things application prototyping, {eid: 84937677098}>, <Automatic test case generation from UML models, {eid: 47349099179}>, <Model-based testing IoT communication via active automata learning, {eid: 85018671468}>, <Principles for engineering IoT cloud systems, {eid: 84962060491}>, <Understanding uncertainty in cyber-physical systems: A conceptual model, {eid: 84977479326}>",,,"Association for Computing Machinery, Inc",,,2017-07-13,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85027713666,False,False,False,False
134,,"Kanter G. (AUID: 57188680509), Vain J. (AUID: 13905505300)",,TestIt: An Open-Source Scalable Long-Term Autonomy Testing Toolkit for ROS,2019,"10th International Conference on Dependable Systems, Services and Technologies, DESSERT 2019",,,,,,,3,10.1109/DESSERT.2019.8770011,https://www.doi.org/10.1109/DESSERT.2019.8770011,<Tallinn University of Technology>,,Â© 2019 IEEE.This paper presents an open-source testing toolkit TestIt that is primarily developed for model-based testing of autonomous systems to improve long-term autonomy. The architecture and tools within this architecture are introduced. The main novelty of presented solution is the scalable multi-pipeline testing architecture that enables incorporation of multi-purpose testing tools including those used in state-of-the-art model-based testing. The usability of TestIt for software testing in autonomous navigation context is demonstrated using Uppaal timed automata model based testing and Uppaal-family tools such as model checker and test execution environments Uppaal TRON and DTRON.,"autonomous robotics, integration testing, model-based testing, robot operating system, simulation, timed automata",,,,,,,,"<Ros: An open-source robot operating system, {eid: 77957352104}>, <Usage, costs, and benefits of continuous integration in open-source projects, {eid: 84989159511}>, <A tutorial on uppaal, {eid: 35048862279}>, <Divine: Explicit-state ltl model checker, {eid: 85070520024}>, <Model-based testing of web applications using nmodel, {eid: 85058442512}>, <The strands project: Long-term autonomy in everyday environments, {eid: 85007063656}>, <None, {eid: 85070487217}>, <A framework for quality assessment of ros repositories, {eid: 85006371128}>, <Dtron: A tool for distributed model-based testing of time critical applications, {eid: 85030699053}>, <Testing real-time embedded software using uppaal-tron: An industrial case study, {eid: 29244458148}>, <Massively multiple robot simulations in stage, {eid: 54249133823}>, <Online testing of nondeterministic systems with the reactive planning tester, {eid: 84860447190}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2019-06-05,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85070486861,False,False,False,False
135,,"Hametner R. (AUID: 35760794600), Zoitl A. (AUID: 9736057900), Winkler D. (AUID: 57210102724), Ãstreicher T. (AUID: 36473887600), Biffl S. (AUID: 6701704981)",,The adaptation of test-driven software processes to industrial automation engineering,2010,"8th IEEE International Conference on Industrial Informatics, INDIN 2010",,,,,,,36,10.1109/INDIN.2010.5549620,https://www.doi.org/10.1109/INDIN.2010.5549620,"<Automation and Control Institute, Vienna University of Technology>, <Institute of Software Technology and Interactive Systems, Vienna University of Technology>",,"Software components provide an increasing part of added value in automation systems and become more complex to construct and test. Test-driven development (TDD) of software systems has been successfully used for agile development of business software systems. Test cases guide the system implementation and can be executed automatically after software changes (continuous integration & build strategy). However, TDD processes need to be adapted to control automation systems engineering, where real-world systems are challenging to model and to test automatically. In this paper we introduce an adapted TDD process from the business software engineering domain to industrial automation engineering. We identify a set of UML models that enable the systematic derivation of test cases. Based on an initial empirical study we evaluate the adapted TDD process based on an industrial use case to identify strength and limitation of this approach. Major results of the study were that UML models enabled effective test case derivation in the study context. Â© 2010 IEEE.",,,,,,,,,"<None, {eid: 84924578268}>, <None, {eid: 48049098904}>, <None, {eid: 36649025165}>, <None, {eid: 0036839425}>, <None, {eid: 0346729820}>, <None, {eid: 38549173069}>, <None, {eid: 39749161554}>, <None, {eid: 85147078511}>, <None, {eid: 0007755133}>, <None, {eid: 4544344257}>, <None, {eid: 77954016340}>, <None, {eid: 0042297467}>, <MDA-based approach for embedded software generation from UML/MOF repositories, {eid: 85084689671}>, <None, {eid: 77956608700}>, <None, {eid: 28444470533}>, <None, {eid: 85007173315}>, <None, {eid: 77949876334}>",,,,,,2010-07-13,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-77956566051,True,True,False,False
136,,"Mertens J. (AUID: 57209744557), Denil J. (AUID: 35145566200)",,The Digital Twin as a Common Knowledge Base in DevOps to Support Continuous System Evolution,2021,"40th International Conference on Computer Safety, Reliability and Security, SAFECOMP 2021 held in conjunction with Workshops on DECSoS, MAPSOD, DepDevOps, USDAI and WAISE 2021",,,,,,,4,10.1007/978-3-030-83906-2_12,https://www.doi.org/10.1007/978-3-030-83906-2_12,"<Faculty of Applied Engineering, University of Antwerp>, <Flanders Make @ University of Antwerp>",,"Â© 2021, Springer Nature Switzerland AG.There is an industry wide push for faster and more feature rich systems, also in the development of Cyber-Physical Systems (CPS). Therefore, the need for applying agile development practices in the model-based design of CPS is becoming more widespread. This is no easy feat, as CPS are inherently complex, and their model-based development is less suited for agile development. Model-based development does suit the concept of digital twin, that is, design models representing a system instance in operation. In this paper we present an approach where the digital twins of system instances serve as a common-knowledge base for the entire agile development cycle of the system when performing system updates. Doing so enables interesting possibilities, such as the identification and detection of system variants, which is beneficial for the verification and validation of the system update. It also brings along challenges, as the executable physics based digital twin is generally computationally expensive. In this paper we introduce this approach by means of a small example of a swiveling pick and place robotic arm. We also elaborate on related work, and open future challenges.","Cyber-physical system, DevOps, Digital twin",,,,,,,,"<Valid (Re-)use of models-of-the-physics in cyber-physical systems using validity frames, {eid: 85068596867}>, <The functional mockup interface for tool independent exchange of simulation models, {eid: 84871289819}>, <None, {eid: 85115114425}>, <None, {eid: 85115177356}>, <Towards agile model-based systems engineering, {eid: 85041433552}>, <None, {eid: 84881132720}>, <Continuous integration for embedded systems using simulation, {eid: 85047541283}>, <None, {eid: 85104801535}>, <None, {eid: 85115131147}>, <None, {eid: 85016450943}>, <Virtual test environment for efficient verification of software updates for variant-rich automotive systems, {eid: 85073159022}>, <The DevOps Handbook: How to Create World-Class Agility, Reliability, and Security in Technology Organizations, {eid: 85056895078}>, <None, {eid: 85115186825}>, <Leveraging digital twin technology in model-based systems engineering, {eid: 85111581098}>, <Digital twins for continuous deployment in model-based systems engineering of cyber-physical systems, {eid: 85102746191}>, <None, {eid: 85115131147}>, <Validity frame concept as effort-cutting technique within the verification and validation of complex cyber-physical systems, {eid: 85096774246}>, <None, {eid: 85144595929}>, <An introduction to multi-paradigm modelling and simulation, {eid: 0012303245}>, <Continuous deployment for dependable systems with continuous assurance cases, {eid: 85080908823}>, <An industrial roadmap for continuous delivery of software for safety-critical systems, {eid: 85108593963}>",,,Springer Science and Business Media Deutschland GmbH,,,2021-09-07,,,,,,,eng,,Book Series,,,,2-s2.0-85115129760,False,False,False,False
137,,"Rios E. (AUID: 14050840000), Iturbe E. (AUID: 56991048200), Rego A. (AUID: 57197729847), Ferry N. (AUID: 35291975700), Tigli J.Y. (AUID: 6602916792), Lavirotte S. (AUID: 13605275200), Rocher G. (AUID: 57188680515), Nguyen P. (AUID: 55331455800), Song H. (AUID: 57195274282), Dautov R. (AUID: 56626911600), Mallouli W. (AUID: 14037829000), Cavalli A.R. (AUID: 7101898075)",,The DYNABIC approach to resilience of critical infrastructures,2023,"18th International Conference on Availability, Reliability and Security, ARES 2023",,,,,,,0,10.1145/3600160.3605055,https://www.doi.org/10.1145/3600160.3605055,"<TECNALIA Research Innovation, Basque Research and Technology Alliance (BRTA)>, <Faculty of Engineering, University of the Basque Country>, <UniversitÃ© CÃ´te dAzur, I3S>, <SINTEF>, <Montimage EURL>",,"Â© 2023 ACM.With increasing interdependencies and evolving threats, maintaining operational continuity in critical systems has become a significant challenge. This paper presents the DYNABIC (Dynamic business continuity of critical infrastructures on top of adaptive multi-level cybersecurity) approach as a comprehensive framework to enhance the resilience of critical infrastructures. The DYNABIC approach provides the resilience enhancement through dynamic adaptation, automated response, collaboration, risk assessment, and continuous improvement. By fostering a proactive and collaborative approach to resilience, the DYNABIC framework empowers critical infrastructure sectors to effectively mitigate disruptions and recover from incidents. The paper explores the key components and architecture of the DYNABIC approach and highlights its potential to strengthen the resilience of critical infrastructures using the concept of Digital Twins in the face of evolving threats and complex operating environments involving cascading effects.","Critical Infrastructure Protection, Cybersecurity, Digital Twin, SecDevOps",,,,,,,,"<Adaptive action selection in autonomic software using reinforcement learning, {eid: 50149098645}>, <Incident-centered information security: Managing a strategic balance between prevention and response, {eid: 84890025885}>, <Distributed multi-agent microgrids: A decentralized approach to resilient power system self-healing, {eid: 80053403646}>, <None, {eid: 85169669564}>, <Context-Aware Digital Twins to Support Software Management at the Edge, {eid: 85163398137}>, <The bowtie method: A review, {eid: 84961218774}>, <None, {eid: 85169666437}>, <None, {eid: 85169683612}>, <Development and Operation of Trustworthy Smart IoT Systems: The ENACT Framework, {eid: 85079102926}>, <GeneSIS: Continuous Orchestration and Deployment of Smart IoT Systems, {eid: 85072692587}>, <Continuous Deployment of Trustworthy Smart IoT Systems, {eid: 85089665982}>, <None, {eid: 85169674536}>, <Digital twins as run-time predictive models for the resilience of cyber-physical systems: A conceptual framework, {eid: 85113299831}>, <Security and privacy in device-to-device (D2D) communication: A review, {eid: 85020418154}>, <A review of definitions and measures of system resilience, {eid: 84942543731}>, <A digital supply chain twin for managing the disruption risks and resilience in the era of Industry 4. 0, {eid: 85075117655}>, <Digital twin for legacy systems: Simulation model testing and validation, {eid: 85059985353}>, <Networked microgrids for enhancing the power system resilience, {eid: 85018906315}>, <Model-driven risk analysis: The CORAS approach, {eid: 84952691841}>, <Leveraging digital twin technology in model-based systems engineering, {eid: 85111581098}>, <Assessment of the impact of interdependencies on the resilience of networked critical infrastructure systems, {eid: 85045087910}>, <None, {eid: 85169686821}>, <Data quality issues in online reinforcement learning for self-adaptive systems (keynote), {eid: 85143201826}>, <None, {eid: 85077818052}>, <None, {eid: 85136198721}>, <None, {eid: 84940101628}>, <Information sharing in cybersecurity: A review, {eid: 85072383465}>, <A framework for model-driven engineering of resilient software-controlled systems, {eid: 85090186086}>, <Digital twin for machining tool condition prediction, {eid: 85068465743}>, <A risk-based dynamic decision-making approach for cybersecurity protection in industrial control systems, {eid: 85051805748}>, <Cascading failures in interdependent infrastructures: An interdependent Markov-chain approach, {eid: 84976412595}>, <Power systems resilience metrics: A comprehensive review of challenges and outlook, {eid: 85096324673}>, <Continuous quantitative risk management in smart grids using attack defense trees, {eid: 85089221906}>, <Self-adaptive software: Landscape and research challenges, {eid: 70349742463}>, <Estimating cascading effects in cyber-physical critical infrastructures, {eid: 85077509963}>, <None, {eid: 0003600750}>, <Business continuity management for supply chains facing catastrophic events, {eid: 85089292845}>, <Conceptual framework for developing resilience metrics for the electricity oil and gas sectors in the United States, {eid: 84947261543}>, <A reinforcement learning-based framework for the generation and evolution of adaptation rules, {eid: 85034442783}>",,,Association for Computing Machinery,,,2023-08-29,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85169688970,True,True,False,False
138,,"Margaria T. (AUID: 36704777800), Chaudhary H.A.A. (AUID: 57315300100), Guevara I. (AUID: 57218602519), Ryan S. (AUID: 57315504600), Schieweck A. (AUID: 57191832777)",,The Interoperability Challenge: Building a Model-Driven Digital Thread Platform for CPS,2021,"10th International Symposium on Leveraging Applications of Formal Methods, ISoLA 2021",,,,,,,13,10.1007/978-3-030-89159-6_25,https://www.doi.org/10.1007/978-3-030-89159-6_25,"<CSIS, University of Limerick>, <Confirm - Centre for Smart Manufacturing>, <Lero - The Science Foundation Ireland Research Centre for Software>",,"Â© 2021, The Author(s).With the heterogeneity of the industry 4.0 world, and more generally of the Cyberphysical Systems realm, the quest towards a platform approach to solve the interoperability problem is front and centre to any system and system-of-systems project. Traditional approaches cover individual aspects, like data exchange formats and published interfaces. They may adhere to some standard, however they hardly cover the production of the integration layer, which is implemented as bespoke glue code that is hard to produce and even harder to maintain. Therefore, the traditional integration approach often leads to poor code quality, further increasing the time and cost and reducing the agility, and a high reliance on the individual development skills. We are instead tackling the interoperability challenge by building a model driven/low-code Digital Thread platform that 1) systematizes the integration methodology, 2) provides methods and techniques for the individual integrations based on a layered Domain Specific Languages (DSL) approach, 3) through the DSLs it covers the integration space domain by domain, technology by technology, and is thus highly generalizable and reusable, 4) showcases a first collection of examples from the domains of robotics, IoT, data analytics, AI/ML and web applications, 5) brings cohesiveness to the aforementioned heterogeneous platform, and 6) is easier to understand and maintain, even by not specialized programmers. We showcase the power, versatility and the potential of the Digital Thread platform on four interoperability case studies: the generic extension to REST services, to robotics through the UR family of robots, to the integration of various external databases (for data integration) and to the provision of data analytics capabilities in R.","Digital Thread (DT), Interoperability, Low Code Development (LCD), Model Driven Development (MDD), Software platforms",,,,,,,,"<None, {eid: 85118189898}>, <None, {eid: 85117596135}>, <None, {eid: 85118141483}>, <None, {eid: 85118101700}>, <Architecture drivers for trustworthy interoperability in industry 4.0, {eid: 85101767688}>, <Towards model-based intent-driven adaptive software, {eid: 85118165819}>, <None, {eid: 85088221284}>, <None, {eid: 85113536565}>, <None, {eid: 85083536146}>, <None, {eid: 85118148604}>, <Xatkit: A multimodal low-code chatbot development framework, {eid: 85079821080}>, <Model driven design of secure properties for vision-based applications: A case study, {eid: 85053636530}>, <None, {eid: 0003739670}>, <None, {eid: 0003684188}>, <Mazegen: An evolutionary generator for bootstrapping robotic navigation scenarios, {eid: 85118116209}>, <Integrated modeling and development of component-based embedded software in scala, {eid: 85118107068}>, <A pilot study of industry 4.0 asset interoperability challenges in an industry 4.0 laboratory, {eid: 85099761448}>, <Understanding data heterogeneity in the context of cyber-physical systems integration, {eid: 85018169091}>, <Dsls and middleware platforms in a model driven development approach for secure predictive maintenance systems in smart factories, {eid: 85118135928}>, <Dsls for model driven development of secure interoperable automation systems, {eid: 85118110831}>, <Model driven design of reliable robot control programs using the jABC, {eid: 34548128322}>, <Model driven design of reliable robot control programs using the jABC, {eid: 34548128322}>, <Practical semantics for the internet of things: Physical states, device mashups, and open questions, {eid: 84962216157}>, <A framework of a smart injection molding system based on real-time data, {eid: 85029874505}>, <Interoperability of the time of industry 4.0 and the internet of things, {eid: 85061197750}>, <Low-code is often high-code, so we must design low-code platforms to enable proper software engineering, {eid: 85118138977}>, <None, {eid: 85089104737}>, <Service engineering: Linking business and IT, {eid: 33750124865}>, <None, {eid: 57049105432}>, <Model-based design of distributed collaborative bioinformatics processes in the jABC, {eid: 34249867762}>, <None, {eid: 85068425964}>, <None, {eid: 85118167524}>, <Backtracking-free design planning by automatic synthesis in metaframe, {eid: 84957085309}>, <Business process modeling in the jABC: The one-thing approach, {eid: 84898095232}>, <Simplicity as a driver for agile innovation, {eid: 77953342927}>, <Service-orientation: Conquering complexity with XMDD, {eid: 84955352764}>, <Extreme model-driven development (XMDD) technologies as a hands-on approach to software development without coding, {eid: 85103827388}>, <None, {eid: 85118118019}>, <Simplicity driven application development, {eid: 84901806379}>, <CaaSSET: A framework for model-driven development of context as a service, {eid: 85088629160}>, <A review on the characteristics of cyber-physical systems for the future smart factories, {eid: 85078703428}>, <CINCO: A simplicity-driven approach to full generation of domain-specific graphical modeling tools, {eid: 85019270516}>, <None, {eid: 85115136846}>, <None, {eid: 84950338538}>, <Semantic interoperability in Industry 4.0: Survey of recent developments and outlook, {eid: 85055539075}>, <Model-driven development of accessible software: A systematic literature review, {eid: 85126923777}>, <Developing a digital twin and digital thread framework for an âIndustry 4.0â shipyard, {eid: 85100095230}>, <Graphical and textual model-driven microservice development, {eid: 85086303989}>, <Semantic interoperability in the Industry 4.0 using the IEEE 1451 standard, {eid: 85097782340}>, <None, {eid: 85125489900}>, <Industry 4.0: Survey from a system integration perspective, {eid: 85087475238}>, <Low-code as enabler of digital transformation in manufacturing industry, {eid: 85077580109}>, <Quantitatively assessing the benefits of model-driven development in agent-based modeling and simulation, {eid: 85086377266}>, <None, {eid: 85098271318}>, <Tailored generation of concurrent benchmarks, {eid: 84906909027}>, <None, {eid: 23044518175}>, <None, {eid: 85118122448}>, <Low-code platform for automating business processes in manufacturing, {eid: 85075858242}>, <Active continuous quality control, {eid: 84880516456}>, <The contribution of systems science to Industry 4.0, {eid: 85087305100}>, <Integration of Industry 4.0 related technologies in construction industry: A framework of cyber-physical system, {eid: 85088707093}>, <None, {eid: 85111430379}>, <Pyrus: An online modeling environment for no-code data-analytics service composition, {eid: 85118145576}>, <Aligned, purpose-driven cooperation: The future way of system development, {eid: 85118172762}>",,,Springer Science and Business Media Deutschland GmbH,,,2021-10-17,,,,,,,eng,,Book Series,,,,2-s2.0-85118123247,True,False,True,False
139,,"Hartmann T. (AUID: 57194343151), Fouquet F. (AUID: 36630197700), Le Traon Y. (AUID: 55884641800), Moawad A. (AUID: 55810011500)",,The next evolution of MDE: a seamless integration of machine learning into domain modeling,2019,Software and Systems Modeling,,,,,,,22,10.1007/s10270-017-0600-2,https://www.doi.org/10.1007/s10270-017-0600-2,"<University of Luxembourg>, <DataThings S.A.R.L>",,"Â© 2017, Springer-Verlag Berlin Heidelberg.Machine learning algorithms are designed to resolve unknown behaviors by extracting commonalities over massive datasets. Unfortunately, learning such global behaviors can be inaccurate and slow for systems composed of heterogeneous elements, which behave very differently, for instance as it is the case for cyber-physical systems and Internet of Things applications. Instead, to make smart decisions, such systems have to continuously refine the behavior on a per-element basis and compose these small learning units together. However, combining and composing learned behaviors from different elements is challenging and requires domain knowledge. Therefore, there is a need to structure and combine the learned behaviors and domain knowledge together in a flexible way. In this paper we propose to weave machine learning into domain modeling. More specifically, we suggest to decompose machine learning into reusable, chainable, and independently computable small learning units, which we refer to as microlearning units. These microlearning units are modeled together with and at the same level as the domain data. We show, based on a smart grid case study, that our approach can be significantly more accurate than learning a global behavior, while the performance is fast enough to be used for live learning.","Cyber-physical systems, Domain modeling, Live learning, Metamodeling, Model-driven engineering, Smart grids",,,,,,,,"<None, {eid: 84958264664}>, <A survey of context modelling and reasoning techniques, {eid: 77950189737, doi: 10.1016/j.pmcj.2009.06.002}>, <MOA: massive online analysis, {eid: 77953527363}>, <Model-based machine learning, {eid: 84874128594, doi: 10.1098/rsta.2012.0222}>, <None, {eid: 14944348412}>, <Hadoop hbase-0.20. 2 performance evaluation, {eid: 77957816388}>, <The entity-relationship modelâtoward a unified view of data, {eid: 84976766949, doi: 10.1145/320434.320440}>, <Predicting delays in software projects using networked classification, {eid: 84963900777}>, <None, {eid: 84882724288}>, <Mining high-speed data streams, {eid: 0034592938, doi: 10.1145/347090.347107}>, <Data classification using support vector machine, {eid: 78650217306}>, <Principles of proper validation: use and abuse of re-sampling for validation, {eid: 77951028114, doi: 10.1002/cem.1310}>, <Coarse- and fine-grained sentiment analysis of social media text, {eid: 79960220439}>, <Kevoree modeling framework (KMF): Efficient modeling techniques for runtime use, {eid: 84939477245}>, <Direct bulk-synchronous parallel algorithms, {eid: 0002546016, doi: 10.1006/jpdc.1994.1085}>, <None, {eid: 85064020103}>, <The WEKA data mining software: an update, {eid: 76749092270, doi: 10.1145/1656274.1656278}>, <Chronos: A graph engine for temporal graph analysis, {eid: 84900444277, doi: 10.1145/2592798.2592799}>, <Generating realistic smart grid communication topologies based on real-data, {eid: 84922444255, doi: 10.1109/SmartGridComm.2014.7007684}>, <A native versioning concept to support historized models at runtime, {eid: 84921744519, doi: 10.1007/978-3-319-11653-2_16}>, <Reasoning at runtime using time-distorted contexts: A models@run.time based approach, {eid: 84922459287}>, <Stream my models: Reactive peer-to-peer distributed models@run.time, {eid: 84961621637, doi: 10.1109/MODELS.2015.7338238}>, <Suspicious electric consumption detection based on multi-profiling using live machine learning, {eid: 84964989120}>, <Modeling context information in pervasive computing systems, {eid: 84958964894}>, <Evaluating collaborative filtering recommender systems, {eid: 3042697346, doi: 10.1145/963770.963772}>, <Jubatus: An open source platform for distributed online machine learning, {eid: 84927659398}>, <Microlearning: Emerging concepts, practices and technologies after e-learning, {eid: 84865065271}>, <Model driven engineering, {eid: 84944183958}>, <None, {eid: 85064020994}>, <None, {eid: 0003449831}>, <Distributed graphlab: a framework for machine learning and data mining in the cloud, {eid: 84863735533, doi: 10.14778/2212351.2212354}>, <Graphlab: A new framework for parallel machine learning, {eid: 85014817262}>, <None, {eid: 85064019685}>, <Internet of things: vision, applications and research challenges, {eid: 84861997111, doi: 10.1016/j.adhoc.2012.02.016}>, <None, {eid: 85055776871}>, <Models@run.time to support dynamic adaptation, {eid: 70350345225, doi: 10.1109/MC.2009.327}>, <Artificial Intelligence, {eid: 85064016202}>, <None, {eid: 85064018805}>, <Behavioral resource-aware model inference, {eid: 84908657625}>, <Making sense of business process descriptions: an experimental comparison of graphical and textual notations, {eid: 84857366249, doi: 10.1016/j.jss.2011.09.023}>, <Artificial intelligence, simulation and modeling, {eid: 0002434033}>, <Graphscope: Parameter-free mining of large time-evolving graphs, {eid: 36849035825, doi: 10.1145/1281192.1281266}>, <Requirements elicitation: Towards the unknown unknowns, {eid: 84891141749}>, <Developing a DSL-based approach for event-based monitoring of systems of systems: Experiences and lessons learned, {eid: 84963930783}>, <None, {eid: 73649104640}>, <Machine learning in medical imaging, {eid: 85032751398, doi: 10.1109/MSP.2010.936730}>, <T-finder: a recommender system for finding passengers and vacant taxis, {eid: 84883294122, doi: 10.1109/TKDE.2012.153}>, <Multi-granular representation-the key to machine intelligence, {eid: 85040568671, doi: 10.1109/ISKE.2008.4730887}>, <Multi-granular representation-the key to machine intelligence, {eid: 85040568671}>, <Formal descriptive semantics of uml and its applications, {eid: 78649576304}>",,,Springer Verlag,,,2019-04-04,,,,,,,eng,,Journal,,,,2-s2.0-85019693871,False,False,True,True
140,,"Wild K. (AUID: 57217100826), Breitenbucher U. (AUID: 54929864700), Harzenetter L. (AUID: 57204508640), Leymann F. (AUID: 6603379902), Vietz D. (AUID: 57204730904), Zimmermann M. (AUID: 7201478503)",,TOSCA4QC: Two Modeling Styles for TOSCA to Automate the Deployment and Orchestration of Quantum Applications,2020,"24th IEEE International Enterprise Distributed Object Computing Conference, EDOC 2020",,,,,,,16,10.1109/EDOC49727.2020.00024,https://www.doi.org/10.1109/EDOC49727.2020.00024,"<University of Stuttgart, Institute of Architecture of Application Systems>",,"Â© 2020 IEEE.Quantum computing introduces a new computing paradigm that promises to solve problems that cannot be solved by classical computers efficiently. Thus, quantum applications will be more and more integrated in classical applications. To bring these composite applications into production, technologies for an automated deployment and orchestration are required to avoid manual error-prone and time-consuming processes. For non-quantum applications, a variety of deployment technologies have been developed in recent years. However, the deployment of quantum applications currently differs significantly from non-quantum applications and thus, leads to a different modeling procedure for the deployment of quantum applications. To overcome these problems, we propose TOSCA4QC that introduces two deployment modeling styles based on the Topology and Orchestration Specification for Cloud Applications (TOSCA) standard for automating the deployment and orchestration of quantum applications: (i) SDK-specific modeling style to cover all technical deployment details and (ii) SDK-Agnostic modeling style supporting common modeling principles. We further show how existing model-driven development (MDD) approach can be applied to refine a SDK-Agnostic model to an executable SDK-specific model. We demonstrate the practical feasibility by a prototypical implementation as an extension of the TOSCA ecosystem OpenTOSCA and three case studies with IBMQ and a quantum simulator.","Deployment Automation, Modeling, Orchestration, Quantum Computing, TOSCA",,,,,,,,"<None, {eid: 85065113346}>, <Quantum Computing in the NISQ era and beyond, {eid: 85093671738}>, <None, {eid: 85074074842}>, <None, {eid: 84858197925}>, <The Essential Deployment Metamodel: A Systematic Review of Deployment Automation Technologies, {eid: 85071420580}>, <Declarative vs. Imperative: Two Modeling Patterns for the Automated Deployment of Applications, {eid: 85050411724}>, <None, {eid: 85096572822}>, <Internet of Things out of the Box: Using TOSCA for Automating the Deployment of IoT Environments, {eid: 85096614640}>, <Towards automated iot application deployment by a cloud-based approach, {eid: 84894154092}>, <OpenTOSCA for IoT: Automating the Deployment of IoT Applications based on the Mosquitto Message Broker, {eid: 85000926700}>, <C2: General purpose cloud platform with nfv lifecycle management, {eid: 85044327100}>, <A service orchestration architecture for fog-enabled infrastructures, {eid: 85028529556}>, <The pragmatics of model-driven development, {eid: 0141725660}>, <The OpenTOSCA Ecosystem-Concepts & Tools, {eid: 85071440091}>, <None, {eid: 84861593360}>, <None, {eid: 84870888277}>, <Overview and Comparison of Gate Level Quantum Software Platforms, {eid: 85093864691}>, <Measurement-based quantum computation, {eid: 58149330782}>, <Adiabatic Quantum Computation Is Equivalent to Standard Quantum Computation, {eid: 56349168935}>, <None, {eid: 85086999778}>, <None, {eid: 85096539024}>, <None, {eid: 85096617813}>, <None, {eid: 85096573316}>, <None, {eid: 85062596280}>, <None, {eid: 85096575694}>, <A Taxonomy and Survey of Cloud Resource Orchestration Techniques, {eid: 85019878673}>, <Combining Declarative and Imperative Cloud Application Provisioning based on TOSCA, {eid: 84908563698}>, <Vino4TOSCA: A Visual Notation for Application Topologies based on TOSCA, {eid: 84872817495}>, <None, {eid: 85096547263}>, <A Roadmap for Automating the Selection of Quantum Computers for Quantum Algorithms, {eid: 85096563479}>, <OASIS, {eid: 85096577988}>, <OASIS, {eid: 85096582986}>, <OpenTOSCA-A Runtime for TOSCA-based Cloud Applications, {eid: 84892400015}>, <A Systematic Review of Cloud Modeling Languages, {eid: 85042469266}>, <Quantum in the Cloud: Application Potentials and Research Opportunities, {eid: 85088372068}>, <Towards a Platform for Sharing Quantum Software, {eid: 85093082775}>, <PlanQK-Quantum Computing Meets Artificial Intelligence, {eid: 85096605986}>, <Polynomial-Time Algorithms for Prime Factorization and Discrete Logarithms on a Quantum Computer, {eid: 0142051871}>, <Pattern-based Deployment Models and Their Automatic Execution, {eid: 85061703674}>, <Pattern-based rewrite and refinement of architectures using graph theory, {eid: 85096552142}>, <Pattern-based Deployment Models Revisited: Automated Pattern-driven Deployment Configuration, {eid: 85122069694}>, <Process Fragments, {eid: 78650702502}>, <None, {eid: 85096617093}>, <None, {eid: 85096567881}>, <A TOSCAbased Programming Model for Interacting Components of Automatically Deployed Cloud and IoT Applications, {eid: 85023172117}>, <None, {eid: 85094252790}>, <None, {eid: 85096618616}>, <Prototype container-based platform for extreme quantum computing algorithm development, {eid: 85076795941}>, <None, {eid: 85096619720}>, <None, {eid: 80052512121}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2020-10-05,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85096528009,False,False,False,False
141,,"Maldonado S.D.R. (AUID: 58166749700), Garcia J.J.B. (AUID: 58166749800)",,Towards a Domain-Specific Language for Provisioning Multiple Cloud Testing Environments for Mobile Applications,2022,"3rd International Conference on Information Systems and Software Technologies, ICI2ST 2022",,,,,,,0,10.1109/ICI2ST57350.2022.00033,https://www.doi.org/10.1109/ICI2ST57350.2022.00033,<Universidad de Los Andes>,,"Â© 2022 IEEE.Towards a Domain-Specific LanguagTowards a Domain-Specific Languag Provisioning testing environments for mobile applications is one of the most significant challenges within the software industry. Due to this high complexity that exists when provisioning test environments within the multiple available cloud platforms, it is necessary to make a significant investment in human resources, like time and effort for the implementation and execution of testing. There is additional complexity: testing software in a single environment is no longer sufficient. Today's mobile industry is constantly growing, and execution environments tend to be always different; the hardware configuration is usually different and sometimes exceeds the software barrier. It is challenging to execute testing on each of the existing devices, as this requires a long task of human intervention. Today some platforms provide testing services in different environments. However, not all providers have the complete set of environments that one would like to have, and specific knowledge is mandatory for using each available tool. It is a task that requires expertise and time. This work seeks to mitigate the impact on time and the learning curve through a high-level tool developed using a model-oriented approach, thus reducing the time needed for setting up each required platform for organizations. As a solution, we propose a Domain-Specific Language for provisioning multiple cloud testing environments for mobile applications. The configuration of the environment is done with the Domain Specific Language to make the usage easier by the final user. The necessary code is generated through transformations to set up an environment on cloud platforms such as Amazon Web Services (AWS) and Google Cloud Platform (GCP). This usage of this platform results in fewer code lines written and less time learning about the specific knowledge for each platform.","cloud, DevOPS, DSL, mobile, testing",,,,,,,,"<A systematic mapping study addressing the reliability of mobile applications: The need to move beyond testing reliability, {eid: 85121658690}>, <Review paper on various software testing techniques and strategies, {eid: 85097548924}>, <Developing mobile applications via model driven development: A systematic literature review, {eid: 85112044746}>, <Checking app behavior against app descriptions: What if there are no app descriptions?, {eid: 85112056079}>, <None, {eid: 85151337914}>, <Tracking for mobile devices: A systematic mapping study, {eid: 84962519405}>, <Vision: Improved development of mobile ehealth applications, {eid: 85051662042}>, <Validation of architectural requirements for tackling cloud computing barriers: Cloud provider perspective, {eid: 85105617772}>, <Serverless execution of scientific workflows: Experiments with hyperflow, aws lambda and google cloud functions, {eid: 85035082302}>, <Streamlining devops automation for cloud applications using tosca as standardized metamodel, {eid: 84958740530}>, <Response time evaluation of mobile applications combining network protocol analysis and information fusion, {eid: 85123008106}>, <Continuous benchmarking: Using system benchmarking in build pipelines, {eid: 85071486300}>, <Continuous testing and solutions for testing problems in continuous delivery: A systematic literature review, {eid: 85055587228}>, <Appflow: Using machine learning to synthesize robust, reusable ui tests, {eid: 85058288795}>, <What will it take? a view on adoption of model-based methods in practice, {eid: 84867900536}>, <None, {eid: 85133664838}>, <None, {eid: 85151317339}>, <None, {eid: 85140296427}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2022-11-08,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85151342791,False,False,False,False
142,,"Mussbacher G. (AUID: 22135401000), Kienzle J. (AUID: 8709922800), Combemale B. (AUID: 24343217800), AbrahÃ£o S. (AUID: 8211929700), Bencomo N. (AUID: 17345086800), BurgueÃ±o L. (AUID: 55323008900), Engels G. (AUID: 7004530938), KÃ¼hn T. (AUID: 56333529900), Mosser S. (AUID: 25654364800), Sahraoui H. (AUID: 57196894039), Weyssow M. (AUID: 57218143928)",,Towards an assessment grid for intelligent modeling assistance,2020,"23rd ACM/IEEE International Conference on Model Driven Engineering Languages and Systems, MODELS-C 2020",,,,,,,9,10.1145/3417990.3421396,https://www.doi.org/10.1145/3417990.3421396,"<McGill University>, <University of Toulouse and Inria>, <Universitat PolitÃ¨cnica de ValÃ¨ncia>, <Aston University>, <Open Uni. of Catalonia>, <CEA List>, <Paderborn University>, <Karlsruher Institut fÃ¼r Technologie>, <UniversitÃ© du QuÃ©bec Ã MontreÃ¡l>, <DIRO, UniversitÃ© de MontreÃ¡l>",,"Â© 2020 ACM.The ever-growing complexity of systems, the growing number of stakeholders, and the corresponding continuous emergence of new domain-specific modeling abstractions has led to significantly higher cognitive load on modelers. There is an urgent need to provide modelers with better, more Intelligent Modeling Assistants (IMAs). An important factor to consider is the ability to assess and compare, to learn from existing and inform future IMAs, while potentially combining them. Recently, a conceptual Reference Framework for Intelligent Modeling Assistance (RF-IMA) was proposed. RF-IMA defines the main required components and high-level properties of IMAs. In this paper, we present a detailed, level-wise definition for the properties of RF-IMA to enable a better understanding, comparison, and selection of existing and future IMAs. The proposed levels are a first step towards a comprehensive assessment grid for intelligent modeling assistance. For an initial validation of the proposed levels, we assess the existing landscape of intelligent modeling assistance and three future scenarios of intelligent modeling assistance against these levels.","Artificial intelligence, Assessment levels, Feedback, Integrated development environment, Intelligent modeling assistance, Model-based software engineering",,,,,,,,"<None, {eid: 85096770105}>, <None, {eid: 85096745967}>, <None, {eid: 85096770189}>, <Harmonization and categorization of metrics and criteria for evaluation of recommender systems in healthcare from dual perspectives, {eid: 85074342440}>, <Domore-A recommender system for domain modeling, {eid: 85052025506}>, <Development of a tool for measuring and analyzing computer user satisfaction, {eid: 0020749247}>, <Feature extraction approaches from natural language requirements for reuse in software product lines: A systematic literature review, {eid: 84930795477}>, <Multi-step learning and adaptive search for learning complex model transformations from examples, {eid: 84975316777}>, <The probability of timeliness of a fully connected exchange in a redundant real-time communication system, {eid: 85088584840}>, <Grand challenges in model-driven engineering: An analysis of the state of the research, {eid: 85077634676}>, <Expressing confidence in models and in model transformation elements, {eid: 85056905500}>, <An lstm-based neural network architecture for model transformations, {eid: 85076107429}>, <Belief uncertainty in software models, {eid: 85074883882}>, <TEAN: Timeliness enhanced attention network for session-based recommendation, {eid: 85087275814}>, <A hitchhikers guide to model-driven engineering for data-centric systems, {eid: 85085080142}>, <An UML class recommender system for software design, {eid: 85022041165}>, <Timeliness Measurement Model: A mathematical approach for measuring the timeliness of handheld application usage, {eid: 85018337831}>, <Process model generation from natural language text, {eid: 79960335582}>, <Non-human modelers: Challenges and roadmap for reusable self-explanation, {eid: 85042680029}>, <The next evolution of mde: A seamless integration of machine learning into domain modeling, {eid: 85040582253}>, <Class diagram extraction from textual requirements using natural language processing (nlp) techniques, {eid: 77955200725}>, <Towards model-driven sustainability evaluation, {eid: 85080891648}>, <Recommender system for model driven software development, {eid: 85030768868}>, <Defining quality aspects for conceptual models, {eid: 2442599587}>, <Pattern-based auto-completion of uml modeling activities, {eid: 84908611338}>, <None, {eid: 0004276920}>, <Understanding quality in conceptual modeling, {eid: 0028396177}>, <None, {eid: 84921662598}>, <Expert voice: Opportunities in intelligent modeling assistance, {eid: 85088027792}>, <Humans and automation: Use, misuse, disuse, abuse, {eid: 0031171736}>, <Towards automating the synthesis of chatbots for conversational model query, {eid: 85088020707}>, <Collaborative modeling and group decision making using chatbots in social networks, {eid: 85049777217}>, <How far you can get using machine learning black-boxes, {eid: 79952852833}>, <None, {eid: 84968875300}>, <Towards domain-specific model editors with automatic model completion, {eid: 76349083874}>, <Improving the timeliness of bluetooth low energy in dynamic rf environments, {eid: 85096807803}>, <Ucda: Use case driven development assistant tool for class model generation, {eid: 59849121184}>, <None, {eid: 78649516976}>, <The state of practice in model-driven engineering, {eid: 84899687758}>, <Empirical validation of website timeliness measures, {eid: 34248564908}>",,,"Association for Computing Machinery, Inc",,,2020-10-16,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85096779067,False,False,False,True
143,,"Colantoni A. (AUID: 57220071865), Berardinelli L. (AUID: 23466256500), Garmendia A. (AUID: 55891368600), BrÃ¤uer J. (AUID: 57191492619)",,Towards Blended Modeling and Simulation of DevOps Processes: the Keptn Case Study,2022,"25th ACM/IEEE International Conference on Model Driven Engineering Languages and Systems, MODELS 2022",,,,,,,0,10.1145/3550356.3561597,https://www.doi.org/10.1145/3550356.3561597,"<Johannes Kepler University>, <Dynatrace Gmbh>",,"Â© 2022 Owner/Author.DevOps and Model Driven Engineering (MDE) provide differently skilled IT stakeholders with methodologies and tools for organizing and automating continuous software engineering activities and using models as key engineering artifacts. JSON is a popular data format, and JSON Schema provides a general-purpose schema language for JSON. This paper presents our work in progress on blended modeling and scenario simulation of continuous delivery pipelines as executable JSON-based models. For this purpose, we show a case study based on Keptn, an open source tool for DevOps automation of cloud-native applications, and its language, Shipyard, a JSON-based process language for continuous delivery pipeline specification.","blended modeling, DevOps, MDE, simulation",,,,,,,,"<2019. DECIDE: An Extended DevOps Framework for Multi-cloud Applications, {eid: 85074354336}>, <2021 DevOps Workflow Verification and Duration Prediction Using Non-Markovian Stochastic Petri Nets, {eid: 85097025889}>, <None, {eid: 84986537458}>, <2005 on the unification power of models, {eid: 19644394108}>, <None, {eid: 85142929996}>, <None, {eid: 85142920079}>, <DevOps for models and modeling DevOps, {eid: 85142938265}>, <2020. Towards Modeling Framework for DevOps: Requirements Derived from Industry Use Case, {eid: 85079101956}>, <None, {eid: 84878326137}>, <2019 Contents for a Model-Based Software Engineering Body of Knowledge, {eid: 85069478287}>, <None, {eid: 85075598452}>, <2019. Blended Modelling-What, Why and How, {eid: 85075926513}>, <2019. Blended Modelling-What, Why and How, {eid: 85075926513}>, <Cloud Native Computing Foundation, {eid: 85142919928}>, <2020. DevOpsML: Towards modeling DevOps processes and platforms, {eid: 85096806448}>, <2021. Leveraging Model-Driven Technologies for JSON Artefacts: The Shipyard Case Study, {eid: 85123405038}>, <2021. Towards Continuous Consistency Checking of DevOps Artefacts, {eid: 85124002916}>, <Blended modeling in commercial and open-source model-driven software engineering tools: A systematic study, {eid: 85130820987}>, <None, {eid: 85142919651}>, <None, {eid: 85142928816}>, <None, {eid: 85142934575}>, <Modern continuous delivery with Keptn-Talk at Lowcomote Heterogeneous Low-Code Engineering in Industry, {eid: 85142925275}>, <Eclipse Modeling Framework, {eid: 85142937891}>, <None, {eid: 85142929476}>, <None, {eid: 85142921597}>, <Eclipse Foundation, {eid: 85142930314}>, <Eclipse Foundation, {eid: 85142938538}>, <Eclipse Foundation, {eid: 85142938538}>, <2021. AIDOaRt: AI-Augmented Automation for DevOps, a Model-based Framework for Continuous Development in Cyber-Physical Systems, {eid: 85119884136}>, <2019. Stepwise Adoption of Continuous Delivery in Model-Driven Engineering, {eid: 85061101819}>, <The GEMOC Initiative on the Globalization of Modeling Languages, {eid: 85142934512}>, <Dynatrace Gmbh, {eid: 85142925137}>, <2018. MELODIC: Utility Based Cross Cloud Deployment Optimisation, {eid: 85056262683}>, <None, {eid: 85022320758}>, <None, {eid: 85142935743}>, <None, {eid: 85142924888}>, <None, {eid: 85142925543}>, <Technological spaces: An Initial Appraisal, {eid: 18144421716}>, <None, {eid: 85037105274}>, <2019. What Are Real JSON Schemas Like?, {eid: 85077693677}>, <2021 the Development of a Simulation Model for Assessing the CI/CD Pipeline Quality in the Development of Information Systems Based on a Multi-Agent Approach, {eid: 85142937873}>, <Melodic Homepage, {eid: 85142919912}>, <JKU Institute of Business Informatics, {eid: 85142924828}>, <Software & Systems Process Engineering Metamodel, {eid: 85142937550}>, <Business Process Model and Notation, {eid: 85142930777}>, <Unified Modeling Language, {eid: 85142928591}>, <2016. Foundations of JSON Schema, {eid: 85021210851}>, <JSON Schema Implementations, {eid: 85142926104}>, <JSON Schema Test Suite, {eid: 85142931174}>, <Road to a reactive and incremental model transformation platform: Three generations of the VIATRA framework, {eid: 84966700829}>, <Weaveworks, {eid: 85142920890}>",,,"Association for Computing Machinery, Inc",,,2022-10-23,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85142919813,True,True,True,False
144,,"Colantoni A. (AUID: 57220071865), Horvath B. (AUID: 57201589833), Berardinelli L. (AUID: 23466256500), Wimmer M. (AUID: 14030698000), Horvath A. (AUID: 25651293600)",,Towards Continuous Consistency Checking of DevOps Artefacts,2021,"24th International Conference on Model-Driven Engineering Languages and Systems, MODELS-C 2021",,,,,,,2,10.1109/MODELS-C53483.2021.00069,https://www.doi.org/10.1109/MODELS-C53483.2021.00069,"<Johannes Kepler University>, <IncQuery Labs CPlc.>",,"Â© 2021 IEEE.DevOps tools are often scattered over a multitude of technologies, and thus, their integration is a challenging endeavour. The existing DevOps integration platforms, e.g., Keptn, often employ a family of languages for this purpose. However, as we have learnt from UML, SysML, and many others, a family of languages requires inter-model constraints to be checked in order to guarantee a high consistency between the different artefacts.In this work-in-progress paper, we propose a Model-Driven Engineering (MDE) approach for the continuous consistency checking of DevOps artefacts. First, we explicitly represent each artefact as a model, second, we establish links across them to set a navigable network of model elements; and third, we enable MDE services on top of this network.We envision the possibility of using GitOps to pull the DevOps artefacts, executing services for checking consistency and performing model repairs, uploading the changes to the DevOps tools, and finally pushing the artefacts to Git, thus resulting in a continuous consistency checking process in practice.","consistency management, DevOps, MDE",,,,,,,,"<What is devops? A systematic mapping study on definitions and practices, {eid: 85019409567}>, <None, {eid: 85124040680}>, <None, {eid: 85124037281}>, <None, {eid: 84878326137}>, <Towards modeling framework for devops: Requirements derived from industry use case, {eid: 85079101956}>, <Devopsml: Towards modeling devops processes and platforms, {eid: 85096806448}>, <Leveraging model-driven technologies for json artefacts: The shipyard case study, {eid: 85123405038}>, <None, {eid: 85124024849}>, <None, {eid: 85106407192}>, <None, {eid: 85124023624}>, <None, {eid: 74549142762}>, <None, {eid: 85124021068}>, <Road to a reactive and incremental model transformation platform: Three generations of the viatra framework, {eid: 84966700829}>, <A graph query language for emf models, {eid: 79960237287}>, <Emf-incquery: An integrated development environment for live model queries, {eid: 84916891711}>, <Viatra 3: A reactive model transformation platform, {eid: 84952659402}>, <Understanding mde projects: Megamodels to the rescue for architecture recovery, {eid: 85069528266}>, <Model driven engineering: An emerging technical space, {eid: 84858782885}>, <None, {eid: 85124022619}>, <None, {eid: 85124008712}>, <Model-driven orchestration for cloud resources, {eid: 85072317965}>, <Conceptual model interoperability: A metamodel-driven approach, {eid: 84905283562}>, <Managing inter-model inconsistencies in model-based systems engineering: Application in automated production systems engineering, {eid: 85063760990}>, <Specification of graph translators with triple graph grammars, {eid: 84947918251}>, <Correctness of incremental model synchronization with triple graph grammars, {eid: 84958529363}>, <From model transformation to incremental bidirectional model synchronization, {eid: 57349131044}>, <Lightweight consistency checking for agile model-based development in practice, {eid: 85083182262}>, <Querydriven soft traceability links for models, {eid: 84908056753}>, <Incremental parsing, {eid: 0007435814}>, <Classification of concrete textual syntax mapping approaches, {eid: 70349852882}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2021-10-10,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85124002916,True,True,False,False
145,,"Nehls H. (AUID: 57212105961), Ratiu D. (AUID: 22235269100)",,Towards continuous delivery for domain experts: Using MDE to integrate non-programmers into a software delivery pipeline,2019,"22nd ACM/IEEE International Conference on Model Driven Engineering Languages and Systems Companion, MODELS-C 2019",,,,,,,2,10.1109/MODELS-C.2019.00091,https://www.doi.org/10.1109/MODELS-C.2019.00091,"<Siemens Healthineers>, <Siemens Corporate Technology>",,"Â© 2019 IEEE.Modern computed tomography (CT) scanners are complex, software-intensive systems whose correct functioning is governed by over 100 parameters which depend on the concrete hardware configurations and on the addressed clinical use-cases. To tame the intrinsic complexity of the parameters configurations, over the last four years, Siemens Healthineers (SHS) have been developing and deploying a set of domain specific languages and tooling based on Jetbrains' Meta-Programming System. In this paper, we report on the challenges and experiences we made while building two delivery pipelines. At meta-level, we built a continuous delivery pipeline such that new versions of our domain specific modeling tool can be deployed continuously based on the feedback of domain experts. At model-level we have integrated the developed domain-specific tool in the continuous delivery pipeline for the computed tomography software and thereby bring the Continuous Delivery mind-set with advantages and challenges to domain experts who are working traditionally 'outside' of the software development.","Continuous delivery, ""Jetbrains MPS"", Model-driven engineering",,,,,,,,"<Taming the software development complexity with domain specific languages, {eid: 85075930625}>, <Automated testing of DSL implementations-experiences from building mbeddr, {eid: 85031933140}>, <A qualitative study of devops usage in practice, {eid: 85021358087}>, <Devops in regulated software development: Case medical devices, {eid: 85026751442}>, <Transition towards continuous delivery in the healthcare domain, {eid: 85072122314}>, <None, {eid: 85075945181}>, <Combining the continuous integration practice and the model-driven engineering approach, {eid: 84981165314}>, <Impediments to introducing continuous integration for model-based development in industry, {eid: 85075941988}>, <Stepwise adoption of continuous delivery in model-driven engineering, {eid: 85061101819}>, <Lessons learned from developing mbeddr: A case study in language engineering with mps, {eid: 85062054290}>, <Using C language extensions for developing embedded software: A case study, {eid: 84958628004}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2019-09-15,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85075924980,True,False,False,False
146,,"Bergelin J. (AUID: 57713657400), Cicchetti A. (AUID: 22733357800)",,Towards Continuous Modelling to Enable DevOps: A Preliminary Study with Practitioners,2022,"25th ACM/IEEE International Conference on Model Driven Engineering Languages and Systems, MODELS 2022",,,,,,,1,10.1145/3550356.3561582,https://www.doi.org/10.1145/3550356.3561582,<MÃ¤lardalen University>,,"Â© 2022 Owner/Author.Model-based methods and techniques continuously evolve to meet the increasing challenges of modern-day technical landscapes. Parallel to Model-based methods, other paradigms are similarly maturing and being integrated, and one such paradigm is DevOps. Model-based methods and DevOps are perceived to provide benefits when viewed in isolation. Recently, there has been an increased interest in matching the two paradigms, with various proposals and early adoption results. However, little focus is put on the practitioners' view. In this paper, we propose a methodology that aims to utilise Model-driven engineering and DevOps practices in conjunction. Together with the methodology, we present an early evaluation of it from a practitioner's perspective. In particular, we study a large and long-running student project aiming to build a solar vehicle, by presenting the current integration and potential future directions. In this paper we limit the observation to the development phase. Early feedback from the case study indicates significant benefits for several identified project pain points, and it's expected that more benefits will emerge when more advanced DevOps aspects are integrated with model-based methods, and the project matures.","DevOps, model-based engineering, practitioners, simulink",,,,,,,,"<User Experience for Model-Driven Engineering: Challenges and Future Directions, {eid: 85040569509}>, <Early validation of heterogeneous battery systems in the railway domain, {eid: 85130823867}>, <Towards modeling framework for devops: Requirements derived from industry use case, {eid: 85079101956}>, <Model-driven software engineering in practice, {eid: 84878326137}>, <Grand challenges in model-driven engineering: An analysis of the state of the research, {eid: 85077634676}>, <Experiences of teaching model-driven engineering in a software design course, {eid: 85026650015}>, <DevopsML: Towards modeling devops processes and platforms, {eid: 85096806448}>, <Towards a model-based devops for cyber-physical systems, {eid: 85096956543}>, <Systems engineering challenges and MBSE opportunities for automotive system design, {eid: 85044377052}>, <Challenges and best practices in industry-Academia collaborations in software engineering: A systematic literature review, {eid: 84980410074}>, <Descriptive vs Prescriptive Models in Industry, {eid: 85008425440}>, <What is DevOps A systematic mapping study on definitions and practices, {eid: 85019409567}>, <Consistency management in industrial continuous model-based development settings: A reality check, {eid: 85142933274}>, <Adopting DevOps in the real world: A theory, a model, and a case study, {eid: 85070228584}>, <The systems engineering DevOps lemniscate and model-based system operations, {eid: 85130822811}>, <MDE adoption in industry: Challenges and success criteria, {eid: 67650136136}>, <DevOps adoption benefits and challenges in practice: A case study, {eid: 84998953411}>, <Continuous integration, delivery and deployment: A systematic review on approaches, tools, challenges and practices, {eid: 85019140530}>, <Adopting MBSE in construction equipment industry: An experience report, {eid: 85066815769}>, <Using DevOps toolchains in Agile model-driven engineering, {eid: 85142922086}>, <INCOSE systems engineering handbook version 4: Updating the reference for practitioners, {eid: 85166328746}>, <Industrial adoption of model-driven engineering: Are the tools really the problem, {eid: 84886821083}>",,,"Association for Computing Machinery, Inc",,,2022-10-23,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85142926746,True,True,False,False
147,,"Franch X. (AUID: 6603081752), Oriol M. (AUID: 53880191200), Seyff N. (AUID: 6507025730), Fricker S. (AUID: 24477288600), Groher I. (AUID: 17433896500), Vierhauser M. (AUID: 36661447400), Wimmer M. (AUID: 14030698000)",,Towards Integrating Data-Driven Requirements Engineering into the Software Development Process: A Vision Paper,2020,"26th International Working Conference on Requirements Engineering: Foundation for Software Quality, REFSQ 2020",,,,,,,6,10.1007/978-3-030-44429-7_10,https://www.doi.org/10.1007/978-3-030-44429-7_10,"<Universitat PolitÃ¨cnica de Catalunya>, <University of Applied Sciences and Arts Northwestern Switzerland FHNW>, <Johannes Kepler University Linz & CDL-MINT>",,"Â© 2020, Springer Nature Switzerland AG.[Context and motivation] Modern software engineering processes have shifted from traditional upfront requirements engineering (RE) to a more continuous way of conducting RE, particularly including data-driven approaches. [Question/problem] However, current research on data-driven RE focuses more on leveraging certain techniques such as natural language processing or machine learning than on making the concept fit for facilitating its use in the entire software development process. [Principal ideas/results] In this paper, we propose a research agenda composed of six distinct research directions. These include a data-driven RE infrastructure, embracing data heterogeneity, context-aware adaptation, data analysis and decision support, privacy and confidentiality, and finally process integration. Each of these directions addresses challenges that impede the broader use of data-driven RE. [Contribution] For researchers, our research agenda provides topics relevant to investigate. For practitioners, overcoming the underlying challenges with the help of the proposed research will allow to adopt a data-driven RE approach and facilitate its seamless integration into modern software engineering. For users, the proposed research will enable the transparency, control, and security needed to trust software systems and software providers.","Data-driven requirements engineering, Feedback gathering, Model-driven Engineering, Requirements monitoring",,,,,,,,"<None, {eid: 84878326137}>, <3LConOnt: A three-level ontology for context modelling in context-aware computing, {eid: 85027518520}>, <None, {eid: 85064059329}>, <Data science: technologies for better software, {eid: 85074196089}>, <How can quality awareness support rapid software development? â a research preview, {eid: 85013935704}>, <The brave new world of design requirements, {eid: 79958086098}>, <How do practitioners capture and utilize user feedback during continuous software engineering?, {eid: 85076916687}>, <Raising the odds of success: The current state of experimentation in product development, {eid: 84964692724}>, <Toward data-driven requirements engineering, {eid: 84971524522}>, <Data-driven requirements engineering: An update, {eid: 85072125118}>, <Continuously assessing and improving software quality with software analytics tools: A case study, {eid: 85067226210}>, <FAME: Supporting continuous requirements elicitation by combining user feedback and monitoring, {eid: 85056819919}>, <None, {eid: 85083975397}>, <The interplay of design and runtime traceability for non-functional requirements, {eid: 85073000295}>, <Ubiquitous requirements engineering: A paradigm shift that affects everyone, {eid: 85062173979}>, <None, {eid: 85064051708}>",,,Springer,,,2020-03-24,,,,,,,eng,,Book Series,,,,2-s2.0-85083963946,True,False,True,False
148,,"Ferry N. (AUID: 35291975700), Nguyen P.H. (AUID: 55646510700)",,Towards model-based continuous deployment of secure IoT systems,2019,"22nd ACM/IEEE International Conference on Model Driven Engineering Languages and Systems Companion, MODELS-C 2019",,,,,,,14,10.1109/MODELS-C.2019.00093,https://www.doi.org/10.1109/MODELS-C.2019.00093,<SINTEF>,,"Â© 2019 IEEE.Software development and delivery of IoT systems would greatly benefit from DevOps as their requirements for reliability, quality, security and privacy are paramount. The ability to continuously evolve these systems to adapt to their environment is decisive to ensure and increase their trustworthiness (including security and privacy) and quality. In particular, there is a need for supporting the continuous deployment of secure IoT systems over IoT, Edge, and Cloud infrastructures. However, our recent survey shows a lack of specific support for deploying security and privacy mechanisms as part of the system. This position paper reports on an on-going extension of the modelling language and models@runtime implementation of the Generation and Deployment of Smart IoT Systems (GeneSIS) tool for supporting continuous deployment of IoT security and privacy mechanisms on the Edge. In particular, we present our early design of the extended version of GeneSIS with the new concepts of port, security capability, and privacy capability.","Deployment, DevOps, IoT, Model-Driven Engineering, Model@runtime",,,,,,,,"<None, {eid: 85067431815}>, <Developing iot applications in the fog: A distributed dataflow approach, {eid: 84962284412}>, <Foggy: A framework for continuous automated iot application deployment in fog computing, {eid: 85032296582}>, <Advances in deployment and orchestration approaches for IoT-a systematic review, {eid: 85072691780}>, <Genesis: Continuous orchestration and deployment of smart iot systems, {eid: 85072692587}>, <Francois raynaud on devsecops, {eid: 85030562944}>, <A systematic review of cloud modeling languages, {eid: 85042469266}>, <Models@run. time, {eid: 85008066028}>, <Model-based, platform-independent logging for heterogeneous targets, {eid: 85075941811}>, <Enact: Development, operation, and quality assurance of trustworthy smart iot systems, {eid: 85061085691}>, <None, {eid: 85027556426}>, <Glue. Things: A mashup platform for wiring the internet of things with the internet of services, {eid: 84984986383}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2019-09-15,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85075910586,False,True,False,False
149,,"Bordeleau F. (AUID: 13106215800), Cabot J. (AUID: 8963493600), Dingel J. (AUID: 6603459509), Rabil B.S. (AUID: 57501749300), Renaud P. (AUID: 57214781717)",,Towards Modeling Framework for DevOps: Requirements Derived from Industry Use Case,2019,"2nd International Workshop on Software Engineering Aspects of Continuous Development and New Paradigms of Software Production and Deployment, DEVOPS 2019",,,,,,,7,10.1007/978-3-030-39306-9_10,https://www.doi.org/10.1007/978-3-030-39306-9_10,"<Ãcole de technologie supÃ©rieure (ETS), UniversitÃ© du QuÃ©bec>, <ICREA â Open University of Catalonia (OUC)>, <Queenâs University>, <Kaloom>",,"Â© 2020, Springer Nature Switzerland AG.To succeed with the development, deployment, and operation of the new generation of complex systems, organizations need the agility to adapt to constantly evolving environments. In this context, DevOps has emerged as an evolution of the agile approaches. It focuses on optimizing the flow of activities involved in the creation of end-user value, from idea to deployed functionality and operating systems. However, in spite of its popularity, DevOps still lacks proper engineering frameworks to support continuous improvement. One of our key objectives is to contribute to the development of a DevOps engineering framework composed of process, methods, and tools. A core part of this framework relates to the modeling of the different aspects of the DevOps system. To better understand the requirements of modeling in a DevOps context, we focus on a Product Build use case provided by an industry partner.","DevOps, Modeling, Process",,,,,,,,"<Model-driven continuous deployment for quality devOps, {eid: 85054816400}>, <None, {eid: 85079097128}>, <Modeling DevOps deployment choices using process architecture design dimensions, {eid: 84952662031}>, <Models@run.Time: A guided tour of the state of the art and research challenges, {eid: 85059780955}>, <A systematic review of cloud modeling languages, {eid: 85042469266}>, <Model-Driven Software Engineering in Practice, Second Edition, {eid: 84878326137}>, <A feature-based survey of model view approaches, {eid: 85029537056}>, <None, {eid: 85079094629}>, <ENACT: Development, operation, and quality assurance of trustworthy smart IoT systems, {eid: 85061085691}>, <Stepwise adoption of continuous delivery in model-driven engineering, {eid: 85061101819}>, <Combining the continuous integration practice and the model-driven engineering approach, {eid: 84981165314}>, <None, {eid: 85079086512}>, <None, {eid: 85079097632}>, <None, {eid: 85079090788}>, <None, {eid: 85079098417}>, <The DevOps Handbook: How to Create World-Class Agility, Reliability, and Security in Technology Organizations, {eid: 85056895078}>, <None, {eid: 85079103807}>, <None, {eid: 85079098833}>, <None, {eid: 85079095973}>, <None, {eid: 85079087892}>, <Industry application of continuous integration modeling: A multiple-case study, {eid: 85006317122}>, <None, {eid: 85079098316}>, <The role of models and megamodels at runtime, {eid: 79957665127}>, <Streamlining devops automation for cloud applications using TOSCA as standardized metamodel, {eid: 84958740530}>",,,Springer,,,2019-05-06,,,,,,,eng,,Book Series,,,,2-s2.0-85079101956,False,True,False,False
150,,"Lapointe-Boisvert A. (AUID: 57439330100), Mosser S. (AUID: 25654364800), Trudel S. (AUID: 12645219300)",,Towards Modelling Acceptance Tests as a Support for Software Measurement,2021,"24th International Conference on Model-Driven Engineering Languages and Systems, MODELS-C 2021",,,,,,,2,10.1109/MODELS-C53483.2021.00129,https://www.doi.org/10.1109/MODELS-C53483.2021.00129,<UniversitÃ© Du QuÃ©bec Ã MontrÃ©al>,,"Â© 2021 IEEE.The DevOps paradigm emphasizes the need for a measurable feedback loop, starting from requirements and going as far as deployment in an automated way. In this context, a modelling challenge is to leverage the existing requirement engineering approaches to support measurements. Unfortunately, measurement methods are slow and costly by definition, preventing precisely measured requirements from being used in the DevOps loop. As a result, developers have to deal with grossly estimated elements, e.g., using story points promoted by agile methods. Thus, it is not possible to provide better support for the development team. We envision taking advantage of the artifacts that already exist in a DevOps context to provide better support for requirements measurement, making it available in an automated context such as the DevOps one. This paper focuses on the automated analysis of acceptance tests (e.g., expressed using the Gherkin language) to support functional measurement automation in a DevOps context. This proposition is illustrated by a scenario coming from an industrial partner, supporting the identification of four research challenges to be tackled.","acceptance tests, measurements, modelling",,,,,,,,"<None, {eid: 85018529770}>, <None, {eid: 34247492520}>, <Requirements engineering quality revealed through functional size measurement: An empirical study in an agile context, {eid: 84929614339}>, <Reconciling requirements and continuous integration in an agile context, {eid: 85056905155}>, <Agile requirements engineering: From user stories to software architectures, {eid: 85123214884}>, <Detecting terminological ambiguity in user stories: Tool and experimentation, {eid: 85059318780}>, <Requirements engineering in the devops era, {eid: 85123206977}>, <Extended planning poker: A proposed model, {eid: 85097284427}>, <Effort estimation in agile software development: A systematic literature review, {eid: 84905666395}>, <Effort estimation with story points and cosmic function points-An industry case study, {eid: 85038356065}>, <The value of software sizing, {eid: 80051669402}>, <Measurement of functional size in conceptual models: A survey of measurement procedures based on cosmic, {eid: 58049096994}>, <Survey on methods for automated measurement of the software scale, {eid: 85081254723}>, <Cosmic functional size automation of Java web applications using the spring mvc framework, {eid: 85124044239}>, <Towards universal cosmic size measurement automation, {eid: 85098164029}>, <None, {eid: 84856142970}>, <Validating a size measure for effort estimation in model-driven web development, {eid: 77958152177}>, <Deep learning model for end-To-end approximation of cosmic functional size based on usecase names, {eid: 85082556990}>, <A comparison study of software testing activities in agile methods, {eid: 85123978606}>, <Automated acceptance tests as software requirements: An experiment to compare the applicability of fit tables and gherkin language, {eid: 85048046567}>, <A study of the characteristics of behaviour driven development, {eid: 82955178171}>, <Impacts of data uniformity in the reuse of acceptance test glue code, {eid: 85071378445}>, <Specmate: Automated creation of test cases from acceptance criteria, {eid: 85091594998}>, <None, {eid: 85123987728}>, <None, {eid: 85124000924}>, <Using scrum together with uml models: A collaborative university-industry r&d software project, {eid: 84978224440}>, <A commutative model composition operator to support software adaptation, {eid: 84864072985}>, <None, {eid: 85087589980}>, <Pycg: Practical call graph generation in python, {eid: 85115710035}>, <Clever: Combining code metrics with clone detection for just-in-Time fault prevention and resolution in large industrial projects, {eid: 85051650020}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2021-10-10,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85124032258,False,True,False,False
151,,"Bruneliere H. (AUID: 27067480800), De Kerchove F.M. (AUID: 55646340800), Daniel G. (AUID: 56503216700), Cabot J. (AUID: 8963493600)",,Towards scalable model views on heterogeneous model resources,2018,"21st ACM/IEEE International Conference on Model Driven Engineering Languages and Systems, MODELS 2018",,,,,,,10,10.1145/3239372.3239408,https://www.doi.org/10.1145/3239372.3239408,"<IMT Atlantique - LS2N (CNRS) &, ARMINES>, <IN3, Universitat Oberta de Catalunya (UOC)>, <ICREA and Universitat Oberta de Catalunya (UOC)>",,"Â© 2018 Association for Computing Machinery.When engineering complex systems, models are used to represent various systems aspects. These models are often heterogeneous in terms of modeling language, provenance, number or scale. They can be notably managed by different persistence frameworks adapted to their nature. As a result, the information relevant to engineers is usually split into several interrelated models. To be useful in practice, these models need to be integrated together to provide global views over the system under study. Model view approaches have been proposed to tackle such an issue. They provide an unification mechanism to combine and query heterogeneous models in a transparent way. These views usually target specific engineering tasks such as system design, monitoring, evolution, etc. In our present context, the MegaM@Rt2 industrially-supported European initiative defines a set of large-scale use cases where model views can be beneficial for tracing runtime and design time data. However, existing model view solutions mostly rely on in-memory constructs and low-level modeling APIs that have not been designed to scale in the context of large models stored in different kinds of sources. This paper presents the current status of our work towards a general solution to efficiently support scalable model views on heterogeneous model resources. It describes our integration approach between model view and model persistence frameworks. This notably implies the refinement of the view framework for the construction of large views from multiple model storage solutions. This also requires to study how parts of queries can be computed on the contributing models rather than on the view. Our solution has been benchmarked on a practical large-scale use case from the MegaM@Rt2 project, implementing a runtime - design time feedback loop. The corresponding EMF-based tooling support and modeling resources are fully available online.","Database, Design Time, Modeling, Persistence, Runtime, Scalability, Views",,,,,,,,"<The Megam@rt2 ECSEL project: Megamodelling at runtime - Scalable model-based framework for continuous development and runtime validation of complex systems, {eid: 85048178927}>, <Hawk: Towards a scalable model indexing architecture, {eid: 84904444713}>, <Incremental Evaluation of Model Queries over EMF models, {eid: 78349303110}>, <A Feature-based Survey of Model View Approaches, {eid: 85066350223}>, <Modisco: A model driven reverse engineering framework, {eid: 84900002114}>, <EMF views: A view mechanism for integrating heterogeneous models, {eid: 84951747182}>, <View-based Model-driven Software Development with ModelJoin, {eid: 84901557393}>, <How can we implement a Multidimensional Data Warehouse using NoSQL?, {eid: 84958972862}>, <Gremlin-ATL: A scalable model transformation framework, {eid: 85041446404}>, <NeoEMF: A Multi-database Model Persistence Framework for Very Large Models, {eid: 85028586965}>, <MogwaÃ¯: A framework to handle complex queries on large models, {eid: 84987607022}>, <Query-driven incremental synchronization of view models, {eid: 84907072374}>, <Modeling cyber-physical systems, {eid: 84155172767}>, <None, {eid: 85056861122}>, <An eclipse modelling framework alternative to meet the models@runtime requirements, {eid: 84867650983}>, <Addressing Modularity for Heterogeneous Multi-model Systems using Model Federation, {eid: 84965060048}>, <Selection of views to materialize in a data warehouse, {eid: 84948964173}>, <Model-driven engineering practices in industry: Social, organizational and managerial factors that lead to success or failure, {eid: 84900499307}>, <ATL: A model transformation tool, {eid: 45849085734}>, <CloudMDSQL: Querying heterogeneous cloud data stores with a common language, {eid: 84944603835}>, <Eclipse development tools for epsilon, {eid: 36049004338}>, <Merging models with the epsilon merging language (EML), {eid: 33750362774}>, <A research roadmap towards achieving scalability in model driven engineering, {eid: 84880430801}>, <Constructing and navigating noninvasive model decorations, {eid: 77954752082}>, <None, {eid: 85056869322}>, <None, {eid: 85056824922}>, <None, {eid: 85049685176}>, <None, {eid: 74549142762}>, <None, {eid: 85048809213}>, <EMF-incquery: An integrated development environment for live model queries, {eid: 84916891711}>, <Road to a reactive and incremental model transformation platform: Three generations of the Viatra framework, {eid: 84966700829}>, <An efficient computation strategy for allinstances(), {eid: 84938600227}>, <The state of practice in model-driven engineering, {eid: 84899687758}>, <Deterministic lazy mutable OCL collections, {eid: 85042681746}>",,,"Association for Computing Machinery, Inc",,,2018-10-14,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85056878573,True,True,False,False
152,,"Ailane M.T. (AUID: 57873696600), Aniculaesei A. (AUID: 54917186100), Knieke C. (AUID: 24802237700), Rausch A. (AUID: 8586021000), Sholichin F. (AUID: 57210914519)",,Towards Specification Completion for Systems with Emergent Behavior based on DevOps,2022,"2022 International Conference on Computational Science and Computational Intelligence, CSCI 2022",,,,,,,1,10.1109/CSCI58124.2022.00330,https://www.doi.org/10.1109/CSCI58124.2022.00330,"<Clausthal University of Technology, Institute for Software and Systems Engineering>",,"Â© 2022 IEEE.Software systems may experience multiple emergent behaviors during their operation time. These emergent system behaviors occur when system engineers develop their system under the closed-world assumption, but this assumption is not met during its operation. This means that system engineers work on the basis that they have complete knowledge of the system and its environment during its design, when the system specification that has been created is actually incomplete. In this paper, an observation of an emergent behavior is considered to be a solid proof that the system model specification is still incomplete. A conceptual framework is proposed to harness the emergent behavior and complete the system specification that is provided during the its design. The framework consists of two parts, system development and system operations. It is built on a model-driven approach in order to provide a clear definition of the emergent behavior and a concrete development scheme. The framework exploits the DevOps paradigm as a successful paradigm to achieve the ultimate goal of developing complete system models through the continuous specification completion based on the observed emergent behavior. The goal of this framework is to help develop high-quality and reliable emergent systems based on the specification derived from the emergent behavior that occurred at run time.","Complex systems, DevOps, For-mal methods, Software development process, Software evolution",,,,,,,,"<Model-driven software engineering in practice, {eid: 84878326137}>, <Introduction to model checking, {eid: 85054044441}>, <The agile manifesto, {eid: 2342509886}>, <10+ deploys per day: Dev and ops cooperation at flickr, {eid: 84889710019}>, <A survey of devops concepts and challenges, {eid: 85075608026}>, <How to extend the abstraction refinement model for systems with emergent behavior, {eid: 85171980959}>, <Towards a model-based devops for cyberphysical systems, {eid: 85096956543}>, <None, {eid: 85169581544}>, <None, {eid: 85148103544}>, <Explorations in cyber-physical systems education, {eid: 85129213195}>, <Abstraction refinement: A model of software evolution, {eid: 84987195843}>, <Specminer: Heuristicbased mining of service behavioral models from interaction traces, {eid: 85097190698}>, <General ltl specification mining (t), {eid: 84963856546}>, <Mining program workflow from interleaved logs, {eid: 85172026613}>, <On the synthesis of finite-state machines from samples of their behavior, {eid: 84938806379}>, <Deep specification mining, {eid: 85051560408}>, <Dynamic specification mining based on transformer, {eid: 85135016391}>, <General past-time linear temporal logic specification mining, {eid: 85131808183}>, <Automated generation of requirements-based test cases for an adaptive cruise control system, {eid: 85051046296}>, <Nusmv: a new symbolic model checker, {eid: 84896869660}>, <Mesa: an agent-based modeling framework, {eid: 85033460993}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2022-12-14,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85171982715,True,True,False,True
153,,"Philippe J. (AUID: 57196243708), Coullon H. (AUID: 36195502500), Tisi M. (AUID: 23398292800), SunyÃ© G. (AUID: 8634149500)",,Towards transparent combination of model management execution strategies for low-code development platforms,2020,"23rd ACM/IEEE International Conference on Model Driven Engineering Languages and Systems, MODELS-C 2020",,,,,,,7,10.1145/3417990.3420206,https://www.doi.org/10.1145/3417990.3420206,"<IMT Atlantique, LS2N>, <UniversitÃ© de Nantes, LS2N>",,"Â© 2020 ACM.Low-code development platforms are taking an important place in the model-driven engineering ecosystem, raising new challenges, among which transparent efficiency or scalability. Indeed, the increasing size of models leads to difficulties in interacting with them efficiently. To tackle this scalability issue, some tools are built upon specific computational strategies exploiting reactivity, or parallelism. However, their performances may vary depending on the specific nature of their usage. Choosing the most suitable computational strategy for a given usage is a difficult task which should be automated. Besides, the most efficient solutions may be obtained by the use of several strategies at the same time. This paper motivates the need for a transparent multi-strategy execution mode for model-management operations. We present an overview of the different computational strategies used in the model-driven engineering ecosystem, and use a running example to introduce the benefits of mixing strategies for performing a single computation. This example helps us present our design ideas for a multi-strategy model-management system. The code-related and DevOps challenges that emerged from this analysis are also presented.","Low-code development, Model-driven engineering, Multi-strategy, OCL, Spark",,,,,,,,"<Sampling eect on performance prediction of congurable systems: A case study, {eid: 85085937290}>, <Validity of the single processor approach to achieving large scale computing capabilities, {eid: 77955527355}>, <Towards a formal specification of multi-paradigm modelling, {eid: 85075937334}>, <Atlmr: Model transformation on mapreduce, {eid: 84964711811}>, <Distributing relational model transformation on MapReduce, {eid: 85045642775}>, <Incremental pasern matching in the viatra model transformation system, {eid: 57449114393}>, <Cache oblivious distribution sweeping, {eid: 84869191441}>, <A linda-based platform for the parallel execution of out-place model transformations, {eid: 84977275159}>, <Towards distributed model transformations with lintra, {eid: 85071652388}>, <Parallel in-place model transformations with lintra, {eid: 84938634095}>, <None, {eid: 0004101993}>, <Incremental integrity checking of UML/ OCL conceptual schemas, {eid: 68949105369}>, <Linda in context, {eid: 0024640163}>, <Madeus: A formal deployment model, {eid: 85057400219}>, <One trillion edges: Graph processing at facebook-scale, {eid: 84953851582}>, <None, {eid: 0003587629}>, <Extensibility and composability of a multi-stencil domain specific framework, {eid: 85034622453}>, <Integrated model-checking for the design of safe and e?cient distributed soware commissioning, {eid: 85076956600}>, <O.Ee SIPSim implicit parallelism model and the SkelGIS library, {eid: 84928668168}>, <MapReduce: Simplified data processing on large clusters, {eid: 85030321143}>, <None, {eid: 85096789319}>, <Graphx: Graph processing in a distributed dataflow framework, {eid: 85072954017}>, <None, {eid: 0000835369}>, <Parallel graph transformations on multicore systems, {eid: 84862193779}>, <A component concept for typed graphs with inheritance and containment structures, {eid: 78649902907}>, <Implementing graph transformations in the bulksynchronousparallel model, {eid: 84900559020}>, <Cost model for pregel on graphx, {eid: 85030158943}>, <Aroma: Automated resource allocation and configuration of mapreduce environment in the cloud, {eid: 84867709937}>, <Effi-cient atl incremental transformations, {eid: 85070475719}>, <Towards optimisation of model eries: A parallel execution approach, {eid: 85083157374}>, <Pregel: A system for largescale graph processing, {eid: 77954723629}>, <Machine learning and congurable systems: A gentle introduction, {eid: 85123042973}>, <Reactive model transformation with ATL, {eid: 84994520014}>, <Towards truly parallel model transformations : AA distributed paSern matching approach, {eid: 70449623228}>, <Pyske: Algorithmic skeletons for python, {eid: 85082121316}>, <None, {eid: 85096794650}>, <Coqtl: An internal DSL for model transformation in coq, {eid: 85048825703}>, <Lazy evaluation for ocl, {eid: 84960968946}>, <Lowcomote: Training the next generation of experts in scalable low-code engineering platforms, {eid: 85069741151}>, <Parallel execution of atl transformation rules, {eid: 84886819456}>, <Lazy execution of model-to-model transformations, {eid: 80054075977}>, <Towards systematic parallelization of graph transformations over pregel, {eid: 84961634182}>, <Runtime model validation with parallel object constraint language, {eid: 84856810808}>, <A bridging model for parallel computation, {eid: 0025467711}>, <A rete network construction algorithm for incremental pasern matching, {eid: 84884323292}>, <Deterministic lazy mutable ocl collections, {eid: 85042681746}>",,,"Association for Computing Machinery, Inc",,,2020-10-16,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85096808259,True,True,False,True
154,,"Hugues J. (AUID: 35494793200), Hristosov A. (AUID: 57220068022), Hudak J.J. (AUID: 57198392220), Yankel J. (AUID: 56811646300)",,TwinOps - DevOps meets model-based engineering and digital twins for the engineering of CPS,2020,"23rd ACM/IEEE International Conference on Model Driven Engineering Languages and Systems, MODELS-C 2020",,,,,,,12,10.1145/3417990.3421446,https://www.doi.org/10.1145/3417990.3421446,"<Carnegie Mellon University, Software Engineering Institute>",,"Â© 2020 ACM.The engineering of Cyber-Physical Systems (CPS) requires a large set of expertise to capture the system requirements and to derive a correct solution. Model-based Engineering and DevOps aim to efficiently deliver software with increased quality. Model-based Engineering relies on models as first-class artifacts to analyze, simulate, and ultimately generate parts of a system. DevOps focuses on software engineering activities, from early development to integration, and then improvement through the monitoring of the system at run-time. We claim these can be efficiently combined to improve the engineering process of CPS. In this paper, we present TwinOps, a process that unifies Model-based Engineering, Digital Twins, and DevOps practice in a uniform workflow. TwinOps illustrates how to leverage several best practices in MBE and DevOps for the engineering Cyber-Physical systems. We illustrate our contribution using a Digital Twins case study to illustrate TwinOps benefits, combining AADL and Modelica models, and an IoT platform.",,,,,,,,,"<The functional mockup interface for tool independent exchange of simulation models, {eid: 84871289819}>, <An introduction to Docker for reproducible research, with examples from the R environment, {eid: 84930642023}>, <Towards a model-based devops for cyber-physical systems, {eid: 85079099244}>, <Incremental life cycle assurance of safety-critical systems, {eid: 84994018560}>, <Co-simulation: State of the art, {eid: 85028067518}>, <None, {eid: 85075919078}>, <Integrating aadl and fmi to extend virtual integration capability, {eid: 85096807775}>, <Characterising the digital twin: A systematic literature review, {eid: 85081219520}>, <Ocarina : AAn environment for aadl models analysis and automatic code generation for high integrity applications, {eid: 69049092221}>, <A survey of devops concepts and challenges, {eid: 85075608026}>, <A formal approach to AADL model-based software engineering, {eid: 85062696253}>, <None, {eid: 85068588523}>, <Model-driven engineering: A survey supported by the unified conceptual model, {eid: 84938742646}>",,,"Association for Computing Machinery, Inc",,,2020-10-16,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85096747019,True,True,False,False
155,,"Vodyaho A. (AUID: 56406468200), Subbotin A. (AUID: 57226847043), Chervontsev M. (AUID: 57209212400), Stankova E. (AUID: 57213608799), Zhukova N. (AUID: 56406142300)",,Use of Digital Twins and Digital Threads for Subway Infrastructure Monitoring,2022,"22nd International Conference on Computational Science and Its Applications , ICCSA 2022",,,,,,,4,10.1007/978-3-031-10542-5_48,https://www.doi.org/10.1007/978-3-031-10542-5_48,"<Saint-Petersburg State Electrotechnical University>, <St. Petersburg State University>, <St. Petersburg Institute of Informatics and Automation of the Federal Research Center at the Russian Academy of Sciences (FRC RAS)>",,"Â© 2022, The Author(s), under exclusive license to Springer Nature Switzerland AG.The article deals with the problem of using digital twins and digital threads in complex distributed cyber-physical systems with a high level of structural and functional dynamics. A three-level model of the life cycle of a complex cyber-physical system is proposed. At the upper level, the observed system is described in terms of a continuous architecture. At the middle level, the observed system is described in terms of an agile architecture. At the lower level, the observed system is described in terms of a multigraph, which allows describe both the observed system structure and behavior. In the case study the solution of the problem of monitoring the state of the subway infrastructure is considered. The proposed approach has shown its effectiveness and can be applied in other domains such as smart cities.","Digital thread, Digital twin, Event monitoring and visualization, Machine learning, Neural network algorithms, Smart city",,,,,,,,"<Socio-cyber-physical systems: Models, opportunities, {eid: 85135893382}>, <Analysis and design of cyber-physical systems. A hybrid control systems approach, {eid: 85026795627}>, <Guide to Ambient Intelligence in the IoT Environment Principles, {eid: 85135885423}>, <Internet of Things architectures, technologies, applications, challenges, and future directions for enhanced living environments and healthcare systems: A review, {eid: 85073463121}>, <None, {eid: 85084989009}>, <None, {eid: 85135941024}>, <None, {eid: 85006460153}>, <None, {eid: 85019031731}>, <None, {eid: 85042844676}>, <None, {eid: 84892809140}>, <None, {eid: 84943326563}>, <The Agile Architecture Revolution: How Cloud Computing, REST-based SOA, {eid: 85075856334}>, <None, {eid: 85135898049}>, <A 3-D stacked wire bondless silicon carbide power module, {eid: 85116381178}>, <None, {eid: 85135964860}>, <None, {eid: 85135933201}>, <None, {eid: 85128424875}>, <None, {eid: 0003787207}>, <About one approach to using dynamic models to build digital twins, {eid: 85125914065}>, <Automatic synthesis of multilevel automata models of biological objects, {eid: 85069167345}>, <About one approach to multilevel behavioral program synthesis for television devices, {eid: 85073102210}>, <A 3-D stacked wire bondless silicon carbide power module, {eid: 85010676756}>, <Inductive synthesis of the models of biological systems according to clinical trials, {eid: 85027149081}>, <None, {eid: 84961347393}>, <Cascading failures in Internet of Things: Review and perspectives on reliability and resilience, {eid: 85098290521}>, <Towards dynamic model-based agile architecting of cyber-physical systems, {eid: 85128352540}>, <Architecture of the intelligent video surveillance systems for fog environments based on embedded computers, {eid: 85114210359}>",,,Springer Science and Business Media Deutschland GmbH,,,2022-07-04,,,,,,,eng,,Book Series,,,,2-s2.0-85135951843,True,False,False,False
156,,"SÃ¼Ã J.G. (AUID: 8701350500), Swift S. (AUID: 57357272200), Escott E. (AUID: 54953796100)",,Using DevOps toolchains in Agile model-driven engineering,2022,Software and Systems Modeling,,,,,,,2,10.1007/s10270-022-01003-2,https://www.doi.org/10.1007/s10270-022-01003-2,"<Research and Development, Codebots Pty. Ltd>",,"Â© 2022, The Author(s), under exclusive licence to Springer-Verlag GmbH Germany, part of Springer Nature.For model-driven engineering (MDE) to become more Agile, the community needs to embrace development and operations (DevOps) practices. One of the core practices of DevOps is the use of pipelines to enable CI/CD to make teams more Agile and break down the barriers between development and operations with faster deployments. Current MDE tooling is not designed at its core to participate in DevOps pipelines. Consequently this makes the adoption of MDE in industry more difficult. In this article, we cover an industrial experience report describing how we enabled our pipelines using DevOps and MDE.","Agile, Ant, CI/CD, DevOps, Eclipse, EMF, MDE, Model-driven engineering",,,,,,,,"<The integration of agile development and model driven developmentâa systematic literature review, {eid: 85041446030}>, <Lemesle, R.: SNets: The core formalism for an object-oriented CASE tool, {eid: 85137099027}>, <Grand challenges in model-driven engineering: an analysis of the state of the research, {eid: 85077634676, doi: 10.1007/s10270-019-00773-6}>, <DevOps from a sysadmin perspective, {eid: 85120298374}>, <None, {eid: 0006705483}>, <To build, or not to build: Modelflow, a build solution for MDE projects, {eid: 85096951447}>, <Challenges in model-driven software engineering, {eid: 67650110205}>, <None, {eid: 85137116237}>",,,Springer Science and Business Media Deutschland GmbH,,,2022-08-01,,,,,,,eng,,Journal,,,,2-s2.0-85129817637,True,True,False,False
157,,"Leal L. (AUID: 57211116981), Ceccarelli A. (AUID: 18041935700), Montecchi L. (AUID: 25654395000), Martins E. (AUID: 7103315128)",,Using Metamodels to Improve Model-Based Testing of Service Orchestrations,2020,"25th IEEE Pacific Rim International Symposium on Dependable Computing, PRDC 2020",,,,,,,1,10.1109/PRDC50213.2020.00024,https://www.doi.org/10.1109/PRDC50213.2020.00024,"<University of Campinas>, <University of Florence>",,"Â© 2020 IEEE.Online model-based testing is one of the most suitable techniques to assess the proper behavior of service orchestrations. However, the diverse panorama in terms of modeling languages and test case generation tools is a limitation to widespread adoption. We advocate that the application of Model-Driven Engineering principles as meta-modeling and model transformation can cope with this problem, improving the interoperability of artifacts in the test case generation process, thus bringing benefits in case of agile development processes, where system and technology evolution is frequent. In this paper, we present our contribution to this idea, introducing i) a reference metamodel, which stores the business process behavior and the information to generate input models for testing tools, and ii) transformations from orchestration languages towards testing tools. The proposed approach is implemented in a testing framework and evaluated on a case study where multiple orchestrations are expressed in two languages. Also, the paper presents how test cases are appropriately generated and successfully executed, starting from an orchestration model as a consequence of successful transformations.","Meta-modeling, Model-Based Testing, Model-Driven Engineering, SOA",,,,,,,,"<None, {eid: 85099885107}>, <Integration of distributed enterprise applications: A survey, {eid: 84898426599}>, <Microservices approach for the internet of things, {eid: 84996593372}>, <Making system of systems interoperable-The core components of the arrowhead framework, {eid: 84994852297}>, <Web services orchestration and choreography, {eid: 0142039821}>, <Testing and verification in service-oriented architecture: A survey, {eid: 84877618825}>, <Devops enhancement with continuous test optimization, {eid: 85056906246}>, <Evaluating the efficiency of continuous testing during test-driven development, {eid: 85051030523}>, <World quality report 2019-20, {eid: 85099886365}>, <A holistic approach to model-based testing of Web service compositions, {eid: 84891832091}>, <None, {eid: 85099885041}>, <The samba approach for self-Adaptive model-based online testing of services orchestrations, {eid: 85072691171}>, <Guest editor?s introduction: Model-driven engineering, {eid: 33344465743}>, <Model-driven engineering: A survey supported by the unified conceptual model, {eid: 84938742646}>, <A taxonomy of model-based testing approaches, {eid: 84862325128}>, <The vision of autonomic computing, {eid: 0037253062}>, <None, {eid: 41649087956}>, <None, {eid: 85020724579}>, <None, {eid: 85082763956}>, <None, {eid: 85099877081}>, <None, {eid: 84942524388}>, <None, {eid: 85099877717}>, <None, {eid: 85099882557}>, <Classification of model transformation approaches, {eid: 17744391650}>, <None, {eid: 84921469336}>, <The oracle problem in software testing: A survey, {eid: 84929331583}>, <None, {eid: 41649087956}>, <ATL-eclipse support for model transformation, {eid: 85099878178}>, <None, {eid: 85099885759}>, <None, {eid: 79958013259}>, <None, {eid: 85082763956}>, <A survey on modelbased testing tools for test case generation, {eid: 85099875604}>, <Model-based testing in practice, {eid: 0032660359}>, <Momut:: UML model-based mutation testing for UML, {eid: 84935063995}>, <Automatic generation of test cases from UML models, {eid: 85075930566}>, <The MIDAS cloud platform for testing SOA applications, {eid: 84935107263}>, <A meta-model to support regression testing of web applications, {eid: 70449727279}>, <A formal framework for service orchestration testing based on symbolic transition systems, {eid: 70549108087}>, <Introducing modeldriven testing in scrum process using U2TP and AndroMDA, {eid: 85073151444}>, <Improving evidence about software technologies: A look at model-based testing, {eid: 44149126224}>, <Basic concepts on systems of systems, {eid: 85006741799}>, <A simulation-based architecture for smart cyberphysical systems, {eid: 84991687905}>",,,IEEE Computer Society,,,2020-12-01,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85099878724,True,True,False,False
158,,"Sadovykh A. (AUID: 24479058100), Bagnto A. (AUID: 36052505500), Widforss G. (AUID: 57188769074), Enoiu E.P. (AUID: 36462407100), Hendel O. (AUID: 57226269201), Truscan D. (AUID: 6508330976), Mallouli W. (AUID: 14037829000), Iglesias R. (AUID: 24478273400)",,VeriDevOps: Automated Protection and Prevention to Meet Security Requirements in DevOps,2021,"2021 Design, Automation and Test in Europe Conference and Exhibition, DATE 2021",,,,,,,8,10.23919/DATE51398.2021.9474185,https://www.doi.org/10.23919/DATE51398.2021.9474185,"<Softeam>, <Innopolis University>, <MÃ¤lardalen University>, <Ãbo Akademi University>, <Montimage Eurl>, <Ikerlan Technology Research Centre, Basque Research and Technology Alliance (BRTA)>",,"Â© 2021 EDAA.Current software development practices are increasingly based on using both COTS and legacy components which make such systems prone to security vulnerabilities. The modern practice addressing ever changing conditions, DevOps, promotes frequent software deliveries, however, verification methods artifacts should be updated in a timely fashion to cope with the pace of the process. VeriDevOps, Horizon 2020 project, aims at providing a faster feedback loop for verifying the security requirements and other quality attributes of large scale cyber-physical systems. VeriDevOps focuses on optimizing the security verification activities, by automatically creating verifiable models directly from security requirements formulated in natural language, using these models to check security properties on design models and then generating artefacts such as, tests or monitors that can be used later in the DevOps process. The main drivers for these advances are: Natural Language Processing, a combined formal verification and model-based testing approach, and machine-learning-based security monitors. VeriDevOps is in its initial stage - the project started on 1.10.2020 and it will run for three years. In this paper we will present the major conceptual ideas behind the project approach as well as the organizational settings.","Cybersecurity, Design checking, Machine Learning, Model-Driven Engineering, Natural Language Processing, Prevention and Reaction, Requirement, Root cause analysis, Runtime Analysis, Security-by-design, Testing and validation",,,,,,,,"<None, {eid: 85111002309}>, <None, {eid: 85099663696}>, <None, {eid: 85111050414}>, <Embedded systems security: Threats, vulnerabilities, and attack taxonomy, {eid: 84958678561}>, <The real cost of software errors, {eid: 65249116275}>, <Systems security engineering, {eid: 79953671772}>, <Rapid continuous software engineering, {eid: 85029856271}>, <Continuous delivery: Reliable software releases through build, {eid: 84858197925}>, <None, {eid: 84943326563}>, <Software development waste, {eid: 85027163553}>, <None, {eid: 85066604509}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2021-02-01,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85108370840,True,True,False,False
159,,"Bersani M.M. (AUID: 35730853100), Marconi F. (AUID: 57190818220), Tamburri D.A. (AUID: 35488974800), Nodari A. (AUID: 57159803700), Jamshidi P. (AUID: 34880055700)",,Verifying big data topologies by-design: a semi-automated approach,2019,Journal of Big Data,,,,,,,3,10.1186/s40537-019-0199-y,https://www.doi.org/10.1186/s40537-019-0199-y,"<Politecnico di Milano>, <TU/e - JADS>, <University of South Carolina>",,"Â© 2019, The Author(s).Big data architectures have been gaining momentum in recent years. For instance, Twitter uses stream processing frameworks like Apache Storm to analyse billions of tweets per minute and learn the trending topics. However, architectures that process big data involve many different components interconnected via semantically different connectors. Such complex architectures make possible refactoring of the applications a difficult task for software architects, as applications might be very different with respect to the initial designs. As an aid to designers and developers, we developed OSTIA (Ordinary Static Topology Inference Analysis) that allows detecting the occurrence of common anti-patterns across big data architectures and exploiting software verification techniques on the elicited architectural models. This paper illustrates OSTIA and evaluates its uses and benefits on three industrial-scale case-studies.","Big data architectures, Big data systems verification, Software design and analysis",,,,,,,,"<None, {eid: 85066032062}>, <None, {eid: 85066020659}>, <None, {eid: 85066053629}>, <None, {eid: 85066016858}>, <None, {eid: 85066030200}>, <None, {eid: 85066025117}>, <None, {eid: 85066019426}>, <None, {eid: 85066034835}>, <None, {eid: 85066012095}>, <None, {eid: 85066023134}>, <A Timed Semantics of Workflows, {eid: 84951132701}>, <Continuous architecting of stream-based systems, {eid: 84983339996}>, <A tool for deciding the satisfiability of continuous-time metric temporal logic, {eid: 84959559133, doi: 10.1007/s00236-015-0229-y}>, <None, {eid: 84968786582}>, <Formal verification problems in a big data world: Towards a mighty synergy, {eid: 84903647900}>, <Stormgen - a domain specific language to create ad-hoc storm topologies, {eid: 84941570893}>, <None, {eid: 0003866308}>, <An automata-theoretic approach to constraint LTL, {eid: 84855195612, doi: 10.1016/j.ic.2006.09.006}>, <A software architecture framework for quality-aware devops, {eid: 85054050217}>, <Understandable big data: a survey, {eid: 84940452273, doi: 10.1016/j.cosrev.2015.05.002}>, <Apache storm, a hands on tutorial, {eid: 85015882046}>, <None, {eid: 0141684320}>, <Modeling time in computing: a taxonomy and a comparative survey, {eid: 77949400735, doi: 10.1145/1667062.1667063}>, <Ibm streams processing language: analyzing big data in motion, {eid: 84893537534, doi: 10.1147/JRD.2013.2243535}>, <A bibliometric approach to tracking big data research trends, {eid: 85030459021, doi: 10.1186/s40537-017-0088-1}>, <None, {eid: 0004040339}>, <Towards the formal verification of DIA through MTL models, {eid: 85066015826}>, <None, {eid: 0003594156, doi: 10.4135/9781412984287}>, <Visualizing big data with augmented and virtual reality: challenges and research agenda, {eid: 85013964229, doi: 10.1186/s40537-015-0031-2}>, <Cost-based optimization of logical partitions for a query workload in a hadoop data warehouse, {eid: 84958545302}>, <The temporal logic of programs, {eid: 85047040703}>, <Bounded satisfiability checking of metric temporal logic specifications, {eid: 84894515204, doi: 10.1145/2491509.2491514}>, <Beyond the lambda architecture: Effective scheduling for large scale eo information mining and interactive thematic mapping, {eid: 84962530511}>, <A theory of timed automata, {eid: 0028413052, doi: 10.1016/0304-3975(94)90010-8}>, <None, {eid: 84877800451}>, <Geometrical and topological approaches to big data, {eid: 84979556390, doi: 10.1016/j.future.2016.06.005}>, <Reliability analysis based on a jump diffusion model with two wiener processes for cloud computing with big data, {eid: 84940549083, doi: 10.3390/e17074533}>, <None, {eid: 84925263722}>, <Storm@ twitter, {eid: 84904335699}>, <Optimizing big data processing performance in the public cloud: opportunities and approaches, {eid: 84944054192, doi: 10.1109/MNET.2015.7293302}>, <Formalizing mapreduce with csp, {eid: 77953209591}>",,,SpringerOpen,,,2019-12-01,,,,,,,eng,,Journal,,,,2-s2.0-85066050998,False,False,True,False
160,,"Benjamin B. (AUID: 57202099197), Mireille B.F. (AUID: 57212101946), Frederic P. (AUID: 6508047326), Gunther J. (AUID: 57212102243), Sebastien M. (AUID: 25654364800)",,When DevOps meets meta-learning: A portfolio to rule them all,2019,"22nd ACM/IEEE International Conference on Model Driven Engineering Languages and Systems Companion, MODELS-C 2019",,,,,,,6,10.1109/MODELS-C.2019.00092,https://www.doi.org/10.1109/MODELS-C.2019.00092,"<UniversitÃ© CÃ´te dAzur, CNRS, I3S>, <UniversitÃ© du QuÃ©bec Ã MontrÃ©al>",,"Â© 2019 IEEE.The Machine Learning (ML) world is in constant evolution, as the amount of different algorithms in this context is evolving quickly. Until now, it is the responsibility of data scientists to create ad-hoc ML pipelines for each situation they encounter, gaining knowledge about the adequacy between their context and the chosen pipeline. Considering that it is not possible at a human scale to analyze the exponential number of potential pipelines, picking the right pipeline that combines the proper preprocessing and algorithms is a hard task that requires knowledge and experience. In front of the complexity of building a right ML pipeline, algorithm portfolios aim to drive algorithm selection, learning from the past in a continuous process. However, building a portfolio requires that (i) data scientists develop and test pipelines and (ii) portfolio maintainers ensure the quality of the portfolio and enrich it. The firsts are the developers, while the seconds are the operators. In this paper, we present a set of criteria to be respected, and propose a pipeline-based meta-model, to support a DevOps approach in the context of Machine Learning Pipelines. The exploitation of this meta-model, both as a graph and as a logical expression, serves to ensure continuity between Dev and Ops. We depict our proposition through the simplified study of two primary use cases, one with developer's point-of-view, the other with ops'.","DevOps, MachineLearning, Meta-Learning, Pipeline",,,,,,,,"<On the predictive power of meta-features in OpenML, {eid: 85041037223}>, <ASlib: {A} benchmark library for algorithm selection, {eid: 84962888054}>, <Metamodel-based test generation for model transformations: An algorithm and A tool, {eid: 34547699175}>, <Towards A software product line for machine learning workflows: Focus on supporting evolution, {eid: 84996964947}>, <Do we need hundreds of classifiers to solve real world classification problems?, {eid: 84919773193}>, <The path to devops, {eid: 85049785632}>, <Improving confidence in experimental systems through automated construction of argumentation diagrams, {eid: 85022326190}>, <Algorithm portfolios, {eid: 0035250831}>, <Reinforcement learning for automatic online algorithm selection-an empirical study, {eid: 85046262481}>, <None, {eid: 85075956242}>, <Algorithm Selection for Combinatorial Search Problems: {A} Survey, {eid: 85004008362}>, <Towards automatic composition of multicomponent predictive systems, {eid: 84964091554}>, <Adore A logical meta-model supporting business process evolution, {eid: 84878248026}>, <Machine Learning and Deep Learning frameworks and libraries for large-scale data mining: A survey, {eid: 85060332849}>, <The algorithm selection problem, {eid: 0003056605}>, <A survey of intelligent assistants for data analysis, {eid: 84880124349}>, <Sharing RapidMiner workflows and experiments with OpenML, {eid: 84944264553}>, <OpenML: Networked science in machine learning, {eid: 84944261791}>, <No free lunch theorems for optimization, {eid: 0031118203}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2019-09-15,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85075935517,False,True,True,False
161,,"Castellanos C. (AUID: 55418649100), Correal D. (AUID: 16306282100), Varela C.A. (AUID: 8382441200)",,ACCORDANT: A domain specific-model and DevOps approach for big data analytics architectures,2021,Journal of Systems and Software,,,,,,,8,10.1016/j.jss.2020.110869,https://www.doi.org/10.1016/j.jss.2020.110869,"<System Engineering and Computing Department, University of Los Andes>, <Department of Computer Science, Rensselaer Polytechnic Institute>",,"Â© 2020 Elsevier Inc.Big data analytics (BDA) applications use machine learning algorithms to extract valuable insights from large, fast, and heterogeneous data sources. New software engineering challenges for BDA applications include ensuring performance levels of data-driven algorithms even in the presence of large data volume, velocity, and variety (3Vs). BDA software complexity frequently leads to delayed deployments, longer development cycles, and challenging performance assessment. This paper proposes a Domain-Specific Model (DSM), and DevOps practices to design, deploy, and monitor performance metrics in BDA applications. Our proposal includes a design process, and a framework to define architectural inputs, software components, and deployment strategies through integrated high-level abstractions to enable QS monitoring. We evaluate our approach with four use cases from different domains to demonstrate a high level of generalization. Our results show a shorter deployment and monitoring times, and a higher gain factor per iteration compared to similar approaches.","Big data analytics deployment, DevOps, Domain-specific model, Performance monitoring, Quality scenarios, Software architecture",,,,,,,,"<Quality-Aware Processing Pipeline Modeling: Tech. Rep., {eid: 85057250097}>, <Spring XD: A modular distributed stream and batch processing system, {eid: 84960970167, doi: 10.1145/2675743.2771879}>, <Infrastructure-as-code for data-intensive architectures: A model-driven development approach, {eid: 85051103640, doi: 10.1109/ICSA.2018.00025}>, <DevOps: A Software Architects Perspective, {eid: 84943326563}>, <Executing architectural models for big data analytics, {eid: 85057231099}>, <A survey on big data analytics solutions deployment, {eid: 85072839250}>, <Designing Software Architectures: A Practical Approach, {eid: 84948002011}>, <Agile big data analytics for web-based systems: An architecture-centric approach, {eid: 85014709685, doi: 10.1109/TBDATA.2016.2564982}>, <How Lufthansa capitalized on big data for business model renovation, {eid: 85065072840}>, <None, {eid: 85096720641}>, <Big Data Fundamentals: Concepts, Drivers & Techniques, {eid: 84998586051}>, <Distribution, data, deployment: Software architecture convergence in big data systems, {eid: 84928748186}>, <A performance modeling framework for lambda architecture based applications, {eid: 85026670445, doi: 10.1016/j.future.2017.07.033}>, <Towards a model-driven design tool for big data architectures, {eid: 84974539619}>, <Towards model based approach to hadoop deployment and configuration, {eid: 84964299938, doi: 10.1109/WISA.2015.65}>, <None, {eid: 84963753286}>, <Big Data: Principles and Best Practices of Scalable Real-Time Data Systems, {eid: 84877040956}>, <None, {eid: 85096686761}>, <A UML profile for the design, quality assessment and deployment of data-intensive applications, {eid: 85064569230}>, <Streaming big data processing in datacenter clouds, {eid: 84961627543}>, <2013 Data Miner Survey: Tech. Rep., {eid: 84941624140}>, <2015 Data Science Survey: Tech. Rep., {eid: 85057241882}>, <Software Systems Architecture: Working with Stakeholders using Viewpoints and Perspectives, {eid: 33751002702}>, <None, {eid: 80053441759}>, <Software architecture: Foundations, theory and practice, {eid: 70349441583}>, <Architectural tactics for big data cybersecurity analytics systems: A review, {eid: 85061379394}>, <On reusing data mining in business processes-a pattern-based approach, {eid: 79957511908}>, <Attribute-Driven Design (ADD), Version 2.0: Tech. Rep., {eid: 77954192701}>",,,Elsevier Inc.,,,2021-02-01,,,,,,,eng,,Journal,,,,2-s2.0-85096655894,False,True,True,True
162,,"Ferry N. (AUID: 35291975700), Song H. (AUID: 57195274282), Rossini A. (AUID: 7102582294), Chauvel F. (AUID: 13104917300), Solberg A. (AUID: 14827375100)",,Cloud MF: Applying MDE to tame the complexity of managing multi-cloud applications,2014,"7th IEEE/ACM International Conference on Utility and Cloud Computing, UCC 2014",,,,,,,64,10.1109/UCC.2014.36,https://www.doi.org/10.1109/UCC.2014.36,"<Department of Networked Systems and Services, SINTEF>",,"Â© 2014 IEEE.The market of cloud computing encompasses an ever-growing number of cloud providers offering a multitude of infrastructure-as-a-service (IaaS) and platform-as-a-service (PaaS) solutions. The heterogeneity of these solutions hinders the proper exploitation of cloud computing since it prevents interoperability and promotes vendor lock-in, which increases the complexity of executing and managing multi-cloud applications (i.e., Applications that can be deployed across multiple cloud infrastructures and platforms). Providers of multi-cloud applications seek to exploit the peculiarities of each cloud solution and to combine the delivery models of IaaS and PaaS in order to optimise performance, availability, and cost. In this paper, we show how the Cloud Modelling Framework leverages upon model-driven engineering to tame this complexity by providing: (i) a tool-supported domain-specific language for specifying the provisioning and deployment of multi-cloud applications, and (ii) a models@run-time environment for enacting the provisioning, deployment, and adaptation of these applications.","Cloud computing, Cloud ML, Model-driven engineering, Multi-cloud",,,,,,,,"<The NIST definition of cloud computing, {eid: 84861307113}>, <Consuming resources and services from multiple clouds, {eid: 84904958872}>, <The future of cloud computing, {eid: 77955222592}>, <A roadmap for advanced cloud technologies under h2020, {eid: 84887629370}>, <MODACLOUDS, a model-driven approach for the design and execution of applications on multiple clouds, {eid: 84864997201}>, <Towards model-driven provisioning, deployment, monitoring, and adaptation of multi-cloud systems, {eid: 84884667453}>, <Managing multi-cloud systems with CloudMF, {eid: 84884604847}>, <None, {eid: 84858197925}>, <SENSAPP as a reference platform to support cloud experiments: From the internet of things to the internet of services, {eid: 84875682114}>, <Guest editors introduction: Model-driven engineering, {eid: 33344465743}>, <None, {eid: 17644389388}>, <None, {eid: 0003562903}>, <Rearchitecting the UML infrastructure, {eid: 0141796082}>, <Matters of (meta-)modeling, {eid: 34248658631}>, <Models@run. Time to support dynamic adaptation, {eid: 70350345225}>, <Models@run. Time, {eid: 85008066028}>, <Models@ runtime to support the iterative and continuous design of autonomous reasoners, {eid: 84924026082}>, <An eclipse modelling framework alternative to meet the models@runtime requirements, {eid: 84867650983}>, <Xtext: Implement your language faster than the quick and dirty way, {eid: 78650158701}>, <None, {eid: 84923694474}>, <Building an open-source platform-as - A-service with intelligent management of multiple cloud resources, {eid: 84874243873}>, <Topology and orchestration specification for cloud applications (tosca), {eid: 84886743417}>, <PaaS-independent provisioning and management of applications in the cloud, {eid: 84897744190}>, <CloudScale: Scalability management for cloud systems, {eid: 84878201490}>, <The reservoir model and architecture for open federated cloud computing, {eid: 74049087607}>, <A runtime model based monitoring approach for cloud, {eid: 77957948402}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2014-12-08,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-84946685259,False,False,False,False
163,,"Kumar A. (AUID: 57226074958), Nadeem M. (AUID: 57141925600), Shameem M. (AUID: 57188991787)",,Machine learning based predictive modeling to effectively implement DevOps practices in software organizations,2023,Automated Software Engineering,,,,,,,2,10.1007/s10515-023-00388-8,https://www.doi.org/10.1007/s10515-023-00388-8,"<Department of Computer Science, Aligarh Muslim University>, <Department of Computer Science and Engineering, Koneru Lakshmaiah Education Foundation>",,"Â© 2023, The Author(s), under exclusive licence to Springer Science+Business Media, LLC, part of Springer Nature.Development and Operations (DevOps) is a relatively recent phenomenon that can be defined as a multidisciplinary effort to improve and accelerate the delivery of business values in terms of IT solutions. Many software organizations are heading towards DevOps to leverage its benefits in terms of improved development speed, stability, collaboration, and communication. DevOps practices are essential to effectively implement in software organizations, but little attention has been given in the literature to how these practices can be managed. Our study aims to propose and develop a framework for effectively managing DevOps practices. We have conducted an empirical study using the publicly available HELENA2 dataset to identify the best practices for effectively implementing DevOps. Furthermore, we have used the prediction algorithms such as Support Vector Machine (SVM), Artificial Neural Network (ANN) and Random Forest (RF) to develop a prediction model for DevOps implementation. The findings of this study show that âContinuous deploymentâ, âCoding standardsâ, âContinuous integrationâ, and âDaily Standupâ ""are the most significant practicesduring the life cycle of projects for effectively managing the DevOps practices. The contribution of this study is not only limited to investigating the best DevOps practices but also provides a prediction of DevOps project success and prioritization of best practices. It can assist software organizations in getting the best possible practices to focus on based on the nature of their projects.","Artificial neural network, DevOps, Prediction model, Random forest, Support vector machine",,,,,,,,"<Comprehensive review of artificial neural network applications to pattern recognition, {eid: 85077962906, doi: 10.1109/ACCESS.2019.2945545}>, <Identification and prioritization of DevOps success factors using fuzzy-AHP approach, {eid: 85087637750, doi: 10.1007/s00500-020-05150-w}>, <None, {eid: 85053636266, doi: 10.1007/978-3-030-00184-1_14}>, <Exploring the benefits of combining DevOps and agile, {eid: 85125292499, doi: 10.3390/fi14020063}>, <Capabilities and practices in DevOps: a multivocal literature review, {eid: 85128287219, doi: 10.1109/TSE.2022.3166626}>, <Software engineering for machine learning: A case study, {eid: 85072111655}>, <Challenges of DevOps implementation: A case study from technology companies in Indonesia, {eid: 85127038602}>, <Neural networks for full phase-space reweighting and parameter tuning, {eid: 85086038944, doi: 10.1103/PhysRevD.101.091901}>, <DevOps with continuous testing architecture and its metrics model, {eid: 85056272895, doi: 10.1007/978-981-10-8633-5_28}>, <Understanding DevOps critical success factors and organizational practices, {eid: 85135020092, doi: 10.1145/3524614.3528627}>, <Towards Process Improvement in DevOps: A Systematic Literature Review, {eid: 85090846664}>, <The role of sample size in sample evaluation, {eid: 0011024720, doi: 10.1016/0030-5073(79)90028-X}>, <The importance of A Priori sample size estimation in strength and conditioning research, {eid: 84884542883, doi: 10.1519/JSC.0b013e318278eea0}>, <When DevOps meets meta-learning: A portfolio to rule them all, {eid: 85075935517, doi: 10.1109/MODELS-C.2019.00092}>, <Analysis of factors that improve reliability and effectiveness of DevOps culture in developing connected devices, {eid: 85146370886, doi: 10.2139/ssrn.4091401}>, <Agility as an innovation driver: towards an agile front end of innovation framework, {eid: 85075371636, doi: 10.1007/s11846-019-00373-0}>, <AIDOaRt: AI-augmented automation for DevOps, a model-based framework for continuous development in cyber-physical systems, {eid: 85138071342, doi: 10.1016/j.micpro.2022.104672}>, <Measure early and decide fast: Transforming quality management and measurement to continuous deployment, {eid: 85048355061, doi: 10.1145/3202710.3203156}>, <DevOps: making it easy to do the right thing, {eid: 84968747438, doi: 10.1109/MS.2016.66}>, <ACCORDANT: a domain specific-model and DevOps approach for big data analytics architectures, {eid: 85096655894, doi: 10.1016/j.jss.2020.110869}>, <Continuous Monitoring and Changes, {eid: 85165223281, doi: 10.1007/978-1-4842-5130-0_6}>, <Problem formulations and solvers in linear SVM: a review, {eid: 85040634147, doi: 10.1007/s10462-018-9614-6}>, <None, {eid: 85078948209}>, <The impact of information technology and communication systems on the agility of supply chain management systems, {eid: 85063986038, doi: 10.1108/K-10-2018-0532}>, <The path to DevOps, {eid: 85049785632, doi: 10.1109/MS.2018.290110337}>, <A qualitative study of DevOps usage in practice, {eid: 85021358087, doi: 10.1002/smr.1885}>, <A qualitative study of DevOps usage in practice, {eid: 85021358087, doi: 10.1002/smr.1885}>, <<scp>DevOps</scp> benefits: a systematic literature review, {eid: 85129794349, doi: 10.1002/spe.3096}>, <Do we need hundreds of classifiers to solve real world classification problems?, {eid: 84919773193}>, <A risk prediction model for software project management based on similarity analysis of context histories, {eid: 85097355506, doi: 10.1016/j.infsof.2020.106497}>, <Continuous software engineering: a roadmap and agenda, {eid: 84937109068, doi: 10.1016/j.jss.2015.06.063}>, <DevOps metrics, {eid: 85045277057, doi: 10.1145/3159169}>, <Taking DevOps mainstream: a critical review and conceptual framework, {eid: 85119335250, doi: 10.1080/0960085X.2021.1997100}>, <Quantum DevOps: Towards reliable and applicable NISQ Quantum Computing, {eid: 85102921182, doi: 10.1109/GCWkshps50303.2020.9367411}>, <Optimization of ANN architecture: a review on nature-inspired techniques, {eid: 85138980900, doi: 10.1016/B978-0-12-816086-2.00007-2}>, <Modeling and measuring attributes influencing DevOps implementation in an enterprise using structural equation modeling, {eid: 85026297110, doi: 10.1016/j.infsof.2017.07.010}>, <None, {eid: 85165221207}>, <From agile to DevOps: smart skills and collaborations, {eid: 85062684068, doi: 10.1007/s10796-019-09905-1}>, <Innovative Practices for knowledge sharing in large-scale DevOps, {eid: 85083432926, doi: 10.1109/MS.2019.2958900}>, <A stochastic optimization approach for parameter tuning of support vector machines, {eid: 10044295837, doi: 10.1109/ICPR.2004.1333843}>, <None, {eid: 85165219531}>, <Applying DevOps practices of continuous automation for machine learning, {eid: 85098378323, doi: 10.3390/info11070363}>, <Multicriteria decision-making taxonomy for DevOps challenging factors using analytical hierarchy process, {eid: 85084032374, doi: 10.1002/smr.2263}>, <Agile trends in Chinese global software development industry: Fuzzy AHP based conceptual mapping, {eid: 85099530315, doi: 10.1016/j.asoc.2021.107090}>, <Critical challenges to adopt DevOps culture in software organizations: a systematic review, {eid: 85123707701, doi: 10.1109/ACCESS.2022.3145970}>, <Exploring task equivalence for software engineering practice adaptation and replacement, {eid: 85147019264, doi: 10.1145/3563835.3567656}>, <Determining context factors for hybrid development methods with trained models, {eid: 85092531702, doi: 10.1145/3379177.3388898}>, <Helena stage 2 results, {eid: 85108910079}>, <Perceived benefits of DevOps implementation in organization: A systematic literature review, {eid: 85127044825, doi: 10.1145/3512716.3512718}>, <A survey of DevOps concepts and challenges, {eid: 85075608026, doi: 10.1145/3359981}>, <Opinion mining for software development: a systematic literature review, {eid: 85130717954, doi: 10.1145/3490388}>, <Architecture Scheme of DevOps for Cross Network and Multiple Environment Collaboration, {eid: 85121505288, doi: 10.1145/3487075.3487116}>, <Adopting DevOps in the real world: a theory, a model, and a case study, {eid: 85070228584, doi: 10.1016/j.jss.2019.07.083}>, <DevOps in practice: a multiple case study of five companies, {eid: 85068546035, doi: 10.1016/j.infsof.2019.06.010}>, <DevOps in practice: a multiple case study of five companies, {eid: 85068546035, doi: 10.1016/j.infsof.2019.06.010}>, <DevOps for AIâchallenges in development of AI-enabled applications, {eid: 85096542234, doi: 10.23919/SoftCOM50211.2020.9238323}>, <An empirical taxonomy of DevOps in practice, {eid: 85096519977, doi: 10.1109/SEAA51224.2020.00046.}>, <An investigation of machine learning based prediction systems, {eid: 0034224993, doi: 10.1016/S0164-1212(00)00005-4}>, <Hyper-Parameter Tuning of a Decision Tree Induction Algorithm, {eid: 85015181238}>, <A learning algorithm for optimizing continuous integration development and testing practice, {eid: 85056634616, doi: 10.1002/spe.2661}>, <DevOps improvements for reduced cycle times with integrated test optimizations for continuous integration, {eid: 85055447167}>, <DevOps-RAF: An assessment framework to measure DevOps readiness in software organizations, {eid: 85123953961}>, <Sample size: How many participants do I need in my research?, {eid: 84904744327, doi: 10.1590/abd1806-4841.20143705}>, <Proposal to Avoid Issues in the DevOps Implementation: A Systematic Literature Review, {eid: 85064865030}>, <Implementing DevOps practices in highly regulated environments, {eid: 85065790678, doi: 10.1145/3234152.3234188}>, <Adopting DevOps: capabilities, practices, and challenges faced by organizations, {eid: 85140235076, doi: 10.1063/5.0110594}>, <SVM-based predictive modelling of wet pelletization using experimental and GA-based synthetic data, {eid: 84959254350, doi: 10.1007/s13369-015-1979-0}>, <Estimation of pellet size and strength of limestone and manganese concentrate using soft computing techniques, {eid: 85021058464, doi: 10.1016/j.asoc.2017.06.005}>, <Performance assessment of traditional software development methodologies and DevOps automation culture, {eid: 85146715569, doi: 10.48084/etasr.5315}>, <Improving La redouteâs CI/CD Pipeline and DevOps processes by applying machine learning techniques, {eid: 85061305992, doi: 10.1109/QUATIC.2018.00050.}>, <Breaking down monoliths with microservices and DevOps: An industrial experience report, {eid: 85123361836, doi: 10.1109/ICSME52107.2021.00051}>, <Test case prioritization in continuous integration environments: a systematic mapping study, {eid: 85078708254, doi: 10.1016/j.infsof.2020.106268}>, <Hyperparameters and tuning strategies for random forest, {eid: 85060779526, doi: 10.1002/widm.1301}>, <Enhanced skin condition prediction through machine learning using dynamic training and testing augmentation, {eid: 85081933107, doi: 10.1109/ACCESS.2020.2976045}>, <Exploration of DevOps testing process capabilities: an ISM and fuzzy TOPSIS analysis, {eid: 85123267672, doi: 10.1016/j.asoc.2021.108377}>, <A systematic mapping study of infrastructure as code research, {eid: 85058550526, doi: 10.1016/j.infsof.2018.12.004}>, <Evaluation of sampling and cross-validation tuning strategies for regional-scale machine learning classification, {eid: 85060681925, doi: 10.3390/rs11020185}>, <The future of sensitivity analysis: an essential discipline for systems modeling and policy support, {eid: 85099475423, doi: 10.1016/j.envsoft.2020.104954}>, <Advances in computersusing agile and lean processes for software development, {eid: 85047203426}>, <None, {eid: 85166111930, doi: 10.1007/978-1-4842-8267-0}>, <On the impact of continuous integration on refactoring practice: an exploratory study on TravisTorrent, {eid: 85105598781, doi: 10.1016/j.infsof.2021.106618}>, <Continuous scrum: a framework to enhance scrum with DevOps, {eid: 85049452764, doi: 10.1109/ICTER.2017.8257808}>, <DevOps capabilities, practices, and challenges: Insights from a case study, {eid: 85053711014, doi: 10.1145/3210459.3210465}>, <Continuous integration, delivery and deployment: a systematic review on approaches, tools, challenges and practices, {eid: 85019140530, doi: 10.1109/ACCESS.2017.2685629}>, <A systematic literature review of challenges factors for implementing DevOps practices in software development organizations: a development and operation teams perspective, {eid: 85132397190, doi: 10.1002/9781119821779.ch9}>, <Taxonomical classification of barriers for scaling agile methods in global software development environment using fuzzy analytic hierarchy process, {eid: 85079165839, doi: 10.1016/j.asoc.2020.106122}>, <Genetic algorithm based probabilistic model for agile project success in global software development, {eid: 85147256457, doi: 10.1016/j.asoc.2023.109998}>, <Support vector machine versus random forest for remote sensing image classification: a meta-analysis and systematic review, {eid: 85095720757, doi: 10.1109/JSTARS.2020.3026724}>, <None, {eid: 84942761879, doi: 10.1007/978-3-319-18612-2_14}>, <End to end automation on cloud with build pipeline: the case for DevOps in insurance industry, continuous integration, continuous testing, and continuous delivery, {eid: 84966553219, doi: 10.1109/CCEM.2015.29}>, <A comparison of random forest variable selection methods for classification prediction modeling, {eid: 85066732412, doi: 10.1016/j.eswa.2019.05.028}>, <Continuous practices and devops: Beyond the buzz, what does it all mean?, {eid: 85084071945, doi: 10.1109/SEAA.2017.8114695}>, <From DevOps to MLOps: overview and application to electricity market forecasting, {eid: 85139914234, doi: 10.3390/app12199851}>, <Machine learning algorithm validation with a limited sample size, {eid: 85074634759, doi: 10.1371/journal.pone.0224365}>, <An intelligent DevOps platform research and design based on machine learning, {eid: 85105405428}>, <Evaluating explorative prediction power of machine learning algorithms for materials discovery using k-fold forward cross-validation, {eid: 85071239281, doi: 10.1016/j.commatsci.2019.109203}>",,,Springer,,,2023-11-01,,,,,,,eng,,Journal,,,,2-s2.0-85165221270,False,True,False,True
164,,"Ferry N. (AUID: 35291975700), Solberg A. (AUID: 14827375100)",,Models@runtime for continuous design and deployment,2017,SpringerBriefs in Applied Sciences and Technology,,,,,,,3,10.1007/978-3-319-46031-4_9,https://www.doi.org/10.1007/978-3-319-46031-4_9,<Stiftelsen SINTEF>,,"Â© The Author(s) 2017.Nowadays, software systems are leveraging upon an aggregation of dedicated infrastructures and platforms, which leads to the design of large scale, distributed, and dynamic systems. The need to evolve and update such systems after delivery is often inevitable, for example, due to changes in the requirements, maintenance, or needs for advancing the quality of services such as scalability and performances.",,,,,,,,,"<None, {eid: 84887309406}>, <None, {eid: 84858197925}>, <Continuous software engineering and beyond: Trends and challenges, {eid: 84942514935}>, <Consuming resources and services from multiple clouds, {eid: 84904958872}>, <MODACLOUDS, a model-driven approach for the design and execution of applications on multiple clouds, {eid: 84864997201}>, <Models@run.Time, {eid: 85008066028}>, <None, {eid: 85028730621}>, <Models@Run.Time to support dynamic adaptation, {eid: 70350345225}>, <None, {eid: 84946685259}>, <None, {eid: 84886743417}>, <PaaS-independent provisioning and management of applications in the cloud, {eid: 84897744190}>, <None, {eid: 85028707875}>, <CloudScale: Scalability management for cloud systems, {eid: 84878201490}>, <The reservoir model and architecture for open federated cloud computing, {eid: 74049087607}>, <A runtime model based monitoring approach for cloud, {eid: 77957948402}>",,,Springer Verlag,,,2017-01-01,,,,,,,eng,,Book Series,,,,2-s2.0-85028707045,True,False,False,False
165,,"Garcia J. (AUID: 58083558200), Cabot J. (AUID: 8963493600)",,Stepwise adoption of continuous delivery in model-driven engineering,2018,"1st International Workshop on Software Engineering Aspects of Continuous Development and New Paradigms of Software Production and Deployment, DEVOPS 2018",,,,,,,8,10.1007/978-3-030-06019-0_2,https://www.doi.org/10.1007/978-3-030-06019-0_2,"<IK4-IKERLAN>, <ICREA-UOC>",,"Â© 2019, Springer Nature Switzerland AG.Continuous Delivery (CD) and, in general, Continuous Software Engineering (CSE) is becoming the norm. Still, current practices and available integration platforms are too code-oriented. They are not well adapted to work with other, non text-based, software artifacts typically produced during early phases of the software engineering life-cycle. This is especially problematic for teams adopting a Model-Driven Engineering (MDE) approach to software development where several (meta)models (and model transformations) are built and executed as part of the development process. Typically, (part of) the code is automatically generated from such models. Therefore, in a complete CD process, changes in a model should trigger changes on the generated code when appropriate. A step further would be to apply CD practices to the development of modeling artefacts themselves. Analogously to âtraditionalâ CD, where the goal is to have the mainline codebase always in a deployable state, the aim would be to have the modeling infrastructure always ready to be used. Those models could be the final product themselves or an intermediate artifact in a complete CSE process as described above. Either way, a tighter integration between CD and MDE would benefit software practitioners by providing them with complete CSE, covering also analysis and design stages of the process.","Continuous delivery, Continuous evolution, Model-driven engineering",,,,,,,,"<None, {eid: 85061088999}>, <Agile software development, {eid: 84862080030}>, <Model-driven continuous deployment for quality DevOps, {eid: 85054816400}>, <None, {eid: 4243422367}>, <None, {eid: 84878326137}>, <None, {eid: 84977560005}>, <None, {eid: 77955162010}>, <Co-evolution of metamodels and models through consistent change propagation, {eid: 84925249904}>, <Automated co-evolution of GMF editor models, {eid: 79952273948}>, <Models@Runtime for continuous design and deployment, {eid: 85028707045}>, <Continuous software engineering: A roadmap and agenda, {eid: 84991441356}>, <Model transformation co-evolution: A semiautomatic approach, {eid: 84872726686}>, <Combining the continuous integration practice and the model-driven engineering approach, {eid: 84981165314}>, <MORSE: A model-aware service environment, {eid: 77949633453}>, <Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation, {eid: 84903601568}>, <EMFStore: A model repository for EMF models, {eid: 77954724460}>, <Merging models with the epsilon merging language (EML), {eid: 33750362774}>, <A framework for composing modular and interoperable model management tasks, {eid: 70350086431}>, <Evolving models in model-driven engineering: State-of-the-art and future challenges, {eid: 84949883493}>, <An infrastructure modelling tool for cloud provisioning, {eid: 85032348388}>, <Presentation of EMF compare utility, {eid: 47749101164}>, <The state of practice in model-driven engineering, {eid: 84899687758}>, <Industrial adoption of model-driven engineering: Are the tools really the problem?, {eid: 84886821083}>",,,Springer Verlag,,,2018-03-05,,,,,,,eng,,Book Series,,,,2-s2.0-85061101819,True,True,False,False
166,,"Combemale B. (AUID: 24343217800), Wimmer M. (AUID: 14030698000)",,Towards a Model-Based DevOps for Cyber-Physical Systems,2019,"2nd International Workshop on Software Engineering Aspects of Continuous Development and New Paradigms of Software Production and Deployment, DEVOPS 2019",,,,,,,19,10.1007/978-3-030-39306-9_6,https://www.doi.org/10.1007/978-3-030-39306-9_6,"<University Toulouse & Inria>, <Johannes Kepler University Linz & CDL-MINT>",,"Â© 2020, Springer Nature Switzerland AG.The emerging field of Cyber-Physical Systems (CPS) calls for new scenarios of the use of models. In particular, CPS require to support both the integration of physical and cyber parts in innovative complex systems or production chains, together with the management of the data gathered from the environment to drive dynamic reconfiguration at runtime or finding improved designs. In such a context, the engineering of CPS must rely on models to uniformly reason about various heterogeneous concerns all along the system life cycle. In the last decades, the use of models has been intensively investigated both at design time for driving the development of complex systems, and at runtime as a reasoning layer to support deployment, monitoring and runtime adaptations. However, the approaches remain mostly independent. With the advent of DevOps principles, the engineering of CPS would benefit from supporting a smooth continuum of models from design to runtime, and vice versa. In this vision paper, we introduce a vision for supporting model-based DevOps practices, and we infer the corresponding research roadmap for the modeling community to address this vision by discussing a CPS demonstrator.",,,,,,,,,"<None, {eid: 80053614786}>, <Challenges in engineering cyber-physical systems, {eid: 84898449318}>, <Survey of model-based systems engineering (MBSE) methodologies, {eid: 63349087969}>, <Stepwise adoption of continuous delivery in model-driven engineering, {eid: 85063086793}>, <BizDevOps: Because DevOps is not the end of the story, {eid: 84945906757}>, <Cyber physical systems: Design challenges, {eid: 49649119406}>, <Towards liquid models: An evolutionary modeling approach, {eid: 85010424048}>, <A multi-paradigm modelling approach to live modelling, {eid: 85055994061}>, <MPM4CPS: Multi-paradigm modelling for cyber-physical systems, {eid: 85055366068}>, <None, {eid: 85079098601}>, <The state of practice in model-driven engineering, {eid: 84899687758}>, <Model-driven time-series analytics, {eid: 85079085616}>",,,Springer,,,2019-05-06,,,,,,,eng,,Book Series,,,,2-s2.0-85079099244,False,True,True,True
167,,"Dobaj J. (AUID: 57203317154), Krug T. (AUID: 57218595912), Seidl M. (AUID: 57218597496), MacHer G. (AUID: 56418503500), Riel A. (AUID: 6507294478), Egretzberger M. (AUID: 58823980100)",,Towards Digital Twin-enabled DevOps for CPS providing Architecture-Based Service Adaptation & Verification at Runtime,2022,"17th Symposium on Software Engineering for Adaptive and Self-Managing Systems, SEAMS 2022",,,,,,,4,10.1145/3524844.3528057,https://www.doi.org/10.1145/3524844.3528057,"<Graz University of Technology, Institute of Technical Informatics>, <Grenoble Alps University, CNRS, G-SCOP Laboratory>, <RandD Automation Andritz Hydro GmbH>",,"Â© 2022 ACM.Background: Industrial Product-Service Systems (IPSS) denote a service-oriented way of providing access to cyber-physical systems' (CPS) capabilities. The design of such systems bears high risk due to uncertainty in requirements related to service function and behavior, operation environments, and evolving customer needs. Such risks and uncertainties are well known in the IT sector, where DevOps principles ensure continuous system improvement through reliable and frequent delivery processes. A modular and service-oriented system architecture complements these processes to facilitate IT system adaptation and evolution.Objective: This work proposes a method to use and extend the Digital Twins (DTs) of IPSS assets for enabling the continuous optimization of CPS service delivery and the latter's adaptation to changing needs and environments. This reduces uncertainty during design and operations by assuring IPSS integrity and availability, especially for design and service adaptations at CPS runtime.Methodology: The method builds on transferring IT DevOps principles to DT-enabled CPS IPSS. The chosen design approach integrates, reuses, and aligns the DT processing and communication resources with DevOps requirements derived from literature.Results: We use these requirements to propose a DT-enabled self-Adaptive CPS model, which guides the realization of DT-enabled DevOps in CPS IPSS. We further propose detailed design models for operation-critical DTs that integrate CPS closed-loop control and architecture-based CPS adaptation. This integrated approach enables the implementation of A/B testing as a use case and central concept to enable CPS IPSS service adaptation and reconfiguration.Conclusion: The self-Adaptive CPS model and DT design concept have been validated in an evaluation environment for operation-critical CPS IPSS. The demonstrator achieved sub-millisecond cycle times during service A/B testing at runtime without causing CPS operation interferences and downtime.","CPS, Deployment, DevOps, Digital Twin, IPSS, Self-Adaptation",,,,,,,,"<Key Performance Indicators for Assessing the Planning and Delivery of Industrial Services, {eid: 84885761606}>, <Industrial Product-Service Systems-IPS 2, {eid: 77955554456}>, <Designing Valule-Driven Solutions the Evolution of Industrial Product-Service Systems, {eid: 85135336776}>, <A framework for understanding uncertainty and its mitigation and exploitation in complex systems, {eid: 33947197638}>, <State-of-The-Art of design evaluation, and operation methodologies in product service systems, {eid: 84959354571}>, <Why Enterprises Must Adopt Devops to Enable Continuous Delivery, {eid: 84860316008}>, <DevOps, {eid: 84968831988}>, <A Survey of DevOps Concepts and Challenges, {eid: 85075608026}>, <Characterising the Digital Twin: A systematic literature review, {eid: 85081219520}>, <The Evolution of Factory and Building Automation, {eid: 80054695924}>, <The Future of Industrial Communication: Automation Networks in the Era of the Internet of Things and Industry 4.0, {eid: 85017596114}>, <Understanding the implications of digitisation and automation in the context of Industry 4.0: A triangulation approach and elements of a research agenda for the construction industry, {eid: 84992398667}>, <None, {eid: 77953794996}>, <None, {eid: 84879852118}>, <Digital Twins and Cyber-Physical Systems toward Smart Manufacturing and Industry 4.0: Correlation and Comparison, {eid: 85068798049}>, <Digital Twin-The Simulation Aspect, in, {eid: 85016457439}>, <Modeling Dimensions of Self-Adaptive Software Systems, {eid: 70350031595}>, <CyPhEF, {eid: 85049692631}>, <Web-based digital twin modeling and remote control of cyberphysical production systems, {eid: 85079532714}>, <Virtual engineering of cyber-physical automation systems: The case of control logic, {eid: 85059050409}>, <A design framework for adaptive digital twins, {eid: 85084813252}>, <Towards Flexible Evolution of Digital Twins with Fluent APIs, {eid: 85122939172}>, <Process Model for Integrated Product Lifecycles Using Digital Twins and Predictive Analytics, {eid: 85112218914}>, <Digital Twin for maintenance: A literature review, {eid: 85092055078}>, <Machine learning and reasoning for predictive maintenance in Industry 4.0: Current status and challenges, {eid: 85090002405}>, <Towards integrating undependable selfadaptive systems in safety-critical environments, {eid: 85051472391}>, <A fault-Tolerant architectural approach for dependable systems, {eid: 33644994019}>, <Engineering Trustworthy Self-Adaptive Software with Dynamic Assurance Cases, {eid: 85029184307}>, <Increasing System Dependability through Architecture-Based Self-Repair, {eid: 84881232222}>, <Toward Self-Manageable and Adaptive Industrial Cyber-Physical Systems with Knowledge-Driven Autonomic Service Management, {eid: 85018170448}>, <Context-sensitive Adaptive Production Processes, {eid: 84968919510}>, <Software Engineering Meets Control Theory, {eid: 84953230202}>, <Self-Adaptive Software with Decentralised Control Loops, in, {eid: 84944216887}>, <MAPE-K Formal Templates to Rigorously Design Behaviors for Self-Adaptive Systems, {eid: 84940991650}>, <Environment as a first class abstraction in multiagent systems, {eid: 35148899434}>, <Evolving an adaptive industrial software system to use architecture-based self-Adaptation, in, {eid: 84884999929}>, <Applying Architecture-Based Adaptation to Automate the Management of Internet-of-Things, {eid: 85057266777}>, <A systematic literature review on methods that handle multiple quality attributes in architecture-based self-Adaptive systems, {eid: 85019033585}>, <Software Architecture-Based Self-Adaptation, {eid: 79960016261}>, <ASPLe: A methodology to develop self-Adaptive software systems with systematic reuse, {eid: 85084955201}>, <Rainbow: Architecture-based self-Adaptation with reusable infrastructure, {eid: 7244223259}>, <Towards a continuous certification of safety-critical avionics software, {eid: 85099005211}>, <Towards a Model-Based DevOps for Cyber-Physical Systems, in, {eid: 85079099244}>, <TwinOps-DevOps meets model-based engineering and digital twins for the engineering of CPS, {eid: 85096747019}>, <Towards a DevOps Approach in Cyber Physical Production Systems Using Digital Twins, {eid: 85096529757}>, <Industrial DevOps, {eid: 85066507341}>, <Agent-Based DevOps of Software and Hardware Resources for Digital Twins of Infrastructural Objects, {eid: 85118224097}>, <Towards Cyber-Physical Infrastructure as-A-Service (CPIaaS) in the Era of Industry 4.0, {eid: 85072988188}>, <The Digital Twin as a Common Knowledge Base in DevOps to Support Continuous System Evolution, {eid: 85115129760}>, <Mitigating Unpredictable, Undesirable Emergent Behavior in Complex Systems, {eid: 85006339863}>, <Deployment strategies on Kubernetes, {eid: 85134191784}>, <The Three Generations of Field-Level Networks-Evolution and Compatibility Issues, {eid: 77957990921}>, <Dependable mesh networking patterns, {eid: 85076670133}>, <Towards a security-driven automotive development lifecycle, {eid: 85119838192}>, <Software Engineering of Self-Adaptive Systems, in, {eid: 85083949468}>, <None, {eid: 85076135347}>, <None, {eid: 84883567065}>, <None, {eid: 85132088763}>, <Microservice Patterns for the Life Cycle of Industrial Edge Software, {eid: 85123777425}>, <Architectural Patterns for Integrating AI Technology into Safety-Critical Systems, {eid: 85123803765}>, <A six-layer architecture for the digital twin: A manufacturing case study implementation, {eid: 85076271545}>, <Review of digital twin applications in manufacturing, {eid: 85073116667}>, <Analysis of Control Architectures in the Context of Industry 4.0, {eid: 85020758083}>, <None, {eid: 85029449972}>, <Digital Twin as a Service (DTaaS) in Industry 4.0: An Architecture Reference Model, {eid: 85097743225}>, <None, {eid: 84907879362}>, <None, {eid: 84968904605}>, <None, {eid: 85044442846}>, <None, {eid: 85134178068}>, <None, {eid: 84894206588}>, <Modeling and analysis of the disruptor framework in CSP, {eid: 85047441678}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2022-05-18,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85134157307,False,True,False,False
168,,,,Simulation deployment blockset for MATLAB/Simulink,2016,"2016 TMS/DEVS Symposium on Theory of Modeling and Simulation, TMS/DEVS 2016, Part of the 2016 Spring Simulation Multiconference, SpringSim 2016",,,,,,,2,10.23919/TMS.2016.7918818,https://www.doi.org/10.23919/TMS.2016.7918818,,,"Â© 2016 Society for Modeling & Simulation International (SCS).Model-based approaches are being employed more and more in simulation development. Graphical modeling languages and code generation technologies are enabling agile model development workflows, so that simulation modelers can update their models more easily. However, the process from changing the model to releasing a new simulation version is overlooked. Simulation deployment can be defined as a collection of activities, including model checking, Model-in-the-Loop testing, code generation, build, Software-in-the-Loop testing, deployment, when applicable Processor-in-the-Loop and Hardware-in-the-Loop testing and release. When it is conducted manually and ad hoc, it is repetitive, labor intensive, time-consuming and error prone. The automation of deployment pipeline, on the other hand, requires extensive scripting, unfortunately, in way in which simulation modelers are usually not accustomed. Causal Block Diagrams propose a graphical modeling language that is extensively used in simulation of technical systems. MATLAB/Simulink supports them as the basic modeling language. Exploiting the competence of MATLAB/Simulink users on Causal Block Diagrams, this paper presents a model-based approach for automating the simulation deployment activities. Thus, rather than scripting, the deployment automation functions are made available and accessible to the simulation modelers within the graphical modeling environment that they are using.","Continuous delivery, Model-based simulation systems engineering, Simulation deployment",,,,,,,,None,,,The Society for Modeling and Simulation International,,,None,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85051093462,False,False,False,False
169,,,,A Data Quality-Driven View of MLOps,2021,IEEE Data Engineering Bulletin,,,,,,,0,10.48550/arXiv.2102.07750,https://www.doi.org/10.48550/arXiv.2102.07750,,,"Developing machine learning models can be seen as a process similar to the one established for traditional software development. A key difference between the two lies in the strong dependency between the quality of a machine learning model and the quality of the data used to train or perform evaluations. In this work, we demonstrate how different aspects of data quality propagate through various stages of machine learning development. By performing a joint analysis of the impact of well-known data quality dimensions and the downstream machine learning process, we show that different components of a typical MLOps pipeline can be efficiently designed, providing both a technical and theoretical perspective.",None,,,,,,,,None,,,,,,None,,,,,,,eng,,Journal,,,,,False,False,True,True
170,,,,SliceOps: Explainable MLOps for Streamlined Automation-Native 6G Networks,2023,IEEE Wireless Communications,,,,,,,0,10.48550/arXiv.2307.01658,https://www.doi.org/10.48550/arXiv.2307.01658,,,"Sixth-generation (6G) network slicing is the backbone of future communications systems. It inaugurates the era of extreme ultra-reliable and low-latency communication (xURLLC) and pervades the digitalization of the various vertical immersive use cases. Since 6G inherently underpins artificial intelligence (AI), we propose a systematic and standalone slice termed SliceOps that is natively embedded in the 6G architecture, which gathers and manages the whole AI lifecycle through monitoring, re-training, and deploying the machine learning (ML) models as a service for the 6G slices. By leveraging machine learning operations (MLOps) in conjunction with eXplainable AI (XAI), SliceOps strives to cope with the opaqueness of black-box AI using explanation-guided reinforcement learning (XRL) to fulfill transparency, trustworthiness, and interpretability in the network slicing ecosystem. This article starts by elaborating on the architectural and algorithmic aspects of SliceOps. Then, the deployed cloud-native SliceOps working is exemplified via a latency-aware resource allocation problem. The deep RL (DRL)-based SliceOps agents within slices provide AI services aiming to allocate optimal radio resources and impede service quality degradation. Simulation results demonstrate the effectiveness of SliceOps-driven slicing. The article discusses afterward the SliceOps challenges and limitations. Finally, the key open research directions corresponding to the proposed approach are identified.","6G, AI, MLOps, network slicing, resource allocation, XAI, XRL, zero-touch",,,,,,,,None,,,,,,None,,,,,,,eng,,Journal,,,,,False,False,True,True
171,,,,The systems engineering DevOps lemniscate and model-based system operations,2021,IEEE Systems Journal,,,,,,,0,10.1109/JSYST.2020.3015595,https://www.doi.org/10.1109/JSYST.2020.3015595,,,"Systems engineering is defined as a full life cycle discipline and provides methodologies and processes to support the design, development, verification, sustainment, and disposal of systems. While this cradle-to-grave concept is well documented throughout literature, there has been recent emphasis on evolving and digitally transforming systems engineering methodologies, practices, and tools for the latter phases of system life cycles. This article adapts principles from the software engineering domain DevOps concept (a collaborative merger of system development and operations) into a Systems Engineering DevOps (SEDevOps) life cycle model. This facilitates a merger of systems engineering processes, tools, and products into a surrogate operational environment in which the sustainment of a system is tied closely to the curation of a system model expanded to include the enabling system elements necessary for operations and sustainment (procedures, scripts, etc.). This progression of the systems engineering mindset, focused on digitally transforming and enhancing system operations and sustainment, improves agility in later life cycle phases. A framework for applying SEDevOps is introduced as a new systems modeling language profile. A use-case leveraging this model-based system operations framework, shows how merging support elements into a spacecraft system model improves adaptability during operations, exemplifying elements of a DevOps approach to cyber-physical system sustainment.","Agile, DevOps, digital transformation, life cycle, model-based systems engineering (MBSE), systems engineering",,,,,,,,None,,,,,,None,,,,,,,eng,,Journal,,,,,True,True,False,True
