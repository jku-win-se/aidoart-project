,Authors,Author full names,Author(s) ID,Title,Year,Source title,Volume,Issue,Art. No.,Page start,Page end,Page count,Cited by,DOI,Link,Affiliations,Authors with affiliations,Abstract,Author Keywords,Index Keywords,Molecular Sequence Numbers,Chemicals/CAS,Tradenames,Manufacturers,Funding Details,Funding Texts,References,Correspondence Address,Editors,Publisher,Sponsors,Conference name,Conference date,Conference location,Conference code,ISSN,ISBN,CODEN,PubMed ID,Language of Original Document,Abbreviated Source Title,Document Type,Publication Stage,Open Access,Source,EID
0,,"Rademacher F. (AUID: 57015087900), Sorgalla J. (AUID: 57194283105), Sachweh S. (AUID: 54912166300), Zündorf A. (AUID: 56000503100)",,A model-driven workflow for distributed microservice development,2019,"34th Annual ACM Symposium on Applied Computing, SAC 2019",,,,,,,7,10.1145/3297280.3300182,https://www.doi.org/10.1145/3297280.3300182,"<University of Applied Sciences and Arts Dortmund, IDiAL Institute>, <University of Applied Sciences and Arts Dortmund, Department of Computer Science, IDiAL Institute>, <University of Kassel, Department of Computer Science and Electrical Engineering>",,"© 2019 Copyright held by the owner/author(s).Model-driven Development (MDD) is a software engineering approach that abstracts a software's design leveraging models. In particular, the development of complex, service-based architectures is considered to benefit from MDD techniques like model validation, transformation, and code generation. This paper presents an MDD-based workflow for distributed, DevOps-based microservice development and identifies the involved model types. They provide the foundation for the subsequent development of modeling languages to employ MDD for MSA engineering.","Distributed microservice development, Microservice architecture, Model-driven microservice development, Modeling languages, Viewpoint modeling",,,,,,,,"<Microservices architecture enables Devops: Migration to a cloud-native architecture, {eid: 84968796741}>, <Modern devops: Optimizing software development through effective system interactions, {eid: 84998797474}>, <None, {eid: 85023646999}>, <Research on architecting microservices: Trends, focus, and potential for industrial adoption, {eid: 85021434750}>, <None, {eid: 2942742234}>, <Model-driven development of complex software: A research roadmap, {eid: 34748861160}>, <Container and microservice driven design for cloud infrastructure devops, {eid: 84978128210}>, <An approach to modeling microservice solutions, {eid: 85051083140}>, <None, {eid: 85010410859}>, <None, {eid: 84950338538}>, <None, {eid: 84870676587}>, <Differences between model-driven development of service-oriented and microservice architecture, {eid: 85025587207}>, <Challenges of domain-driven microservice design: A model-driven perspective, {eid: 85046890847}>, <None, {eid: 85010958676}>, <Microservices tenets, {eid: 84995489225}>",,,Association for Computing Machinery,,,2019-04-08,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85065640931
1,,"Windmüller S. (AUID: 55193337800), Neubauer J. (AUID: 55193753200), Steffen B. (AUID: 55788171500), Bauer O. (AUID: 55320508800), Howar F. (AUID: 36680056600)",,Active continuous quality control,2013,"16th ACM SIGSOFT Symposium on Component Based Software Engineering, CBSE 2013",,,,,,,43,10.1145/2465449.2465469,https://www.doi.org/10.1145/2465449.2465469,"<Technische Universität>, <Carnegie Mellon University, Silicon Valley Campus>",,"We present Active Continuous Quality Control (ACQC), a novel approach that employs incremental active automata learning technology periodically in order to infer evolving behavioral automata of complex applications accompanying the development process. This way we are able to closely monitor and steer the evolution of applications throughout their whole life-cycle with minimum manual effort. Key to this approach is to establish a stable level for comparison via an incrementally growing behavioral abstraction in terms of a user-centric communication alphabet: The letters of this alphabet, which may correspond to whole use cases, are intended to directly express the functionality from the user perspective. At the same time their choice allows one to focus on specific aspects, which establishes tailored abstraction levels on demand, which may be refined by adding new letters in the course of the systems evolution. This way ACQC does not only allow us to reveal serious bugs simply by inspecting difference views of the (tailored) models, but also to visually follow and control the effects of (intended) changes, which complements our model-checking-based quality control. All this will be illustrated along reallife scenarios that arose during the component-based development of a commercial editorial system. Copyright 2013 ACM.","Active learning, Model checking, Testing, Validation",,,,,,,,"<Generating models of infinite-state communication protocols using regular inference with abstraction, {eid: 78649865496}>, <Inference and abstraction of the biometric passport, {eid: 78650271044}>, <Learning regular sets from queries and counterexamples, {eid: 0023453626}>, <Reusing system states by active learning algorithms, {eid: 84865277213}>, <On the correspondence between conformance testing and regular inference, {eid: 24644523009}>, <Integrating white- and black-box techniques for class-level regression testing, {eid: 0035160585}>, <Modelling to simulate botnet command and control protocols for the evaluation of network intrusion detection systems, {eid: 79960755070}>, <Model-based regression test suite generation using dependence analysis, {eid: 38849154386}>, <Testing software design modeled by finite-state machines, {eid: 0017973244}>, <None, {eid: 0003962322}>, <None, {eid: 84891584729}>, <Model generation by moderated regular extrapolation, {eid: 84958766854}>, <None, {eid: 0004181453}>, <None, {eid: 0037800076}>, <The teachers crowd: The impact of distributed oracles on active automata learning, {eid: 84868362469}>, <From zulu to rers, {eid: 78650283905}>, <Domain-specific optimization in automata learning, {eid: 33750547975}>, <Incremental requirement specification for evolving systems, {eid: 4544338476}>, <A constraint-based variability modeling framework, {eid: 84866284416}>, <Feature-based modelling of a complex, online-reconfigurable decision support service, {eid: 84880517489}>, <Automated regression test generation, {eid: 85009741625}>, <Efficient test-based model generation for legacy reactive systems, {eid: 19944391951}>, <Agile IT: Thinking in user-centric models, {eid: 78649837913}>, <Next generation learnlib, {eid: 79953206304}>, <Model-checking - A tutorial introduction, {eid: 84957706882}>, <Dynamic testing via automata learning, {eid: 70350430875}>, <Learnlib: A library for automata learning and experimentation, {eid: 33745767828}>, <LearnLib: A framework for extrapolating behavioral models, {eid: 70350536587}>, <Inference of finite automata using homing sequences, {eid: 0001349185}>, <Regression test selection for C++ software, {eid: 0034205213}>, <Iterative refinement of specification for component based embedded systems, {eid: 80051949494}>, <Characteristic formulae, {eid: 84926414743}>, <The fixpoint-analysis machine, {eid: 84947753987}>, <Introduction to active automata learning from a practical perspective, {eid: 79959277296}>, <Behavior-based model construction, {eid: 35248820556}>, <Hierarchical service definition, {eid: 18944368378}>, <Incremental formalization: A key to industrial success, {eid: 33744962473}>, <Model based testing with labelled transition systems, {eid: 43349104926}>, <Model-based testing and some steps towards test-based modelling, {eid: 79959216670}>, <A taxonomy of model-based testing approaches, {eid: 84862325128}>, <The role of dependencies in component-based systems evolution, {eid: 1442352335}>, <None, {eid: 0004181453}>, <A component-based approach to online software evolution: Research articles, {eid: 33745333983}>, <Generating regression tests via model checking, {eid: 18744364718}>",,,,,,2013-06-17,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-84880516456
2,,"Shen D. (AUID: 56911604300), Luo Q. (AUID: 56998053900), Poshyvanyk D. (AUID: 13613571900), Grechanik M. (AUID: 55904114500)",,Automating performance bottleneck detection using search-based application profiling,2015,"24th International Symposium on Software Testing and Analysis, ISSTA 2015",,,,,,,52,10.1145/2771783.2771816,https://www.doi.org/10.1145/2771783.2771816,"<Department of Computer Science, College of William and Mary>, <Department of Computer Science, University of Illinois at Chicago>",,"Copyright 2015 ACM.Application profiling is an important performance analysis technique, when an application under test is analyzed dynamically to determine its space and time complexities and the usage of its instructions. A big and important challenge is to profile nontrivial web applications with large numbers of combinations of their input parameter values. Identifying and understanding particular subsets of inputs leading to performance bottlenecks is mostly manual, intellectually intensive and laborious procedure. We propose a novel approach for automating performance bottleneck detection using search-based input-sensitive application profiling. Our key idea is to use a genetic algorithm as a search heuristic for obtaining combinations of input parameter values that maximizes a fitness function that represents the elapsed execution time of the application. We implemented our approach, coined as Genetic Algorithm-driven Profiler (GA-Prof) that combines a search-based heuristic with contrast data mining of execution traces to accurately determine performance bottlenecks. We evaluated GA-Prof to determine how effectively and efficiently it can detect injected performance bottlenecks into three popular open source web applications. Our results demonstrate that GA-Prof efficiently explores a large space of input value combinations while automatically and accurately detecting performance bottlenecks, thus suggesting that it is effective for automatic profiling.","Application profiling, Performance bottlenecks",,,,,,,,"<On the application of genetic programming for software engineering predictive modeling: A systematic review, {eid: 79955628180}>, <Performance debugging for distributed systems of black boxes, {eid: 21644455102}>, <A systematic review of the application and empirical investigation of search-based test case generation, {eid: 78649794788}>, <Automated web application testing using search based software engineering, {eid: 84855445676}>, <Finding and removing performance bottlenecks in large systems, {eid: 84936937947}>, <A practical guide for using statistical tests to assess randomized algorithms in software engineering, {eid: 79959871222}>, <A hitchhikers guide to statistical tests for assessing randomized algorithms in software engineering, {eid: 84883099844}>, <Directed test generation for effective fault localization, {eid: 77955877763}>, <Practical fault localization for dynamic web applications, {eid: 77954721052}>, <Symbolic search-based testing, {eid: 84855417349}>, <None, {eid: 84860926946}>, <Stress testing real-time systems with genetic algorithms, {eid: 32444445648}>, <Wise: Automated test generation for worst-case complexity, {eid: 70350552240}>, <Synthesizing client load models for performance engineering via web crawling, {eid: 56649123014}>, <A callgraph-based search strategy for automated performance diagnosis, {eid: 84937389568}>, <Types of software evolution and software maintenance, {eid: 84975830616}>, <Detecting performance anti-patterns for applications developed using object-relational mapping, {eid: 84994157759}>, <Understanding, modelling, and improving the performance of web applications in multicore virtualised environments, {eid: 84899698849}>, <Holmes: Effective statistical debugging via efficient path profiling, {eid: 73149122840}>, <Input-sensitive profiling, {eid: 84863487165}>, <Mining hot calling contexts in small space, {eid: 79959879248}>, <None, {eid: 84866595689}>, <An empirical study of profiling strategies for released software and their impact on testing activities, {eid: 16244415093}>, <Input-sensitive profiling, {eid: 84919766570}>, <None, {eid: 84975703655}>, <A genetic programming approach to automated software repair, {eid: 72749113538}>, <A memetic algorithm for whole test suite generation, {eid: 84946952886}>, <Search-based genetic optimization for deployment and reconfiguration of software in the cloud, {eid: 84883666968}>, <Exploring very large state spaces using genetic algorithms, {eid: 84896693691}>, <Genprog: A generic method for automatic software repair, {eid: 84856746279}>, <Automated concept location using independent component analysis, {eid: 57749176184}>, <Automatically finding performance problems with feedback-directed learning software testing, {eid: 84864193632}>, <None, {eid: 84900386332}>, <None, {eid: 84975679346}>, <Performance debugging in the large via mining millions of stack traces, {eid: 84864219793}>, <Search based software engineering for program comprehension, {eid: 34948844615}>, <Strong higher order mutation-based test data generation, {eid: 80053197346}>, <Cloud engineering is search based software engineering too, {eid: 84881480406}>, <Search-based software engineering: Trends, techniques and applications, {eid: 84866935116}>, <A theoretical and empirical study of search-based testing: Local, global, and hybrid search, {eid: 77950626862}>, <None, {eid: 0003463297}>, <Independent component analysis: Algorithms and applications, {eid: 0042826822}>, <Empirical investigation of search algorithms for environment model-based testing of real-time embedded software, {eid: 84865288583}>, <Profile-guided program simplification for effective testing and analysis, {eid: 76349108795}>, <Automatic identification of load testing problems, {eid: 57849152538}>, <Automated performance analysis of load tests, {eid: 70849104041}>, <Understanding and detecting real-world performance bugs, {eid: 84863459107}>, <Automatic structural testing using genetic algorithms, {eid: 0030234676}>, <A randomized dynamic program analysis technique for detecting real deadlocks, {eid: 70450240793}>, <Automated software test data generation, {eid: 0025472647}>, <Argument controlled profiling, {eid: 77954588988}>, <Multi objective higher order mutation testing with genetic programming, {eid: 77949843473}>, <A systematic study of automated program repair: Fixing 55 out of 105 bugs for $8 each, {eid: 84864264923}>, <Search algorithms for regression test case prioritization, {eid: 34047189734}>, <None, {eid: 0003854384}>, <Automatic performance debugging of spmd-style parallel programs, {eid: 79957501023}>, <Search-based software test data generation: A survey: Research articles, {eid: 3142725712}>, <Search-based software testing: Past, present and future, {eid: 80051619581}>, <Input domain reduction through irrelevant variable removal and its effect on local, global, and hybrid search-based structural test data generation, {eid: 84859749195}>, <Skoll: Distributed continuous quality assurance, {eid: 4544349711}>, <Using heuristic search techniques to extract design abstractions from source code, {eid: 0142211090}>, <Evaluating the accuracy of Java profilers, {eid: 77954721392}>, <An industrial case study of automatically identifying performance regression-causes, {eid: 85119225908}>, <Search-based software maintenance, {eid: 34548097926}>, <How to effectively use topic models for software engineering tasks? An approach based on genetic algorithms, {eid: 84883710034}>, <Leveraging test generation and specification mining for automated bug detection without false positives, {eid: 84864256871}>, <Eventbreak: Analyzing the responsiveness of user interfaces through performance-guided test generation, {eid: 84908293778}>, <Mining behavior models from enterprise web applications, {eid: 84883667248}>, <Procrawl: Mining test models from multi-user web applications, {eid: 84942780602}>, <None, {eid: 84975774320}>, <Breeding high-impact mutations, {eid: 80051643462}>, <Jolt: Lightweight dynamic analysis and removal of object churn, {eid: 63549145872}>, <Atom: A system for building customized program analysis tools, {eid: 0028132513}>, <Test case comparison and clustering using program profiles and static execution, {eid: 77949371552}>, <The automatic generation of test data using genetic algorithms, {eid: 0006558050}>, <Systematic testing of real-time systems, {eid: 3142696440}>, <Verifying timing constraints of real-time systems by means of evolutionary testing, {eid: 0032204373}>, <Testing real-time systems using genetic algorithms, {eid: 0000380234}>, <Automatically finding patches using genetic programming, {eid: 70549112781}>, <Context-sensitive delta inference for identifying workload-dependent performance bottlenecks, {eid: 84881297394}>, <Precise memory leak detection for Java software using container profiling, {eid: 67650714764}>, <Factors affecting the use of genetic algorithms in test suite augmentation, {eid: 77955917233}>, <Uncovering performance problems in Java applications with reference propagation profiling, {eid: 84864193967}>, <None, {eid: 84975681573}>, <A qualitative study on performance bugs, {eid: 84865125030}>, <Algorithmic profiling, {eid: 84863473591}>, <Automatic generation of load tests, {eid: 84855462010}>, <Automated diagnosis of software configuration errors, {eid: 84886405418}>",,,"Association for Computing Machinery, Inc",,,2015-07-13,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-84975763993
3,,"Ejersbo H. (AUID: 57226336274), Lausdahl K. (AUID: 35186177400), Frasheri M. (AUID: 55979636800), Esterle L. (AUID: 49963334900)",,Dynamic Runtime Integration of New Models in Digital Twins,2023,"18th IEEE/ACM Symposium on Software Engineering for Adaptive and Self-Managing Systems, SEAMS 2023",,,,,,,0,10.1109/SEAMS59076.2023.00016,https://www.doi.org/10.1109/SEAMS59076.2023.00016,"<Aarhus University, Department of Electrical and Computer Engineering Digit>",,"© 2023 IEEE.The development of cyber-physical systems is heavily relying on model-driven approaches. After deployment, these models can be utilised in a Digital Twin setting, acting as virtual replicas of the physical components and reflecting the behaviour of the running system in real-time. Complex systems often consist of numerous models interacting with each other and individual models may need to be updated after deployment. This means that new models need to be integrated and swapped during runtime without interrupting the running system. In this paper, we propose an approach for model-based Digital Twins to replace individual models without stopping or halting the operation of a cyber-physical system. Furthermore, our approach allows to replace not only individual models, but also update the overall structure of the interaction of models in the Digital Twin setting. The use of the proposed mechanism is illustrated through two case-studies with an agricultural robot prototype.","Co-simulation, Digital Twins, Functional Mock-up Interface, Model Swap, Model-driven engineering",,,,,,,,"<A survey of cyber-physical systems, {eid: 84555177840}>, <Cyber-physical systems: challenge of the 21st century, {eid: 84994378262}>, <A model-based design methodology for cyber-physical systems, {eid: 80052469409}>, <A comprehensive survey on modeling of cyber-physical systems, {eid: 85055255781}>, <Integrated Tool Chain for Model-Based Design of Cyber-Physical Systems, {eid: 85006151292}>, <Co-simulation: a Survey, {eid: 85051436184}>, <Product lifecycle management: the new paradigm for enterprises, {eid: 34047222275}>, <Multi-modelling and co-simulation in the engineering of cyber-physical systems: Towards the digital twin, {eid: 85073679094}>, <Characterising the digital twin: A systematic literature review, {eid: 85081219520}>, <Towards modular digital twins of robot systems, {eid: 85143058136}>, <Recent developments in hardware-in-the-loop testing, {eid: 85061083191}>, <The functional mockup interface for tool independent exchange of simulation models, {eid: 84871289819}>, <Functional Mockup Interface 2.0: The Standard for Tool independent Exchange of Simulation Models, {eid: 84871289819}>, <The fmi 3.0 standard interface for clocked and scheduled simulations, {eid: 85124046429}>, <Towards reuse of synchronization algorithms in co-simulation frameworks, {eid: 85091582766}>, <An fmi-based initialization plugin for into-cps maestro 2, {eid: 85101498944}>, <None, {eid: 84928170648}>, <The FMI 3.0 Standard Interface for Clocked and Scheduled Simulations, {eid: 85124046429}>, <Master for co-simulation using FMI, {eid: 84908292404}>, <Formally verified fmi enabled external data broker: Rabbitmq fmu, {eid: 85099278177}>, <Rmqfmu: Bridging the real world with co-simulation for practitioners, {eid: 85146053605}>, <Design Space Exploration in the Development of Agricultural Robots, {eid: 85073686308}>, <Addressing time discrepancy between digital and physical twins, {eid: 85146053531}>, <Assured and correct dynamic update of controllers, {eid: 84974593757}>, <Model-driven engineering tools and languages for cyber-physical systems–a systematic literature review, {eid: 85103282925}>, <The disappearing boundary between development-time and run-time, {eid: 79951591300}>, <Dynamic software updating: a systematic mapping study, {eid: 85092103229}>, <Towards a model-based devops for cyber-physical systems, {eid: 85096956543}>, <Twinops - devops meets model-based engineering and digital twins for the engineering of cps, {eid: 85096747019}>, <Towards digital twin-enabled devops for cps providing architecture-based service adaptation & verification at runtime, {eid: 85134157307}>, <Structural dynamic model, {eid: 0022840390}>, <Model update: A model specification formalism with a generalized view of discontinuity, {eid: 33750715455}>, <Modeling formalisms for dynamic structure systems, {eid: 0031251544}>, <Dynamic model updating in simulation with multimodels: A taxonomy and a generic agent-based architecture, {eid: 84962890943}>, <Dynamic structures in modeling and simulation: A reflective approach, {eid: 0012330873}>, <Exploiting structural dynamism in functional hybrid modelling for simulation of ideal diodes, {eid: 84873415126}>, <Equation-based modeling of variable-structure systems, {eid: 84976437546}>, <A python framework to create and simulate models with variable structure in common simulation environments, {eid: 84905229522}>, <Holistic simulation of flexray networks by using run-time model switching, {eid: 77953099458}>, <Optimizing HW/SW co-simulation based on run-time model switching, {eid: 77951519937}>, <Efficient runtime co-simulation model switching for holistic analysis of embedded systems, {eid: 84888883376}>, <Online model swapping for architectural simulation, {eid: 85106013057}>, <Models@ run. time, {eid: 85008066028}>, <None, {eid: 84904814843}>, <Mechanisms for leveraging models at runtime in self-adaptive software, {eid: 84904817608}>, <Adaptive exchange of distributed partial models@ run. time for highly dynamic systems, {eid: 84953275230}>, <Models@ run. time: a guided tour of the state of the art and research challenges, {eid: 85059780955}>, <A dynamic component model for cyber physical systems, {eid: 84864044924}>, <Transactional execution of hierarchical reconfigurations in cyber-physical systems, {eid: 85011279078}>, <Goal-based modeling of dynamically adaptive system requirements, {eid: 44149110152}>, <Morph: A reference architecture for configuration and behaviour self-adaptation, {eid: 84960347471}>, <Activforms: A formally-founded model-based approach to engineer self-adaptive systems, {eid: 85129299009}>, <Trusting intelligent machines: Deepening trust within socio-technical systems, {eid: 85058196933}>, <Model-based development of dynamically adaptive software, {eid: 34247136847}>, <Easymodel: A refinement-based modeling and verification approach for self-adaptive software, {eid: 85094646667}>, <A survey of formal methods in self-adaptive systems, {eid: 84866043696}>, <Towards practical runtime verification and validation of self-adaptive software systems, {eid: 84883136062}>, <Probabilistic verification at runtime for self-adaptive systems, {eid: 84873844702}>, <Verifying self-adaptive applications suffering uncertainty, {eid: 84908608579}>, <Using runtime quantitative verification to provide assurance evidence for self-adaptive software, {eid: 85041808638}>, <Compositional synthesis of modular systems, {eid: 85127548706}>, <Formal verification and co-simulation in the design of a synchronous motor control algorithm, {eid: 85090917013}>, <Runtime verification for fmi-based co-simulation, {eid: 85140486602}>, <Verification and synthesis of co-simulation algorithms subject to algebraic loops and adaptive steps, {eid: 85140964663}>, <Formalizing correctness criteria of dynamic updates derived from specification changes, {eid: 84885004285}>, <Synthesizing dynamically updating controllers from changes in scenario-based specifications, {eid: 84865109366}>, <Dynamic update of discrete event controllers, {eid: 85055183478}>, <Control-theoretical software adaptation: A systematic literature review, {eid: 85052241956}>, <Self-improving system integration: Mastering continuous change, {eid: 85096831548}>, <Changing software in a changing world: How to test in presence of variability, adaptation and evolution?, {eid: 85073699762}>, <Process prediction with digital twins, {eid: 85121810059}>, <Devsecops in embedded systems: An empirical study of past literature, {eid: 85136963110}>, <Towards a devops approach in cyber physical production systems using digital twins, {eid: 85096529757}>, <Uncertainty Quantificatios and Runtime Monitoring Using Environment-Aware Digital Twins, {eid: 85115881589}>, <Rmqfmu: Bridging the real world with co-simulation for practitioners, {eid: 85146053605}>",,,IEEE Computer Society,,,2023-05-15,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85159598859
4,,"Teumert S. (AUID: 57315097000), Tegeler T. (AUID: 57210413680), Schürmann J. (AUID: 57216758132), Busch D. (AUID: 57315516200), Wirkner D. (AUID: 57191825026)",,Evaluation of Graphical Modeling of CI/CD Workflows with Rig,2022,"11th International Symposium on Leveraging Applications of Formal Methods, Verification and Validation, ISoLA 2022",,,,,,,1,10.1007/978-3-031-19756-7_21,https://www.doi.org/10.1007/978-3-031-19756-7_21,"<Chair for Programming Systems, TU Dortmund University>",,"© 2022, The Author(s), under exclusive license to Springer Nature Switzerland AG.This evaluation is about our workshop on graphical modeling of CI/CD pipeline and how our self-developed tool Rig can support creating such workflows. We describe the three tasks the workshop covered and present the data we have gathered throughout the workshop via surveys of the participants. After that, the data is interpreted and discussed concerning its validity. Last, we draw conclusions from the data interpretations with regards to our future work with Rig and future workshops we plan to hold.","Continuous Integration and Deployment, DevOps, Domain-Specific Tools, Graphical Modeling, Language-Driven Engineering, Purpose-Specific Language, Software Engineering, Visual Authoring",,,,,,,,"<None, {eid: 85142692492}>, <Tutorial: An overview of malware detection and evasion techniques, {eid: 85056462075}>, <DIME: A programming-less modeling environment for web applications, {eid: 84993929512}>, <None, {eid: 85142698420}>, <Low-code development and model-driven engineering: Two sides of the same coin?, {eid: 85122676062}>, <None, {eid: 85142732469}>, <DSLs for decision services: A tutorial introduction to language-driven engineering, {eid: 85056450376}>, <A tutorial introduction to graphical modeling and metamodeling with CINCO, {eid: 85056457686}>, <Business process modelling in the jABC: The one-thing-approach, {eid: 84898095232}>, <None, {eid: 85142684303}>, <None, {eid: 33845584384}>, <The NIST definition of cloud computing, {eid: 77954051808}>, <When and how to develop domain-specific languages, {eid: 33745167684}>, <None, {eid: 85142714741}>, <CINCO: A simplicity-driven approach to full generation of domain-specific graphical modeling tools, {eid: 85019270516}>, <None, {eid: 84995360507}>, <Model-based development for high-assurance embedded systems, {eid: 85142770603}>, <None, {eid: 85142727826}>, <Continuous integration, delivery and deployment: A systematic review on approaches, tools, challenges and practices, {eid: 85019140530}>, <A model-driven approach to continuous practices for modern cloud-based web applications, {eid: 85070649037}>, <An introduction to graphical modeling of CI/CD workflows with rig, {eid: 85118135758}>, <None, {eid: 85142675149}>, <None, {eid: 85118123932}>, <Aligned, purpose-driven cooperation: The future way of system development, {eid: 85118172762}>",,,Springer Science and Business Media Deutschland GmbH,,,2022-10-22,,,,,,,eng,,Book Series,,,,2-s2.0-85142750884
5,,"Brito M. (AUID: 58085862600), Cunha J. (AUID: 23983985900), Saraiva J. (AUID: 57203315736)",,Identification of microservices from monolithic applications through topic modelling,2021,"36th Annual ACM Symposium on Applied Computing, SAC 2021",,,,,,,14,10.1145/3412841.3442016,https://www.doi.org/10.1145/3412841.3442016,"<University of Minho>, <University of Minho, HASLab/INESC Tec>",,"© 2021 ACM.Microservices emerged as one of the most popular architectural patterns in the recent years given the increased need to scale, grow and flexibilize software projects accompanied by the growth in cloud computing and DevOps. Many software applications are being submitted to a process of migration from its monolithic architecture to a more modular, scalable and flexible architecture of microservices. This process is slow and, depending on the project's complexity, it may take months or even years to complete. This paper proposes a new approach on microservice identification by resorting to topic modelling in order to identify services according to domain terms. This approach in combination with clustering techniques produces a set of services based on the original software. The proposed methodology is implemented as an open-source tool for exploration of monolithic architectures and identification of microservices. A quantitative analysis using the state of the art metrics on independence of functionality and modularity of services was conducted on 200 open-source projects collected from GitHub. Cohesion at message and domain level metrics' showed medians of roughly 0.6. Interfaces per service exhibited a median of 1.5 with a compact interquartile range. Structural and conceptual modularity revealed medians of 0.2 and 0.4 respectively. Our first results are positive demonstrating beneficial identification of services due to overall metrics' results.",,,,,,,,,"<None, {eid: 85104946324}>, <None, {eid: 85105021364}>, <Microservices migration patterns, {eid: 85054788373}>, <Latent dirichlet allocation, {eid: 0141607824}>, <Fast unfolding of communities in large networks, {eid: 56349094785}>, <Understanding the factors that impact the popularity of github repositories, {eid: 85013103870}>, <Using cohesion and coupling for software remodularization: Is it enough?, {eid: 84978101496}>, <None, {eid: 85045955954}>, <None, {eid: 85104944007}>, <None, {eid: 85068383036}>, <Feature location in source code: A taxonomy and survey, {eid: 84875382544}>, <Resolution limit in community detection, {eid: 33846126275}>, <None, {eid: 85077195980}>, <Community structure in social and biological networks, {eid: 0037062448}>, <None, {eid: 84984794874}>, <Latent dirichlet allocation (lda) and topic modeling: Models, applications, a survey, {eid: 85057797692}>, <Service candidate identification from monolithic systems based on execution traces, {eid: 85106015844}>, <Functionality-oriented microservice extraction based on execution trace clustering, {eid: 85054018170}>, <Extracting candidates of microservices from monolithic application code, {eid: 85066800642}>, <Topic modeling: A comprehensive review, {eid: 85122847664}>, <Featuregathering dependency-based software clustering using dedication and modularity, {eid: 84873197599}>, <None, {eid: 84885991436}>, <Random walks, markov processes and the multiscale modular organization of complex networks, {eid: 84922728356}>, <Towards real-time community detection in large networks, {eid: 67649881239}>, <What are the dominant projects in the github python ecosystem?, {eid: 85010403220}>, <Extraction of microservices from monolithic software architectures, {eid: 85032372980}>, <None, {eid: 85105022711}>, <Modularity and community structure in networks, {eid: 33745012299}>, <None, {eid: 84950338538}>, <None, {eid: 84979776387}>, <On the criteria to be used in decomposing systems into modules, {eid: 0015482049}>, <How effectively is defective code actually tested? An analysis of junit tests in seven open source systems, {eid: 85056717868}>, <Topological and functional comparison of community detection algorithms in biological networks, {eid: 85064871520}>, <Exploring the space of topic coherence measures, {eid: 84926673043}>, <LDAvis: A method for visualizing and interpreting topics, {eid: 84956473495}>, <Exploring topic coherence over many models and many topics, {eid: 84875509718}>, <Clustering classes in packages for program comprehension, {eid: 85018815330}>, <Exploring topic models in software engineering data analysis: A survey, {eid: 84983331655}>, <None, {eid: 84949178783}>",,,Association for Computing Machinery,,,2021-03-22,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85104997385
6,,"van den Heuvel W.J. (AUID: 7005472245), Tamburri D.A. (AUID: 35488974800)",,"Model-driven ml-ops for intelligent enterprise applications: vision, approaches and challenges",2020,"10th International Symposium on Business Modeling and Software Design, BMSD 2020",,,,,,,13,10.1007/978-3-030-52306-0_11,https://www.doi.org/10.1007/978-3-030-52306-0_11,"<Jheronimus Academy of Data Science (JADS), Tilburg University>, <Jheronimus Academy of Data Science (JADS), Eindhoven University of Technology>",,"© Springer Nature Switzerland AG 2020.This paper explores a novel vision for the disciplined, repeatable, and transparent model-driven development and Machine-Learning operations (ML-Ops) of intelligent enterprise applications. The proposed framework treats model abstractions of AI/ML models (named AI/ML Blueprints) as first-class citizens and promotes end-to-end transparency and portability from raw data detection- to model verification, and, policy-driven model management. This framework is grounded on the intelligent Application Architecture (iA2) and entails a first attempt to incorporate requirements stemming from (more) intelligent enterprise applications into a logically-structured architecture. The logical separation is grounded on the need to enact MLOps and logically separate basic data manipulation requirements (data-processing layer), from more advanced functionality needed to instrument applications with intelligence (data intelligence layer), and continuous deployment, testing and monitoring of intelligent application (knowledge-driven application layer). Finally, the paper sets out exploring a foundational metamodel underpinning blueprint-model-driven MLOps for iA2 applications, and presents its main findings and open research agenda.","AI software engineering, Methodological support to AI, ML Blueprints, ML-Ops, TOSCA",,,,,,,,"<Artificial intelligence in business: from research and innovation to market deployment, {eid: 85084412679}>, <Artificial intelligence and software engineering: a tutorial introduction to their relationship, {eid: 8844229430}>, <None, {eid: 85088509160}>, <The AI transparency paradox, {eid: 85088510551}>, <None, {eid: 85086735146}>, <Automated machine learning in practice: state of the art and recent results, {eid: 85071385770}>, <Statistical aspects of neural networks, {eid: 0002983776}>, <Hyper parameter optimization, {eid: 85065146640}>, <AIOps: predictive analytics & machine learning in operations, {eid: 85082140101}>, <DevOps, {eid: 84968831988}>, <Improving La Redoute’s CI/CD pipeline and DevOps Processes by applying machine learning techniques, {eid: 85061305992}>, <A layered model for AI governance, {eid: 85037745862}>, <None, {eid: 85088500770}>, <None, {eid: 85088509103}>, <Data science data governance, {eid: 85061310869}>, <A survey on transfer learning, {eid: 77956031473}>, <A survey on heterogeneous transfer learning, {eid: 85029935438}>, <Model-driven engineering, {eid: 33344465743}>, <Grand challenges in model-driven engineering: an analysis of the state of the research, {eid: 85077634676}>, <Service oriented architectures: approaches, technologies and research issues, {eid: 34249080831}>, <Understanding DevOps & bridging the gap from continuous integration to continuous delivery, {eid: 84946553533}>, <None, {eid: 0004025223}>, <None, {eid: 85088533020}>, <Software engineering approaches to ontology development, {eid: 85088518441}>",,,Springer,,,2020-07-06,,,,,,,eng,,Book Series,,,,2-s2.0-85088507116
7,,"Estivill-Castro V. (AUID: 55915978700), Hexel R. (AUID: 23396845500), Stover J. (AUID: 57191905873)",,"Modeling, validation, and continuous integration of software behaviours for embedded systems",2015,"9th UKSim-AMSS IEEE European Modelling Symposium on Computer Modelling and Simulation, EMS 2015",,,,,,,6,10.1109/EMS.2015.24,https://www.doi.org/10.1109/EMS.2015.24,"<School of ICT, Griffith University, Nathan Campus>",,"© 2015 IEEE.We propose to test software models with software models. Model-Driven Software Development proposes that software is to be constructed by developing high-level models that directly execute or generate most of the code. On the other hand, Test-Driven development proposes to produce tests that validate the functionality of the code. This paper brings both together by using Logic-Labeled Finite-State Machines to deploy executable models of embedded systems and also to configure the corresponding tests. The advantage is a much more efficient validation of the models, with more robust and durable representations, that ensure effective and efficient quality assurance throughout the development process, saving the costly exercise of formal model-checking until the system is complete enough to meet all requirements.","Finite-State Machines, Model-Driven Development, Real-Time Systems, Software Models, Test-Driven Development, Validation and Model-Checking",,,,,,,,"<None, {eid: 85159115952}>, <None, {eid: 84959243564}>, <Security challenges for medical devices, {eid: 84925779811}>, <Software health management: A necessity for safety critical systems, {eid: 84888297725}>, <Requirements engineering via non-monotonic logics and state diagrams, {eid: 83755216028}>, <Arrangements of finite-state machines semantics, simulation, and model checking, {eid: 84878096152}>, <High performance relaying of C++11 objects across processes and logic-labeled finite-state machines, {eid: 84921693633}>, <Correctness by construction with logic-labeled finite-state machines -comparison with Event-B, {eid: 84903531179}>, <Efficient modelling of embedded software systems and their formal verification, {eid: 84874629026}>, <Module isolation for efficient model checking and its application to FMEA in model-driven engineering, {eid: 84887041149}>, <NuSMV: A new symbolic model checker, {eid: 84896869660}>, <Efficient model checking and FMEA analysis with deterministic scheduling of transition-labeled finite-state machines, {eid: 84873686788}>, <Visual-trace simulation of concurrent finite-state machines for validation and model-checking of complex behavior, {eid: 84868031470}>, <Embedded systems in UML, {eid: 84868006865}>, <None, {eid: 0003546951}>, <None, {eid: 85055229985}>, <From requirements to embedded software -formalising the key steps, {eid: 70349514686}>, <Reasoning about goal-directed real-time teleo-reactive programs, {eid: 84900855679}>, <Improving the trustworthiness of medical device software with formal verification methods, {eid: 84883573451}>, <A safety-assured development approach for real-time software, {eid: 78449302431}>, <Ui-design driven model-based testing, {eid: 84881490451}>, <None, {eid: 0003962322}>, <None, {eid: 70649097503}>, <None, {eid: 84869854783}>, <Model-based testing of embedded systems in hardware in the loop environment, {eid: 84866874472}>, <Model-based testing of automotive software: Some challenges and solutions, {eid: 84944111601}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2015-10-06,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-84994571015
8,,"Spieker H. (AUID: 57189329650), Gotlieb A. (AUID: 56247674500), Marijan D. (AUID: 34872942800), Mossige M. (AUID: 55842764600)",,Reinforcement learning for automatic test case prioritization and selection in continuous integration,2017,"26th ACM SIGSOFT International Symposium on Software Testing and Analysis, ISSTA 2017",,,,,,,163,10.1145/3092703.3092709,https://www.doi.org/10.1145/3092703.3092709,"<Simula Research Laboratory>, <University of Stavanger>, <ABB Robotics>",,"© 2017 Association for Computing Machinery.Testing in Continuous Integration (CI) involves test case prioritization, selection, and execution at each cycle. Selecting the most promising test cases to detect bugs is hard if there are uncertainties on the impact of committed code changes or, if traceability links between code and tests are not available. This paper introduces Retecs, a new method for automatically learning test case selection and prioritization in CI with the goal to minimize the round-trip time between code commits and developer feedback on failed test cases. The Retecs method uses reinforcement learning to select and prioritize test cases according to their duration, previous last execution and failure history. In a constantly changing environment, where new test cases are created and obsolete test cases are deleted, the Retecs method learns to prioritize error-prone test cases higher under guidance of a reward function and by observing previous CI cycles. By applying Retecs on data extracted from three industrial case studies, we show for the first time that reinforcement learning enables fruitful automatic adaptive test case selection and prioritization in CI and regression testing.","Continuous Integration, Machine Learning, Regression testing, Reinforcement Learning, Test case prioritization, Test case selection",,,,,,,,"<Apprenticeship learning via inverse reinforcement learning, {eid: 31844444663}>, <Improving proceeding test case prioritization with learning software agents, {eid: 84902356655}>, <Active learning for automatic classification of software behavior, {eid: 22944435659}>, <Learning for test prioritization: An industrial case study, {eid: 84997235107}>, <Clustering based novel test case prioritization technique, {eid: 84983233375}>, <Using semi-supervised clustering to improve regression test selection techniques, {eid: 79958759034}>, <A multi-objective particle swarm optimization for test case selection based on functional requirements coverage and execution effort, {eid: 84855811230}>, <Search based constrained test case selection using execution effort, {eid: 84885031013}>, <Coverage-based regression test case selection, minimization and prioritization: A case study on an industrial system, {eid: 84928926856}>, <None, {eid: 38549173069}>, <None, {eid: 85026650757}>, <Techniques for improving regression testing in continuous integration development environments, {eid: 84986877429}>, <None, {eid: 0006705483}>, <Ekstazi: Lightweight test selection, {eid: 84951764887}>, <Lightweight automated testing with adaptation-based programming, {eid: 84876394399}>, <A history-based test prioritization technique for regression testing in resource constrained environments, {eid: 0036041041}>, <Test case prioritization based on information retrieval concepts, {eid: 84951272973}>, <Self-improving reactive agents based on reinforcement learning, planning and teaching, {eid: 0000123778}>, <Test case prioritization for continuous regression testing: An industrial case study, {eid: 84891715780}>, <Reward functions for accelerated learning, {eid: 84957895797}>, <Size-constrained regression test case selection using multicriteria optimization, {eid: 84864606587}>, <History-based test case prioritization for black box testing using ant colony optimization, {eid: 84935096380}>, <A similarity-based approach for test case prioritization using historical failure data, {eid: 84964844271}>, <Software testing: A research travelogue (2000-2014), {eid: 84979703490}>, <Historical value-based approach for cost- cognizant test case prioritization to improve the effectiveness of regression testing, {eid: 51749110666}>, <Scikit-learn: Machine Learning in Pjython, {eid: 80555140075}>, <Test case prioritization for multiple processing queues, {eid: 62449129360}>, <Combinatorial interac-tionregressiontesting: Astudyoftestcase generationandprioritization, {eid: 47349111813}>, <Risk-based interoperability testing using reinforcement learning, {eid: 85026664193}>, <Neural fitted Q iteration - First experiences with a data efficient neural Reinforcement Learning method, {eid: 33646398129}>, <Test case prioritization: An empirical study, {eid: 0033326792}>, <Prioritizing test cases for regression testing, {eid: 0035481183}>, <An information retrieval approach for regression test prioritization basedon program changes, {eid: 84951789291}>, <Enabling agile testing through continuous integration, {eid: 70449678931}>, <Experience report: Automated system level regression test prioritization using multiple factors, {eid: 85013287871}>, <None, {eid: 0004102479}>, <Reinforcement learning in continuous action spaces, {eid: 34548807200}>, <None, {eid: 0013153953}>, <None, {eid: 43049140624}>, <Time-aware test suite prioritization, {eid: 34247327814}>, <None, {eid: 84855242052}>, <None, {eid: 78650186589}>, <Time-aware test-case prioritization using integer linear programming, {eid: 85008264025}>, <Solving large scale linear prediction problems using stochastic gradient descent algorithms, {eid: 14344259207}>",,,"Association for Computing Machinery, Inc",,,2017-07-10,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85026639599
9,,"Benni B. (AUID: 57202099197), Mosser S. (AUID: 25654364800), Collet P. (AUID: 8947110100), Riveill M. (AUID: 55800387900)",,Supporting micro-services deployment in a safer way: A static analysis and automated rewriting approach,2018,"33rd Annual ACM Symposium on Applied Computing, SAC 2018",,,,,,,5,10.1145/3167132.3167314,https://www.doi.org/10.1145/3167132.3167314,"<Université Cǒte dAzur, CNRS, I3S>",,"© 2018 ACM.The SOA ecosystem has drastically evolved since its childhood in the early 2000s. From monolithic services, micro-services now cooperate together in ultra-large scale systems. In this context, there is a tremendous need to deploy frequently new services, or new version of existing services. Container-based technologies (e.g., Docker) emerged recently to tool such deployments, promoting a black-box reuse mechanism to support off-the-shelf deployments. Unfortunately, from the service deployment point of view, such form of black-box reuse prevent to ensure what is really shipped inside the container with the service to deploy. In this paper, we propose a formalism to model and statically analyze service deployment artifacts based on state of the art deployment platforms. The static analysis mechanism leverages the hierarchy of deployment descriptors to verify a given deployment, as well as rewrite it to automatically fix common errors. The approach is validated through the automation of the guidelines provided by the user community associated to the reference Docker engine, and the analysis of 20,000 real deployment descriptors (hosted on GitHub).","Container, Docker, Microservice, Static analysis",,,,,,,,"<None, {eid: 85050513152}>, <Microservices architecture enables DevOps: Migration to a cloud-native architecture, {eid: 84968796741}>, <Detecting model inconsistency through operation-based model construction, {eid: 57349190141}>, <An introduction to docker for reproducible research, {eid: 84930642023}>, <None, {eid: 0003885315}>, <None, {eid: 85025659978}>, <CaDAnCE: A criticality-aware deployment and configuration engine, {eid: 49649124090}>, <DevOps com and clusterhq, {eid: 85050520638}>, <An updated performance comparison of virtual machines and Linux containers, {eid: 84937435024}>, <CloudMF: Applying MDE to tame the complexity of managing multicloud applications, {eid: 84946685259}>, <Deploying on the grid with deployware, {eid: 50649090767}>, <None, {eid: 51749119047}>, <HashiCorp, {eid: 85050565151}>, <None, {eid: 85050541680}>, <None, {eid: 84924414777}>, <Docker: Lightweight linux containers for consistent development and deployment, {eid: 84926444656}>, <Hypervisors vs lightweight virtualization: A performance comparison, {eid: 84944351058}>, <A commutative model composition operator to support software adaptation, {eid: 84864072985}>, <None, {eid: 85010410859}>, <Docker cluster management for the cloud-survey results and own solution, {eid: 84963690007}>, <Linux containers and the future cloud, {eid: 84962848574}>, <None, {eid: 85050525050}>, <None, {eid: 85050572740}>, <A unification algorithm for associative-commutative functions, {eid: 84976741234}>, <Performance evaluation of container-based virtualization for high performance computing environments, {eid: 84877674458}>",,,Association for Computing Machinery,,,2018-04-09,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85050555290
10,,"Margaria T. (AUID: 36704777800), Chaudhary H.A.A. (AUID: 57315300100), Guevara I. (AUID: 57218602519), Ryan S. (AUID: 57315504600), Schieweck A. (AUID: 57191832777)",,The Interoperability Challenge: Building a Model-Driven Digital Thread Platform for CPS,2021,"10th International Symposium on Leveraging Applications of Formal Methods, ISoLA 2021",,,,,,,13,10.1007/978-3-030-89159-6_25,https://www.doi.org/10.1007/978-3-030-89159-6_25,"<CSIS, University of Limerick>, <Confirm - Centre for Smart Manufacturing>, <Lero - The Science Foundation Ireland Research Centre for Software>",,"© 2021, The Author(s).With the heterogeneity of the industry 4.0 world, and more generally of the Cyberphysical Systems realm, the quest towards a platform approach to solve the interoperability problem is front and centre to any system and system-of-systems project. Traditional approaches cover individual aspects, like data exchange formats and published interfaces. They may adhere to some standard, however they hardly cover the production of the integration layer, which is implemented as bespoke glue code that is hard to produce and even harder to maintain. Therefore, the traditional integration approach often leads to poor code quality, further increasing the time and cost and reducing the agility, and a high reliance on the individual development skills. We are instead tackling the interoperability challenge by building a model driven/low-code Digital Thread platform that 1) systematizes the integration methodology, 2) provides methods and techniques for the individual integrations based on a layered Domain Specific Languages (DSL) approach, 3) through the DSLs it covers the integration space domain by domain, technology by technology, and is thus highly generalizable and reusable, 4) showcases a first collection of examples from the domains of robotics, IoT, data analytics, AI/ML and web applications, 5) brings cohesiveness to the aforementioned heterogeneous platform, and 6) is easier to understand and maintain, even by not specialized programmers. We showcase the power, versatility and the potential of the Digital Thread platform on four interoperability case studies: the generic extension to REST services, to robotics through the UR family of robots, to the integration of various external databases (for data integration) and to the provision of data analytics capabilities in R.","Digital Thread (DT), Interoperability, Low Code Development (LCD), Model Driven Development (MDD), Software platforms",,,,,,,,"<None, {eid: 85118189898}>, <None, {eid: 85117596135}>, <None, {eid: 85118141483}>, <None, {eid: 85118101700}>, <Architecture drivers for trustworthy interoperability in industry 4.0, {eid: 85101767688}>, <Towards model-based intent-driven adaptive software, {eid: 85118165819}>, <None, {eid: 85088221284}>, <None, {eid: 85113536565}>, <None, {eid: 85083536146}>, <None, {eid: 85118148604}>, <Xatkit: A multimodal low-code chatbot development framework, {eid: 85079821080}>, <Model driven design of secure properties for vision-based applications: A case study, {eid: 85053636530}>, <None, {eid: 0003739670}>, <None, {eid: 0003684188}>, <Mazegen: An evolutionary generator for bootstrapping robotic navigation scenarios, {eid: 85118116209}>, <Integrated modeling and development of component-based embedded software in scala, {eid: 85118107068}>, <A pilot study of industry 4.0 asset interoperability challenges in an industry 4.0 laboratory, {eid: 85099761448}>, <Understanding data heterogeneity in the context of cyber-physical systems integration, {eid: 85018169091}>, <Dsls and middleware platforms in a model driven development approach for secure predictive maintenance systems in smart factories, {eid: 85118135928}>, <Dsls for model driven development of secure interoperable automation systems, {eid: 85118110831}>, <Model driven design of reliable robot control programs using the jABC, {eid: 34548128322}>, <Model driven design of reliable robot control programs using the jABC, {eid: 34548128322}>, <Practical semantics for the internet of things: Physical states, device mashups, and open questions, {eid: 84962216157}>, <A framework of a smart injection molding system based on real-time data, {eid: 85029874505}>, <Interoperability of the time of industry 4.0 and the internet of things, {eid: 85061197750}>, <Low-code is often high-code, so we must design low-code platforms to enable proper software engineering, {eid: 85118138977}>, <None, {eid: 85089104737}>, <Service engineering: Linking business and IT, {eid: 33750124865}>, <None, {eid: 57049105432}>, <Model-based design of distributed collaborative bioinformatics processes in the jABC, {eid: 34249867762}>, <None, {eid: 85068425964}>, <None, {eid: 85118167524}>, <Backtracking-free design planning by automatic synthesis in metaframe, {eid: 84957085309}>, <Business process modeling in the jABC: The one-thing approach, {eid: 84898095232}>, <Simplicity as a driver for agile innovation, {eid: 77953342927}>, <Service-orientation: Conquering complexity with XMDD, {eid: 84955352764}>, <Extreme model-driven development (XMDD) technologies as a hands-on approach to software development without coding, {eid: 85103827388}>, <None, {eid: 85118118019}>, <Simplicity driven application development, {eid: 84901806379}>, <CaaSSET: A framework for model-driven development of context as a service, {eid: 85088629160}>, <A review on the characteristics of cyber-physical systems for the future smart factories, {eid: 85078703428}>, <CINCO: A simplicity-driven approach to full generation of domain-specific graphical modeling tools, {eid: 85019270516}>, <None, {eid: 85115136846}>, <None, {eid: 84950338538}>, <Semantic interoperability in Industry 4.0: Survey of recent developments and outlook, {eid: 85055539075}>, <Model-driven development of accessible software: A systematic literature review, {eid: 85126923777}>, <Developing a digital twin and digital thread framework for an ‘Industry 4.0’ shipyard, {eid: 85100095230}>, <Graphical and textual model-driven microservice development, {eid: 85086303989}>, <Semantic interoperability in the Industry 4.0 using the IEEE 1451 standard, {eid: 85097782340}>, <None, {eid: 85125489900}>, <Industry 4.0: Survey from a system integration perspective, {eid: 85087475238}>, <Low-code as enabler of digital transformation in manufacturing industry, {eid: 85077580109}>, <Quantitatively assessing the benefits of model-driven development in agent-based modeling and simulation, {eid: 85086377266}>, <None, {eid: 85098271318}>, <Tailored generation of concurrent benchmarks, {eid: 84906909027}>, <None, {eid: 23044518175}>, <None, {eid: 85118122448}>, <Low-code platform for automating business processes in manufacturing, {eid: 85075858242}>, <Active continuous quality control, {eid: 84880516456}>, <The contribution of systems science to Industry 4.0, {eid: 85087305100}>, <Integration of Industry 4.0 related technologies in construction industry: A framework of cyber-physical system, {eid: 85088707093}>, <None, {eid: 85111430379}>, <Pyrus: An online modeling environment for no-code data-analytics service composition, {eid: 85118145576}>, <Aligned, purpose-driven cooperation: The future way of system development, {eid: 85118172762}>",,,Springer Science and Business Media Deutschland GmbH,,,2021-10-17,,,,,,,eng,,Book Series,,,,2-s2.0-85118123247
11,,"Leal L. (AUID: 57211116981), Ceccarelli A. (AUID: 18041935700), Montecchi L. (AUID: 25654395000), Martins E. (AUID: 7103315128)",,Using Metamodels to Improve Model-Based Testing of Service Orchestrations,2020,"25th IEEE Pacific Rim International Symposium on Dependable Computing, PRDC 2020",,,,,,,1,10.1109/PRDC50213.2020.00024,https://www.doi.org/10.1109/PRDC50213.2020.00024,"<University of Campinas>, <University of Florence>",,"© 2020 IEEE.Online model-based testing is one of the most suitable techniques to assess the proper behavior of service orchestrations. However, the diverse panorama in terms of modeling languages and test case generation tools is a limitation to widespread adoption. We advocate that the application of Model-Driven Engineering principles as meta-modeling and model transformation can cope with this problem, improving the interoperability of artifacts in the test case generation process, thus bringing benefits in case of agile development processes, where system and technology evolution is frequent. In this paper, we present our contribution to this idea, introducing i) a reference metamodel, which stores the business process behavior and the information to generate input models for testing tools, and ii) transformations from orchestration languages towards testing tools. The proposed approach is implemented in a testing framework and evaluated on a case study where multiple orchestrations are expressed in two languages. Also, the paper presents how test cases are appropriately generated and successfully executed, starting from an orchestration model as a consequence of successful transformations.","Meta-modeling, Model-Based Testing, Model-Driven Engineering, SOA",,,,,,,,"<None, {eid: 85099885107}>, <Integration of distributed enterprise applications: A survey, {eid: 84898426599}>, <Microservices approach for the internet of things, {eid: 84996593372}>, <Making system of systems interoperable-The core components of the arrowhead framework, {eid: 84994852297}>, <Web services orchestration and choreography, {eid: 0142039821}>, <Testing and verification in service-oriented architecture: A survey, {eid: 84877618825}>, <Devops enhancement with continuous test optimization, {eid: 85056906246}>, <Evaluating the efficiency of continuous testing during test-driven development, {eid: 85051030523}>, <World quality report 2019-20, {eid: 85099886365}>, <A holistic approach to model-based testing of Web service compositions, {eid: 84891832091}>, <None, {eid: 85099885041}>, <The samba approach for self-Adaptive model-based online testing of services orchestrations, {eid: 85072691171}>, <Guest editor?s introduction: Model-driven engineering, {eid: 33344465743}>, <Model-driven engineering: A survey supported by the unified conceptual model, {eid: 84938742646}>, <A taxonomy of model-based testing approaches, {eid: 84862325128}>, <The vision of autonomic computing, {eid: 0037253062}>, <None, {eid: 41649087956}>, <None, {eid: 85020724579}>, <None, {eid: 85082763956}>, <None, {eid: 85099877081}>, <None, {eid: 84942524388}>, <None, {eid: 85099877717}>, <None, {eid: 85099882557}>, <Classification of model transformation approaches, {eid: 17744391650}>, <None, {eid: 84921469336}>, <The oracle problem in software testing: A survey, {eid: 84929331583}>, <None, {eid: 41649087956}>, <ATL-eclipse support for model transformation, {eid: 85099878178}>, <None, {eid: 85099885759}>, <None, {eid: 79958013259}>, <None, {eid: 85082763956}>, <A survey on modelbased testing tools for test case generation, {eid: 85099875604}>, <Model-based testing in practice, {eid: 0032660359}>, <Momut:: UML model-based mutation testing for UML, {eid: 84935063995}>, <Automatic generation of test cases from UML models, {eid: 85075930566}>, <The MIDAS cloud platform for testing SOA applications, {eid: 84935107263}>, <A meta-model to support regression testing of web applications, {eid: 70449727279}>, <A formal framework for service orchestration testing based on symbolic transition systems, {eid: 70549108087}>, <Introducing modeldriven testing in scrum process using U2TP and AndroMDA, {eid: 85073151444}>, <Improving evidence about software technologies: A look at model-based testing, {eid: 44149126224}>, <Basic concepts on systems of systems, {eid: 85006741799}>, <A simulation-based architecture for smart cyberphysical systems, {eid: 84991687905}>",,,IEEE Computer Society,,,2020-12-01,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85099878724
12,,"Dobaj J. (AUID: 57203317154), Krug T. (AUID: 57218595912), Seidl M. (AUID: 57218597496), MacHer G. (AUID: 56418503500), Riel A. (AUID: 6507294478), Egretzberger M. (AUID: 58823980100)",,Towards Digital Twin-enabled DevOps for CPS providing Architecture-Based Service Adaptation & Verification at Runtime,2022,"17th Symposium on Software Engineering for Adaptive and Self-Managing Systems, SEAMS 2022",,,,,,,4,10.1145/3524844.3528057,https://www.doi.org/10.1145/3524844.3528057,"<Graz University of Technology, Institute of Technical Informatics>, <Grenoble Alps University, CNRS, G-SCOP Laboratory>, <RandD Automation Andritz Hydro GmbH>",,"© 2022 ACM.Background: Industrial Product-Service Systems (IPSS) denote a service-oriented way of providing access to cyber-physical systems' (CPS) capabilities. The design of such systems bears high risk due to uncertainty in requirements related to service function and behavior, operation environments, and evolving customer needs. Such risks and uncertainties are well known in the IT sector, where DevOps principles ensure continuous system improvement through reliable and frequent delivery processes. A modular and service-oriented system architecture complements these processes to facilitate IT system adaptation and evolution.Objective: This work proposes a method to use and extend the Digital Twins (DTs) of IPSS assets for enabling the continuous optimization of CPS service delivery and the latter's adaptation to changing needs and environments. This reduces uncertainty during design and operations by assuring IPSS integrity and availability, especially for design and service adaptations at CPS runtime.Methodology: The method builds on transferring IT DevOps principles to DT-enabled CPS IPSS. The chosen design approach integrates, reuses, and aligns the DT processing and communication resources with DevOps requirements derived from literature.Results: We use these requirements to propose a DT-enabled self-Adaptive CPS model, which guides the realization of DT-enabled DevOps in CPS IPSS. We further propose detailed design models for operation-critical DTs that integrate CPS closed-loop control and architecture-based CPS adaptation. This integrated approach enables the implementation of A/B testing as a use case and central concept to enable CPS IPSS service adaptation and reconfiguration.Conclusion: The self-Adaptive CPS model and DT design concept have been validated in an evaluation environment for operation-critical CPS IPSS. The demonstrator achieved sub-millisecond cycle times during service A/B testing at runtime without causing CPS operation interferences and downtime.","CPS, Deployment, DevOps, Digital Twin, IPSS, Self-Adaptation",,,,,,,,"<Key Performance Indicators for Assessing the Planning and Delivery of Industrial Services, {eid: 84885761606}>, <Industrial Product-Service Systems-IPS 2, {eid: 77955554456}>, <Designing Valule-Driven Solutions the Evolution of Industrial Product-Service Systems, {eid: 85135336776}>, <A framework for understanding uncertainty and its mitigation and exploitation in complex systems, {eid: 33947197638}>, <State-of-The-Art of design evaluation, and operation methodologies in product service systems, {eid: 84959354571}>, <Why Enterprises Must Adopt Devops to Enable Continuous Delivery, {eid: 84860316008}>, <DevOps, {eid: 84968831988}>, <A Survey of DevOps Concepts and Challenges, {eid: 85075608026}>, <Characterising the Digital Twin: A systematic literature review, {eid: 85081219520}>, <The Evolution of Factory and Building Automation, {eid: 80054695924}>, <The Future of Industrial Communication: Automation Networks in the Era of the Internet of Things and Industry 4.0, {eid: 85017596114}>, <Understanding the implications of digitisation and automation in the context of Industry 4.0: A triangulation approach and elements of a research agenda for the construction industry, {eid: 84992398667}>, <None, {eid: 77953794996}>, <None, {eid: 84879852118}>, <Digital Twins and Cyber-Physical Systems toward Smart Manufacturing and Industry 4.0: Correlation and Comparison, {eid: 85068798049}>, <Digital Twin-The Simulation Aspect, in, {eid: 85016457439}>, <Modeling Dimensions of Self-Adaptive Software Systems, {eid: 70350031595}>, <CyPhEF, {eid: 85049692631}>, <Web-based digital twin modeling and remote control of cyberphysical production systems, {eid: 85079532714}>, <Virtual engineering of cyber-physical automation systems: The case of control logic, {eid: 85059050409}>, <A design framework for adaptive digital twins, {eid: 85084813252}>, <Towards Flexible Evolution of Digital Twins with Fluent APIs, {eid: 85122939172}>, <Process Model for Integrated Product Lifecycles Using Digital Twins and Predictive Analytics, {eid: 85112218914}>, <Digital Twin for maintenance: A literature review, {eid: 85092055078}>, <Machine learning and reasoning for predictive maintenance in Industry 4.0: Current status and challenges, {eid: 85090002405}>, <Towards integrating undependable selfadaptive systems in safety-critical environments, {eid: 85051472391}>, <A fault-Tolerant architectural approach for dependable systems, {eid: 33644994019}>, <Engineering Trustworthy Self-Adaptive Software with Dynamic Assurance Cases, {eid: 85029184307}>, <Increasing System Dependability through Architecture-Based Self-Repair, {eid: 84881232222}>, <Toward Self-Manageable and Adaptive Industrial Cyber-Physical Systems with Knowledge-Driven Autonomic Service Management, {eid: 85018170448}>, <Context-sensitive Adaptive Production Processes, {eid: 84968919510}>, <Software Engineering Meets Control Theory, {eid: 84953230202}>, <Self-Adaptive Software with Decentralised Control Loops, in, {eid: 84944216887}>, <MAPE-K Formal Templates to Rigorously Design Behaviors for Self-Adaptive Systems, {eid: 84940991650}>, <Environment as a first class abstraction in multiagent systems, {eid: 35148899434}>, <Evolving an adaptive industrial software system to use architecture-based self-Adaptation, in, {eid: 84884999929}>, <Applying Architecture-Based Adaptation to Automate the Management of Internet-of-Things, {eid: 85057266777}>, <A systematic literature review on methods that handle multiple quality attributes in architecture-based self-Adaptive systems, {eid: 85019033585}>, <Software Architecture-Based Self-Adaptation, {eid: 79960016261}>, <ASPLe: A methodology to develop self-Adaptive software systems with systematic reuse, {eid: 85084955201}>, <Rainbow: Architecture-based self-Adaptation with reusable infrastructure, {eid: 7244223259}>, <Towards a continuous certification of safety-critical avionics software, {eid: 85099005211}>, <Towards a Model-Based DevOps for Cyber-Physical Systems, in, {eid: 85079099244}>, <TwinOps-DevOps meets model-based engineering and digital twins for the engineering of CPS, {eid: 85096747019}>, <Towards a DevOps Approach in Cyber Physical Production Systems Using Digital Twins, {eid: 85096529757}>, <Industrial DevOps, {eid: 85066507341}>, <Agent-Based DevOps of Software and Hardware Resources for Digital Twins of Infrastructural Objects, {eid: 85118224097}>, <Towards Cyber-Physical Infrastructure as-A-Service (CPIaaS) in the Era of Industry 4.0, {eid: 85072988188}>, <The Digital Twin as a Common Knowledge Base in DevOps to Support Continuous System Evolution, {eid: 85115129760}>, <Mitigating Unpredictable, Undesirable Emergent Behavior in Complex Systems, {eid: 85006339863}>, <Deployment strategies on Kubernetes, {eid: 85134191784}>, <The Three Generations of Field-Level Networks-Evolution and Compatibility Issues, {eid: 77957990921}>, <Dependable mesh networking patterns, {eid: 85076670133}>, <Towards a security-driven automotive development lifecycle, {eid: 85119838192}>, <Software Engineering of Self-Adaptive Systems, in, {eid: 85083949468}>, <None, {eid: 85076135347}>, <None, {eid: 84883567065}>, <None, {eid: 85132088763}>, <Microservice Patterns for the Life Cycle of Industrial Edge Software, {eid: 85123777425}>, <Architectural Patterns for Integrating AI Technology into Safety-Critical Systems, {eid: 85123803765}>, <A six-layer architecture for the digital twin: A manufacturing case study implementation, {eid: 85076271545}>, <Review of digital twin applications in manufacturing, {eid: 85073116667}>, <Analysis of Control Architectures in the Context of Industry 4.0, {eid: 85020758083}>, <None, {eid: 85029449972}>, <Digital Twin as a Service (DTaaS) in Industry 4.0: An Architecture Reference Model, {eid: 85097743225}>, <None, {eid: 84907879362}>, <None, {eid: 84968904605}>, <None, {eid: 85044442846}>, <None, {eid: 85134178068}>, <None, {eid: 84894206588}>, <Modeling and analysis of the disruptor framework in CSP, {eid: 85047441678}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2022-05-18,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85134157307
