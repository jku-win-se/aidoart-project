,Authors,Author full names,Author(s) ID,Title,Year,Source title,Volume,Issue,Art. No.,Page start,Page end,Page count,Cited by,DOI,Link,Affiliations,Authors with affiliations,Abstract,Author Keywords,Index Keywords,Molecular Sequence Numbers,Chemicals/CAS,Tradenames,Manufacturers,Funding Details,Funding Texts,References,Correspondence Address,Editors,Publisher,Sponsors,Conference name,Conference date,Conference location,Conference code,ISSN,ISBN,CODEN,PubMed ID,Language of Original Document,Abbreviated Source Title,Document Type,Publication Stage,Open Access,Source,EID
0,,"Tegeler T. (AUID: 57210413680), Gossen F. (AUID: 56418363000), Steffen B. (AUID: 55788171500)",,A model-driven approach to continuous practices for modern cloud-based web applications,2019,"9th International Conference On Cloud Computing, Data Science and Engineering, Confluence 2019",,,,,,,8,10.1109/CONFLUENCE.2019.8776962,https://www.doi.org/10.1109/CONFLUENCE.2019.8776962,"<Department for Programming Systems, TU Dortmund University>, <CSIS, University of Limerick>",,"© 2019 IEEE.In this paper, we propose a model-driven approach to Continuous Software Integration and Deployment (CI/CD) for modern cloud-based applications. Key to our approach is a formal graphical modelling language for the specification of the processes and tasks involved. Based on these specifications the complete CI/CD configurations are generated fully and automatically guaranteeing their correctness with regard to the specification by construction. This way typical sources of critical errors can be avoided lowering the hurdle to introduce CI/CD especially in mature projects. We demonstrate the power of our model-driven approach with the help of an industrial web application - a prime example for cloud-based applications.","Cloud-based Applications, Continuous Deployment, Continuous Integration, Model-driven",,,,,,,,"<Continuous integration, delivery and deployment: A systematic review on approaches, tools, challenges and practices, {eid: 85070592302}>, <Practical guide to platform-asa-service, {eid: 85070620321}>, <Quality and productivity outcomes relating to continuous integration in github, {eid: 84960385912}>, <The impact of continuous integration on other software development practices: A large-scale empirical study, {eid: 85041445161}>, <Practicing continuous integration and continuous delivery on aws: Accelerating software delivery with devops, {eid: 85070617883}>, <None, {eid: 0006705483}>, <Continuous delivery: Overcoming adoption challenges, {eid: 85016081845}>, <Work practices and challenges in pull-based development: The integrators perspective, {eid: 84951765304}>, <Usage, costs, and benefits of continuous integration in open-source projects, {eid: 84989159511}>, <Enabling agile testing through continuous integration, {eid: 70449678931}>, <None, {eid: 85065958860}>, <A fully model-based approach to software development for industrial centrifuges, {eid: 84993973232}>, <Domain-specific code generator modeling: A case study for multifaceted concurrent systems, {eid: 84910683982}>, <High-level frameworks for the specification and verification of scheduling problems, {eid: 85056471345}>, <None, {eid: 85046585343}>, <None, {eid: 85046592927}>, <CINCO: A simplicity-driven approach to full generation of domain-specific graphical modeling tools, {eid: 85046592903}>, <Language-driven engineering: From general-purpose to purpose-specific languages, {eid: 85053636331}>, <None, {eid: 85070580563}>, <None, {eid: 85070651921}>, <Lint, a c program checker, {eid: 0004311122}>, <Simplicity as a driver for agile innovation, {eid: 77953342927}>, <Chapter 1 contributions of perceptual and cognitive processes to the comprehension of graphics, {eid: 77956785634}>, <Thinking graphically: Connecting vision and cognition during graph comprehension, {eid: 43049127447}>, <None, {eid: 0003962322}>, <Model-checking: A tutorial introduction, {eid: 84865202099}>, <Characteristic formulae, {eid: 0042478272}>, <None, {eid: 0003418449}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2019-01-10,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85070649037
1,,"Rademacher F. (AUID: 57015087900), Sorgalla J. (AUID: 57194283105), Sachweh S. (AUID: 54912166300), Zündorf A. (AUID: 56000503100)",,A model-driven workflow for distributed microservice development,2019,"34th Annual ACM Symposium on Applied Computing, SAC 2019",,,,,,,7,10.1145/3297280.3300182,https://www.doi.org/10.1145/3297280.3300182,"<University of Applied Sciences and Arts Dortmund, IDiAL Institute>, <University of Applied Sciences and Arts Dortmund, Department of Computer Science, IDiAL Institute>, <University of Kassel, Department of Computer Science and Electrical Engineering>",,"© 2019 Copyright held by the owner/author(s).Model-driven Development (MDD) is a software engineering approach that abstracts a software's design leveraging models. In particular, the development of complex, service-based architectures is considered to benefit from MDD techniques like model validation, transformation, and code generation. This paper presents an MDD-based workflow for distributed, DevOps-based microservice development and identifies the involved model types. They provide the foundation for the subsequent development of modeling languages to employ MDD for MSA engineering.","Distributed microservice development, Microservice architecture, Model-driven microservice development, Modeling languages, Viewpoint modeling",,,,,,,,"<Microservices architecture enables Devops: Migration to a cloud-native architecture, {eid: 84968796741}>, <Modern devops: Optimizing software development through effective system interactions, {eid: 84998797474}>, <None, {eid: 85023646999}>, <Research on architecting microservices: Trends, focus, and potential for industrial adoption, {eid: 85021434750}>, <None, {eid: 2942742234}>, <Model-driven development of complex software: A research roadmap, {eid: 34748861160}>, <Container and microservice driven design for cloud infrastructure devops, {eid: 84978128210}>, <An approach to modeling microservice solutions, {eid: 85051083140}>, <None, {eid: 85010410859}>, <None, {eid: 84950338538}>, <None, {eid: 84870676587}>, <Differences between model-driven development of service-oriented and microservice architecture, {eid: 85025587207}>, <Challenges of domain-driven microservice design: A model-driven perspective, {eid: 85046890847}>, <None, {eid: 85010958676}>, <Microservices tenets, {eid: 84995489225}>",,,Association for Computing Machinery,,,2019-04-08,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85065640931
2,,"Langford M.A. (AUID: 57210599476), Cheng B.H.C. (AUID: 7202388859)",,A Modular and Composable Approach to Develop Trusted Artificial Intelligence,2022,"3rd IEEE International Conference on Autonomic Computing and Self-Organizing Systems, ACSOS 2022",,,,,,,0,10.1109/ACSOS55765.2022.00030,https://www.doi.org/10.1109/ACSOS55765.2022.00030,"<Michigan State University, Department of Computer Science and Engineering>",,"© 2022 IEEE.Trustworthy artificial intelligence (Trusted AI) is of utmost importance when learning-enabled components (LECs) are used in autonomous, safety-critical systems. When reliant on deep learning, these systems need to address the reliability, robustness, and interpretability of learning models. In addition to developing specific strategies to address each of these concerns, appropriate software architectures are needed to coordinate LECs and ensure they deliver acceptable behavior under uncertain conditions. This work proposes a model-driven framework of loosely-coupled modular services designed to monitor and control LECs with respect to Trusted AI assurance concerns. The proposed framework is composable, deploying independent services to improve the resilience and robustness of AI systems. The overarching objective of this framework is to support software engineering principles focusing on modularity, composability, and reusability in order to facilitate development and maintenance tasks, while also increasing stakeholder confidence in Trusted AI systems. To demonstrate this framework, it has been implemented to manage the operation of an autonomous rover's vision-based LEC while exposed to uncertain environmental conditions.","artificial intelligence, deep learning, models at run time, self-adaptive systems, software engineering",,,,,,,,"<Trustworthy AI, {eid: 85116000050}>, <None, {eid: 84944735469}>, <More Companies Flag a New Risk: Artificial Intelligence, {eid: 85142352957}>, <None, {eid: 85094908816}>, <None, {eid: 85142395476}>, <Trustworthy AI Is A Framework to Help Manage Unique Risk, {eid: 85088148273}>, <None, {eid: 85084062801}>, <The AI Effect: Working at the Intersection of AI and SE, {eid: 85087334830}>, <The Five Laws of SE for AI, {eid: 85077228353}>, <Adversarial Attacks and Defenses: An Interpretation Perspective, {eid: 85096642484}>, <From Monolith to Microservices: A Classification of Refactoring Approaches, {eid: 85095371364}>, <A Survey on Image Data Augmentation for Deep Learning, {eid: 85068705129}>, <Towards Enterprise- Ready AI Deployments: Minimizing the Risk of Consuming AI Models in Business Applications, {eid: 85064231120}>, <None, {eid: 85010410859}>, <Microservices Architecture Enables DevOps: Migration to a Cloud-Native Architecture, {eid: 84968796741}>, <Migrating Monolithic Mobile Application to Microservice Architecture: An Experiment Report, {eid: 85032264331}>, <Towards AI-enabled Microservice Architecture for Network Function Virtualization, {eid: 85097599131}>, <Cloud-Edge Microservice Architecture for DNN-based Distributed Multimedia Event Processing, {eid: 85103490774}>, <AI Bricks: A Microservices-Based Software for a Usage in the Cloud Robotics, {eid: 85056756889}>, <A Survey of Uncertainty in Deep Neural Networks, {eid: 85117971804}>, <A Survey of Robust Adversarial Training in Pattern Recognition: Fundamental, Theory, and Methodologies, {eid: 85142395022}>, <The Vision of Autonomic Computing, {eid: 0037253062}>, <None, {eid: 85118707330}>, <From Object Orientation to Goal Orientation: A Paradigm Shift for Requirements Engineering, {eid: 35048819568}>, <""know What You Know"": Predicting Behavior for Learning-Enabled Systems When Facing Uncertainty, {eid: 85113514072}>, <Adversarial Attacks and Defences: A Survey, {eid: 85068957995}>, <MoDALAS: Model-Driven Assurance for Learning-Enabled Autonomous Systems, {eid: 85123430406}>, <Model Inference and Testing, {eid: 84875297940}>, <Enki: A Diversity-Driven Approach to Test and Train Robust Learning-Enabled Systems, {eid: 85136237849}>, <Intriguing Properties of Neural Networks, {eid: 84925331214}>, <Measuring the Tendency of CNNs to Learn Surface Statistical Regularities, {eid: 85055695282}>, <DeepGauge: Multi-Granularity Testing Criteria for Deep Learning Systems, {eid: 85056490436}>, <DeepTest: Automated Testing of Deep-Neural-Network-Driven Autonomous Cars, {eid: 85069772253}>, <DeepHunter: A Coverage-Guided Fuzz Testing Framework for Deep Neural Networks, {eid: 85070586358}>, <DeepRoad: GAN-Based Metamorphic Testing and Input Validation Framework for Autonomous Driving Systems, {eid: 85056509092}>, <TensorFuzz: Debugging Neural Networks with Coverage-Guided Fuzzing, {eid: 85073172223}>, <Robotics Middleware: A Comprehensive Literature Survey and Attribute-Based Bibliography, {eid: 84872295345}>, <ROS: An Open-Source Robot Operating System, {eid: 77957352104}>, <It Takes a Village to Build a Robot: An Empirical Study of the ROS Ecosystem, {eid: 85096725328}>, <Mining Guidelines for Architecting Robotics Software, {eid: 85105348947}>, <None, {eid: 77954708825}>, <Elicitation and Utilization of Application- Level Utility Functions, {eid: 70049105374}>, <A Learning Approach to Enhance Assurances for Real-Time Self-Adaptive Systems, {eid: 85051544613}>, <Architecture-Based Self- Adaptation in the Presence of Multiple Objectives, {eid: 50249148558}>, <None, {eid: 85091849067}>, <None, {eid: 85142388539}>, <Focal Loss for Dense Object Detection, {eid: 85041916350}>, <None, {eid: 85140413950}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2022-09-19,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85142380092
3,,"Hochstrasser M. (AUID: 56046098000), Holzapfel F. (AUID: 10641256100), Myschik S. (AUID: 24921889100)",,A process-oriented build tool for safety-critical model-based software development,2018,"6th International Conference on Model-Driven Engineering and Software Development, MODELSWARD 2018",,,,,,,5,10.5220/0006605301910202,https://www.doi.org/10.5220/0006605301910202,"<Institute of Flight System Dynamics, TU München>, <Chair of Flight Mechanics and Flight Control, Universität der Bundeswehr München>",,"Copyright © 2018 by SCITEPRESS – Science and Technology Publications, Lda. All rights reserved.By conquering new application areas, software complexity and size increases steadily. Development cycles must become faster to deliver critical updates in shorter time. Simultaneously, software takes over more and more safety-critical tasks, requiring strict software development processes. Up to today, these processes suffer from extensive manual review work and written, static documentation in form of standards, checklists, and procedures. This paper presents a monolithic, process-oriented build tool for model-based development in MATLAB, Simulink, and Stateflow. Beyond classical build automation functionality, it supports and accelerates process workflows. The tool provides infrastructure to formalize and ship workflows, checklists, and standards, but also features to assess completeness, consistency, compliance, and cleanliness with respect to them. Additionally, it allows definition of dynamic, incrementally updated checklists, and composes traceability in parallel with the build. The efficacy and achievable process coverage is demonstrated in an example application.","Build Automation, Component-based Software Engineering, Continuous Integration, Model Scaffolding, Model Standards, Software Development Process, Workflow Management System",,,,,,,,"<Software traceability with topic modeling, {eid: 77954731555}>, <Software certification of airborne cyber-physical systems under DO-178C, {eid: 84978477265}>, <None, {eid: 85052020299}>, <Towards scalable verification of commercial avionics software, {eid: 78649991384}>, <What is the benefit of a model-based design of embedded software systems in the car industry?, {eid: 84944678193}>, <Automating code reviews with simulink code inspector, {eid: 84873348691}>, <Verification and validation according to IEC 61508: A workflow to facilitate the development of high-integrity applications, {eid: 77952934643}>, <The modelery: A collaborative web based repository, {eid: 84904888914}>, <Pragmatic strategies for adopting model-based design for embedded applications, {eid: 85072358036}>, <None, {eid: 85052025584}>, <None, {eid: 85052014805}>, <A model-driven safety certification method for process compliance, {eid: 84922646738}>, <Traceability fundamentals, {eid: 84871007294}>, <None, {eid: 85052017820}>, <None, {eid: 85052011723}>, <Hierarchical edge bundles: Visualization of adjacency relations in hierarchical data, {eid: 33845640864}>, <None, {eid: 85052023436}>, <None, {eid: 85052023147}>, <Continuous delivery: Reliable software releases through build, test, and deployment automation, {eid: 84858197925}>, <An integrated view on modeling with multi domain-specific languages, {eid: 74549195796}>, <Strategic traceability for safety-critical projects, {eid: 84897584515}>, <Team-based collaboration in model-based design, {eid: 84880644657}>, <Using model-based development as software low-level requirements to achieve airborne software certification, {eid: 84863897252}>, <None, {eid: 77949517037}>, <On the exploration of model-based support for DO-178C-compliant avionics software development and certification, {eid: 85009771923}>, <None, {eid: 84978505075}>, <Which factors influence practitioners’ usage of build automation tools?, {eid: 85027711579}>, <None, {eid: 85179213591}>, <None, {eid: 84910086230}>, <None, {eid: 84898078761}>, <None, {eid: 84886689856}>, <None, {eid: 85052012732}>, <Traceability in model-driven engineering: Efficient and scalable traceability maintenance, {eid: 84949179515}>, <Dynamic hierarchical mega models: Comprehensive traceability and its efficient maintenance, {eid: 77956266933}>, <None, {eid: 67650563536}>, <None, {eid: 85015179105}>, <None, {eid: 85052013936}>, <Using rules for traceability creation, {eid: 84949179365}>",,,SciTePress,,,2018-01-22,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85052019687
4,,"Kim H.K. (AUID: 8835787400), Lee R.Y. (AUID: 7408200070)",,A testing frameworks for mobile embedded systems using MDA,2012,Studies in Computational Intelligence,,,,,,,0,10.1007/978-3-642-23202-2_6,https://www.doi.org/10.1007/978-3-642-23202-2_6,"<Department of Computer Engineering, Catholic University of Daegu>, <Software Engineering and Information Technology Institute, Central Michigan University>",,"Embedded system can give you many benefits in putting it in your device, such as mobile phones, appliances at home, machines at the bank, lottery machine and many more, just make sure it is undergoing in embedded systems testing to have the device check. You must know that putting an embedded system in any of your device (either at home or in your business) can vary be helpful in your daily life and for the near future.One of the important phases in the life cycle of embedded software development process is the designing phase. There are different models used in this particular phase including class diagrams, state diagrams and use cases etc. To test the conformance of the software it is very essential that test cases should be derived from these specific models. Similarly regressions testing through these models are very significant for testing of modified software. There are several regression testing approaches based on these model in literature. This survey report is the analysis of the model based regression testing techniques according to the parameter identified during this study. The summary as well as the analysis of the approaches is discussed in this survey report. In the end we concluded the survey by identifying the areas of further research in the field of model based regression testing.","Embedded testing, MDA, model based regression testing, Regression testing, Testing evaluation parameters, UML regression testing",,,,,,,,"<Borland, {eid: 82255169100}>, <None, {eid: 0037888603}>, <None, {eid: 0003704024}>, <None, {eid: 82255196754}>, <None, {eid: 82255169099}>, <Patton model based testing in pratice software engineering, {eid: 0032660359}>, <An overview of regression testing, {eid: 27944449669}>, <Insights into regression testing, {eid: 0024884273}>, <An approach for selective state machine based regression testing, {eid: 38849113163}>, <Generating regression tests via model checking, {eid: 18744364718}>, <Model-based regression test suite generation using dependence analysis, {eid: 38849154386}>, <Model based regression test reduction using dependence analysis, {eid: 0036441907}>, <Regression test suite reduction using extended dependence analysis, {eid: 41149088364}>, <Specification based regression test selection with risk analysis, {eid: 24944502842}>, <Automating impact analysis and regression test selection based on UML designs. In: Proceedings of the International Conference on software Maintenance (ICSM 2002), {eid: 0036442261}>, <Regression testing UML design. In: Proceedings of the 22nd, {eid: 34547283550}>, <Integrating white- and black-box techniques for class-level regression testing, {eid: 0035160585}>, <Towards software architecture-based regression testing, {eid: 34247339959}>",,,,,,2012-01-01,,,,,,,eng,,Book Series,,,,2-s2.0-82255177015
5,,"Liu H. (AUID: 56070503600), Li Z. (AUID: 56075167500), Zhu J. (AUID: 56933452300), Tan H. (AUID: 24765557800), Huang H. (AUID: 56138766000)",,A Unified test framework for continuous integration testing of SOA solutions,2009,"2009 IEEE International Conference on Web Services, ICWS 2009",,,,,,,10,10.1109/ICWS.2009.28,https://www.doi.org/10.1109/ICWS.2009.28,<IBM China Research Lab.>,,"The quality of Service Oriented Architecture (SOA) solutions is becoming more and more important along with the increasing adoption of SOA. Continuous Integration Testing (CIT) is an effective technology to discover bugs as early as possible. However, the diversity of programming models used in an SOA solution and the distribution nature of an SOA solution pose new challenges for CIT. Existing testing frameworks more focus on the integration testing of applications developed by a single programming model. In this paper, a unified test framework is proposed to overcome these limitations and enable the CIT of SOA solutions across the whole development lifecycle. This framework is designed following the Model Driven Architecture (MDA). The information of an executable test case is separated into two layers: the behavior layer and the configuration layer. The behavior layer represents the test logic of a test case and is platform independent. The configuration layer contains the platform specific information and is configurable for different programming models. An extensible and pluggable test execution engine is specially designed to execute the integration test cases. A global test case identifier instrumentation approach is used to merge the distributed test case execution traces captured by ITCAM - an IBM integrated management tool. A verification approach supporting Boolean expression and back-end service interaction verification is proposed to verify the test execution result. Initial experiments have shown the effectiveness of this unified test framework. © 2009 IEEE.","Continuous integration testing, Service oriented architecture",,,,,,,,"<None, {eid: 0006705483}>, <Surrogate: A simulation apparatus for continuous integration testing in service oriented architecture, {eid: 51749120985}>, <SOMA-ME: A platform for the model-driven design of SOA solutions, {eid: 55449092351}>, <SeDiTeC - Testing based on sequence diagrams, {eid: 84982953299}>, <Tivoli. Software, {eid: 70449498851}>, <Testing of service oriented architectures - A practical approach, {eid: 35048830352}>, <A test framework for integration testing of object-oriented programs, {eid: 70449464776}>, <UML-based integration testing, {eid: 0034593016}>, <None, {eid: 70449504645}>, <None, {eid: 70449495412}>, <None, {eid: 84892610252}>, <None, {eid: 51749124458}>",,,,,,2009-07-06,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-70449506949
6,,"Windmüller S. (AUID: 55193337800), Neubauer J. (AUID: 55193753200), Steffen B. (AUID: 55788171500), Bauer O. (AUID: 55320508800), Howar F. (AUID: 36680056600)",,Active continuous quality control,2013,"16th ACM SIGSOFT Symposium on Component Based Software Engineering, CBSE 2013",,,,,,,43,10.1145/2465449.2465469,https://www.doi.org/10.1145/2465449.2465469,"<Technische Universität>, <Carnegie Mellon University, Silicon Valley Campus>",,"We present Active Continuous Quality Control (ACQC), a novel approach that employs incremental active automata learning technology periodically in order to infer evolving behavioral automata of complex applications accompanying the development process. This way we are able to closely monitor and steer the evolution of applications throughout their whole life-cycle with minimum manual effort. Key to this approach is to establish a stable level for comparison via an incrementally growing behavioral abstraction in terms of a user-centric communication alphabet: The letters of this alphabet, which may correspond to whole use cases, are intended to directly express the functionality from the user perspective. At the same time their choice allows one to focus on specific aspects, which establishes tailored abstraction levels on demand, which may be refined by adding new letters in the course of the systems evolution. This way ACQC does not only allow us to reveal serious bugs simply by inspecting difference views of the (tailored) models, but also to visually follow and control the effects of (intended) changes, which complements our model-checking-based quality control. All this will be illustrated along reallife scenarios that arose during the component-based development of a commercial editorial system. Copyright 2013 ACM.","Active learning, Model checking, Testing, Validation",,,,,,,,"<Generating models of infinite-state communication protocols using regular inference with abstraction, {eid: 78649865496}>, <Inference and abstraction of the biometric passport, {eid: 78650271044}>, <Learning regular sets from queries and counterexamples, {eid: 0023453626}>, <Reusing system states by active learning algorithms, {eid: 84865277213}>, <On the correspondence between conformance testing and regular inference, {eid: 24644523009}>, <Integrating white- and black-box techniques for class-level regression testing, {eid: 0035160585}>, <Modelling to simulate botnet command and control protocols for the evaluation of network intrusion detection systems, {eid: 79960755070}>, <Model-based regression test suite generation using dependence analysis, {eid: 38849154386}>, <Testing software design modeled by finite-state machines, {eid: 0017973244}>, <None, {eid: 0003962322}>, <None, {eid: 84891584729}>, <Model generation by moderated regular extrapolation, {eid: 84958766854}>, <None, {eid: 0004181453}>, <None, {eid: 0037800076}>, <The teachers crowd: The impact of distributed oracles on active automata learning, {eid: 84868362469}>, <From zulu to rers, {eid: 78650283905}>, <Domain-specific optimization in automata learning, {eid: 33750547975}>, <Incremental requirement specification for evolving systems, {eid: 4544338476}>, <A constraint-based variability modeling framework, {eid: 84866284416}>, <Feature-based modelling of a complex, online-reconfigurable decision support service, {eid: 84880517489}>, <Automated regression test generation, {eid: 85009741625}>, <Efficient test-based model generation for legacy reactive systems, {eid: 19944391951}>, <Agile IT: Thinking in user-centric models, {eid: 78649837913}>, <Next generation learnlib, {eid: 79953206304}>, <Model-checking - A tutorial introduction, {eid: 84957706882}>, <Dynamic testing via automata learning, {eid: 70350430875}>, <Learnlib: A library for automata learning and experimentation, {eid: 33745767828}>, <LearnLib: A framework for extrapolating behavioral models, {eid: 70350536587}>, <Inference of finite automata using homing sequences, {eid: 0001349185}>, <Regression test selection for C++ software, {eid: 0034205213}>, <Iterative refinement of specification for component based embedded systems, {eid: 80051949494}>, <Characteristic formulae, {eid: 84926414743}>, <The fixpoint-analysis machine, {eid: 84947753987}>, <Introduction to active automata learning from a practical perspective, {eid: 79959277296}>, <Behavior-based model construction, {eid: 35248820556}>, <Hierarchical service definition, {eid: 18944368378}>, <Incremental formalization: A key to industrial success, {eid: 33744962473}>, <Model based testing with labelled transition systems, {eid: 43349104926}>, <Model-based testing and some steps towards test-based modelling, {eid: 79959216670}>, <A taxonomy of model-based testing approaches, {eid: 84862325128}>, <The role of dependencies in component-based systems evolution, {eid: 1442352335}>, <None, {eid: 0004181453}>, <A component-based approach to online software evolution: Research articles, {eid: 33745333983}>, <Generating regression tests via model checking, {eid: 18744364718}>",,,,,,2013-06-17,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-84880516456
7,,"Rösch T. (AUID: 57211339256), Sommer M. (AUID: 58710709500), Sax E. (AUID: 35243409200)",,Adaptive application development and integration process for modern automotive software,2022,"8th International Conference on Computer Technology Applications, ICCTA 2022",,,,,,,1,10.1145/3543712.3543718,https://www.doi.org/10.1145/3543712.3543718,"<EvoBus GmbH>, <Institut fuer Technik der Informationsverarbeitung, Karlsruhe Institute of Technology>",,"© 2022 ACM.Due to fast progress in information technologies and long lifecycles of vehicles, there are ever-increasing expectations in modern automotive software development regarding the flexibility to integrate updates and new functions quickly into already existing systems. This paper proposes a process, that is especially suitable for the development of new functions in higher programming languages and the usage of machine learning models. When developed in a tool like MATLAB, code generators can be used to integrate the function step-by-step into a service-oriented automotive E/E-architecture. It is based on a classic V-model process and uses integration steps according to the XiL approach. The key aspect is the frontloading of verification and validation into the steps as early as possible to keep iteration cycles fast. The proposed process is applied to the development of a Neural Network Model Predictive Control (NNMPC) for a Heating, Ventilation and Air-Conditioning (HVAC) unit of a city bus. The resulting NNMPC is then integrated into a system based on the AUTOSAR adaptive platform. That allowed the function to be developed and integrated quickly and seems to be a promising approach to bring new functions into already existing automotive E/E-architectures.","automotive software, AUTOSAR Adaptive, service-oriented architecture, software development process",,,,,,,,"<Das V-Modell: der Standard für die Softwareentwicklung mit Praxisleitfaden, {eid: 0003635013}>, <Anwendungsorientierte Übersicht kommerzieller Fahrzeug-Simulations-Systeme, {eid: 85139126764}>, <Hardware-in-the-loop simulation for the design and testing of engine-control systems, {eid: 0032628973}>, <None, {eid: 85066461200}>, <None, {eid: 85118775919}>, <Progress on the AUTOSAR Adaptive Platform for Intelligent Vehicles, {eid: 85139132955}>, <An Overview of Automotive Service-Oriented Architectures and Implications for Security Countermeasures, {eid: 85147696411}>, <None, {eid: 70350685372}>, <None, {eid: 4644233230}>, <Model Predictive HVAC Control with disturbance variable forecasting for city buses, {eid: 85119400006}>, <None, {eid: 85111610627}>, <Future Automotive Architecture and the Impact of IT Trends, {eid: 85028048781}>, <None, {eid: 85139138777}>, <Model-Based Automotive Software Development, {eid: 85105764504}>, <None, {eid: 84892106390}>, <None, {eid: 77954399574}>",,,Association for Computing Machinery,,,2022-05-12,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85139087126
8,,"Tavassoli S. (AUID: 57219113407), Khosravi R. (AUID: 56265703900), Damasceno C.D.N. (AUID: 57125912500), Mousavi M.R. (AUID: 7005703024)",,Adaptive behavioral model learning for software product lines,2022,"26th ACM International Systems and Software Product Line Conference, ASPLC 2022",,,,,,,8,10.1145/3546932.3546991,https://www.doi.org/10.1145/3546932.3546991,"<University of Tehran>, <Radboud University Nijmegen>, <Kings College London>",,"© 2022 ACM.Behavioral models enable the analysis of the functionality of software product lines (SPL), e.g., model checking and model-based testing. Model learning aims to construct behavioral models. Due to the commonalities among the products of an SPL, it is possible to reuse the previously-learned models during the model learning process. In this paper, an adaptive approach, called PL∗, for learning the product models of an SPL is presented based on the well-known L∗ algorithm. In this method, after learning each product, the sequences in the final observation table are stored in a repository which is used to initialize the observation table of the remaining products. The proposed algorithm is evaluated on two open-source SPLs and the learning cost is measured in terms of the number of rounds, resets, and input symbols. The results show that for complex SPLs, the total learning cost of PL∗ is significantly lower than that of the non-adaptive method in terms of all three metrics. Furthermore, it is observed that the order of learning products affects the efficiency of PL∗. We introduce a heuristic to determine an ordering which reduces the total cost of adaptive learning.","adaptive model learning, automata learning, finite state machines, software product lines",,,,,,,,"<Reverse Engineering Feature Models from Software Configurations using Formal Concept Analysis, {eid: 84961377139}>, <Learning Regular Sets from Queries and Counterexamples, {eid: 0023453626}>, <A Development Process for Feature-Oriented Product Lines, {eid: 85045581970}>, <Automated analysis of feature models 20 years later: A literature review, {eid: 77955227439}>, <Verification of evolving software via component substitutability analysis, {eid: 44349129704}>, <A Greedy Heuristic for the Set-Covering Problem, {eid: 0000301097}>, <None, {eid: 77954732987}>, <None, {eid: 84864250191}>, <Software product lines-practices and patterns, {eid: 0004161809}>, <Learning from difference: An automated approach for learning family models from software product lines, {eid: 85123041275}>, <Learning to Reuse: Adaptive Model Learning for Evolving Systems, {eid: 85076982200}>, <Learning by sampling: Learning behavioral family models from software product lines, {eid: 85099082851}>, <LIFTS: Learning Featured Transition Systems, {eid: 85115186006}>, <Validated Test Models for Software Product Lines: Featured Finite State Machines, {eid: 85018251728}>, <Variability in Software Systems-A Systematic Literature Review, {eid: 84897604910}>, <None, {eid: 0003690974}>, <Adaptive Model Checking, {eid: 84888270231}>, <Inferring Finite State Machines Without Reset Using State Identification Sequences, {eid: 84952837398}>, <Inferring FSM Models of Systems Without Reset, {eid: 85051141395}>, <Reverse Engineering Feature Models from Programs Feature Sets, {eid: 83455213219}>, <Adaptive Learning for Learn-Based Regression Testing, {eid: 85053602861}>, <Matplotlib: A 2D graphics environment, {eid: 34247493236}>, <Model Inference and Testing, {eid: 84875297940}>, <Properties of Realistic Feature Models Make Combinatorial Testing of Product Lines Feasible, {eid: 80054081086}>, <None, {eid: 23744500479}>, <None, {eid: 0003512056}>, <The SAT4J library, Release 2. 2. System Description, {eid: 79959232722}>, <Deep Software Variability: Towards Handling Cross-Layer Configuration, {eid: 85101094475}>, <None, {eid: 84900579482}>, <None, {eid: 84868286575}>, <Learning software configuration spaces: A systematic literature review, {eid: 85114450561}>, <Automated and Scalable T-wise Test Case Generation Strategies for Software Product Lines, {eid: 77954510052}>, <LearnLib: A Library for Automata Learning and Experimentation, {eid: 33745790495}>, <Extraction of Feature Models from Formal Contexts, {eid: 80052652058}>, <Feature Diagrams: A Survey and a Formal Semantics, {eid: 41149124129}>, <Inferring Mealy Machines, {eid: 70649106324}>, <SMT-based variability analyses in FeatureIDE, {eid: 85097615618}>, <Empirical assessment of generating adversarial configurations for software product lines, {eid: 85099278930}>, <A Classification and Survey of Analysis Strategies for Software Product Lines, {eid: 84905827308}>, <FeatureIDE: An extensible framework for featureoriented software development, {eid: 84885591794}>, <Model learning, {eid: 85010790123}>, <None, {eid: 84892241478}>, <On the Notion of Variability in Software Product Lines, {eid: 84954068722}>, <A classification of product sampling for software product lines, {eid: 85055486094}>, <Active Continuous Quality Control, {eid: 84880516456}>, <Improving model inference in industry by combining active and passive learning, {eid: 85064164636}>",,,"Association for Computing Machinery, Inc",,,2022-09-12,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85138202894
9,,"Huistra D. (AUID: 57201675554), Meijer J. (AUID: 56494267100), van de Pol J. (AUID: 6603761101)",,Adaptive Learning for Learn-Based Regression Testing,2018,"23rd International Conference on Formal Methods for Industrial Critical Systems, FMICS 2018",,,,,,,9,10.1007/978-3-030-00244-2_11,https://www.doi.org/10.1007/978-3-030-00244-2_11,"<Formal Methods and Tools, University of Twente>",,"© 2018, Springer Nature Switzerland AG.Regression testing is an important activity to prevent the introduction of regressions into software updates. Learn-based testing can be used to automatically check new versions of a system for regressions on a system level. This is done by learning a model of the system and model checking this model for system property violations. Learning the model of a large system can take an unpractical amount of time however. In this work we investigate if the concept of adaptive learning can improve the learning speed of a model in a regression testing scenario. We have performed several experiments with this technique on two systems: ToDoMVC and SSH. We find that there can be a large benefit to using adaptive learning. In addition we find three main factors that influence the benefit of adaptive learning. There are however also some shortcomings to adaptive learning that should be investigated further.",,,,,,,,,"<Perspectives in software engineering, {eid: 84976803868}>, <A study of effective regression testing in practice, {eid: 0031335528}>, <Unit testing: Test early, test often, {eid: 20444476163}>, <Automated black-box testing of functional correctness using function approximation, {eid: 23744513315}>, <LTSmin: High-performance language-independent model checking, {eid: 84926646213}>, <Adaptive model checking, {eid: 33845709367}>, <Introduction to active automata learning from a practical perspective, {eid: 79959277296}>, <Learning regular sets from queries and counterexamples, {eid: 0023453626}>, <Inference of finite automata using homing sequences, {eid: 34548093754}>, <Testing software design modeled by finite-state machines, {eid: 0017973244}>, <Active continuous quality control, {eid: 84880516456}>, <Model-based testing without models: The TodoMVC case study, {eid: 85032678181}>, <Model learning and model checking of SSH implementations, {eid: 85027694235}>, <Minimal separating sequences for all pairs of states, {eid: 84960446124}>",,,Springer Verlag,,,2018-09-03,,,,,,,eng,,Book Series,,,,2-s2.0-85053602861
10,,"Kampik T. (AUID: 56728735900), Malhi A. (AUID: 56663163300), Främling K. (AUID: 6506103412)",,Agent-based business process orchestration for IoT,2019,"19th IEEE/WIC/ACM International Conference on Web Intelligence, WI 2019",,,,,,,2,10.1145/3350546.3352554,https://www.doi.org/10.1145/3350546.3352554,"<Umeå University>, <Signavio GmbH>, <Aalto University>",,"© 2019 Association for Computing Machinery.The so-called Internet of Things is of increasing importance for facilitating productivity across industries, i.e., by connecting sensors with manufacturing lines and IT system landscapes with an increasing degree of autonomy. In this context, a common challenge is enabling reasonable trade-offs between structure and control on the one hand and flexibility and human-like intelligent behavior on the other hand. To address this challenge, we establish the need for and requirements of a hybrid IoT-/agent-based business process orchestration architecture that utilizes open standards. We propose a four-layered architecture, which integrates autonomous agents and business process orchestration for IoT/agents, and provide a running example for a supply chain management (purchasing) use case.","Business Process Management, Internet of Things, Orchestration",,,,,,,,"<A software product line process to develop agents for the iot, {eid: 84936970589}>, <BDI-agents for agile goal-oriented business processes, {eid: 84899955114}>, <The challenge of real-time multi-agent systems for enabling IoT and CPS, {eid: 85031005547}>, <A decade in hindsight: The missing bridge between multi-agent systems and the world wide web, {eid: 85076162268}>, <Agent-oriented cooperative smart objects: From IoT system design to implementation, {eid: 85055223459}>, <None, {eid: 85074779163}>, <Semantic business process management: A vision towards using semantic web services for business process management, {eid: 33845510337}>, <Agent-based business process management, {eid: 0001622522}>, <JS-SON - A minimalistic Javascript BDI agent library, {eid: 85068604708}>, <Business ecosystems as institutions of participation: A systems perspective on community-developed platforms, {eid: 84968811684}>, <Monitoring and managing IoT applications in smart cities using kubernetes, {eid: 85074772978}>, <Agents of Things (AOT): An intelligent operational concept of the Internet of Things (IoT), {eid: 84908192151}>, <None, {eid: 77957994724}>, <Towards interoperable, cognitive and autonomic IoT systems: An agent-based approach, {eid: 85015257462}>, <Specifying and verifying cross-organizational business models: An agent-oriented approach, {eid: 84865693874}>, <None, {eid: 79955792399}>, <Making work flow: On the application of petri nets to business process management, {eid: 84879104765}>, <Robotic process automation, {eid: 85049777330}>, <None, {eid: 85074793232}>",,,"Association for Computing Machinery, Inc",,,2019-10-13,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85074752477
11,,"Haindl P. (AUID: 14522503900), Plosch R. (AUID: 6506322162), Korner C. (AUID: 57215489438)",,An Extension of the QUAMOCO Quality Model to Specify and Evaluate Feature-Dependent Non-Functional Requirements,2019,"45th Euromicro Conference on Software Engineering and Advanced Applications, SEAA 2019",,,,,,,5,10.1109/SEAA.2019.00012,https://www.doi.org/10.1109/SEAA.2019.00012,"<Institute of Business Informatics, Department of Software Engineering, Johannes Kepler University>, <Siemens AG, Corporate Technology>",,"© 2019 IEEE.Features in a software system usually must satisfy different quality expectations originating from the various stakeholders of a software system, ranging from direct users to the software manufacturer. As an example, the design quality of the source code will likely be more important if the associated feature is frequently used by customers or if it has strategic value for the software manufacturer. In order to effectively approach these qualitative subtleties, we need a means to specify non-functional requirements on the level of individual software features. Fine-grained specification of non-functional requirements on feature level respects their individual relevance for a feature and facilitates deriving suitable constraints for them. Particularly in DevOps-driven software projects with operational data the fulfillment of non-functional requirements for individual features can then continuously be evaluated. This guides software engineers in meeting these quality expectations on a much finer level than if treated uniformly across the software system. In this paper we present an extension of the QUAMOCO meta quality model for specifying and evaluating non-functional requirements on feature level. While the existing meta model focused on static quality measures, the extension of the meta model now also captures dynamic measures which accumulate during feature execution. An exploratory case study based on the results from an interview study shows the completeness of the approach for specifying and evaluating feature-dependent non-functional requirements.","Constraint Specification, Non-Functional Requirements, Operational Software Quality, Quality Modeling",,,,,,,,"<Feature-Oriented Software Development, {eid: 84894201602}>, <Operationalised product quality models and assessment: The Quamoco approach, {eid: 84932604209}>, <Beyond continuous delivery: An empirical investigation of continuous deployment challenges, {eid: 85042364114}>, <A Systematic Mapping Study of Quality Assessment Models for Software Products, {eid: 85043486651}>, <The Quamoco Tool Chain for Quality Modeling and Assessment, {eid: 79959873636}>, <A Quality Model for Actionable Analytics in Rapid Software Development, {eid: 85055775949}>, <Are Comprehensive Quality Models Necessary for Evaluating Software Quality, {eid: 84929616696}>, <Evaluating different i∗-based approaches for selecting functional requirements while balancing and optimizing non-functional requirements: A controlled experiment, {eid: 85054055964}>, <Dealing with Non-Functional Requirements in Model-Driven Development, {eid: 78650345309}>, <Modeling and verification of Functional and Non-Functional Requirements of ambient Self-Adaptive Systems, {eid: 84937425621}>, <Goal-directed requirements acquisition, {eid: 0027574423}>, <Adaptive monitoring of software requirements, {eid: 78650346140}>, <Supporting Self-Adaptation via Quantitative Verification and Sensitivity Analysis at Run Time, {eid: 84962298846}>, <Dealing with Non-Functional Requirements for Adaptive Systems via Dynamic Software Product-Lines, {eid: 84883565751}>, <Towards a Monitoring Middleware for Cloud Services, {eid: 84953392422}>, <Comprehensive Explanation of SLA Violations at Runtime, {eid: 84903125151}>, <A Research Preview on TAICOS-Tailoring Stakeholder Interests to Task-Oriented Functional Requirements, {eid: 85080511289}>, <Towards Continuous Quality: Measuring and Evaluating Feature-Dependent Non-Functional Requirements in DevOps, {eid: 85066466176}>, <Towards Automated Data Integration in Software Analytics, {eid: 85080590973}>, <Muse: A framework for measuring object-oriented design quality, {eid: 84990913604}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2019-08-28,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85076012146
12,,"Sandobalin J. (AUID: 57196234105), Insfran E. (AUID: 6506793505), Abrahao S. (AUID: 8211929700)",,An Infrastructure Modelling Tool for Cloud Provisioning,2017,"14th IEEE International Conference on Services Computing, SCC 2017",,,,,,,23,10.1109/SCC.2017.52,https://www.doi.org/10.1109/SCC.2017.52,"<Departamento de Informática y Ciencias de la Computación, Escuela Politëcnica Nacional>, <Departamento de Sistemas Informáticos y Computación, Universitat Politêcnica de Valéncia>",,"© 2017 IEEE.Cloud computing offers computing, network, and storage capabilities through services that abstract the capabilities of the underlying hardware. Currently, a variety of tools exist that manage the infrastructure provisioning and use scripts to define the final state of the hardware to be deployed in the cloud. However, there are major challenges that need to be addressed to automate the infrastructure management so that they are effectively used in initiatives such as DevOps. In particular, the management of Infrastructure as a Code (IaC) is one of the most important technical challenges to support activities such as the integration, deployment, and continuous delivery of applications. To address this problem, we present a support for the management of DevOps tools, through the definition of a Domain Specific Language (DSL) based on the concept of Infrastructure as a Code, and a tool that supports this language allowing to model the final state of a provisioning infrastructure in the cloud and generating the provisioning scripts for the Amazon Web Services (AWS) platform. The proposed tool reduces the work for development and operations personnel and facilitates their communication.","Cloud Services, DevOps, Infrastructure as Code, Infrastructure Provisioning, Model Driven Development",,,,,,,,"<None, {eid: 84891585028}>, <None, {eid: 84875493824}>, <None, {eid: 85026761147}>, <None, {eid: 84902315977}>, <Devopslang-bridging the gap between development and operations, {eid: 84907069490}>, <Streamlining DevOps automation for Cloud applications using TOSCA as standardized metamodel, {eid: 84958740530}>, <Standards-based DevOps automation and integration using TOSCA, {eid: 84946692273}>, <UML-based cloud application modeling with libraries, profiles, and templates, {eid: 84911965669}>, <Cloud application modelling and execution language (CAMEL) and the PaaSage workflow, {eid: 84966659601}>, <Cloud work bench-Infrastructure-As-code based cloud benchmarking, {eid: 84937876140}>, <MORE: A model-driven operation service for cloud-based IT systems, {eid: 84989959655}>, <None, {eid: 85032346645}>, <None, {eid: 84878326137}>, <None, {eid: 74549142762}>, <Eugenia: Towards disciplined and automated development of GMF-based graphical model editors, {eid: 84923537629}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2017-06-25,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85032348388
13,,"Ries B. (AUID: 22433560900), Guelfi N. (AUID: 8960262200), Jahić B. (AUID: 57193837477)",,An MDE Method for Improving Deep Learning Dataset Requirements Engineering using Alloy and UML,2021,"9th International Conference on Model-Driven Engineering and Software Development, MODELSWARD 2021",,,,,,,0,10.5220/0010216600410052,https://www.doi.org/10.5220/0010216600410052,<University of Luxembourg>,,"© 2021 by SCITEPRESS – Science and Technology Publications, Lda. All rights reserved.Since the emergence of deep learning (DL) a decade ago, only few software engineering development methods have been defined for systems based on this machine learning approach. Moreover, rare are the DL approaches addressing specifically requirements engineering. In this paper, we define a model-driven engineering (MDE) method based on traditional requirements engineering to improve datasets requirements engineering. Our MDE method is composed of a process supported by tools to aid customers and analysts in eliciting, specifying and validating dataset structural requirements for DL-based systems. Our model driven engineering approach uses the UML semi-formal modeling language for the analysis of datasets structural requirements, and the Alloy formal language for the requirements model execution based on our informal translational semantics. The model executions results are then presented to the customer for improving the dataset validation activity. Our approach aims at validating DL-based dataset structural requirements by modeling and instantiating their datatypes. We illustrate our approach with a case study on the requirements engineering of the structure of a dataset for classification of five-segments digits images.","Alloy, EMF, Model-driven Engineering, Requirements Engineering, Sirius, Software Engineering",,,,,,,,"<Software Engineering for Machine Learning: A Case Study, {eid: 85072111655}>, <Implementing Domain-Specific Languages with Xtext and Xtend: Learn How to Implement a DSL with Xtext and Xtend Using Easy-to-Understand Examples and Best Practices, {eid: 84906918277}>, <Preface to MDE Intelligence: 1st Workshop on Artificial Intelligence and Model-Driven Engineering, {eid: 85075941198}>, <None, {eid: 85173960172}>, <Scenic: A Language for Scenario Specification and Scene Generation, {eid: 85067686177}>, <None, {eid: 85173973444}>, <Trials and tribulations of developers of intelligent systems: A field study, {eid: 85000434626}>, <None, {eid: 33748952774}>, <Software Engineering for Dataset Augmentation using Generative Adversarial Networks, {eid: 85082854426}>, <Specifying Key- Properties to Improve the Recognition Skills of Neural Networks, {eid: 85103020670}>, <Software Engineering for Machine- Learning Applications: The Road Ahead, {eid: 85054380679}>, <None, {eid: 85103027595}>, <None, {eid: 0042297467}>, <None, {eid: 84878696848}>, <None, {eid: 77957994724}>, <None, {eid: 85055572256}>, <None, {eid: 85068600733}>, <DeepXplore: Automated Whitebox Testing of Deep Learning Systems, {eid: 85041685057}>, <None, {eid: 84864328836}>, <None, {eid: 85103013243, doi: 10.5281/zenodo.4020938}>, <From UML to Alloy and back again, {eid: 78650498522}>, <None, {eid: 0003885423}>, <None, {eid: 14944348412}>, <None, {eid: 85090115678}>, <None, {eid: 85048866905}>, <Kodkod: A Relational Model Finder, {eid: 37149013755}>, <Sirius: A rapid development of DSM graphical editor, {eid: 84908620372}>, <None, {eid: 85078017230}>, <None, {eid: 84964923424}>",,,"Science and Technology Publications, Lda",,,2021-02-08,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85173980697
14,,"Hu G. (AUID: 56096917700), Zhu L. (AUID: 58259694400), Yang J. (AUID: 36676080800)",,"AppFlow: Using machine learning to synthesize robust, reusable UI tests",2018,"26th ACM Joint European Software Engineering Conference and Symposium on the Foundations of Software Engineering, ESEC/FSE 2018",,,,,,,50,10.1145/3236024.3236055,https://www.doi.org/10.1145/3236024.3236055,<Columbia University>,,"© 2018 Association for Computing Machinery.UI testing is known to be difficult, especially as today's development cycles become faster. Manual UI testing is tedious, costly and errorprone. Automated UI tests are costly to write and maintain. This paper presents AppFlow, a system for synthesizing highly robust, highly reusable UI tests. It leverages machine learning to automatically recognize common screens and widgets, relieving developers from writing ad hoc, fragile logic to use them in tests. It enables developers to write a library of modular tests for the main functionality of an app category (e.g., an ""add to cart"" test for shopping apps). It can then quickly test a new app in the same category by synthesizing full tests from the modular ones in the library. By focusing on the main functionality, AppFlow provides ""smoke testing"" requiring little manual work. Optionally, developers can customize AppFlow by adding app-specific tests for completeness. We evaluated AppFlow on 60 popular apps in the shopping and the news category, two case studies on the BBC news app and the JackThreads shopping app, and a user-study of 15 subjects on the Wish shopping app. Results show that AppFlow accurately recognizes screens and widgets, synthesizes highly robust and reusable tests, covers 46.6% of all automatable tests for Jackthreads with the tests it synthesizes, and reduces the effort to test a new app by up to 90%. Interestingly, it found eight bugs in the evaluated apps, including seven functionality bugs, despite that they were publicly released and supposedly went through thorough testing.","machine learning, mobile testing, test reuse, test synthesis, UI recognition, UI testing",,,,,,,,"<MobiGUITAR: Automated model-based testing of mobile apps, {eid: 84940398128}>, <None, {eid: 85058297827}>, <Targeted and depth-first exploration for systematic testing of android apps, {eid: 84888803377}>, <None, {eid: 85058284121}>, <Automated test migration for mobile apps, {eid: 85049670732}>, <None, {eid: 33846516584}>, <A training algorithm for optimal margin classifiers, {eid: 0026966646}>, <Gui testing using computer vision, {eid: 77953968759}>, <None, {eid: 82955222053}>, <Guided gui testing of android apps with minimal restart and approximate learning, {eid: 84888186921}>, <Water: Web application test repair, {eid: 80052146445}>, <Pattern based gui testing for mobile applications, {eid: 84921054650}>, <None, {eid: 85058299067}>, <Histograms of oriented gradients for human detection, {eid: 33645146449}>, <Xiao: Tuning code clones at hands of engineers in practice, {eid: 84872120272}>, <Monkey see, monkey do: Effective generation of gui tests with inferred macro events, {eid: 84984914603}>, <None, {eid: 85058283016}>, <None, {eid: 85058324992}>, <None, {eid: 85048958207}>, <Mobile application testing: A tutorial, {eid: 84898431839}>, <Reran: Timing- and touch-sensitive record and replay for android, {eid: 84886384122}>, <None, {eid: 85054571803}>, <None, {eid: 85058303621}>, <None, {eid: 85058347702}>, <None, {eid: 85058285290}>, <None, {eid: 85058275405}>, <None, {eid: 85058309135}>, <None, {eid: 85058309135}>, <None, {eid: 85058275151}>, <None, {eid: 85058307570}>, <None, {eid: 85058332727}>, <None, {eid: 85058322814}>, <Mosaic: Cross-platform userinteraction record and replay for the fragmented android ecosystem, {eid: 84937510476}>, <Waterfall: An incremental approach for repairing record-replay tests of web applications, {eid: 84997523775}>, <Utilizing user interface models for automated instantiation and execution of system tests, {eid: 80052147484}>, <Efficiently, effectively detecting mobile app bugs with appdoctor, {eid: 84900457247}>, <Versatile yet lightweight record-and-replay for android, {eid: 84958681574}>, <Repairing gui test suites using a genetic algorithm, {eid: 77954494484}>, <None, {eid: 85053131462}>, <None, {eid: 85058268105}>, <Alloy: A lightweight object modelling notation, {eid: 0038507387}>, <None, {eid: 85058328027}>, <Adam: A method for stochastic optimization, {eid: 85083951076}>, <None, {eid: 85058334044}>, <Record and replay for android: Are we there yet in industrial cases?, {eid: 85030787984}>, <Automated test-case generation by cloning, {eid: 84864273546}>, <Augusto: Exploiting popular functionalities for the generation of semantic gui tests with oracles, {eid: 85051470893}>, <Pr-miner: Automatically extracting implicit programming rules and detecting violations in large software code, {eid: 32344452883}>, <None, {eid: 85048417784}>, <None, {eid: 85058279539}>, <On automatically detecting similar android apps, {eid: 84979735975}>, <Dynodroid: An input generation system for android apps, {eid: 84883731598}>, <Evodroid: Segmented evolutionary testing of android apps, {eid: 84986893033}>, <Sapienz: Multi-objective automated testing for android applications, {eid: 84984889128}>, <Crowd intelligence enhances automated mobile testing, {eid: 85041431174}>, <Gk-tail+: An efficient approach to learn precise software models, {eid: 85058309838}>, <Taming google-scale continuous testing, {eid: 85026802755}>, <An event-flow model of gui-based applications for testing, {eid: 34548415509}>, <Using a goal-driven approach to generate test cases for guis, {eid: 0032643001}>, <Hierarchical gui test case generation using automated planning, {eid: 0035249240}>, <Regression testing of guis, {eid: 1542317066}>, <Leveraging existing tests in automated test generation for web applications, {eid: 84908655637}>, <Reducing combinatorics in gui testing of android applications, {eid: 84971486983}>, <None, {eid: 85058273754}>, <Api code recommendation using statistical learning from fine-grained changes, {eid: 84997525166}>, <None, {eid: 85056738092}>, <In search of an understandable consensus algorithm., {eid: 85077435090}>, <Scikit-learn: Machine learning in python, {eid: 80555140075}>, <Understanding myths and realities of test-suite evolution, {eid: 84871298070}>, <Mobiplay: A remote execution based record-and-replay tool for mobile applications, {eid: 84971483998}>, <Economic perspectives in test automation: Balancing automated and manual testing with opportunity cost, {eid: 77953566595}>, <Efficient gui test generation by learning from tests of other apps, {eid: 85049684333}>, <Automatic and scalable fault detection for mobile applications, {eid: 84903155469}>, <Code completion with statistical language models, {eid: 84907033055}>, <None, {eid: 85058325648}>, <Learning representations by back-propagating errors, {eid: 0003444648}>, <Sourcerercc: Scaling code clone detection to big-code, {eid: 84971472368}>, <A survey on metamorphic testing, {eid: 84988891109}>, <An overview of the tesseract ocr engine, {eid: 51149098551}>, <Unitplus: Assisting developer testing in eclipse, {eid: 77949375656}>, <Identifying functionally similar code in complex codebases, {eid: 84979743043}>, <Guided, stochastic model-based gui testing of android apps, {eid: 85030779618}>, <Cloneworks: A fast and flexible large-scale near-miss clone detection tool, {eid: 85026733449}>, <Experiences of systemlevel model-based gui testing of an android application, {eid: 79958720486}>, <Acomment: Mining annotations from comments and code to detect interrupt related concurrency bugs, {eid: 79959897812}>, <None, {eid: 63049133602}>, <None, {eid: 85050345407}>, <Automation of gui testing using a model-driven approach, {eid: 77953569322}>, <Deep learning code fragments for code clone detection, {eid: 84989189618}>, <The effect of modularization and comments on program comprehension, {eid: 85040271328}>, <None, {eid: 85058349214}>, <Automated modularization of gui test cases, {eid: 84951811619}>, <Automated transplantation and differential testing for clones, {eid: 85027688963}>",,,"Association for Computing Machinery, Inc",,,2018-11-04,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85058288795
15,,"Atouani A. (AUID: 57367338500), Kirchhof J.C. (AUID: 57004585200), Kusmenko E. (AUID: 57195075206), Rumpe B. (AUID: 55861872700)",,Artifact and reference models for generative machine learning frameworks and build systems,2021,"20th ACM SIGPLAN International Conference on Generative Programming: Concepts and Experiences, GPCE 2021, co-located with the ACM SIGPLAN conference on Systems, Programming, Languages, and Applications: Software for Humanity, SPLASH 2021",,,,,,,9,10.1145/3486609.3487199,https://www.doi.org/10.1145/3486609.3487199,<Rwth Aachen University>,,"© 2021 ACM.Machine learning is a discipline which has become ubiquitous in the last few years. While the research of machine learning algorithms is very active and continues to reveal astonishing possibilities on a regular basis, the wide usage of these algorithms is shifting the research focus to the integration, maintenance, and evolution of AI-driven systems. Although there is a variety of machine learning frameworks on the market, there is little support for process automation and DevOps in machine learning-driven projects. In this paper, we discuss how metamodels can support the development of deep learning frameworks and help deal with the steadily increasing variety of learning algorithms. In particular, we present a deep learning-oriented artifact model which serves as a foundation for build automation and data management in iterative, machine learning-driven development processes. Furthermore, we show how schema and reference models can be used to structure and maintain a versatile deep learning framework. Feasibility is demonstrated on several state-of-the-art examples from the domains of image and natural language processing as well as decision making and autonomous driving.","artifact models, artificial intelligence, build systems, compiler, machine learning, metamodeling, reference models, training",,,,,,,,"<Tensorflow: A system for large-scale machine learning, {eid: 85075670920}>, <Personalized and Automatic Model Repairing using Reinforcement Learning, {eid: 85075917035}>, <Improving Model Repair through Experience Sharing, {eid: 85089499795}>, <Towards an Artifact Model for Requirements to IT-enabled Product Service Systems, {eid: 84879972264}>, <On the Need for Megamodels, {eid: 84911928640}>, <None, {eid: 85090303288}>, <A logical approach to systems engineering artifacts: semantic relationships and dependencies beyond traceability-from requirements to functional and architectural views, {eid: 85029497266, doi: 10.1007/s10270-017-0619-4}>, <On the Need for Artifact Models in Model-Driven Systems Engineering Projects, {eid: 85042655599}>, <None, {eid: 85073625968}>, <DeepDriving: Learning affordance for direct perception in autonomous driving, {eid: 84973888858}>, <None, {eid: 85057019815}>, <Artefact-based requirements engineering: the AMDiRE approach, {eid: 84941994467}>, <Elements of Reusable Object-Oriented Software, {eid: 0346608138}>, <Modeling Deep Reinforcement Learning Based Architectures for Cyber-Physical Systems, {eid: 85075937600}>, <None, {eid: 85120869042}>, <None, {eid: 85147701586}>, <None, {eid: 85042276044}>, <The next evolution of MDE: a seamless integration of machine learning into domain modeling, {eid: 85019693871}>, <On the Unification of Megamodels, {eid: 85040140135}>, <The rationale of powertype-based metamodelling to underpin software development methodologies, {eid: 84863662948}>, <None, {eid: 85108965376}>, <Context-oriented programming, {eid: 43049088796}>, <None, {eid: 85116545679}>, <None, {eid: 84941620184}>, <MontiThings: Model-driven Development and Deployment of Reliable IoT Applications, {eid: 85116410296, doi: 10.1016/j.jss.2021.111087}>, <A metamodel family for role-based modeling and programming languages, {eid: 84921724705}>, <None, {eid: 85057255740}>, <Modeling and Training of Neural Processing Systems, {eid: 85075936455}>, <On the Engineering of AI-Powered Systems, {eid: 85079270211}>, <Modeling Architectures of Cyber-Physical Systems, {eid: 85025124378}>, <Highly-Optimizing and Multi-Target Compiler for Embedded System Models: C++ Compiler Toolchain for the Component and Connector Language EmbeddedMontiArc, {eid: 85056871758}>, <DIRE: A Neural Approach to Decompiled Identifier Naming, {eid: 85078913653}>, <Gradient-based learning applied to document recognition, {eid: 0032203257}>, <MNIST handwritten digit database, {eid: 2442474173}>, <None, {eid: 84965135289}>, <None, {eid: 84987947153}>, <Human-level control through deep reinforcement learning, {eid: 84924051598}>, <Automated Classification of Metamodel Repositories: A Machine Learning Approach, {eid: 85076112592, doi: 10.1109/MODELS.2019.00011}>, <Convolutional neural networks for enhanced classification mechanisms of metamodels, {eid: 85096121119}>, <ROS: an open-source Robot Operating System, {eid: 77957352104}>, <Validating UML models and OCL constraints, {eid: 84957023982}>, <Hidden technical debt in machine learning systems, {eid: 84965107309}>, <Recursive deep models for semantic compositionality over a sentiment treebank, {eid: 84926358845}>, <On the representation of roles in objectoriented and conceptual modelling, {eid: 0034301679}>, <None, {eid: 85038368581}>, <Multi-Modal Attention Network Learning for Semantic Source Code Retrieval, {eid: 85074667252, doi: 10.1109/ASE.2019.00012}>, <TORCS, the open racing car simulator, {eid: 76249122848}>, <Accelerating the Machine Learning Lifecycle with MLflow, {eid: 85072938346}>",,,"Association for Computing Machinery, Inc",,,2021-10-17,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85120851738
16,,"Sinha S. (AUID: 55636320325), Astigarraga T. (AUID: 36348278000), Hull R.B. (AUID: 35583009200), Jean-Louis N. (AUID: 57215346300), Sreedhar V. (AUID: 6603784989), Chen H. (AUID: 55902657400), Hu L.X. (AUID: 57219766265), Carpi F.E. (AUID: 57221530193), Cannata J.A.B. (AUID: 57221529362), Loach W. (AUID: 57221522530)",,Auto-generation of domain-specific systems: Cloud-hosted devops for business,2020,"13th IEEE International Conference on Cloud Computing, CLOUD 2020",,,,,,,3,10.1109/CLOUD49709.2020.00041,https://www.doi.org/10.1109/CLOUD49709.2020.00041,"<IBM T.J. Watson Research Center>, <New York University>, <University of Illinois>, <IBM Research>, <IBM United Kingdom>",,"© 2020 IEEE.The wide use of spreadsheet-based solutions for business processes illustrates the importance of giving business users simple mechanisms for specifying and managing their processes. However, spreadsheet-based solutions are hard to maintain, reuse, integrate, and scale. This paper describes an approach for supporting 'DevOps for business users' that enables business-level users to manage the full lifecycle of a large class of cloud-hosted business processes. The approach builds on DevOps for software engineering, but removes software engineers from the loop. Unlike general-purpose 'low code' business process management systems, the approach incorporates aspects of a processing domain (e.g., billing) to create a DevOps experience that business users can master easily. In the approach, business users follow an agile 'specify-check-generate-deploy' methodology, enabling them to rapidly and iteratively generate and operationalize cloud-hosted processing systems, with little or no assistance from IT staff. We demonstrate and evaluate the approach using a system built for the billing application area, developed at IBM, which provides technology support and maintenance services for numerous clients, each with different billing needs and logic. The paper describes the system, requirements, empirical evaluation of key components, and lessons learned.","business rules language, Cloud application, code generation, deployment automation, DevOps, model driven engineering",,,,,,,,"<None, {eid: 84943326563}>, <A survey of DevOps concepts and challenges, {eid: 85075608026}>, <Model-driven engineering, {eid: 33344465743}>, <None, {eid: 0141684320}>, <None, {eid: 85099338842}>, <None, {eid: 85099381543}>, <None, {eid: 0004072686}>, <None, {eid: 85099405766}>, <None, {eid: 85099361240}>, <BizDevOps and the role of S-BPM, {eid: 85099389868}>, <Program synthesis, {eid: 85034980977}>, <Constraint-based automatic test data generation, {eid: 0026222968}>, <Search-based software test data generation: A survey: Research articles, {eid: 3142725712}>, <Automatic verification of data-centric business processes, {eid: 70349144063}>, <None, {eid: 0012532168}>, <None, {eid: 38049136332}>, <None, {eid: 85099346090}>, <None, {eid: 84937430000}>, <None, {eid: 79952255756}>, <None, {eid: 85099340748}>, <Empowering business-level blockchain users with a rules framework for smart contracts, {eid: 85056839615}>, <None, {eid: 85062980413}>",,,IEEE Computer Society,,,2020-10-18,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85099388799
17,,"Nguyen P.T. (AUID: 57209915714), Di Rocco J. (AUID: 55877197500), Di Ruscio D. (AUID: 57201633392), Pierantonio A. (AUID: 15064742800), Iovino L. (AUID: 36961136600)",,Automated Classification of Metamodel Repositories: A Machine Learning Approach,2019,"22nd ACM/IEEE International Conference on Model Driven Engineering Languages and Systems, MODELS 2019",,,,,,,36,10.1109/MODELS.2019.00011,https://www.doi.org/10.1109/MODELS.2019.00011,"<Università degli Studi dellAquila>, <Gran Sasso Science Institute>",,"© 2019 IEEE.Manual classification methods of metamodel repositories require highly trained personnel and the results are usually influenced by the subjectivity of human perception. Therefore, automated metamodel classification is very desirable and stringent. In this work, Machine Learning techniques have been employed for metamodel automated classification. In particular, a tool implementing a feed-forward neural network is introduced to classify metamodels. An experimental evaluation over a dataset of 555 metamodels demonstrates that the technique permits to learn from manually classified data and effectively categorize incoming unlabeled data with a considerably high prediction rate: the best performance comprehends 95.40% as success rate, 0.945 as precision, 0.938 as recall, and 0.942 as F1 score.","Machine learning, metamodel classification, metamodel repositories",,,,,,,,"<A survey of cross-validation procedures for model selection, {eid: 77956649096}>, <Neural network classification and novelty detection, {eid: 0037143140}>, <None, {eid: 84977499772}>, <Automatic model repair using reinforcement learning, {eid: 85063099879}>, <Automated clustering of metamodel repositories, {eid: 84976614553}>, <None, {eid: 84872577736}>, <A survey of clustering data mining techniques, {eid: 84892062680}>, <A classification of stereotypes for object-oriented modeling languages, {eid: 78049335165}>, <None, {eid: 0003577150}>, <None, {eid: 0003487601}>, <Textual and content-based search in repositories of web application models, {eid: 84897519832}>, <None, {eid: 0003823795}>, <A suite of metamodels as a basis for a classification of visual languages, {eid: 16244390554}>, <Stochastic gradient learning in neural networks, {eid: 33847215211}>, <Towards model-driven engineering for big data analytics - An exploratory analysis of domain-specific languages for machine learning, {eid: 84902286420}>, <A classification system for visual programming languages, {eid: 0002315675}>, <Cognifying modeldriven software engineering, {eid: 85042643413}>, <Collaborative repositories in model-driven engineering software technology, {eid: 84928652460}>, <Measures of the amount of ecologic association between species, {eid: 0000250265}>, <Learning transformation rules from transformation examples: An approach based on relational concept analysis, {eid: 79951904922}>, <A few useful things to know about machine learning, {eid: 84867539048}>, <Term conflation for information retrieval, {eid: 0021649329}>, <Towards a standard-based domain-specific platform to solve machine learning-based problems, {eid: 85019734074}>, <The next evolution of MDE: A seamless integration of machine learning into domain modeling, {eid: 85040582253}>, <Model-driven tool integration with modelbus, {eid: 74549141750}>, <Supporting search for reusable software objects, {eid: 0001446945}>, <Data clustering: A review, {eid: 84893405732}>, <On the classification of Umls meta model extension mechanism, {eid: 35048816548}>, <Online img2uml repository: An online repository for uml models, {eid: 84925010640}>, <EMFStore: A model repository for EMF models, {eid: 77954724460}>, <A study of cross-validation and bootstrap for accuracy estimation and model selection, {eid: 85164392958}>, <Supervised machine learning: A review of classification techniques, {eid: 79955076643}>, <Introduction to the artificial neural networks, {eid: 84885571097}>, <Enriching reverse engineering with semantic clustering, {eid: 33846193700}>, <Bizycle: Model-based interoperability platform for software and data integration, {eid: 84911353560}>, <Text categorization with support vector machines. How to represent texts in input space?, {eid: 0036161242}>, <Reuse based analysis and clustering of requirements diagrams, {eid: 84976626873}>, <None, {eid: 85076082027}>, <FOCUS: A recommender system for mining API function calls and usage patterns, {eid: 85064745329}>, <None, {eid: 84946237421}>, <None, {eid: 84992604463}>, <An all-in-one convolutional neural network for face analysis, {eid: 85026311823}>, <Artificial neural networks as a classification method in the behavioural sciences, {eid: 0030609694}>, <None, {eid: 0004064633}>, <ThingML+: Augmenting model-driven software engineering for the internet of things with machine learning, {eid: 85063074611}>, <None, {eid: 34249990939}>, <Guest Editors introduction: Model-driven engineering, {eid: 33344465743}>, <Probabilistic models for personalizing web search, {eid: 84858033182}>, <How is open source affecting software development?, {eid: 0742321094}>, <Machine learning, social learning and the governance of self-driving cars, {eid: 85046709383}>, <Tool support for clustering large meta-models, {eid: 84965050980}>, <OptiML: An implicitly parallel domainspecific language for machine learning, {eid: 80053441759}>, <Introduction to multi-layer feed-forward neural networks, {eid: 0342871690}>, <Document representation and dimension reduction for text clustering, {eid: 48349100287}>, <None, {eid: 33748331276}>, <Forecasting with artificial neural networks:: The state of the art, {eid: 0003123930}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2019-09-15,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85076112592
18,,"Schneid K. (AUID: 57193762429), Stapper L. (AUID: 57429259800), Thone S. (AUID: 57940347400), Kuchen H. (AUID: 6602187523)",,Automated Regression Tests: A No-Code Approach for BPMN-based Process-Driven Applications,2021,"25th IEEE International Enterprise Distributed Object Computing Conference, EDOC 2021",,,,,,,10,10.1109/EDOC52215.2021.00014,https://www.doi.org/10.1109/EDOC52215.2021.00014,"<Münster University of Applied Sciences>, <University of Münster>",,"© 2021 IEEE.BPMN-based Process-Driven Applications (PDA) require less coding since they are not only based on source code, but also on executable process models. Automated testing of such model-driven applications gains growing relevance, and it becomes a key enabler if we want to found their development on continuous integration (CI) techniques.While process analysts are typically responsible for test case specifications from a business perspective, technically skilled process engineers take the responsibility for implementing the required test code. This is time-consuming and, due to their often different skills and backgrounds, might result in communication problems such as information losses and misunderstandings. This paper presents a new approach which enables an analyst to generate executable tests for PDAs without the need for manual coding. It consists of a sophisticated model analysis, a wizard-based specification of test cases, and a subsequent code generation. The resulting tests can easily be integrated into CI pipelines.The concept is underpinned by a user-friendly tool which has been evaluated in case studies and in real-world implementation projects from different industry sectors. During the evaluation, the prototype proved a more efficient test creation process and a higher test quality.","BPMN, Model-Based Testing, No-Code, Process-Driven Application",,,,,,,,"<Techniques for improving regression testing in continuous integration development environments, {eid: 84986877429}>, <End-to-end automatic business process validation, {eid: 85051251425}>, <None, {eid: 84930828704}>, <Benefits and limitations of automated software testing: Systematic literature review and practitioner survey, {eid: 84864258235}>, <None, {eid: 84904733980}>, <A regression testing approach for software product lines architectures, {eid: 79952086195}>, <Opportunities and constraints: The current struggle with bpmn, {eid: 73149121321}>, <None, {eid: 85065642773}>, <None, {eid: 85123616276}>, <Static analysis of bpmn-based process-driven applications, {eid: 85065655546}>, <None, {eid: 85091273861}>, <None, {eid: 85123619256}>, <None, {eid: 85104947067}>, <None, {eid: 84878217700}>, <Design science research evaluation, {eid: 84861217148}>, <Test case generation from bpmn models for automated testing of webbased bpm applications, {eid: 85041234887}>, <Design of a tool for generating test cases from bpmn, {eid: 84946687742}>, <Automatic test cases generation from business process models, {eid: 85049939808}>, <Semi-automatic test case generation from business process models, {eid: 84881567616}>, <Test case generation from bpmn with dmn, {eid: 85079842074}>, <Automated regression testing of bpmn 2.0 processes: A capture and replay framework for continuous delivery, {eid: 85084190357}>, <A tool for generating test case from bpmn diagram with a bpel diagram, {eid: 84978766788}>, <Uncovering data-flow anomalies in bpmn-based process-driven applications, {eid: 85104949600}>, <Xcfg based data flow analysis of business processes, {eid: 85066637564}>, <Structuring acyclic process models, {eid: 78049287225}>, <None, {eid: 85123595411}>, <None, {eid: 85123616657}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2021-10-25,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85123603523
19,,"Shen D. (AUID: 56911604300), Luo Q. (AUID: 56998053900), Poshyvanyk D. (AUID: 13613571900), Grechanik M. (AUID: 55904114500)",,Automating performance bottleneck detection using search-based application profiling,2015,"24th International Symposium on Software Testing and Analysis, ISSTA 2015",,,,,,,52,10.1145/2771783.2771816,https://www.doi.org/10.1145/2771783.2771816,"<Department of Computer Science, College of William and Mary>, <Department of Computer Science, University of Illinois at Chicago>",,"Copyright 2015 ACM.Application profiling is an important performance analysis technique, when an application under test is analyzed dynamically to determine its space and time complexities and the usage of its instructions. A big and important challenge is to profile nontrivial web applications with large numbers of combinations of their input parameter values. Identifying and understanding particular subsets of inputs leading to performance bottlenecks is mostly manual, intellectually intensive and laborious procedure. We propose a novel approach for automating performance bottleneck detection using search-based input-sensitive application profiling. Our key idea is to use a genetic algorithm as a search heuristic for obtaining combinations of input parameter values that maximizes a fitness function that represents the elapsed execution time of the application. We implemented our approach, coined as Genetic Algorithm-driven Profiler (GA-Prof) that combines a search-based heuristic with contrast data mining of execution traces to accurately determine performance bottlenecks. We evaluated GA-Prof to determine how effectively and efficiently it can detect injected performance bottlenecks into three popular open source web applications. Our results demonstrate that GA-Prof efficiently explores a large space of input value combinations while automatically and accurately detecting performance bottlenecks, thus suggesting that it is effective for automatic profiling.","Application profiling, Performance bottlenecks",,,,,,,,"<On the application of genetic programming for software engineering predictive modeling: A systematic review, {eid: 79955628180}>, <Performance debugging for distributed systems of black boxes, {eid: 21644455102}>, <A systematic review of the application and empirical investigation of search-based test case generation, {eid: 78649794788}>, <Automated web application testing using search based software engineering, {eid: 84855445676}>, <Finding and removing performance bottlenecks in large systems, {eid: 84936937947}>, <A practical guide for using statistical tests to assess randomized algorithms in software engineering, {eid: 79959871222}>, <A hitchhikers guide to statistical tests for assessing randomized algorithms in software engineering, {eid: 84883099844}>, <Directed test generation for effective fault localization, {eid: 77955877763}>, <Practical fault localization for dynamic web applications, {eid: 77954721052}>, <Symbolic search-based testing, {eid: 84855417349}>, <None, {eid: 84860926946}>, <Stress testing real-time systems with genetic algorithms, {eid: 32444445648}>, <Wise: Automated test generation for worst-case complexity, {eid: 70350552240}>, <Synthesizing client load models for performance engineering via web crawling, {eid: 56649123014}>, <A callgraph-based search strategy for automated performance diagnosis, {eid: 84937389568}>, <Types of software evolution and software maintenance, {eid: 84975830616}>, <Detecting performance anti-patterns for applications developed using object-relational mapping, {eid: 84994157759}>, <Understanding, modelling, and improving the performance of web applications in multicore virtualised environments, {eid: 84899698849}>, <Holmes: Effective statistical debugging via efficient path profiling, {eid: 73149122840}>, <Input-sensitive profiling, {eid: 84863487165}>, <Mining hot calling contexts in small space, {eid: 79959879248}>, <None, {eid: 84866595689}>, <An empirical study of profiling strategies for released software and their impact on testing activities, {eid: 16244415093}>, <Input-sensitive profiling, {eid: 84919766570}>, <None, {eid: 84975703655}>, <A genetic programming approach to automated software repair, {eid: 72749113538}>, <A memetic algorithm for whole test suite generation, {eid: 84946952886}>, <Search-based genetic optimization for deployment and reconfiguration of software in the cloud, {eid: 84883666968}>, <Exploring very large state spaces using genetic algorithms, {eid: 84896693691}>, <Genprog: A generic method for automatic software repair, {eid: 84856746279}>, <Automated concept location using independent component analysis, {eid: 57749176184}>, <Automatically finding performance problems with feedback-directed learning software testing, {eid: 84864193632}>, <None, {eid: 84900386332}>, <None, {eid: 84975679346}>, <Performance debugging in the large via mining millions of stack traces, {eid: 84864219793}>, <Search based software engineering for program comprehension, {eid: 34948844615}>, <Strong higher order mutation-based test data generation, {eid: 80053197346}>, <Cloud engineering is search based software engineering too, {eid: 84881480406}>, <Search-based software engineering: Trends, techniques and applications, {eid: 84866935116}>, <A theoretical and empirical study of search-based testing: Local, global, and hybrid search, {eid: 77950626862}>, <None, {eid: 0003463297}>, <Independent component analysis: Algorithms and applications, {eid: 0042826822}>, <Empirical investigation of search algorithms for environment model-based testing of real-time embedded software, {eid: 84865288583}>, <Profile-guided program simplification for effective testing and analysis, {eid: 76349108795}>, <Automatic identification of load testing problems, {eid: 57849152538}>, <Automated performance analysis of load tests, {eid: 70849104041}>, <Understanding and detecting real-world performance bugs, {eid: 84863459107}>, <Automatic structural testing using genetic algorithms, {eid: 0030234676}>, <A randomized dynamic program analysis technique for detecting real deadlocks, {eid: 70450240793}>, <Automated software test data generation, {eid: 0025472647}>, <Argument controlled profiling, {eid: 77954588988}>, <Multi objective higher order mutation testing with genetic programming, {eid: 77949843473}>, <A systematic study of automated program repair: Fixing 55 out of 105 bugs for $8 each, {eid: 84864264923}>, <Search algorithms for regression test case prioritization, {eid: 34047189734}>, <None, {eid: 0003854384}>, <Automatic performance debugging of spmd-style parallel programs, {eid: 79957501023}>, <Search-based software test data generation: A survey: Research articles, {eid: 3142725712}>, <Search-based software testing: Past, present and future, {eid: 80051619581}>, <Input domain reduction through irrelevant variable removal and its effect on local, global, and hybrid search-based structural test data generation, {eid: 84859749195}>, <Skoll: Distributed continuous quality assurance, {eid: 4544349711}>, <Using heuristic search techniques to extract design abstractions from source code, {eid: 0142211090}>, <Evaluating the accuracy of Java profilers, {eid: 77954721392}>, <An industrial case study of automatically identifying performance regression-causes, {eid: 85119225908}>, <Search-based software maintenance, {eid: 34548097926}>, <How to effectively use topic models for software engineering tasks? An approach based on genetic algorithms, {eid: 84883710034}>, <Leveraging test generation and specification mining for automated bug detection without false positives, {eid: 84864256871}>, <Eventbreak: Analyzing the responsiveness of user interfaces through performance-guided test generation, {eid: 84908293778}>, <Mining behavior models from enterprise web applications, {eid: 84883667248}>, <Procrawl: Mining test models from multi-user web applications, {eid: 84942780602}>, <None, {eid: 84975774320}>, <Breeding high-impact mutations, {eid: 80051643462}>, <Jolt: Lightweight dynamic analysis and removal of object churn, {eid: 63549145872}>, <Atom: A system for building customized program analysis tools, {eid: 0028132513}>, <Test case comparison and clustering using program profiles and static execution, {eid: 77949371552}>, <The automatic generation of test data using genetic algorithms, {eid: 0006558050}>, <Systematic testing of real-time systems, {eid: 3142696440}>, <Verifying timing constraints of real-time systems by means of evolutionary testing, {eid: 0032204373}>, <Testing real-time systems using genetic algorithms, {eid: 0000380234}>, <Automatically finding patches using genetic programming, {eid: 70549112781}>, <Context-sensitive delta inference for identifying workload-dependent performance bottlenecks, {eid: 84881297394}>, <Precise memory leak detection for Java software using container profiling, {eid: 67650714764}>, <Factors affecting the use of genetic algorithms in test suite augmentation, {eid: 77955917233}>, <Uncovering performance problems in Java applications with reference propagation profiling, {eid: 84864193967}>, <None, {eid: 84975681573}>, <A qualitative study on performance bugs, {eid: 84865125030}>, <Algorithmic profiling, {eid: 84863473591}>, <Automatic generation of load tests, {eid: 84855462010}>, <Automated diagnosis of software configuration errors, {eid: 84886405418}>",,,"Association for Computing Machinery, Inc",,,2015-07-13,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-84975763993
20,,"Zúñiga-Prieto M. (AUID: 56524481200), Insfran E. (AUID: 6506793505), Abrahão S. (AUID: 8211929700), Cano-Genoves C. (AUID: 57192005049)",,Automation of the incremental integration of microservices architectures,2017,Lecture Notes in Information Systems and Organisation,,,,,,,3,10.1007/978-3-319-52593-8_4,https://www.doi.org/10.1007/978-3-319-52593-8_4,"<Department of Computer Science, Universidad de Cuenca>, <Department of Information Systems and Computation, Universitat Politècnica de València>",,"© Springer International Publishing Switzerland 2017.Microservices have appeared as a new architectural style that is native to the cloud. The high availability and agility of the cloud demands organizations to migrate or design microservices, promoting the building of applications as a suite of small and cohesive services that are independently developed, deployed and scaled. Current cloud development approaches do not support the incremental integration needed for microservice platforms, and the agility of getting new functionalities out to customers is consequently affected by the lack of support for the integration design and automation of the development and deployment tasks. This paper presents an approach for the incremental integration of microservices that will allow architects to specify and design microservice integration, and provide mechanisms to automatically obtain the implementation code for business logic and interoperation among microservices, along with deployment and architectural reconfiguration scripts specific to the cloud environment in which the microservice will be deployed.","Cloud, Cloud architectures, Incremental, Integration, Microservices architectures",,,,,,,,"<Development and deployment at facebook, {eid: 84880146979}>, <Microservices, IoT, and Azure: Leveraging DevOps and Microservice Architecture to Deliver SaaS Solutions, {eid: 85046792617}>, <None, {eid: 84992401957}>, <None, {eid: 84950338538}>, <Service functional test automation, {eid: 84995934968}>, <None, {eid: 84995906617}>, <Controlling data in the cloud: Outsourcing computation without outsourcing control, {eid: 74049093526}>, <Designing a smart city internet of things platform with microservice architecture, {eid: 84959050879}>, <None, {eid: 85018761953}>, <The cloudMIG approach: Model-based migration of software systems to cloud-optimized applications, {eid: 84886445739}>, <Developing migratable multicloud applications based on MDE and adaptation techniques, {eid: 84884637858}>, <MODAC LOUDS: A model-driven approach for the design and execution of applications on multiple clouds, {eid: 84864997201}>, <An incremental and model driven approach for the dynamic reconfiguration of cloud application architectures, {eid: 84992731072}>, <Towards a model-driven dynamic architecture reconfiguration process for cloud services integration, {eid: 84923259718}>, <The DevOps 2.0 Toolkit: Automating the Continuous Deployment Pipeline with Containerized Microservices, {eid: 85018783151}>, <Framework for platform agnostic enterprise application development supporting multiple clouds, {eid: 84937500863}>, <UML-based cloud application modeling with libraries, profiles, and templates, {eid: 84911965669}>, <A UML Profile for modeling multicloud applications, {eid: 84885733995}>, <Towards CloudML, a model-based approach to provision resources in the clouds, {eid: 84879762752}>, <SeaClouds: A European project on seamless management of multi-cloud applications, {eid: 84920511449}>, <Architecture description language for incremental integration of cloud services architectures, {eid: 85010452220}>, <None, {eid: 84867643299}>, <Evaluating REST architectures-approach, tooling and guidelines, {eid: 84951064164}>, <Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation, {eid: 84903601568}>, <None, {eid: 84950310360}>",,,Springer Heidelberg,,,2017-01-01,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85018772815
21,,"Cabot J. (AUID: 8963493600), Clarisó R. (AUID: 8948086100), Brambilla M. (AUID: 57226223274), Gérard S. (AUID: 23088273000)",,Cognifying Model-Driven Software Engineering,2017,"International conference on Software Technologies: Applications and Foundations, STAF 2017",,,,,,,32,10.1007/978-3-319-74730-9_13,https://www.doi.org/10.1007/978-3-319-74730-9_13,"<ICREA>, <Universitat Oberta de Catalunya>, <Politecnico di Milano>, <CEA List>",,"© Springer International Publishing AG 2018.The limited adoption of Model-Driven Software Engineering (MDSE) is due to a variety of social and technical factors, which can be summarized in one: its (real or perceived) benefits do not outweigh its costs. In this vision paper we argue that the cognification of MDSE has the potential to reverse this situation. Cognification is the application of knowledge (inferred from large volumes of information, artificial intelligence or collective intelligence) to boost the performance and impact of a process. We discuss the opportunities and challenges of cognifying MDSE tasks and we describe some potential scenarios where cognification can bring quantifiable and perceivable advantages. And conversely, we also discuss how MDSE techniques themselves can help in the improvement of AI, Machine learning, bot generation and other cognification techniques.","AI, Bot, Machine learning, Model, Model-driven",,,,,,,,"<Process mining manifesto, {eid: 84863011087}>, <Integrating modeling languages and web logs for enhanced user behavior analytics, {eid: 85042675932}>, <A big data analysis framework for model-based web user behavior analytics, {eid: 85020522698}>, <Practical change impact analysis based on static program slicing for industrial software systems, {eid: 79959896935}>, <Experiences in the design of semantic services using web engineering methods and tools, {eid: 58849090949}>, <Extracting emerging knowledge from social media, {eid: 85042675241}>, <None, {eid: 84910605779}>, <Practical change impact analysis based on static program slicing for industrial software systems, {eid: 79959896935}>, <An online platform for semantic validation of UML models, {eid: 70350217788}>, <None, {eid: 84892828610}>, <Continuing a benchmark for UML and OCL design and analysis tools, {eid: 85007343649}>, <Restart strategy selection using machine learning techniques, {eid: 70350640707}>, <The next evolution of MDE: A seamless integration of machine learning into domain modeling, {eid: 85040582253}>, <Model-driven engineering practices in industry: Social, organizational and managerial factors that lead to success or failure, {eid: 84900499307}>, <Boosting verification by automatic tuning of decision procedures, {eid: 47349133530}>, <Algorithm runtime prediction: Methods & evaluation, {eid: 84887848457}>, <JSONDiscoverer: Visualizing the schema lurking behind JSON documents, {eid: 84964344814}>, <None, {eid: 85006857689}>, <Search-based model transformation by example, {eid: 84860470004}>, <An evaluation of machine learning in algorithm selection for search problems, {eid: 84865481979}>, <Recommending auto-completions for software modeling activities, {eid: 84886842342}>, <A machine learning technique for predicting the productivity of practitioners from individually developed software projects, {eid: 85042633394}>, <Practical change impact analysis based on static program slicing for industrial software systems, {eid: 79959896935}>, <Proactive modeling: Auto-generating models from their semantics and constraints, {eid: 84872119757}>, <The rise of the (Modelling) bots: Towards assisted modelling via social networks, {eid: 85041439636}>, <A machine learning approach to software requirements prioritization, {eid: 84875692349}>, <Researcher bias: The use of machine learning in software defect prediction, {eid: 84903176990}>, <Model-driven adaptation for plastic user interfaces, {eid: 38049105307}>, <Generic model assist, {eid: 84886838174}>, <Two’s company, three’s a crowd: A case study of crowdsourcing software development, {eid: 84994141774}>, <Systematic literature review of machine learning based software development effort estimation models, {eid: 80055086827}>",,,Springer Verlag,,,2017-07-17,,,,,,,eng,,Book Series,,,,2-s2.0-85042643413
22,,"Sathawornwichit C. (AUID: 16023048500), Hosono S. (AUID: 14631968500)",,Consistency reflection for automatic update of testing environment,2012,"2012 7th IEEE Asia-Pacific Services Computing Conference, APSCC 2012",,,,,,,3,10.1109/APSCC.2012.49,https://www.doi.org/10.1109/APSCC.2012.49,"<Knowledge Discovery Research Laboratories, NEC Corporation>",,"In this paper, we present an approach for maintaining consistency among design models, system under test, and test components. Our approach provides an automatic updating technique to deal with changes that happen frequently in agile software development. Consistency reflection by automatic updating allows us to cut off manual tasks required in maintaining automated tests and speed up testing process which is a bottleneck in service development lifecycle. We introduce the use of metadata, data structure that describes structural behavior of the system, in our automatic updating technique. Metadata is used as a common medium for communicating changes to keep consistency among design, system under test, and test components. We present an example of testing process to show how we apply this approach in practice. © 2012 IEEE.","Agile software development, Automated software testing, Automatic update, Behavior-driven development, Consistency reflection, Design models, Metadata",,,,,,,,"<None, {eid: 0141947425}>, <None, {eid: 0038635256}>, <None, {eid: 84876150078}>, <None, {eid: 84858197925}>, <The cucumber book: Behaviour-driven development for testers and developers, ser. pragmatic programmers, {eid: 84876099360}>, <None, {eid: 84876138652}>, <A taxonomy of model-based testing approaches, {eid: 84862325128}>, <A case study in model-based testing of specifications and implementations, {eid: 84855246335}>, <Challenges of variability in model-driven and transformational approaches: A systematic survey, {eid: 80051996154}>, <None, {eid: 77953226164}>, <Automatic test generation: A use case driven approach, {eid: 33645820260}>, <Model based testing using software architecture, {eid: 77955302480}>, <Model-driven testing with uml 2.0, {eid: 33745647181}>, <From design to test with uml: Applied to a roaming algorithm for bluetooth devices, {eid: 33745159714}>, <On extracting tests from a testable model in the context of domain engineering, {eid: 44149128019}>, <Behaviour-driven development of foundational uml components, {eid: 77955705236}>, <Scenario driven testing, {eid: 80051491734}>, <An automated test code generation method for web applications using activity oriented approach, {eid: 56249134234}>, <Automating the generation and sequencing of test cases from model-based specifications, {eid: 85015362530}>, <Towards fully automated test management for large complex systems, {eid: 77954516905}>",,,,,,2012-12-06,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-84876106702
23,,"Bersani M. (AUID: 35730853100), Marconi F. (AUID: 57190818220), Tamburri D. (AUID: 35488974800), Jamshidi P. (AUID: 34880055700), Nodari A. (AUID: 57159803700)",,Continuous architecting of stream-based systems,2016,"13th Working IEEE/IFIP Conference on Software Architecture, WICSA 2016",,,,,,,7,10.1109/WICSA.2016.26,https://www.doi.org/10.1109/WICSA.2016.26,"<Politecnico di Milano>, <Imperial College London>",,"© 2016 IEEE.Big data architectures have been gaining momentum in recent years. For instance, Twitter uses stream processing frameworks like Storm to analyse billions of tweets per minute and learn the trending topics. However, architectures that process big data involve many different components interconnected via semantically different connectors making it a difficult task for software architects to refactor the initial designs. As an aid to designers and developers, we developed OSTIA (On-the-fly Static Topology Inference Analysis) that allows: (a) visualising big data architectures for the purpose of design-time refactoring while maintaining constraints that would only be evaluated at later stages such as deployment and run-time, (b) detecting the occurrence of common anti-patterns across big data architectures, (c) exploiting software verification techniques on the elicited architectural models. This paper illustrates OSTIA and evaluates its uses and benefits on three industrial-scale case studies.",,,,,,,,,"<Understandable big data: A survey, {eid: 84940452273}>, <None, {eid: 84877800451}>, <None, {eid: 84983363131}>, <Apache storm, a hands on tutorial, {eid: 85015882046}>, <None, {eid: 84983351626}>, <None, {eid: 84983254945}>, <Organizational social structures for software engineering, {eid: 84887435575}>, <DevOps-A Software Architects Perspective., ser, {eid: 84943326563}>, <Enhancing domain-specific software architecture recovery, {eid: 84979070056}>, <None, {eid: 0141684320}>, <None, {eid: 0004101997}>, <A timed semantics of workflows, {eid: 84951132701}>, <Storm@ twitter, {eid: 84904335699}>, <None, {eid: 84968786582}>, <None, {eid: 84983311041}>, <None, {eid: 0036760615}>, <None, {eid: 84983353329}>, <None, {eid: 84983353341}>, <None, {eid: 0003866308}>, <Beyond the lambda architecture: Effective scheduling for large scale eo information mining and interactive thematic mapping, {eid: 84962530511}>, <None, {eid: 84983260592}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2016-04-05,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-84983339996
24,,"Rinker F. (AUID: 57205417794), Waltersdorfer L. (AUID: 57209322326), Meixner K. (AUID: 57204805351), Winkler D. (AUID: 57210102724), Biffl S. (AUID: 6701704981), Lüder A. (AUID: 9735061200)",,Continuous Integration in Multi-view Modeling: A Model Transformation Pipeline Architecture for Production Systems Engineering,2021,"9th International Conference on Model-Driven Engineering and Software Development, MODELSWARD 2021",,,,,,,0,10.5220/0010309902860293,https://www.doi.org/10.5220/0010309902860293,"<Institute of Information Systems Engineering, TU Wien>, <CDL for Security and Quality Improvement in the Production System Lifecycle, TU Wien>, <Institute of Ergonomics, Manufacturing Systems and Automation OVGU>",,"© 2021 by SCITEPRESS – Science and Technology Publications, Lda. All rights reserved.Background. Systems modeling in Production Systems Engineering (PSE) is complex: Multiple views from different disciplines have to be integrated, while semantic differences stemming from various descriptions must be bridged. Aim. This paper proposes the Multi-view Modeling Framework (MvMF) approach and architecture of a model transformation pipeline. The approach aims to ease setup and shorten configuration effort of multi-view modeling operations and support the reusability of modeling environments, like additional view integration. Method. We combine multi-view modeling with principles from distributed, agile workflows, i.e., Git and Continuous Integration. Results. The MvMF provides a light-weight modeling operation environment for AutomationML (AML) models. We show MvMF capabilities and demonstrate the feasibility of MvMF with a demonstrating use case including fundamental model operation features, such as compare and merge. Conclusion. Increasing requirements on the traceability of changes and validation of system designs require improved and extended model transformations and integration mechanisms. The proposed architecture and prototype design represents a first step towards an agile PSE modeling workflow.","Domain-specific Languages, Domain-specific Modeling, Model Transformation, Model-driven Engineering, Multi-disciplinary Engineering, Production Systems Engineering",,,,,,,,"<Preface to the 1st workshop on view-oriented software engineering (vose), {eid: 85075909830}>, <Comparing multi-level modeling approaches, {eid: 84910009313}>, <Aocl: A Pure-Java Constraint and Transformation Language for MDE, {eid: 85173916791}>, <Efficient engineering data exchange in multidisciplinary systems engineering, {eid: 85067342738}>, <Emf views: A view mechanism for integrating heterogeneous models, {eid: 84951747182}>, <An overview of current technologies and emerging trends in factory automation, {eid: 85052118672}>, <Devops, {eid: 84968831988}>, <Managing inter-model inconsistencies in model-based systems engineering: Application in automated production systems engineering, {eid: 85063760990}>, <Stepwise adoption of continuous delivery in model-driven engineering, {eid: 85080701791}>, <Semantic data integration for industry 4.0 standards, {eid: 85050160796}>, <ATL: A model transformation tool, {eid: 45849085734}>, <Supporting the data model integrator in an engineering network by automating data integration, {eid: 85079079722}>, <Assessment of EMF Model to Text Generation Strategies and Libraries in an Industrial Context, {eid: 85173956886}>, <Towards support of global views on common concepts employing local views, {eid: 85074197616}>, <Semantic web technologies for data integration in multidisciplinary engineering, {eid: 85052076728}>, <Low-code as enabler of digital transformation in manufacturing industry, {eid: 85077580109}>, <Combining model-based systems engineering, simulation and domain engineering in the development of industrial automation systems: Industrial case study, {eid: 84936861058}>, <Engineering workflow and software tool chains of automated production systems, {eid: 85044476480}>, <Lowcomote: Training the next generation of experts in scalable low-code engineering platforms, {eid: 85069741151}>, <Presentation of EMF Compare Utility, {eid: 47749101164}>, <Synchronization of projective views on a single-underlying-model, {eid: 84958694825}>, <Experiences with technical debt and management strategies in production systems engineering, {eid: 85093120799}>, <Modeling languages in Industry 4.0: an extended systematic mapping study, {eid: 85074431675}>",,,"Science and Technology Publications, Lda",,,2021-02-08,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85173937662
25,,"Beneventi F. (AUID: 50860941600), Bartolini A. (AUID: 57216775622), Benini L. (AUID: 35556997000), Cavazzoni C. (AUID: 6603610421)",,Continuous learning of HPC infrastructure models using big data analytics and in-memory processing tools,2017,"20th Design, Automation and Test in Europe, DATE 2017",,,,,,,49,10.23919/DATE.2017.7927143,https://www.doi.org/10.23919/DATE.2017.7927143,"<Department of Electrical, Electronic and Information Engineering (DEI), University of Bologna>, <Integrated Systems Laboratory, ETH Zurich>, <Cineca>",,"© 2017 IEEE.Exascale computing represents the next leap in the HPC race. Reaching this level of performance is subject to several engineering challenges such as energy consumption, equipment-cooling, reliability and massive parallelism. Model-based optimization is an essential tool in the design process and control of energy efficient, reliable and thermally constrained systems. However, in the Exascale domain, model learning techniques tailored to the specific supercomputer require real measurements and must therefore handle and analyze a massive amount of data coming from the HPC monitoring infrastructure. This becomes rapidly a 'big data' scale problem. The common approach where measurements are first stored in large databases and then processed is no more affordable due to the increasingly storage costs and lack of real-time support. Nowadays instead, cloud-based machine learning techniques aim to build on-line models using real-time approaches such as 'stream processing' and 'in-memory' computing, that avoid storage costs and enable fastdata processing. Moreover, the fast delivery and adaptation of the models to the quick data variations, make the decision stage of the optimization loop more effective and reliable. In this paper we leverage scalable, lightweight and flexible IoT technologies, such as the MQTT protocol, to build a highly scalable HPC monitoring infrastructure able to handle the massive sensor data produced by next-gen HPC components. We then show how state-of-the art tools for big data computing and analysis, such as Apache Spark, can be used to manage the huge amount of data delivered by the monitoring layer and to build adaptive models in real-time using on-line machine learning techniques.",,,,,,,,,"<None, {eid: 84055195466}>, <Energy-aware performance analysis methodologies for HPC architectures: An exploratory study, {eid: 84867558905}>, <None, {eid: 84977561627}>, <Fault tolerance in petascale/exascale systems: Current knowledge, {eid: 68249127079}>, <Energyaware cooling for hot-water cooled supercomputers, {eid: 84944594636}>, <The International Exascale Software Project roadmap, {eid: 79951595196}>, <Understandable big data: A survey, {eid: 84940452273}>, <Correlation analysis of mqtt loss and delay according to qos level, {eid: 84876781830}>, <None, {eid: 84903709403}>, <The ganglia distributed monitoring system: Design, implementation, and experience, {eid: 3342966061}>, <Open source initiatives and frameworks addressing distributed real-time data analytics, {eid: 84991677313}>, <Maximizing throughput of overprovisioned HPC data centers under a strict power budget, {eid: 84936949338}>, <Exascale computing technology challenges, {eid: 79952579787}>, <Whitelisting msrs with msr-safe, {eid: 84966583761}>, <Monitoring power data: A first step towards a unified energy efficiency evaluation toolset for HPC data centers, {eid: 84901290949}>, <Towards data-driven autonomics in data centers, {eid: 84962127890}>, <Resilient distributed datasets: A fault-tolerant abstraction for in-memory cluster computing, {eid: 85040175609}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2017-03-27,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85020177368
26,,"Rademacher F. (AUID: 57015087900), Sachweh S. (AUID: 54912166300), Zundorf A. (AUID: 56000503100)",,Deriving Microservice Code from Underspecified Domain Models Using DevOps-Enabled Modeling Languages and Model Transformations,2020,"46th Euromicro Conference on Software Engineering and Advanced Applications, SEAA 2020",,,,,,,10,10.1109/SEAA51224.2020.00047,https://www.doi.org/10.1109/SEAA51224.2020.00047,"<University of Applied Sciences and Arts Dortmund, IDiAL Institute>, <University of Kassel, Department of Computer Science and Electrical Engineering>",,"© 2020 IEEE.Domain-driven Design (DDD) is a model-based software design methodology, which focuses on close collaboration of domain experts and software engineers. It promotes to capture relevant domain concepts in domain models in order to define a ubiquitous language, whose terms are well understood by stakeholders and consistently used throughout the software engineering process. DDD is considered particularly useful in Microservice Architecture (MSA) engineering, because it specifies patterns to structure modeled domain concepts in isolated contexts. These contexts determine concepts' applicability and validity, and make relationships between domain concepts beyond context boundaries explicit. Consequently, DDD contexts may be used to prescribe microservices' granularities and interaction relationships. However, domain models are usually underspecified, which facilitates communication with domain experts, but hampers the derivation of microservice code.In this paper, we present a model-driven methodology towards deriving microservice code from underspecified domain models. It relies on a set of viewpoint-based MSA modeling languages, which respect the concerns of DevOps teams, and a set of automatic model transformations, which decrease modeling effort and systematize source code derivation. We validate the applicability of our methodology by means of two case studies.","Modeling of computer architecture, Services Architectures, Services Engineering",,,,,,,,"<None, {eid: 84950338538}>, <None, {eid: 2942742234}>, <None, {eid: 85010410859}>, <A pattern language for scalable microservices-based systems, {eid: 85055721495}>, <Microservices: Yesterday, today, and tomorrow, {eid: 85054938535}>, <Microservices in industry: Insights into technologies, characteristics, and software quality, {eid: 85066486037}>, <Challenges of domaindriven microservice design: A model-driven perspective, {eid: 85046890847}>, <Linking modeldriven development and software architecture: A case study, {eid: 60449116881}>, <Microservice ambients: An architectural meta-modelling approach for microservice granularity, {eid: 85021456926}>, <None, {eid: 84878326137}>, <Towards a uml profile for domain-driven design of microservice architectures, {eid: 85042075507}>, <Graphical and textual model-driven microservice development, {eid: 85086303989}>, <Aspect-oriented modeling of technology heterogeneity in microservice architecture, {eid: 85065789976}>, <Integration of handwritten and generated object-oriented code, {eid: 84955263298}>, <Systems and software engineering-architecture description, {eid: 72349086391}>, <Microservices architecture enables devops: Migration to a cloud-native architecture, {eid: 84968796741}>, <Continuous architecting with microservices and devops: A systematic mapping study, {eid: 85071500372}>, <Generative software module development for domain-driven design with annotation-based domain specific language, {eid: 85076243410}>, <Rapid realization of executable domain models via automatic code generation, {eid: 85049258166}>, <Development and evaluation of microbuilder: A model-driven tool for the specification of rest microservice software architectures, {eid: 85044973439}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2020-08-26,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85096547404
27,,"Bayram F. (AUID: 57222119151), Ahmed B.S. (AUID: 56591882100), Hallin E. (AUID: 57847489500), Engman A. (AUID: 57847489600)",,DQSOps: Data Quality Scoring Operations Framework for Data-Driven Applications,2023,"27th International Conference on Evaluation and Assessment in Software Engineering, EASE 2023",,,,,,,0,10.1145/3593434.3593445,https://www.doi.org/10.1145/3593434.3593445,"<Karlstad University>, <Uddeholms AB>",,"© 2023 Owner/Author.Data quality assessment has become a prominent component in the successful execution of complex data-driven artificial intelligence (AI) software systems. In practice, real-world applications generate huge volumes of data at speeds. These data streams require analysis and preprocessing before being permanently stored or used in a learning task. Therefore, significant attention has been paid to the systematic management and construction of high-quality datasets. Nevertheless, managing voluminous and high-velocity data streams is usually performed manually (i.e. offline), making it an impractical strategy in production environments. To address this challenge, DataOps has emerged to achieve life-cycle automation of data processes using DevOps principles. However, determining the data quality based on a fitness scale constitutes a complex task within the framework of DataOps. This paper presents a novel Data Quality Scoring Operations (DQSOps) framework that yields a quality score for production data in DataOps workflows. The framework incorporates two scoring approaches, an ML prediction-based approach that predicts the data quality score and a standard-based approach that periodically produces the ground-truth scores based on assessing several data quality dimensions. We deploy the DQSOps framework in a real-world industrial use case. The results show that DQSOps achieves significant computational speedup rates compared to the conventional approach of data quality scoring while maintaining high prediction performance.","Automated data scoring, data assessment, data quality dimensions, DataOps, mutation testing",,,,,,,,"<None, {eid: 77957553895}>, <None, {eid: 85133932274}>, <2011. The relative age effect and success in German elite U-17 soccer teams, {eid: 79958156034}>, <2014. The oracle problem in software testing: A survey, {eid: 84929331583}>, <2015. from data quality to big data quality, {eid: 84954422293}>, <2011. The effects and interactions of data quality and problem complexity on classification, {eid: 79951733500}>, <None, {eid: 85087392713}>, <None, {eid: 0035478854}>, <2022. End-To-End Data Quality Assessment Using Trust for Data Shared IoT Deployments, {eid: 85137896363}>, <2018. Validating data quality actions in scoring processes, {eid: 85041432648}>, <Tensorflow data validation: Data analysis and validation in continuous ml pipelines, {eid: 85086247414}>, <None, {eid: 85078944675}>, <2022. The Fault in Our Data Stars: Studying Mitigation Techniques against Faulty Training Data in Machine Learning Applications, {eid: 85136324853}>, <Xgboost: A scalable tree boosting system, {eid: 84984950690}>, <None, {eid: 85162248523}>, <None, {eid: 85062688379}>, <None, {eid: 0002496457}>, <2012 Inequality of wellbeing: A multidimensional approach. Economica, {eid: 84866448236}>, <A Conceptual Framework for Developing Quality Measures for Information Systems, {eid: 27944458700}>, <Lisa Ehrlinger andWolfram Wöß A novel data quality metric for minimality, {eid: 85162234607}>, <2008. The distribution of the Kolmogorov-Smirnov, {eid: 49349084192}>, <2015. Data quality: From theory to practice, {eid: 84951937556}>, <Risk-based data validation in machine learning-based software systems, {eid: 85076402950}>, <2018. Requirements for data quality metrics, {eid: 85041435827}>, <None, {eid: 85046134634}>, <Overview and importance of data quality for machine learning tasks, {eid: 85090410666}>, <2010. An analysis and survey of the development of mutation testing, {eid: 80053606092}>, <2021. Towards mlops: A framework and maturity model, {eid: 85135054430}>, <2016 Application of an ontology for characterizing data quality for a secondary use of EHR data, {eid: 84958769417}>, <2021. An effective adaptive customization framework for small manufacturing plants using extreme gradient boosting-XGBoost and random, {eid: 85162237280}>, <2011. The combined conceptual life-cycle model of information quality: Part 1, an investigative framework, {eid: 79959369971}>, <None, {eid: 85151266883}>, <H2o automl: Scalable automatic machine learning, {eid: 85095511464}>, <Measures of distributional similarity. arXiv preprint cs/0001012, {eid: 85162216381}>, <2016. Test oracle strategies for model-based testing, {eid: 85019005181}>, <1991. Divergence measures based on the, {eid: 0025952277}>, <2021. RSSI Probability Density Functions Comparison Using Jensen-, {eid: 85162250575}>, <None, {eid: 85173804442}>, <2018. Learning under concept drift: A review, {eid: 85055030391}>, <Multivariate analysis of quality: An introduction. John, {eid: 0003658413}>, <2013. Big data management: Concepts, techniques and challenges, {eid: 84874754580}>, <2013 A multidimensional analysis of data quality for credit risk management: New insights and challenges, {eid: 84873686719}>, <How data science workers work with data: Discovery, capture, curation, design, creation, {eid: 85067313075}>, <Non-parametric jensen-shannon divergence, {eid: 84959351282}>, <None, {eid: 84902748879}>, <A review of missing data treatment methods, {eid: 70349131271}>, <2002 Data quality assessment. Commun, {eid: 85021679285}>, <None, {eid: 85162195731}>, <Online anomaly detection over big data streams, {eid: 85078702170}>, <2013 Covering and uncovering equivalent mutants, {eid: 84880304563}>, <2019 the utility of multivariate outlier detection techniques for data quality evaluation in large studies: An application within the ONDRI project, {eid: 85066041162}>, <2021. Big data quality framework: A holistic approach to continuous quality management, {eid: 85162215320}>, <2020. Sensor data quality: A systematic review, {eid: 85079387831}>, <2019 Measuring data quality with weighted metrics, {eid: 85020235870}>, <Anchoring data quality dimensions in ontological foundations. Commun, {eid: 0030288402}>, <1995. A framework for analysis of data quality research, {eid: 0029357731}>",,,Association for Computing Machinery,,,2023-06-14,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85162259466
28,,"Baumann N. (AUID: 57986582200), Kusmenko E. (AUID: 57195075206), Ritz J. (AUID: 57986533200), Rumpe B. (AUID: 55861872700), Weber M.B. (AUID: 57200340208)",,Dynamic data management for continuous retraining,2022,"25th ACM/IEEE International Conference on Model Driven Engineering Languages and Systems, MODELS 2022",,,,,,,1,10.1145/3550356.3561568,https://www.doi.org/10.1145/3550356.3561568,<RWTH Aachen University>,,"© 2022 ACM.Managing dynamic datasets intended to serve as training data for a Machine Learning (ML) model often emerges as very challenging, especially when data is often altered iteratively and already existing ML models should pertain to the data. For example, this applies when new data versions arise from either a generated or aggregated extension of an existing dataset a model has already been trained on. In this work, it is investigated on how a model-based approach for these training data concerns can be provided as well as how the complete process, including the resulting training and retraining process of the ML model, can therein be integrated. Hence, model-based concepts and the implementation are devised to cope with the complexity of iterative data management as an enabler for the integration of continuous retraining routines. With Deep Learning techniques becoming technically feasible and massively being developed further over the last decade, MLOps, aiming to establish DevOps tailored to ML projects, gained crucial relevance. Unfortunately, data-management concepts for iteratively growing datasets with retraining capabilities embedded in a model-driven ML development methodology are unexplored to the best of our knowledge. To fill in this gap, this contribution provides such agile data management concepts and integrates them and continuous retraining into the model-driven ML Framework MontiAnna [18]. The new functionality is evaluated in the context of a research project where ML is exploited for the optimal design of lattice structures for crash applications.","artificial intelligence, data management, model-driven engineering, retraining",,,,,,,,"<Data platform for machine learning, {eid: 85069440635}>, <None, {eid: 85102105267}>, <Software Engineering for Machine Learning: A Case Study, {eid: 85072111655}>, <Artifact and Reference Models for Generative Machine Learning Frameworks and Build Systems, {eid: 85120851738}>, <On the Co-evolution of ML Pipelines and Source Code-Empirical Study of DVC Projects, {eid: 85106644733}>, <Machine learning and semantic sentiment analysis based algorithms for suicide sentiment prediction in social networks, {eid: 85033461596}>, <Data management in machine learning systems, {eid: 85082126207}>, <Managing larger data on a github repository, {eid: 85099571714}>, <Machine learning in finance: The case of deep learning for option pricing, {eid: 85066331914}>, <An overview of the HDF5 technology suite and its applications, {eid: 79956025832}>, <Modeling Deep Reinforcement Learning Based Architectures for Cyber-Physical Systems, {eid: 85075937600}>, <Memory or time: Performance evaluation for iterative operation on hadoop and spark, {eid: 84903975456}>, <Getting Data into Databricks, {eid: 85142923630}>, <Overview and importance of data quality for machine learning tasks, {eid: 85090410666}>, <Modeling Dynamic Architectures of Self-Adaptive Cooperative Systems, {eid: 85075948566}>, <Hierarchical data format 5: HDF5, {eid: 83955161960}>, <MontiCore: A Framework for Compositional Development of Domain Specific Languages, {eid: 77955230740}>, <Modeling and Training of Neural Processing Systems, {eid: 85075936455}>, <Modeling and Training of Neural Processing Systems, {eid: 85075936455}>, <Highly-Optimizing and Multi-Target Compiler for Embedded System Models: C++ Compiler Toolchain for the Component and Connector Language EmbeddedMontiArc, {eid: 85056871758}>, <Learning without forgetting, {eid: 85035137409}>, <Learning under concept drift: A review, {eid: 85055030391}>, <A survey of big data architectures and machine learning algorithms in healthcare, {eid: 85032987630}>, <Big data analysis using Apache Hadoop, {eid: 84891103002}>, <Crashworthiness optimization of combined straight-Tapered tubes using genetic algorithm and neural networks, {eid: 85042259603}>, <Data management challenges in production machine learning, {eid: 85021190615}>, <Data lifecycle challenges in production machine learning: A survey, {eid: 85058810729}>, <Demystifying MLOps and Presenting a Recipe for the Selection of Open-Source Tools, {eid: 85115788129}>, <Accelerating the machine learning lifecycle with MLflow, {eid: 85072938346}>",,,"Association for Computing Machinery, Inc",,,2022-10-23,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85142938377
29,,"Ejersbo H. (AUID: 57226336274), Lausdahl K. (AUID: 35186177400), Frasheri M. (AUID: 55979636800), Esterle L. (AUID: 49963334900)",,Dynamic Runtime Integration of New Models in Digital Twins,2023,"18th IEEE/ACM Symposium on Software Engineering for Adaptive and Self-Managing Systems, SEAMS 2023",,,,,,,0,10.1109/SEAMS59076.2023.00016,https://www.doi.org/10.1109/SEAMS59076.2023.00016,"<Aarhus University, Department of Electrical and Computer Engineering Digit>",,"© 2023 IEEE.The development of cyber-physical systems is heavily relying on model-driven approaches. After deployment, these models can be utilised in a Digital Twin setting, acting as virtual replicas of the physical components and reflecting the behaviour of the running system in real-time. Complex systems often consist of numerous models interacting with each other and individual models may need to be updated after deployment. This means that new models need to be integrated and swapped during runtime without interrupting the running system. In this paper, we propose an approach for model-based Digital Twins to replace individual models without stopping or halting the operation of a cyber-physical system. Furthermore, our approach allows to replace not only individual models, but also update the overall structure of the interaction of models in the Digital Twin setting. The use of the proposed mechanism is illustrated through two case-studies with an agricultural robot prototype.","Co-simulation, Digital Twins, Functional Mock-up Interface, Model Swap, Model-driven engineering",,,,,,,,"<A survey of cyber-physical systems, {eid: 84555177840}>, <Cyber-physical systems: challenge of the 21st century, {eid: 84994378262}>, <A model-based design methodology for cyber-physical systems, {eid: 80052469409}>, <A comprehensive survey on modeling of cyber-physical systems, {eid: 85055255781}>, <Integrated Tool Chain for Model-Based Design of Cyber-Physical Systems, {eid: 85006151292}>, <Co-simulation: a Survey, {eid: 85051436184}>, <Product lifecycle management: the new paradigm for enterprises, {eid: 34047222275}>, <Multi-modelling and co-simulation in the engineering of cyber-physical systems: Towards the digital twin, {eid: 85073679094}>, <Characterising the digital twin: A systematic literature review, {eid: 85081219520}>, <Towards modular digital twins of robot systems, {eid: 85143058136}>, <Recent developments in hardware-in-the-loop testing, {eid: 85061083191}>, <The functional mockup interface for tool independent exchange of simulation models, {eid: 84871289819}>, <Functional Mockup Interface 2.0: The Standard for Tool independent Exchange of Simulation Models, {eid: 84871289819}>, <The fmi 3.0 standard interface for clocked and scheduled simulations, {eid: 85124046429}>, <Towards reuse of synchronization algorithms in co-simulation frameworks, {eid: 85091582766}>, <An fmi-based initialization plugin for into-cps maestro 2, {eid: 85101498944}>, <None, {eid: 84928170648}>, <The FMI 3.0 Standard Interface for Clocked and Scheduled Simulations, {eid: 85124046429}>, <Master for co-simulation using FMI, {eid: 84908292404}>, <Formally verified fmi enabled external data broker: Rabbitmq fmu, {eid: 85099278177}>, <Rmqfmu: Bridging the real world with co-simulation for practitioners, {eid: 85146053605}>, <Design Space Exploration in the Development of Agricultural Robots, {eid: 85073686308}>, <Addressing time discrepancy between digital and physical twins, {eid: 85146053531}>, <Assured and correct dynamic update of controllers, {eid: 84974593757}>, <Model-driven engineering tools and languages for cyber-physical systems–a systematic literature review, {eid: 85103282925}>, <The disappearing boundary between development-time and run-time, {eid: 79951591300}>, <Dynamic software updating: a systematic mapping study, {eid: 85092103229}>, <Towards a model-based devops for cyber-physical systems, {eid: 85096956543}>, <Twinops - devops meets model-based engineering and digital twins for the engineering of cps, {eid: 85096747019}>, <Towards digital twin-enabled devops for cps providing architecture-based service adaptation & verification at runtime, {eid: 85134157307}>, <Structural dynamic model, {eid: 0022840390}>, <Model update: A model specification formalism with a generalized view of discontinuity, {eid: 33750715455}>, <Modeling formalisms for dynamic structure systems, {eid: 0031251544}>, <Dynamic model updating in simulation with multimodels: A taxonomy and a generic agent-based architecture, {eid: 84962890943}>, <Dynamic structures in modeling and simulation: A reflective approach, {eid: 0012330873}>, <Exploiting structural dynamism in functional hybrid modelling for simulation of ideal diodes, {eid: 84873415126}>, <Equation-based modeling of variable-structure systems, {eid: 84976437546}>, <A python framework to create and simulate models with variable structure in common simulation environments, {eid: 84905229522}>, <Holistic simulation of flexray networks by using run-time model switching, {eid: 77953099458}>, <Optimizing HW/SW co-simulation based on run-time model switching, {eid: 77951519937}>, <Efficient runtime co-simulation model switching for holistic analysis of embedded systems, {eid: 84888883376}>, <Online model swapping for architectural simulation, {eid: 85106013057}>, <Models@ run. time, {eid: 85008066028}>, <None, {eid: 84904814843}>, <Mechanisms for leveraging models at runtime in self-adaptive software, {eid: 84904817608}>, <Adaptive exchange of distributed partial models@ run. time for highly dynamic systems, {eid: 84953275230}>, <Models@ run. time: a guided tour of the state of the art and research challenges, {eid: 85059780955}>, <A dynamic component model for cyber physical systems, {eid: 84864044924}>, <Transactional execution of hierarchical reconfigurations in cyber-physical systems, {eid: 85011279078}>, <Goal-based modeling of dynamically adaptive system requirements, {eid: 44149110152}>, <Morph: A reference architecture for configuration and behaviour self-adaptation, {eid: 84960347471}>, <Activforms: A formally-founded model-based approach to engineer self-adaptive systems, {eid: 85129299009}>, <Trusting intelligent machines: Deepening trust within socio-technical systems, {eid: 85058196933}>, <Model-based development of dynamically adaptive software, {eid: 34247136847}>, <Easymodel: A refinement-based modeling and verification approach for self-adaptive software, {eid: 85094646667}>, <A survey of formal methods in self-adaptive systems, {eid: 84866043696}>, <Towards practical runtime verification and validation of self-adaptive software systems, {eid: 84883136062}>, <Probabilistic verification at runtime for self-adaptive systems, {eid: 84873844702}>, <Verifying self-adaptive applications suffering uncertainty, {eid: 84908608579}>, <Using runtime quantitative verification to provide assurance evidence for self-adaptive software, {eid: 85041808638}>, <Compositional synthesis of modular systems, {eid: 85127548706}>, <Formal verification and co-simulation in the design of a synchronous motor control algorithm, {eid: 85090917013}>, <Runtime verification for fmi-based co-simulation, {eid: 85140486602}>, <Verification and synthesis of co-simulation algorithms subject to algebraic loops and adaptive steps, {eid: 85140964663}>, <Formalizing correctness criteria of dynamic updates derived from specification changes, {eid: 84885004285}>, <Synthesizing dynamically updating controllers from changes in scenario-based specifications, {eid: 84865109366}>, <Dynamic update of discrete event controllers, {eid: 85055183478}>, <Control-theoretical software adaptation: A systematic literature review, {eid: 85052241956}>, <Self-improving system integration: Mastering continuous change, {eid: 85096831548}>, <Changing software in a changing world: How to test in presence of variability, adaptation and evolution?, {eid: 85073699762}>, <Process prediction with digital twins, {eid: 85121810059}>, <Devsecops in embedded systems: An empirical study of past literature, {eid: 85136963110}>, <Towards a devops approach in cyber physical production systems using digital twins, {eid: 85096529757}>, <Uncertainty Quantificatios and Runtime Monitoring Using Environment-Aware Digital Twins, {eid: 85115881589}>, <Rmqfmu: Bridging the real world with co-simulation for practitioners, {eid: 85146053605}>",,,IEEE Computer Society,,,2023-05-15,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85159598859
30,,"Idowu S. (AUID: 58352876500), Strüber D. (AUID: 56503681700), Berger T. (AUID: 36607404500)",,EMMM: A Unified Meta-Model for Tracking Machine Learning Experiments,2022,"48th Euromicro Conference on Software Engineering and Advanced Applications, SEAA 2022",,,,,,,2,10.1109/SEAA56994.2022.00016,https://www.doi.org/10.1109/SEAA56994.2022.00016,"<Chalmers | University of Gothenburg>, <Radboud University>, <Ruhr University>",,"© 2022 IEEE.Traditional software engineering tools for managing assets—specifically, version control systems—are inadequate to manage the variety of asset types used in machine-learning model development experiments. Two possible paths to improve the management of machine learning assets include 1) Adopting dedicated machine-learning experiment management tools, which are gaining popularity for supporting concerns such as versioning, traceability, auditability, collaboration, and reproducibility; 2) Developing new and improved version control tools with support for domain-specific operations tailored to machine learning assets. As a contribution to improving asset management on both paths, this work presents Experiment Management Meta-Model (EMMM), a meta-model that unifies the conceptual structures and relationships extracted from systematically selected machine-learning experiment management tools. We explain the metamodel’s concepts and relationships and evaluate it using real experiment data. The proposed meta-model is based on the Eclipse Modeling Framework (EMF) with its meta-modeling language, Ecore, to encode model structures. Our meta-model can be used as a concrete blueprint for practitioners and researchers to improve existing tools and develop new tools with native support for machine-learning-specific assets and operations.","Machine learning experiments, Management tools, MDE, Metamodeling",,,,,,,,"<Survey of machine-learning experimental methods at neurips2019 and iclr2020, {eid: 85094777862}>, <None, {eid: 85083077693}>, <Project repositories for machine learning with tensorflow, {eid: 85086630438}>, <Trials and tribulations of developers of intelligent systems: A field study, {eid: 85000434626}>, <Software Engineering Challenges of Deep Learning, {eid: 85057169222}>, <Sofware engineering challenges for machine learning applications: A literature review, {eid: 85102661501}>, <Asset management in machine learning: A survey, {eid: 85109085275}>, <None, {eid: 85138404749}>, <None, {eid: 85147684797}>, <Traceability for trustworthy ai: A review of models and tools, {eid: 85106151024}>, <Implicit Provenance for Machine Learning Artifacts, {eid: 85091940314}>, <A Survey of Software Development Process Models in Software Engineering, {eid: 84949498241}>, <CRISP-DM: Towards a Standard Process Model for Data Mining, {eid: 0003157840}>, <The KDD Process for Extracting Useful Knowledge from Volumes of Data, {eid: 0030285403}>, <Machine learning for networking: Workflow, advances and opportunities, {eid: 85036566955}>, <None, {eid: 85136041419}>, <None, {eid: 74549142762}>, <Adoption and effects of software engineering best practices in machine learning, {eid: 85095814265}>, <Out-of-the-Box Reproducibility: A Survey of Machine Learning Platforms, {eid: 85083260307}>, <Deep-water framework: The Swiss army knife of humans working with machine learning models, {eid: 85086427001}>, <Mapping platforms into a new open science model for machine learning, {eid: 85075184361}>, <On the Need for Artifact Models in, {eid: 85042655599}>, <None, {eid: 85147701586}>, <Artifact and reference models for generative machine learning frameworks and build systems, {eid: 85120851738}>, <Artifact-Based Analysis for the Development of Collaborative Embedded Systems, {eid: 85108965376}>, <None, {eid: 85095253828}>, <Machine learning pipelines: Provenance, reproducibility and fair data principles, {eid: 85147688840}>, <Cross-validation, {eid: 79954553074}>, <A Practical Taxonomy of Reproducibility for Machine Learning Research, {eid: 85080704884}>, <ModelDB: a system for machine learning model management, {eid: 84979752252}>, <Evaluating classification schema and classification decisions, {eid: 85050828867}>, <Toward methodological guidelines for process theories and taxonomies in software engineering, {eid: 85040976130}>, <On the effectiveness of machine learning experiment management tools, {eid: 85132832571}>, <Asset management in machine learning: State-of-research and state-of-practice, {eid: 85147701250}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2022-08-31,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85146495066
31,,"Teumert S. (AUID: 57315097000), Tegeler T. (AUID: 57210413680), Schürmann J. (AUID: 57216758132), Busch D. (AUID: 57315516200), Wirkner D. (AUID: 57191825026)",,Evaluation of Graphical Modeling of CI/CD Workflows with Rig,2022,"11th International Symposium on Leveraging Applications of Formal Methods, Verification and Validation, ISoLA 2022",,,,,,,1,10.1007/978-3-031-19756-7_21,https://www.doi.org/10.1007/978-3-031-19756-7_21,"<Chair for Programming Systems, TU Dortmund University>",,"© 2022, The Author(s), under exclusive license to Springer Nature Switzerland AG.This evaluation is about our workshop on graphical modeling of CI/CD pipeline and how our self-developed tool Rig can support creating such workflows. We describe the three tasks the workshop covered and present the data we have gathered throughout the workshop via surveys of the participants. After that, the data is interpreted and discussed concerning its validity. Last, we draw conclusions from the data interpretations with regards to our future work with Rig and future workshops we plan to hold.","Continuous Integration and Deployment, DevOps, Domain-Specific Tools, Graphical Modeling, Language-Driven Engineering, Purpose-Specific Language, Software Engineering, Visual Authoring",,,,,,,,"<None, {eid: 85142692492}>, <Tutorial: An overview of malware detection and evasion techniques, {eid: 85056462075}>, <DIME: A programming-less modeling environment for web applications, {eid: 84993929512}>, <None, {eid: 85142698420}>, <Low-code development and model-driven engineering: Two sides of the same coin?, {eid: 85122676062}>, <None, {eid: 85142732469}>, <DSLs for decision services: A tutorial introduction to language-driven engineering, {eid: 85056450376}>, <A tutorial introduction to graphical modeling and metamodeling with CINCO, {eid: 85056457686}>, <Business process modelling in the jABC: The one-thing-approach, {eid: 84898095232}>, <None, {eid: 85142684303}>, <None, {eid: 33845584384}>, <The NIST definition of cloud computing, {eid: 77954051808}>, <When and how to develop domain-specific languages, {eid: 33745167684}>, <None, {eid: 85142714741}>, <CINCO: A simplicity-driven approach to full generation of domain-specific graphical modeling tools, {eid: 85019270516}>, <None, {eid: 84995360507}>, <Model-based development for high-assurance embedded systems, {eid: 85142770603}>, <None, {eid: 85142727826}>, <Continuous integration, delivery and deployment: A systematic review on approaches, tools, challenges and practices, {eid: 85019140530}>, <A model-driven approach to continuous practices for modern cloud-based web applications, {eid: 85070649037}>, <An introduction to graphical modeling of CI/CD workflows with rig, {eid: 85118135758}>, <None, {eid: 85142675149}>, <None, {eid: 85118123932}>, <Aligned, purpose-driven cooperation: The future way of system development, {eid: 85118172762}>",,,Springer Science and Business Media Deutschland GmbH,,,2022-10-22,,,,,,,eng,,Book Series,,,,2-s2.0-85142750884
32,,"Galindo J.A. (AUID: 55702520851), Benavides D. (AUID: 22333640600), Horcas J.M. (AUID: 55947780300), Felferning A. (AUID: 58685031400), Fernandez-Amoros D. (AUID: 36245122300)",,FLAMA: A collaborative effort to build a new framework for the automated analysis of feature models,2023,"27th ACM International Systems and Software Product Line Conference, SPLC 2023",,,,,,,0,10.1145/3579028.3609008,https://www.doi.org/10.1145/3579028.3609008,"<University of Seville>, <Itis Software, University of Málaga>, <Graz University of Technology>, <Uned>",,"© 2023 ACM.Nowadays, feature models are the de facto standard when representing commonalities and variability, with modern examples spanning up to 7000 features. Manual analysis of such models is challenging and error-prone due to sheer size. To help in this task, automated analysis of feature models (AAFM) has emerged over the past three decades. However, the diversity of these tools and their supported languages presents a significant challenge that motivated the MOD-EVAR community to initiate a project for a new tool that supports the UVL language. Despite the rise of machine learning and data science, along with robust Python-based libraries, most AAFM tools have been implemented in Java, creating a collaboration gap. This paper introduces Flama, an innovative framework that automates the analysis of variability models. It focuses on UVL model analysis and aims for easy integration and extensibility to bridge this gap and foster better community and cross-community collaboration.","data visualization, effective communication, graphs and tables, software product line, variability, visualization design process",,,,,,,,"<Familiar: A domain-specific language for large scale management of feature models, {eid: 84875729938}>, <Clafer: unifying class and feature modeling, {eid: 84917709136}>, <Automated analysis of feature models 20 years later: A literature review, {eid: 77955227439}>, <Fama, {eid: 84932635887}>, <API documentation, {eid: 85159783498}>, <Debian Packages Repositories as Software Product Line Models, {eid: 84871305316}>, <Automated analysis of feature models: Quo vadis?, {eid: 85051563856}>, <Uniform and scalable sampling of highly configurable systems, {eid: 85123378721}>, <FM fact label: a configurable and interactive visualization of feature model characterizations, {eid: 85139172754}>, <Empirical analysis of the tool support for software product lines, {eid: 85131551970}>, <FeatureIDE: A tool framework for featureoriented software development, {eid: 70349553079}>, <Advisory: vulnerability analysis in software development project dependencies, {eid: 85139148412}>, <Early Definition of Frozen and Hot Spots in the Development of Domain Frameworks, {eid: 85175978948}>, <An overview on analysis tools for software product lines, {eid: 84907809917}>, <CNF Encodings, {eid: 72949099058}>, <Selection of software product line implementation components using recommender systems: An application to wordpress, {eid: 85067252529}>, <BeTTy: benchmarking and testing on the automated analysis of feature models, {eid: 84857593568}>, <The Variability Model of The Linux Kernel, {eid: 78049370236}>, <PEP 8-style guide for python code, {eid: 84887076248}>",,,Association for Computing Machinery,,,2023-08-28,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85168118717
33,,"Kusmenko E. (AUID: 57195075206), Rumpe B. (AUID: 55861872700), Schneiders S. (AUID: 57204735174), Von Wenckstern M. (AUID: 57188928304)",,Highly-optimizing and multi-target compiler for embedded system models :C++ compiler toolchain for the component and connector language Embeddedmontiarc,2018,"21st ACM/IEEE International Conference on Model Driven Engineering Languages and Systems, MODELS 2018",,,,,,,16,10.1145/3239372.3239388,https://www.doi.org/10.1145/3239372.3239388,"<Software Engineering, RWTH Aachen University>",,"© 2018 Copyright held by the owner/author(s). Publication rights licensed to ACM.Component and Connector (C&C) models, with their corresponding code generators, are widely used by large automotive manufacturers to develop new software functions for embedded systems interacting with their environment; C&C example applications are engine control, remote parking pilots, and traffic sign assistance. This paper presents a complete toolchain to design and compile C&C models to highly-optimized code running on multiple targets including x86/x64, ARM and WebAssembly. One of our contributions are algebraic and threading optimizations to increase execution speed for computationally expensive tasks. A further contribution is an extensive case study with over 50 experiments. This case study compares the runtime speed of the generated code using different compilers and mathematical libraries. These experiments showed that programs produced by our compiler are at least two times faster than the ones compiled by MATLAB/Simulink for machine learning applications such as image clustering for object detection. Additionally, our compiler toolchain provides a complete model-based testing framework and plug-in points for middleware integration. We make all materials including models and toolchains electronically available for inspection and further research.","Code generation, Model-driven software engineering",,,,,,,,"<A decade of agile methodologies: Towards explaining agile software development, {eid: 84859527852}>, <Accurate real-time relative localization using single-frequency GPS, {eid: 84914155190}>, <None, {eid: 85056908316}>, <None, {eid: 0003761296}>, <An open source modelica graphic editor integrated with electronic notebooks and interactive simulation, {eid: 84861903229}>, <None, {eid: 85056824435}>, <An Open Continuous Deployment Infrastructure for a Self-driving Vehicle Ecosystem, {eid: 84971500502}>, <Component and connector views in practice: An experience report, {eid: 85040631558}>, <None, {eid: 85056841349}>, <None, {eid: 85056814209}>, <None, {eid: 85056883752}>, <None, {eid: 84899089919}>, <None, {eid: 85020420641}>, <None, {eid: 85056834473}>, <OpenModelica-A free open-source environment for system modeling, simulation, and teaching, {eid: 43049176427}>, <Simulation framework for executing component and connector models of self-driving vehicles, {eid: 85041433031}>, <Engineering tagging languages for DSLs, {eid: 84961634193}>, <None, {eid: 85056851283}>, <Model-Based Development of Self-Adaptive Autonomous Vehicles using the SMARDT Methodology, {eid: 85052024078}>, <Lead system transformation for pooling of body surface map data: A surface Laplacian approach, {eid: 0028820812}>, <None, {eid: 0004193224}>, <None, {eid: 85053070397}>, <None, {eid: 85056850193}>, <None, {eid: 33646566908}>, <None, {eid: 77952650268}>, <Hyperthreading technology in the netburst microarchitecture, {eid: 0038633602}>, <Modeling architectures of cyber-physical systems, {eid: 85025124378}>, <LLVM: A compilation framework for lifelong program analysis & transformation, {eid: 3042658703}>, <None, {eid: 85056884212}>, <The inverse of a tridiagonal matrix, {eid: 0035631290}>, <Consistent extra-functional properties tagging for component and connector models, {eid: 85025163766}>, <None, {eid: 85056822022}>, <None, {eid: 85056851928}>, <None, {eid: 85056861453}>, <None, {eid: 85056861453}>, <None, {eid: 85056824273}>, <None, {eid: 85056811269}>, <None, {eid: 85056813951}>, <None, {eid: 85056815825}>, <None, {eid: 85056904808}>, <On spectral clustering: Analysis and an algorithm, {eid: 84899013108}>, <ROS: An open-source Robot Operating System, {eid: 77957352104}>, <None, {eid: 85056817186}>, <Armadillo: A template-based C++ library for linear algebra, {eid: 85017260755}>, <A survey of Cyber-Physical Systems, {eid: 84555177840}>, <None, {eid: 85033687701}>, <None, {eid: 4043148124}>, <None, {eid: 85034754239}>, <A tutorial on spectral clustering, {eid: 34548583274}>, <None, {eid: 85056874045}>, <None, {eid: 85056810104}>, <None, {eid: 85056810104}>, <Intel math kernel library, {eid: 84945118616}>, <None, {eid: 85056807163}>, <None, {eid: 84947908098}>, <Emscripten: An LLVM-to-JavaScript compiler, {eid: 81355123361}>, <Test-driven modeling for model-driven development, {eid: 4644363382}>",,,"Association for Computing Machinery, Inc",,,2018-10-14,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85056871758
34,,"Brito M. (AUID: 58085862600), Cunha J. (AUID: 23983985900), Saraiva J. (AUID: 57203315736)",,Identification of microservices from monolithic applications through topic modelling,2021,"36th Annual ACM Symposium on Applied Computing, SAC 2021",,,,,,,14,10.1145/3412841.3442016,https://www.doi.org/10.1145/3412841.3442016,"<University of Minho>, <University of Minho, HASLab/INESC Tec>",,"© 2021 ACM.Microservices emerged as one of the most popular architectural patterns in the recent years given the increased need to scale, grow and flexibilize software projects accompanied by the growth in cloud computing and DevOps. Many software applications are being submitted to a process of migration from its monolithic architecture to a more modular, scalable and flexible architecture of microservices. This process is slow and, depending on the project's complexity, it may take months or even years to complete. This paper proposes a new approach on microservice identification by resorting to topic modelling in order to identify services according to domain terms. This approach in combination with clustering techniques produces a set of services based on the original software. The proposed methodology is implemented as an open-source tool for exploration of monolithic architectures and identification of microservices. A quantitative analysis using the state of the art metrics on independence of functionality and modularity of services was conducted on 200 open-source projects collected from GitHub. Cohesion at message and domain level metrics' showed medians of roughly 0.6. Interfaces per service exhibited a median of 1.5 with a compact interquartile range. Structural and conceptual modularity revealed medians of 0.2 and 0.4 respectively. Our first results are positive demonstrating beneficial identification of services due to overall metrics' results.",,,,,,,,,"<None, {eid: 85104946324}>, <None, {eid: 85105021364}>, <Microservices migration patterns, {eid: 85054788373}>, <Latent dirichlet allocation, {eid: 0141607824}>, <Fast unfolding of communities in large networks, {eid: 56349094785}>, <Understanding the factors that impact the popularity of github repositories, {eid: 85013103870}>, <Using cohesion and coupling for software remodularization: Is it enough?, {eid: 84978101496}>, <None, {eid: 85045955954}>, <None, {eid: 85104944007}>, <None, {eid: 85068383036}>, <Feature location in source code: A taxonomy and survey, {eid: 84875382544}>, <Resolution limit in community detection, {eid: 33846126275}>, <None, {eid: 85077195980}>, <Community structure in social and biological networks, {eid: 0037062448}>, <None, {eid: 84984794874}>, <Latent dirichlet allocation (lda) and topic modeling: Models, applications, a survey, {eid: 85057797692}>, <Service candidate identification from monolithic systems based on execution traces, {eid: 85106015844}>, <Functionality-oriented microservice extraction based on execution trace clustering, {eid: 85054018170}>, <Extracting candidates of microservices from monolithic application code, {eid: 85066800642}>, <Topic modeling: A comprehensive review, {eid: 85122847664}>, <Featuregathering dependency-based software clustering using dedication and modularity, {eid: 84873197599}>, <None, {eid: 84885991436}>, <Random walks, markov processes and the multiscale modular organization of complex networks, {eid: 84922728356}>, <Towards real-time community detection in large networks, {eid: 67649881239}>, <What are the dominant projects in the github python ecosystem?, {eid: 85010403220}>, <Extraction of microservices from monolithic software architectures, {eid: 85032372980}>, <None, {eid: 85105022711}>, <Modularity and community structure in networks, {eid: 33745012299}>, <None, {eid: 84950338538}>, <None, {eid: 84979776387}>, <On the criteria to be used in decomposing systems into modules, {eid: 0015482049}>, <How effectively is defective code actually tested? An analysis of junit tests in seven open source systems, {eid: 85056717868}>, <Topological and functional comparison of community detection algorithms in biological networks, {eid: 85064871520}>, <Exploring the space of topic coherence measures, {eid: 84926673043}>, <LDAvis: A method for visualizing and interpreting topics, {eid: 84956473495}>, <Exploring topic coherence over many models and many topics, {eid: 84875509718}>, <Clustering classes in packages for program comprehension, {eid: 85018815330}>, <Exploring topic models in software engineering data analysis: A survey, {eid: 84983331655}>, <None, {eid: 84949178783}>",,,Association for Computing Machinery,,,2021-03-22,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85104997385
35,,"Jongeling R. (AUID: 57188564750), Carlson J. (AUID: 7402114423), Cicchetti A. (AUID: 22733357800)",,Impediments to Introducing Continuous Integration for Model-Based Development in Industry,2019,"45th Euromicro Conference on Software Engineering and Advanced Applications, SEAA 2019",,,,,,,12,10.1109/SEAA.2019.00071,https://www.doi.org/10.1109/SEAA.2019.00071,"<Mälardalen University, Department of Innovation, Design and Engineering>",,"© 2019 IEEE.Model-based development and continuous integration each separately are methods to improve the productivity of development of complex modern software systems. We investigate industrial adoption of these two phenomena in combination, i.e., applying continuous integration practices in model-based development projects. Through semi-structured interviews, eleven engineers at three companies with different modelling practices share their views on perceived and experienced impediments to this adoption. We find some cases in which this introduction is undesired and expected to not be beneficial. For other cases, we find and categorize several impediments and discuss how they are dealt with in industrial practice. Model synchronization and tool interoperability are found the most challenging to overcome and the ways in which they are circumvented in practice are detrimental for introducing continuous integration.","Continuous integration, Interview study, Model-based development",,,,,,,,"<Model-driven engineering, {eid: 33344465743}>, <Model-driven engineering in a large industrial context-motorola case study, {eid: 33646192696}>, <Empirical assessment of mde in industry, {eid: 79959917914}>, <An empirical study of the state of the practice and acceptance of model-driven engineering in four industrial cases, {eid: 84872279471}>, <Modelbased engineering in the embedded systems domain: An industrial survey on the state-of-practice, {eid: 84962207101}>, <Experienced benefits of continuous integration in industry software product development: A case study, {eid: 84875501070}>, <A hundred days of continuous integration, {eid: 52949092458}>, <None, {eid: 0006705483}>, <Agile model-driven development in practice, {eid: 78649730252}>, <Agile model-driven engineering in mechatronic systems-an industrial case study, {eid: 84921391979}>, <Combining the continuous integration practice and the model-driven engineering approach, {eid: 84981165314}>, <The impact of integrating agile software development and model-driven development: A comparative case study, {eid: 85054784046}>, <None, {eid: 36448929181}>, <Guidelines for conducting and reporting case study research in software engineering, {eid: 61849169018}>, <Model-driven engineering practices in industry: Social, organizational and managerial factors that lead to success or failure, {eid: 84900499307}>, <Climbing the stairway to heaven-a mulitiple-case study exploring barriers in the transition from agile development towards continuous deployment of software, {eid: 84869851477}>, <Continuous integration impediments in large-scale industry projects, {eid: 85021428023}>, <Continuous integration support in modeling tools, {eid: 85063092120}>, <The integration of agile development and model driven development-a systematic literature review, {eid: 85041446030}>, <Continuous integration beyond the team: A tooling perspective on challenges in the automotive industry, {eid: 84991687521}>, <Stepwise adoption of continuous delivery in model-driven engineering, {eid: 85080701791}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2019-08-28,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85075941988
36,,"Ali S. (AUID: 57203224747), Hafeez Y. (AUID: 58070344600), Abbasi T.R. (AUID: 57207735789), Haider W. (AUID: 57202746491), Salam A. (AUID: 57201505347), Imran M. (AUID: 58742772000)",,Improving Component Based Software Integration Testing Using Data Mining Technique,2018,"12th International Conference on Mathematics, Actuarial Science, Computer Science and Statistics, MACS 2018",,,,,,,3,10.1109/MACS.2018.8628368,https://www.doi.org/10.1109/MACS.2018.8628368,"<UIIT, PMAS Arid Agriculture University>, <National Center for Physics>",,"© 2018 IEEE.To increase rapid and high-quality product delivery, companies divide applications into different components and reuse these components to reduce complexity in product development. This increases agility and flexibility in continuous integration within limited resources. Consequently, interaction among reusable components results in mismatch of components specification and retrieval due to encapsulated functionalities. Therefore, most of the components-based software fail during integration testing. In this paper, we propose a framework for component based software specification and integration testing. The proposed framework considers multiple contexts for component specification and uses a data mining technique for improving the integration testing process. We evaluated the proposed framework using empirical study. The results show significant improvement for various parameters in the proposed framework as compared to traditional approaches of component based software development.","CBSE, components, generation, MBT, Sequence Diagram, test case, testing, UML",,,,,,,,"<A model-based testing technique for component-based real-time embedded systems, {eid: 84934300238}>, <A proposal for new software testing technique for component based software system, {eid: 85046336643}>, <Software paradigms, assessment types and non-functional requirements in model-based integration testing: A systematic literature review, {eid: 84905489438}>, <The AGEDIS tools for model-based testing, {eid: 23744455146}>, <A UML-based approach to system testing, {eid: 4344612500}>, <Automatic test generation: A use case driven approach, {eid: 33645820260}>, <Functional test case generation based on model driven testing using FSM and UML activity diagram, {eid: 85053265336}>, <A picture from the model-based testing area: Concepts, techniques, and challenges, {eid: 80052143861}>, <A model-based trace testing approach for validation of formal co-simulation models, {eid: 84928102507}>, <A UML-based approach to system testing, {eid: 4344612500}>, <Automated transition from use cases to UML state machines to support state-based testing, {eid: 79959243446}>, <Facilitating the transition from use case models to analysis models: Approach and experiments, {eid: 84874828402}>, <Automatic generation of system test cases from use case specifications, {eid: 84975763819}>, <A model-based trace testing approach for validation of formal co-simulation models, {eid: 84928102507}>, <A model-based test case generation method for function testing of Train Control Systems, {eid: 84995477028}>, <Towards an integrated approach to verification and model-based testing in system engineering, {eid: 85041811373}>, <An approach to generate test cases from sequence diagram, {eid: 84918590141}>, <Towards model-based integration of component-based automotive software systems, {eid: 85046253871}>, <An empirical study on the effect of testing on code quality using topic models: A case study on software development systems, {eid: 85023162278}>, <Comparing LDA and LSA topic models for content-based movie recommendation systems, {eid: 84952670175}>, <Stability of topic modeling via matrix factorization, {eid: 85028880663}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2018-11-24,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85062789555
37,,"Nogueira A. (AUID: 55370436500), Zenha-Rela M. (AUID: 25823576100), Ribeiro J. (AUID: 55947747200), Craske A. (AUID: 57205728517)",,Improving la redoute's CI/CD pipeline and devops processes by applying machine learning techniques,2018,"11th International Conference on the Quality of Information and Communications Technology, QUATIC 2018",,,,,,,24,10.1109/QUATIC.2018.00050,https://www.doi.org/10.1109/QUATIC.2018.00050,"<CISUC, University of Coimbra, Pólo II - Pinhal de Marrocos>, <Polytechnic Institute of Leiria, Morro Do Lena - Alto Do Vieiro>, <La Redoute S.A>",,"© 2018 IEEE.The complexity inherent to software development and maintenance - not only in technical terms, but also from a human perspective - entails challenges that can be addressed as learning problems. Machine learning techniques may be employed as tools to gain insight about strategies that can lead to the improvement of the quality of software processes and products. Defect proneness prediction, in particular, may be identified as an active research field. As stated by DevOps guidelines, the possibility of obtaining quick feedback allows teams to operate in an agile mode in which communication, decision taking and problem solving are expeditious, allowing companies to boost business value. This paper describes ongoing research for applying machine learning techniques to improve the quality of processes and products inside the DevOps pipeline of the La Redoute's IT department.","CI/CD Pipeline, DevOps, Machine Learning, Software Defect Prediction, Software Development Life Cycle, Software Quality",,,,,,,,"<A survey in the area of machine learning and its application for software quality prediction, {eid: 84886782277}>, <Comparative study of soft computing techniques for software quality model, {eid: 84891351072}>, <The dynamic models for software development projects and the machine learning techniques, {eid: 85061338820}>, <Predicting faults in high assurance software, {eid: 79951935271}>, <Software process evaluation: A machine learning approach, {eid: 84855456136}>, <Software process evaluation: A machine learning framework with application to defect management process, {eid: 84910019187}>, <A systematic review of machine learning techniques for software fault prediction, {eid: 84919754115}>, <Improved approach for software defect prediction using artificial neural networks, {eid: 85010505608}>, <A machine learning based software process model recommendation method, {eid: 84967329239}>, <None, {eid: 85018529770}>, <None, {eid: 85061311124}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2018-09-04,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85061305992
38,,"Zúñiga-Prieto M. (AUID: 56524481200), Insfran E. (AUID: 6506793505), Abrahao S. (AUID: 8211929700), Cano-Genoves C. (AUID: 57192005049)",,Incremental integration of microservices in cloud applications,2016,"25th International Conference on Information Systems Development, ISD 2016",,,,,,,4,,,"<University of Cuenca>, <Universitat Politècnica de València>",,"Microservices have recently appeared as a new architectural style that is native to the cloud. The high availability and agility of the cloud demands organizations to migrate or design microservices, promoting the building of applications as a suite of small and cohesive services (microservices) that are independently developed, deployed and scaled. Current cloud development approaches do not support the incremental integration needed for microservice platforms, and the agilityofgetting new functionalities out to customers is consequently affected by the lack of support for the integration design and automation of the development and deployment tasks. This paper presents an approach for the incremental integration of microservices that will allow developers to specify and design microservice integration, and provide mechanisms with which to automatically obtain the implementation code for business logic and interoperation among microservices along with deployment and architectural reconfiguration scripts specific to the cloud environment in which the microservice will be deployed.","Cloud, Cloud architectures, Incremental, Integration, Microservices",,,,,,,,"<None, {eid: 84864997201}>, <None, {eid: 84995906617}>, <UML-based cloud application modeling with libraries, profiles, and templates, {eid: 84911965669}>, <Towards CloudML, a modelbased approach to provision resources in the clouds, {eid: 84879762752}>, <SeaClouds: A European project on seamless management of multi-cloud applications, {eid: 84920511449}>, <Controlling data in the cloud: Outsourcing computation without outsourcing control, {eid: 74049093526}>, <Evaluating REST architectures-approach, tooling and guidelines, {eid: 84951064164}>, <None, {eid: 84995938045}>, <Development and deployment at facebook, {eid: 84880146979}>, <None, {eid: 84964234114}>, <The CloudMIG approach: Model-based migration of software systems to cloud-optimized apps, {eid: 84886445739}>, <Developing migratable multicloud applications based on MDE and adaptation techniques, {eid: 84884637858}>, <A UML profile for modeling multicloud applicat, {eid: 84885733995}>, <Service functional test automation, {eid: 84995934968}>, <None, {eid: 84858197925}>, <Designing a smart city internet of things platform with microservice architecture, {eid: 84959050879}>, <None, {eid: 84950338538}>, <None, {eid: 84867643299}>, <None, {eid: 85018761953}>, <Framework for platform agnostic enterprise app. Development supporting multiple clouds, {eid: 84937500863}>, <None, {eid: 84995934978}>, <None, {eid: 84950310360}>, <An incremental and model driven approach for the dynamic reconfiguration of cloud application architectures, {eid: 84992731072}>, <A UML profile for modeling the integration of cloud services in incremental software development (Spanish), {eid: 84995872488}>, <Towards a model-driven dynamic architecture reconfiguration process for cloud services integration, {eid: 84923259718}>",,,Association for Information Systems,,,2016-08-24,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-84995923681
39,,"Bergelin J. (AUID: 57713657400), Strandberg P.E. (AUID: 57193354005)",,Industrial requirements for supporting AI-enhanced model-driven engineering,2022,"25th ACM/IEEE International Conference on Model Driven Engineering Languages and Systems, MODELS 2022",,,,,,,1,10.1145/3550356.3561609,https://www.doi.org/10.1145/3550356.3561609,"<Mälardalen University>, <Westermo Network Technologies Ab>",,"© 2022 Owner/Author.There is an increasing interest in research on the combination of AI techniques and methods with MDE. However, there is a gap between AI and MDE practices, as well as between researchers and practitioners. This paper tackles this gap by reporting on industrial requirements in this field. In the AIDOaRt research project, practitioners and researchers collaborate on AI-Augmented automation supporting modeling, coding, testing, monitoring, and continuous development in cyber-physical systems. The project specifically lies at the intersection of industry and academia collaboration with several industrial use cases. Through a process of elicitation and refinement, 78 high-level requirements were defined, and generalized into 30 generic requirements by the AIDOaRt partners. The main contribution of this paper is the set of generic requirements from the project for enhancing the development of cyber-physical systems with artificial intelligence, DevOps, and model-driven engineering, identifying the hot spots of industry needs in the interactions of MDE and AI. Future work will refine, implement and evaluate solutions toward these requirements in industry contexts.","artificial intelligence, cyber-physical systems, model-driven engineering, requirements",,,,,,,,"<2018. A survey on modeling and model-driven engineering practices in the embedded software industry, {eid: 85053702722}>, <2016. AI-Augmented Automation for DevOps, a Model-Based Framework for Continuous Development in Cyber-Physical Systems, {eid: 85137201900}>, <2017 Model-driven software engineering in practice, {eid: 84878326137}>, <2021. What is the future of modeling?, {eid: 85101111198}>, <2017. Cognifying model-driven software engineering, {eid: 85042643413}>, <2019. Towards a model-based DevOps for cyber-physical systems, {eid: 85096956543}>, <2021. AIDOaRt: AI-Augmented Automation for DevOps, a Model-based Framework for Continuous Development in Cyber-Physical Systems, {eid: 85119884136}>, <2018 Testing embedded software: A survey of the literature, {eid: 85050473678}>, <2016 A systematic literature review of literature reviews in software testing, {eid: 84987968030}>, <2016 Challenges and best practices in industry-Academia collaborations in software engineering: A systematic literature review, {eid: 84980410074}>, <2019 the global landscape of AI ethics guidelines, {eid: 85089606091}>, <2007 A collection of definitions of intelligence, {eid: 85118477371}>, <2020. Towards an assessment grid for intelligent modeling assistance, {eid: 85096779067}>, <2021. An MDE Method for Improving Deep Learning Dataset Requirements Engineering using Alloy and UML, {eid: 85103060952}>, <None, {eid: 85142920011}>, <2006 Model-driven engineering, {eid: 38049090407}>, <2017. Continuous Integration Delivery and Deployment: A Systematic Review on Approaches Tools Challenges and Practices, {eid: 85019140530}>, <2021. Ethical AI-Powered Regression Test Selection, {eid: 85142931288}>",,,"Association for Computing Machinery, Inc",,,2022-10-23,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85142919611
40,,"Křikava F. (AUID: 36175849100), Rouvoy R. (AUID: 23089521900), Seinturier L. (AUID: 6603303741)",,Infrastructure as runtime models: Towards Model-Driven resource management,2015,"18th ACM/IEEE International Conference on Model Driven Engineering Languages and Systems, MODELS 2015",,,,,,,3,10.1109/MODELS.2015.7338240,https://www.doi.org/10.1109/MODELS.2015.7338240,"<Czech Technical University>, <Inria / University of Lille>",,"© 2015 IEEE.The importance of continuous delivery and the emergence of tools allowing to treat infrastructure configurations programmatically have revolutionized the way computing resources and software systems are managed. However, these tools keep lacking an explicit model representation of underlying resources making it difficult to introspect, verify or reconfigure the system in response to external events. In this paper, we outline a novel approach that treats system infrastructure as explicit runtime models. A key benefit of using such models@run.time representation is that it provides a uniform semantic foundation for resources monitoring and reconfiguration. Adopting models at runtime allows one to integrate different aspects of system management, such as resource monitoring and subsequent verification into an unified view which would otherwise have to be done manually and require to use different tools. It also simplifies the development of various self-adaptation strategies without requiring the engineers and researchers to cope with low-level system complexities.","Biological system modeling, Cloud computing, Computational modeling, Monitoring, Object oriented modeling, Runtime, Virtual machining",,,,,,,,"<Software engineering for self-adaptive systems: A research roadmap, {eid: 70350033987}>, <None, {eid: 84941067484}>, <None, {eid: 84873544676}>, <Rainbow: Architecture-based self-adaptation with reusable infrastructure, {eid: 7244223259}>, <Integrating adaptation mechanisms using control theory centric architecture models: A case study, {eid: 84929652618}>, <ACTRESS: Domain-specific modeling of self-adaptive software architectures, {eid: 84905647601}>, <SIGMA: Scala internal domain-speciic languages for model manipulations, {eid: 84962490068}>, <Model querying with funnyQT, {eid: 84961653698}>, <Demonstration of runtime model based management of diverse cloud resources, {eid: 84961653696}>, <Modeling dynamic virtualized resource landscapes, {eid: 84864049213}>, <None, {eid: 74549142762}>, <Viewing control structures as patterns of passing messages, {eid: 0017504498}>, <Mechanisms for leveraging models at runtime in self-adaptive software, {eid: 84904817608}>, <Model-driven engineering of self-adaptive software with EUREMA, {eid: 84893551450}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2015-09-30,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-84961653122
41,,"Hua Y. (AUID: 57192067904), Hein B. (AUID: 23008891600)",,Interactive Learning Engineering Concepts in AutomationML,2019,"24th IEEE International Conference on Emerging Technologies and Factory Automation, ETFA 2019",,,,,,,2,10.1109/ETFA.2019.8869182,https://www.doi.org/10.1109/ETFA.2019.8869182,"<Faculty of Informatics, Karlsruhe Institute of Technology>, <Faculty of Management Science and Engineering, Karlsruhe University of Applied Science>",,"© 2019 IEEE.In the era of digitization, industrial engineering process generates a vast amount of data. To organize, store, and exchange such data, dedicated international standards are developed, including the XML-based data format AutomationML (AML). AML is standardized as IEC 62714 and is recommended for managing data flow in continuous engineering. Nevertheless, engineering data is inherently heterogeneous, and the harmonization of various data sources presents a bottleneck in the vision of an integrated engineering toolchain. In this paper, we present AMLLearner - a semi-automated system for learning engineering concepts from AML data. The results of learning are formal ontological definitions of engineering artifacts that naturally serve as knowledge for information integration. Based on the previous works on learning in AML, this paper emphasizes the involvement of end users, i.e. domain experts, for providing suggestions and feedback to the learner. To show the interactivity of AMLLearner, we discuss its characteristics regarding the recent study on interactive machine learning systems.",,,,,,,,,"<Concept for AutomationML-based interoperability between multiple independent engineering tools without semantic harmonization: Experiences with AutomationML, {eid: 85044442278}>, <Concept for managing multiple semantics with AutomationML Maturity level concept of semantic standardization, {eid: 84876369167}>, <Knowledge-based integration of industrial plant models, {eid: 84893616803}>, <Modeling AutomationML: Semantic web technologies vs. Model-driven engineering, {eid: 84952900461}>, <Ontology building for cyber-physical systems: A domain expert-centric approach, {eid: 85055502867}>, <Concept learning in AutomationML with formal semantics and inductive logic programming, {eid: 85053811509}>, <Concept learning in engineering based on refinement operator, {eid: 85053754206}>, <Power to the people: The role of humans in interactive machine learning, {eid: 84920541067}>, <A review of user interface design for interactive machine learning, {eid: 85058625902}>, <Interpreting owl complex classes in automationml based on bidirectional translation (accepted), {eid: 85074194554}>, <AutomationML-The glue for seamless automation engineering, {eid: 56349149489}>, <The flow and reuse of data: Capabilities of AutomationML in the production system life cycle, {eid: 85049184054}>, <None, {eid: 84872893043}>, <None, {eid: 85074205030}>, <DL-learner-A framework for inductive learning on the semantic web, {eid: 84990248391}>, <Class expression learning for ontology engineering, {eid: 79951681303}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2019-09-10,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85074194830
42,,"Bertolino A. (AUID: 7006797074), Guerriero A. (AUID: 57205344124), Pietrantuono R. (AUID: 23135531000), Russo S. (AUID: 7102994111), Miranda B. (AUID: 56405278100)",,Learning-to-rank vs ranking-to-learn: Strategies for regression testing in continuous integration,2020,"42nd ACM/IEEE International Conference on Software Engineering, ICSE 2020",,,,,,,51,10.1145/3377811.3380369,https://www.doi.org/10.1145/3377811.3380369,"<Isti - Cnr>, <Universita di Napoli Federico Ii>, <Federal University of Pernambuco>",,"© 2020 Association for Computing Machinery.In Continuous Integr tion (CI), regression testing is constr ined by the time between commits. This dem nds for c reful selection nd/or prioritiz tion of test c ses within test suites too l rge to be run entirely. To this im, some M chine Le rning (ML) techniques h ve been proposed, s n ltern tive to deterministic ppro ches. Two bro d str tegies for ML-b sed prioritiz tion re le rning-tor nk nd wh t we c ll r nking-to-le rn (i.e., reinforcement le rning). V rious ML lgorithms c n be pplied in e ch str tegy. In this p per we introduce ten of such lgorithms for doption in CI pr ctices, nd perform comprehensive study comp ring them g inst e ch other using subjects from the Ap che Commons project.We n lyze the influence of sever l fe tures of the code under test nd of the test process. The results llow to dr w criteri to support testers in selecting nd tuning the technique th t best fits their context.","Continuous integration, Machine learning, Regression testing, Test prioritization, Test selection",,,,,,,,"<Learning for test prioritization: An industrial case study, {eid: 84997235107}>, <Scmamp: Statistical comparison of multiple algorithms in multiple problems, {eid: 85010411560}>, <An empirical study of the effect of time constraints on the cost-benefits of regression testing, {eid: 77950490739}>, <Machine learning applied to software testing: A systematic mapping study, {eid: 85074632279}>, <Techniques for improving regression testing in continuous integration development environments, {eid: 84986877429}>, <Advanced nonparametric tests for multiple comparisons in the design of experiments in computational intelligence and data mining: Experimental analysis of power, {eid: 77549084648}>, <Practical regression test selection with dynamic file dependencies, {eid: 84964268054}>, <Test prioritization in continuous integration environments, {eid: 85053760573}>, <Prioritizing manual test cases in traditional and rapid release environments, {eid: 84935083544}>, <Multivariate quality control, {eid: 0002199780}>, <Approximations of the critical region of the fbietkan statistic, {eid: 0001750957}>, <Test case prioritization approaches in regression testing: A systematic literature review, {eid: 85028775957}>, <Supporting continuous integration by code-churn based test selection, {eid: 84945976974}>, <Estimating mutual information, {eid: 84913560692}>, <System-level test case prioritization using machine learning, {eid: 85015360836}>, <An extensive study of static regression test selection in modern software evolution, {eid: 84997112179}>, <Linking software testing results with a machine learning approach, {eid: 84876919615}>, <None, {eid: 81855213402}>, <Self-improving reactive agents based on reinforcement learning, planning and teaching, {eid: 0000123778}>, <Feature selection using principal feature analysis, {eid: 37849000197}>, <None, {eid: 85094326943}>, <Taming google-scale continuous testing, {eid: 85026802755}>, <A hundred days of continuous integration, {eid: 52949092458}>, <None, {eid: 0003572833}>, <Identifying effective test cases through k-means clustering for enhancing regression testing, {eid: 84899440164}>, <The pervasiveness of data mining asnd machine learning, {eid: 85008020245}>, <On the use of a friedman-type statistic in balanced and unbalanced block designs, {eid: 0006278076}>, <Reinforcement learning for automatic test case prioritization and selection in continuous integration, {eid: 85026639599}>, <Experienced benefits of continuous integration in industry software product development: A case study, {eid: 84875501070}>, <Static test case prioritization using topic models, {eid: 84893811711}>, <Probabilistic principal component analysis, {eid: 0038959172}>, <Using the case-based ranking methodology for test case prioritization, {eid: 34547244888}>, <Reinforcement learning in continuous state and action spaces, {eid: 85042095332}>, <A study of regression test selection in continuous integration environments, {eid: 85059631520}>, <A learning-to-rank approach to software defect prediction, {eid: 85027924052}>, <Regression testing minimization, selection and prioritization: A survey, {eid: 84857550008}>, <Machine learning and software engineering, {eid: 3543055259}>",,,IEEE Computer Society,,,2020-06-27,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85094318353
43,,"Da Roza E.A. (AUID: 57451970300), Lima J.A.P. (AUID: 57191879945), Silva R.C. (AUID: 57451970400), Vergilio S.R. (AUID: 6506290092)",,Machine Learning Regression Techniques for Test Case Prioritization in Continuous Integration Environment,2022,"29th IEEE International Conference on Software Analysis, Evolution and Reengineering, SANER 2022",,,,,,,2,10.1109/SANER53432.2022.00034,https://www.doi.org/10.1109/SANER53432.2022.00034,"<Federal University of Paraná, Department of Computer Science>",,"© 2022 IEEE.Test Case Prioritization (TCP) techniques are a key factor in reducing the regression testing costs even more when Continuous Integration (CI) practices are adopted. TCP approaches based on failure history have been adopted in this context because they are more suitable for CI environment constraints: test budget and test case volatility, that is, test cases may be added or removed over the CI cycles. Promising approaches are based on Reinforcement Learning (RL), which learns with past prioritization, guided by a reward function. In this work, we introduce a TCP approach for CI environments based on the sliding window method, which can be instantiated with different Machine Learning (ML) algorithms. Unlike other ML approaches, it does not require retraining the model to perform the prioritization and any code analysis. As an alternative for the RL approaches, we apply the Random Forest (RF) algorithm and a Long Short Term Memory (LSTM) deep learning network in our evaluation. We use three time budgets and eleven systems. The results show the applicability of the approach considering the prioritization time and the time between the CI cycles. Both algorithms take just a few seconds to execute. The RF algorithm obtained the best performance for more restrictive budgets compared to the RL approaches described in the literature. Considering all systems and budgets, RF reaches Normalized Average Percentage of Faults Detected (NAPFD) values that are the best or statistically equivalent to the best ones in around 72% of the cases, and the LSTM network in 55% of them. Moreover, we discuss some implications of our results for the usage of the algorithms evaluated.","Continuous Integration, Machine Learning, Recurrent Neural Networks, Regression Testing",,,,,,,,"<Continuous software engineering: A roadmap and agenda, {eid: 84937109068}>, <Test case prioritization in continuous integration environments: A systematic mapping study, {eid: 85078708254}>, <Regression Testing Minimization, Selection and Prioritization: A Survey, {eid: 84857550008}>, <Techniques for Improving Regression Testing in Continuous Integration Development Environments, {eid: 84986877429}>, <Comparing White-box and Black-box Test Prioritization, {eid: 84971425590}>, <Learning-to-rank vs ranking-to-1earn: Strategies for regression testing in continuous integration, {eid: 85094318353}>, <Reinforcement Learning for Automatic Test Case Prioritization and Selection in Continuous Integration, {eid: 85026639599}>, <A multi-armed bandit approach for test case prioritization in continuous integration environments, {eid: 85095865061}>, <Machine learning for sequential data: A review, {eid: 84951778046}>, <Some aspects of the sequential design of experiments, {eid: 84966203785}>, <Random forests, {eid: 0035478854}>, <Long short-term memory, {eid: 0031573117}>, <Combinatorial Interaction Regression Testing: A Study of Test Case Generation and Prioritization, {eid: 47349111813}>, <None, {eid: 85135851250}>, <Test Case Prioritizationfor Continuous Regression Testing: An Industrial Case Study, {eid: 84891715780}>, <Multi-perspective Regression Test Prioritization for Time-Constrained Environments, {eid: 84962091042}>, <TITAN: Test Suite Optimization for Highly Configurable Software, {eid: 85020723577}>, <A learning algorithm for optimizing continuous integration development and testing practice, {eid: 85056634616}>, <Test case prioritization and selection technique in continuous integration development environments: A case study, {eid: 85047379940}>, <Test prioritization in continuous integration environments, {eid: 85053760573}>, <Learning for Test Prioritization: An Industrial Case Study, {eid: 84997235107}>, <None, {eid: 85061363347}>, <None, {eid: 85116290224}>, <None, {eid: 85104045394}>, <A framework for continuous regression and integration testing in loT systems based on deep learning and search-based techniques, {eid: 85097184092}>, <Clustering test cases in web application regression testing using se1forganizing maps, {eid: 84941274303}>, <LSTM-based deep learning for spatial-temporal software testing, {eid: 85084417507}>, <A survey on deep learning: Algorithms, techniques, and applications, {eid: 85053880872}>, <TERMINATOR: better automated ill test case prioritization, {eid: 85071929398}>, <None, {eid: 85135801841}>, <Test Case Prioritization: An Empirical Study, {eid: 0033326792}>, <Use of Ranks in One-Criterion Variance Analysis, {eid: 84943709252}>, <On a test of whether one of two random variables is stochastically larger than the other, {eid: 0002322469}>, <A comparison of alternative tests of significance for the problem of m rankings, {eid: 0001837148}>, <A Critique and Improvement of the CL Common Language Effect Size Statistics of McGraw and Wong, {eid: 0034411339}>, <None, {eid: 84944081816}>, <None, {eid: 84958264664}>, <None, {eid: 84971640658}>, <Scoot-learn: Machine learning in Python, {eid: 80555140075}>, <Geui: A federated testbed for innovative network experiments, {eid: 84897114787}>, <Robust prediction of fau1tproneness by random forests, {eid: 16244370106}>, <None, {eid: 85043308170}>, <None, {eid: 0003639957}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2022-03-15,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85135774956
44,,"Kirchhof J.C. (AUID: 57004585200), Kusmenko E. (AUID: 57195075206), Ritz J. (AUID: 57986533200), Rumpe B. (AUID: 55861872700), Moin A. (AUID: 57207861618), Badii A. (AUID: 17341855100), Günnemann S. (AUID: 35242528700), Challenger M. (AUID: 55910368200)",,MDE for Machine Learning-Enabled Software Systems: A Case Study and Comparison of MontiAnna and ML-Quadrat,2022,"25th ACM/IEEE International Conference on Model Driven Engineering Languages and Systems, MODELS 2022",,,,,,,1,10.1145/3550356.3561576,https://www.doi.org/10.1145/3550356.3561576,"<Software Engineering, RWTH Aachen University>, <School of Computation, Information and Technology, Technical University of Munich>, <University of Antwerp and Flanders Make>, <Department of Computer Science, University of Reading>, <School of Computation, Information and Technology, Technical University of Munich and Munich Data Science Institute>, <Department of Computer Science, University of Antwerp and Flanders Make>",,"© 2022 ACM.In this paper, we propose to adopt the MDE paradigm for the development of Machine Learning (ML)-enabled software systems with a focus on the Internet of Things (IoT) domain. We illustrate how two state-of-The-Art open-source modeling tools, namely MontiAnna and ML-Quadrat can be used for this purpose as demonstrated through a case study. The case study illustrates using ML, in particular deep Artificial Neural Networks (ANNs), for automated image recognition of handwritten digits using the MNIST reference dataset, and integrating the machine learning components into an IoT-system. Subsequently, we conduct a functional comparison of the two frameworks, setting out an analysis base to include a broad range of design considerations, such as the problem domain, methods for the ML integration into larger systems, and supported ML methods, as well as topics of recent intense interest to the ML community, such as AutoML and MLOps. Accordingly, this paper is focused on elucidating the potential of the MDE approach in the ML domain. This supports the ML-engineer in developing the (ML/software) model rather than implementing the code, and additionally enforces reusability and modularity of the design through enabling the out-of-The-box integration of ML functionality as a component of the IoT or cyber-physical systems.","artificial intelligence, domain specific modeling, machine learning, model-driven engineering, tools",,,,,,,,"<None, {eid: 84888639273}>, <Machine learning at Microsoft with ML. NET, {eid: 85071184378}>, <None, {eid: 85140204632}>, <Artifact and Reference Models for Generative Machine Learning Frameworks and Build Systems, {eid: 85120851738}>, <None, {eid: 85142932200}>, <KNIME-The Konstanz Information Miner: Version 2.0 and beyond, {eid: 78651076564}>, <Model-Based Machine Learning, {eid: 84874128594}>, <None, {eid: 84990032982}>, <None, {eid: 84971640658}>, <Torch7: A Matlab-like Environment for Machine Learning, {eid: 84888340666}>, <Adanet: Adaptive structural learning of artificial neural networks, {eid: 85048410351}>, <None, {eid: 85142922493}>, <None, {eid: 84958264664}>, <Modeling Deep Reinforcement Learning Based Architectures for Cyber-Physical Systems, {eid: 85075937600}>, <The WEKA Data Mining Software: An Update, {eid: 76749092270}>, <ThingML: A Language and Code Generation Framework for Heterogeneous Targets, {eid: 85008457888}>, <None, {eid: 85074209842}>, <None, {eid: 85040582253}>, <The next evolution of MDE: A seamless integration of machine learning into domain modeling, {eid: 85019693871}>, <Modeling Dynamic Architectures of Self-Adaptive Cooperative Systems, {eid: 85075948566}>, <MontiThings: Model-driven Development and Deployment of Reliable IoT Applications, {eid: 85116410296}>, <None, {eid: 85142935266}>, <Modeling and Training of Neural Processing Systems, {eid: 85075936455}>, <On the Engineering of AI-Powered Systems, {eid: 85079270211}>, <Modeling Architectures of Cyber-Physical Systems, {eid: 85025124378}>, <Highly-Optimizing and Multi-Target Compiler for Embedded System Models: C++ Compiler Toolchain for the Component and Connector Language EmbeddedMontiArc, {eid: 85056871758}>, <Deep learning, {eid: 84930630277}>, <None, {eid: 84952760942}>, <None, {eid: 85076144943}>, <None, {eid: 85142926591}>, <A model-driven approach to machine learning and software modeling for the IoT, {eid: 85123102237}>, <None, {eid: 85142928357}>, <None, {eid: 85142924937}>, <Scikit-learn: Machine Learning in Python, {eid: 80555140075}>, <None, {eid: 85142927466}>, <None, {eid: 85142937433}>, <None, {eid: 85142925794}>, <The State of Practice in Model-Driven Engineering, {eid: 84899687758}>, <None, {eid: 85142920478}>",,,"Association for Computing Machinery, Inc",,,2022-10-23,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85142937814
45,,"Castellanos C. (AUID: 55418649100), Correal D. (AUID: 16306282100), Varela C.A. (AUID: 8382441200)",,Measuring performance quality scenarios in big data analytics applications: A DevOps and domain-specific model approach,2019,"13th European Conference on Software Architecture, ECSA 2019",,,,,,,0,10.1145/3344948.3344986,https://www.doi.org/10.1145/3344948.3344986,"<Universidad de los Andes>, <Rensselaer Polytechnic Institute>",,"© 2019 ACM.Big data analytics (BDA) applications use advanced analysis algorithms to extract valuable insights from large, fast, and heterogeneous data sources. These complex BDA applications require software design, development, and deployment strategies to deal with volume, velocity, and variety (3vs) while sustaining expected performance levels. BDA software complexity frequently leads to delayed deployments, longer development cycles and challenging performance monitoring. This paper proposes a DevOps and Domain Specific Model (DSM) approach to design, deploy, and monitor performance Quality Scenarios (QS) in BDA applications. This approach uses high-level abstractions to describe deployment strategies and QS enabling performance monitoring. Our experimentation compares the effort of development, deployment and QS monitoring of BDA applications with two use cases of near mid-air collisions (NMAC) detection. The use cases include different performance QS, processing models, and deployment strategies. Our results show shorter (re)deployment cycles and the fulfillment of latency and deadline QS for micro-batch and batch processing.","Big data analytics, DevOps, Domain specific model, Performance quality scenarios, Software architecture",,,,,,,,"<None, {eid: 85057250097}>, <Infrastructure-as-code for data-intensive architectures: A model-driven development approach, {eid: 85051103640}>, <None, {eid: 0004025223}>, <None, {eid: 84943326563}>, <Executing architectural models for big data analytics, {eid: 85057231099}>, <Agile big data analytics forweb-based systems: An architecture-centric approach, {eid: 85014709685}>, <Adaptive application performance management for big data stream processing, {eid: 84964475332}>, <A performance modeling framework for lambda architecture based applications, {eid: 85026670445}>, <Towards a model-driven design tool for big data architectures, {eid: 84974539619}>, <Towards model based approach to hadoop deployment and configuration, {eid: 84964299938}>, <A family of well-clear boundary models for the integration of uas in the nas, {eid: 85085403874}>, <Streaming big data processing in datacenter clouds, {eid: 84961627543}>, <None, {eid: 33751002702}>, <Scheduling of big data applications on distributed cloud based on qos parameters, {eid: 84939980804}>, <None, {eid: 70349441583}>",,,Association for Computing Machinery,,,2019-09-09,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85081976722
46,,"Song H. (AUID: 57195274282), Dautov R. (AUID: 56626911600), Ferry N. (AUID: 35291975700), Solberg A. (AUID: 14827375100), Fleurey F. (AUID: 8582683100)",,Model-based fleet deployment of edge computing applications,2020,"23rd ACM/IEEE International Conference on Model Driven Engineering Languages and Systems, MODELS 2020",,,,,,,14,10.1145/3365438.3410951,https://www.doi.org/10.1145/3365438.3410951,"<Sintef Digital>, <Tellu IoT As>",,"© 2020 ACM.Edge computing brings software in close proximity to end users and IoT devices. Given the increasing number of distributed Edge devices with various contexts, as well as the widely adopted continuous delivery practices, software developers need to maintain multiple application versions and frequently (re-)deploy them to a fleet of many devices with respect to their contexts. Doing this correctly and efficiently goes beyond manual capabilities and requires employing an intelligent and reliable automated approach. Accordingly this paper describes a joint research with a Smart Healthcare application provider on a model-based approach to automatically assigning multiple software deployments to hundreds of Edge gateways. From a Platform-Specific Model obtained from the existing Edge computing platform, we extract a Platform-Independent Model that describes a list of target devices and a pool of available deployments. Next, we use constraint solving to automatically assign deployments to devices at once, given their specific contexts. The resulting solution is transformed back to the PSM as to proceed with software deployment accordingly. We validate the approach with a Fleet Deployment prototype integrated into the DevOps toolchain currently used by the application provider. Initial experiments demonstrate the viability of the approach and its usefulness in supporting DevOps in Edge computing applications.","device fleet, DevOps, IoT, model-based software engineering, software deployment",,,,,,,,"<None, {eid: 85089234282}>, <Satisfability modulo theories: An efcient approach for the resource-constrained project scheduling problem, {eid: 84879506276}>, <Model-driven continuous deployment for quality devops, {eid: 85054816400}>, <Satisfability modulo theories, {eid: 85049937506}>, <Solving constraint satisfaction problems with sat modulo theories, {eid: 84865267600}>, <Satisfability modulo theories and assignments, {eid: 85026756975}>, <Modeling and verifying systems using a logic of counter arithmetic with lambda expressions and uninterpreted functions, {eid: 84937570704}>, <Exploiting multi-level modelling for designing and deploying gameful systems, {eid: 85076095969}>, <None, {eid: 85096971209}>, <Towards a model-based de-vops for cyber-physical systems, {eid: 85096956543}>, <Towards iot diversity via automated fleet management, {eid: 85072774564}>, <Z3: An efcient smt solver, {eid: 45749085681}>, <From deployment to platform exploration: Automatic synthesis of distributed automotive hardware architectures, {eid: 85054797688}>, <Bringing dse to life: Exploring the design space of an industrial automotive use case, {eid: 85040592290}>, <Understanding the software communications architecture, {eid: 70350324202}>, <None, {eid: 85096998052}>, <None, {eid: 85096963638}>, <None, {eid: 84995576343}>, <None, {eid: 85096953664}>, <None, {eid: 85096971256}>, <A survey of the generalized assignment problem and its applications, {eid: 45749151027}>, <Assignment problems: A golden anniversary survey, {eid: 33749569898}>, <Chariot: Goal-driven orchestration middleware for resilient iot systems, {eid: 85067935788}>, <A scalable framework for provisioning large-scale iot deployments, {eid: 84963811933}>, <Energy-efcient resource allocation for mobile-edge computation ofoading, {eid: 85015263422}>, <The quest for efcient boolean satisfability solvers, {eid: 84937545785}>",,,"Association for Computing Machinery, Inc",,,2020-10-18,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85097001114
47,,"Creff S. (AUID: 35572876000), Champeau J. (AUID: 6603324671), Jézéquel J.M. (AUID: 35618077100), Monégier A. (AUID: 55389195600)",,Model-based product line evolution: An incremental growing by extension,2012,"16th International Software Product Line Conference, SPLC 2012",,,,,,,5,10.1145/2364412.2364430,https://www.doi.org/10.1145/2364412.2364430,"<Lab-STICC, ENSTA Bretagne, UEB>, <IRISA, Université de Rennes 1>, <Thales Air Systems>",,"Model-Based Engineering (MBE) and Product Line Engineering (PLE) have been combined, to handle new system development constraints like: increasing complexity, higher product quality, faster time-to-market and cost reduction. As observed by some authors, the derivation of a product from product line shared core assets has been insufficiently addressed and can remain tedious in practice. We cope with this issue focusing on having a flexible and reactive model-based derivation, and propose an incremental evolution by extension of the product line coupled with this derivation activity. Process and tools bridge the gap between Application and Domain Engineering introducing a semi-automatic feedback to benefits from the developments made in the Application Engineering. The approach is applied to a model-based product line dedicated to Class diagrams, and is tooled within the Eclipse environment. Copyright 2012 ACM.","Design tools, Evolution by extension, Methodology, Model based engineering, Product derivation, Product line engineering",,,,,,,,"<Difference and union of models, {eid: 0242370962}>, <Feature models, grammars, and propositional formulas, {eid: 33646190894}>, <Variant management with pure variant, {eid: 84867484377}>, <Evofm: Feature-driven planning of product-line evolution, {eid: 77954741565}>, <None, {eid: 0004161809}>, <Mapping features to models: A template approach based on superimposed variants, {eid: 33646131839}>, <Model-driven software product lines, {eid: 79957978998}>, <None, {eid: 0004014411}>, <Verifying feature-based model templates against well-formedness ocl constraints, {eid: 34547477639}>, <Product derivation in software product families: A case study, {eid: 6444234242}>, <Model driven architecture as approach to manage variability in software product families, {eid: 6444222864}>, <Supporting the evolution of product line architectures with variability model fragments, {eid: 49949106324}>, <Variability in time- product line variability and evolution revisited, {eid: 84867481888}>, <A generic approach for automatic model composition, {eid: 47749136281}>, <A generic language and tool for variability modeling, {eid: 78049403003}>, <Reactive variability management in agile software development, {eid: 77957992085}>, <None, {eid: 25844484052}>, <Implementing product-line features with component reuse, {eid: 84945243505}>, <FeatureMapper: Mapping Features to Models, {eid: 57349097632}>, <A feature-oriented reuse method with domain-specific reference architectures, {eid: 0032343158}>, <Feature-oriented domain analysis (foda) feasibility study, {eid: 0003512056}>, <Easing the transition to software mass customization, {eid: 84944046672}>, <Supporting the grow-and-prune model in software product lines evolution using clone detection, {eid: 50249120730}>, <Weaving variability into domain metamodels, {eid: 77249123516}>, <An agile process model for product derivation in software product line engineering, {eid: 79958244700}>, <Reconciling automation and flexibility in product derivation, {eid: 55049092059}>, <None, {eid: 84892351987}>, <Key activities for product derivation in software product lines, {eid: 78650624335}>, <Model composition- A signature-based approach, {eid: 44149105073}>, <A requirements-based taxonomy of software product line evolution, {eid: 84866714347}>, <Generic semantics of feature diagrams, {eid: 33750723486}>, <An mda-based framework for model-driven product derivation, {eid: 11144248398}>, <Towards a uml profile for software product lines, {eid: 35048847051}>, <Product line engineering with the UML: Deriving products, {eid: 77951718024}>",,,,,,2012-09-02,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-84867447641
48,,"van den Heuvel W.J. (AUID: 7005472245), Tamburri D.A. (AUID: 35488974800)",,"Model-driven ml-ops for intelligent enterprise applications: vision, approaches and challenges",2020,"10th International Symposium on Business Modeling and Software Design, BMSD 2020",,,,,,,13,10.1007/978-3-030-52306-0_11,https://www.doi.org/10.1007/978-3-030-52306-0_11,"<Jheronimus Academy of Data Science (JADS), Tilburg University>, <Jheronimus Academy of Data Science (JADS), Eindhoven University of Technology>",,"© Springer Nature Switzerland AG 2020.This paper explores a novel vision for the disciplined, repeatable, and transparent model-driven development and Machine-Learning operations (ML-Ops) of intelligent enterprise applications. The proposed framework treats model abstractions of AI/ML models (named AI/ML Blueprints) as first-class citizens and promotes end-to-end transparency and portability from raw data detection- to model verification, and, policy-driven model management. This framework is grounded on the intelligent Application Architecture (iA2) and entails a first attempt to incorporate requirements stemming from (more) intelligent enterprise applications into a logically-structured architecture. The logical separation is grounded on the need to enact MLOps and logically separate basic data manipulation requirements (data-processing layer), from more advanced functionality needed to instrument applications with intelligence (data intelligence layer), and continuous deployment, testing and monitoring of intelligent application (knowledge-driven application layer). Finally, the paper sets out exploring a foundational metamodel underpinning blueprint-model-driven MLOps for iA2 applications, and presents its main findings and open research agenda.","AI software engineering, Methodological support to AI, ML Blueprints, ML-Ops, TOSCA",,,,,,,,"<Artificial intelligence in business: from research and innovation to market deployment, {eid: 85084412679}>, <Artificial intelligence and software engineering: a tutorial introduction to their relationship, {eid: 8844229430}>, <None, {eid: 85088509160}>, <The AI transparency paradox, {eid: 85088510551}>, <None, {eid: 85086735146}>, <Automated machine learning in practice: state of the art and recent results, {eid: 85071385770}>, <Statistical aspects of neural networks, {eid: 0002983776}>, <Hyper parameter optimization, {eid: 85065146640}>, <AIOps: predictive analytics & machine learning in operations, {eid: 85082140101}>, <DevOps, {eid: 84968831988}>, <Improving La Redoute’s CI/CD pipeline and DevOps Processes by applying machine learning techniques, {eid: 85061305992}>, <A layered model for AI governance, {eid: 85037745862}>, <None, {eid: 85088500770}>, <None, {eid: 85088509103}>, <Data science data governance, {eid: 85061310869}>, <A survey on transfer learning, {eid: 77956031473}>, <A survey on heterogeneous transfer learning, {eid: 85029935438}>, <Model-driven engineering, {eid: 33344465743}>, <Grand challenges in model-driven engineering: an analysis of the state of the research, {eid: 85077634676}>, <Service oriented architectures: approaches, technologies and research issues, {eid: 34249080831}>, <Understanding DevOps & bridging the gap from continuous integration to continuous delivery, {eid: 84946553533}>, <None, {eid: 0004025223}>, <None, {eid: 85088533020}>, <Software engineering approaches to ontology development, {eid: 85088518441}>",,,Springer,,,2020-07-06,,,,,,,eng,,Book Series,,,,2-s2.0-85088507116
49,,"Brabra H. (AUID: 57191072465), Gaaloul W. (AUID: 6506968790), Mtibaa A. (AUID: 27267841100), Benatallah B. (AUID: 6701493053), Gargouri F. (AUID: 6602113319)",,Model-driven orchestration for cloud resources,2019,"12th IEEE International Conference on Cloud Computing, CLOUD 2019",,,,,,,8,10.1109/CLOUD.2019.00074,https://www.doi.org/10.1109/CLOUD.2019.00074,"<Teĺecom SudParis, CNRS UMR SAMOVAR, University of Paris-Saclay>, <FSEG, Miracl Laboratory, Universiy of Sfax>, <ENETCOM, Miracl Laboratory, University of Sfax>, <UNSW>, <ISIMS, Miracl Laboratory, University of Sfax>",,"© 2019 IEEE.Several DevOps tools have emerged to orchestrate cloud resources. However, inherent heterogeneity and complex implementation within these tools make it hard for DevOps users to design required resource-related artifacts. Currently, the defacto standard for cloud resource modeling and orchestration is TOSCA. Nonetheless, TOSCA is usually bound to TOSCA-compliant orchestration tools. Moreover, the actual integration between TOSCA and DevOps tools is still performed using costly coding and in ad-hoc manner. To resolve this, we believe that mapping and translation mechanisms between TOSCA and DevOps tools should be provided. In this paper, we propose a new model-driven approach for cloud resource orchestration. Our approach (i) adopts TOSCA to design resource-related artifacts regardless of a specific DevOps tool; (ii) enables a new model-driven translation technique that serves to translate the designed artifacts using TOSCA into DevOps specific artifacts and (iii) provides Connectors that intend to establish the bridge between DevOps-specific artifacts and the DevOps tools. Our approach provides a powerful enhancement to DevOps productivity and reusability by assisting toward a seamless integration between TOSCA and DevOps tools.","Artifact, MDE, Orchestration, TOSCA, Transformation",,,,,,,,"<A taxonomy and survey of cloud resource orchestration techniques, {eid: 85019878673}>, <Cloud resource orchestration programming: Overview, issues, and directions, {eid: 84941037480}>, <Declarative automated cloud resource orchestration, {eid: 82155203084}>, <None, {eid: 85072344652}>, <Cloud application portability with tosca, chef and open-stack, {eid: 84908602463}>, <Tosker: Orchestrating applications with tosca and docker, {eid: 85045248556}>, <None, {eid: 85072332301}>, <None, {eid: 85072334518}>, <None, {eid: 85072321693}>, <None, {eid: 85072323854}>, <Streamlining devops automation for cloud applications using tosca as standardized metamodel, {eid: 84958740530}>, <None, {eid: 85072340079}>, <From architecture modeling to application provisioning for the cloud by combining uml and tosca, {eid: 84979642473}>, <Survey on template-based code generation, {eid: 85041446287}>, <A model-driven framework for interoperable cloud resources management, {eid: 84989298330}>, <None, {eid: 85072320278}>, <Model transformation: The heart and soul of model-driven software development, {eid: 0141725642}>, <A model-driven tool chain for occi, {eid: 85032666576}>, <Model-driven generation of microservice architectures for benchmarking performance and resilience engineering approaches, {eid: 85019479213}>, <An infrastructure modelling tool for cloud provisioning, {eid: 85032348388}>, <Model-driven elasticity for cloud resources, {eid: 85048474527}>",,,IEEE Computer Society,,,2019-07-08,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85072317965
50,,"Wurster M. (AUID: 57191865623), Breitenbucher U. (AUID: 54929864700), Leymann F. (AUID: 6603379902), Kopp O. (AUID: 23467541000)",,Modeling and automated execution of application deployment tests,2018,"22nd IEEE International Enterprise Distributed Object Computing Conference, EDOC 2018",,,,,,,9,10.1109/EDOC.2018.00030,https://www.doi.org/10.1109/EDOC.2018.00030,"<Institute of Architecture of Application Systems, University of Stuttgart>, <Institute for Parallel and Distributed Systems, University of Stuttgart>",,"© 2018 IEEE.In recent years, many deployment systems have been developed that process deployment models to automatically provision applications. The main objective of these systems is to shorten delivery times and to ensure a proper execution of the deployment process. However, these systems mainly focus on the correct technical execution of the deployment, but do not check whether the deployed application is working properly. Especially in DevOps scenarios where applications are modified frequently, this can quickly lead to broken deployments, for example, if a wrong component version was specified in the deployment model that has not been adapted to a new database schema. Ironically, even hardly noticeable errors in deployment models quickly result in technically successful deployments, which do not work at all. In this paper, we tackle these issues. We present a modeling concept that enables developers to define deployment tests directly along with the deployment model. These tests are then automatically run by a runtime after deployment to verify that the application is working properly. To validate the technical feasibility of the approach, we applied the concept to TOSCA and extended an existing open source TOSCA runtime.","Declarative Application Deployement, Model-based Testing, Test Automation, Testing, TOSCA",,,,,,,,"<Why enterprises must adopt devops to enable continuous delivery, {eid: 84860316008}>, <Why do internet services fail, what can be done about it, {eid: 84875570984}>, <Integrated cloud application provisioning: Interconnecting service-centric and script-centric management technologies, {eid: 84886738018}>, <None, {eid: 85059053971}>, <None, {eid: 85059080207}>, <A systematic review of cloud modeling languages, {eid: 85042469266}>, <None, {eid: 84886743417}>, <None, {eid: 84902315977}>, <Declarative vs imperative: Two modeling patterns for the automated deployment of applications, {eid: 85050411724}>, <Combining Declarative and Imperative Cloud Application Provisioning based on TOSCA, {eid: 84908563698}>, <None, {eid: 85059077974}>, <How do developers react to RESTful API evolution, {eid: 85059072808}>, <Migrating to cloud-native architectures using microservices: An experience report, {eid: 84966526539}>, <None, {eid: 85059067756}>, <Internet of things out of the Box: Using TOSCA for automating the deployment of iot environments, {eid: 85024391376}>, <Generic driver injection for automated IoT application deployments, {eid: 85059069362}>, <Standards-based devops automation and integration using TOSCA, {eid: 84946692273}>, <Integrating configuration management with model-driven cloud management based on TOSCA, {eid: 84884491041}>, <Policy4TOSCA: A policy-aware cloud service provisioning approach to enable secure cloud computing, {eid: 84979757687}>, <Policy-aware provisioning plan generation for TOSCA-based applications, {eid: 85061523056}>, <None, {eid: 85018343171}>, <Winery-A modeling tool for TOSCA-based cloud applications, {eid: 84903571458}>, <Open TOSCA-A runtime for TOSCA-based cloud applications, {eid: 84903571458}>, <A taxonomy of model-based testing approaches, {eid: 84862325128}>, <None, {eid: 3943049689}>, <Model-based testing in practice, {eid: 0032660359}>, <Model-based approach to security test automation, {eid: 0006564418}>, <Requirement-based automated black-box test generation, {eid: 0035170677}>, <A UML-Based approach to system testing, {eid: 4344612500}>, <Towards deploying model-based testing with a domain-specific modeling approach, {eid: 38049107184}>, <Model-based test case generation for web applications, {eid: 84921039377}>, <Automated model-based performance testing for paas cloud services, {eid: 84931024462}>, <A survey on model-based testing approaches: A systematic review, {eid: 69549103676}>, <Service functional test automation, {eid: 85059070586}>, <None, {eid: 84858197925}>, <A survey of software testing in the cloud, {eid: 84866935316}>, <Testing idempotence for infrastructure as code, {eid: 84902547810}>, <None, {eid: 85024364052}>, <A GENTL approach for cloud application topologies, {eid: 85059075727}>, <Topology splitting and matching for multi-cloud deployments, {eid: 85019266003}>, <Portable cloud services using TOSCA, {eid: 84860434499}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2018-10-16,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85059064282
51,,"Kusmenko E. (AUID: 57195075206), Nickels S. (AUID: 57212167503), Pavlitskaya S. (AUID: 57212167862), Rumpe B. (AUID: 55861872700), Timmermanns T. (AUID: 57190581702)",,Modeling and Training of Neural Processing Systems,2019,"22nd ACM/IEEE International Conference on Model Driven Engineering Languages and Systems, MODELS 2019",,,,,,,15,10.1109/MODELS.2019.00012,https://www.doi.org/10.1109/MODELS.2019.00012,"<Chair of Software Engineering, RWTH Aachen University>",,"© 2019 IEEE.The field of deep learning has become more and more pervasive in the last years as we have seen varieties of problems being solved using neural processing techniques. Image analysis and detection, control, speech recognition, translation are only a few prominent examples tackled successfully by neural networks. Thereby, the discipline imposes a completely new problem solving paradigm requiring a rethinking of classical software development methods. The high demand for deep learning technology has led to a large amount of competing frameworks mostly having a Python interface - a quasi standard in the community. Although, existing tools often provide great flexibility and high performance, they still lack to deliver a completely domain oriented problem view. Furthermore, using neural networks as reusable building blocks with clear interfaces in productive systems is still a challenge. In this work we propose a domain specific modeling methodology tackling design, training, and integration of deep neural networks. Thereby, we distinguish between three main modeling concerns: architecture, training, and data. We integrate our methodology in a component-based modeling toolchain allowing one to employ and reuse neural networks in large software architectures.","deep learning, model-driven software engineering, neural networks",,,,,,,,"<None, {eid: 84961087827}>, <Speech recognition with deep recurrent neural networks, {eid: 84890543083}>, <Deepdriving: Learning affordance for direct perception in autonomous driving, {eid: 84973888858}>, <None, {eid: 85029443880}>, <None, {eid: 6344235947}>, <None, {eid: 85075941065}>, <None, {eid: 33646566908}>, <Highly-optimizing and multi-target compiler for embedded system models: C++ compiler toolchain for the component and connector language embedded monti arc, {eid: 85056871758}>, <None, {eid: 0003880013}>, <ROS: An open-source robot operating system, {eid: 77957352104}>, <Benchmarking state-of-The-art deep learning software tools, {eid: 85027446064}>, <None, {eid: 84979557463}>, <The numpy array: A structure for efficient numerical computation, {eid: 79952595565}>, <Torch7: A matlab-like environment for machine learning, {eid: 84888340666}>, <None, {eid: 5044234815}>, <Tensorflow: A system for large-scale machine learning, {eid: 85075670920}>, <None, {eid: 84978978745}>, <Caffe: Convolutional architecture for fast feature embedding, {eid: 84913580146}>, <None, {eid: 82655166506}>, <An overview of the hdf5 technology suite and its applications, {eid: 79956025832}>, <Deep residual learning for image recognition, {eid: 84986274465}>, <None, {eid: 84990032982}>, <Cntk: Microsofts open-source deeplearning toolkit, {eid: 85040107379}>, <None, {eid: 0003396255}>, <An overview of the HDF5 technology suite and its applications, {eid: 80052992397}>, <None, {eid: 85076103141}>, <None, {eid: 85053070397}>, <MorphNet: Fast & simple resource-constrained structure learning of deep networks, {eid: 85058146752}>, <None, {eid: 85076105694}>, <Convolutional networks and applications in vision, {eid: 77955998889}>, <Modeling architectures of cyber-physical systems, {eid: 85025124378}>, <Backpropagation applied to handwritten zip code recognition, {eid: 0000359337}>, <None, {eid: 0040406981}>, <None, {eid: 84919728106}>, <On the properties of neural machine translation: Encoder-decoder approaches, {eid: 85097641926}>, <None, {eid: 84941620184}>, <Embedded MontiArc: Textual modeling alternative to simulink, {eid: 85060443298}>, <Model-based development of self-adaptive autonomous vehicles using the SMARDT methodology, {eid: 85052024078}>, <Component-based integration of interconnected vehicle architectures, {eid: 85072280010}>, <OCL framework to verify extra-functional properties in component and connector models, {eid: 85041439005}>, <Component and connector views in practice: An experience report, {eid: 85040631558}>, <Behavioral compatibility of simulink models for product line maintenance and evolution, {eid: 85009379870}>, <None, {eid: 76249122848}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2019-09-15,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85075936455
52,,"Babar Z. (AUID: 56728038900), Yu E. (AUID: 7202680853), Lapouchnian A. (AUID: 15033549000)",,Modeling devOps deployment choices using process architecture design dimensions,2015,"8th Working Conference on the Practice of Enterprise Modelling, PoEM 2015",,,,,,,17,10.1007/978-3-319-25897-3_21,https://www.doi.org/10.1007/978-3-319-25897-3_21,"<University of Toronto>, <Department of Computer Science, University of Toronto>",,"© IFIP International Federation for Information Processing 2015.DevOps is a software development approach that enables enterprises to rapidly deliver software product features through process automation, greater inter-team collaboration and increased efficiency introduced through monitoring and measuring activities. No two enterprise-adopted DevOps approaches would be similar as each enterprise has unique characteristics and requirements. At present, there is no structured method in enterprise architecture modeling that would enable enterprises to devise a DevOps approach suitable for their requirements while considering possible process reconfigurations. Any DevOps implementation can have variations at different points across development and operational processes and enterprises need to be able to systematically map these variation points and understand the tradeoffs involved in selecting one alternative over another. In this paper, we use our previously proposed Business Process Architecture modeling technique to express and analyze DevOps alternatives and help enterprises select customized DevOps processes that match their contexts and requirements.","Adaptive enterprise, Business process modeling, Devops, Enterprise modeling, Goal modeling, Software processes",,,,,,,,"<Designing an “adaptive” enterprise architecture, {eid: 33845214146}>, <Organisational agility: How business can survive and thrive in turbulent times, {eid: 84952667135}>, <None, {eid: 84952674803}>, <A mapping study on cooperation between information system development and operations, {eid: 84911942952}>, <A grounded theory analysis of modern web applications: Knowledge, skills, and abilities for DevOps, {eid: 84887277016}>, <Dimensions of DevOps, {eid: 84942757647}>, <DevOps: A definition and perceived adoption impediments, {eid: 84942761879}>, <Continuous Software Engineering, {eid: 84930742728}>, <Requirements-driven design and configuration management of business processes, {eid: 38049160532}>, <None, {eid: 84952674805}>, <Modeling continuous integration practice differences in industry software development, {eid: 84888645752}>, <Using scrum in distributed agile development: A multiple case study, {eid: 70449368614}>, <Continuous software engineering and beyond: Trends and challenges, {eid: 84942514935}>, <None, {eid: 0003524263}>, <None, {eid: 0003845868}>, <Re-designing process architectures towards a framework of design dimensions, {eid: 84937901681}>, <Towards variability design for business process architecture, {eid: 84952674806}>, <Building software process lines with CASPER, {eid: 84864376621}>, <A systematic review of software process tailoring, {eid: 55849097112}>, <Modelling software process variability: An empirical study, {eid: 79959889533}>, <Managing process diversity by applying rationale management in variant rich processes, {eid: 79960248781}>, <Software process modeling languages: A systematic literature review. Inf. Softw, {eid: 84889885711}>, <Goal-driven agent-oriented software processes, {eid: 34547475195}>, <Deriving project-specific processes from process line architecture with commonality and variability, {eid: 38949125801}>, <On the notion of variability in software product lines, {eid: 84954068722}>, <Integrated software process and product lines, {eid: 33745159962}>, <Building software process line architectures from bottom up, {eid: 33746238091}>, <Fundamentals of Business Process Management, {eid: 84878217700}>, <Business process architecture: Use and correctness, {eid: 84866392752}>, <Business process variability modeling: A survey, {eid: 84903212049}>, <Change patterns and change support features – enhancing flexibility in process-aware information systems, {eid: 47849117407}>, <Feature-oriented domain analysis (FODA) feasibility study, {eid: 0003512056}>, <Strategically balanced process adoption, {eid: 79960616089}>, <None, {eid: 78649325089}>, <None, {eid: 0003409221}>, <Enterprise architecture for the adaptive enterprise – a vision paper, {eid: 84868323690}>, <Architecting the enterprise to leverage a confluence of emerging technologies, {eid: 84952674808}>, <None, {eid: 84952650589}>",,,Springer Verlag,,,2015-11-10,,,,,,,eng,,Book Series,,,,2-s2.0-84952662031
53,,"Estivill-Castro V. (AUID: 55915978700), Hexel R. (AUID: 23396845500), Stover J. (AUID: 57191905873)",,"Modeling, validation, and continuous integration of software behaviours for embedded systems",2015,"9th UKSim-AMSS IEEE European Modelling Symposium on Computer Modelling and Simulation, EMS 2015",,,,,,,6,10.1109/EMS.2015.24,https://www.doi.org/10.1109/EMS.2015.24,"<School of ICT, Griffith University, Nathan Campus>",,"© 2015 IEEE.We propose to test software models with software models. Model-Driven Software Development proposes that software is to be constructed by developing high-level models that directly execute or generate most of the code. On the other hand, Test-Driven development proposes to produce tests that validate the functionality of the code. This paper brings both together by using Logic-Labeled Finite-State Machines to deploy executable models of embedded systems and also to configure the corresponding tests. The advantage is a much more efficient validation of the models, with more robust and durable representations, that ensure effective and efficient quality assurance throughout the development process, saving the costly exercise of formal model-checking until the system is complete enough to meet all requirements.","Finite-State Machines, Model-Driven Development, Real-Time Systems, Software Models, Test-Driven Development, Validation and Model-Checking",,,,,,,,"<None, {eid: 85159115952}>, <None, {eid: 84959243564}>, <Security challenges for medical devices, {eid: 84925779811}>, <Software health management: A necessity for safety critical systems, {eid: 84888297725}>, <Requirements engineering via non-monotonic logics and state diagrams, {eid: 83755216028}>, <Arrangements of finite-state machines semantics, simulation, and model checking, {eid: 84878096152}>, <High performance relaying of C++11 objects across processes and logic-labeled finite-state machines, {eid: 84921693633}>, <Correctness by construction with logic-labeled finite-state machines -comparison with Event-B, {eid: 84903531179}>, <Efficient modelling of embedded software systems and their formal verification, {eid: 84874629026}>, <Module isolation for efficient model checking and its application to FMEA in model-driven engineering, {eid: 84887041149}>, <NuSMV: A new symbolic model checker, {eid: 84896869660}>, <Efficient model checking and FMEA analysis with deterministic scheduling of transition-labeled finite-state machines, {eid: 84873686788}>, <Visual-trace simulation of concurrent finite-state machines for validation and model-checking of complex behavior, {eid: 84868031470}>, <Embedded systems in UML, {eid: 84868006865}>, <None, {eid: 0003546951}>, <None, {eid: 85055229985}>, <From requirements to embedded software -formalising the key steps, {eid: 70349514686}>, <Reasoning about goal-directed real-time teleo-reactive programs, {eid: 84900855679}>, <Improving the trustworthiness of medical device software with formal verification methods, {eid: 84883573451}>, <A safety-assured development approach for real-time software, {eid: 78449302431}>, <Ui-design driven model-based testing, {eid: 84881490451}>, <None, {eid: 0003962322}>, <None, {eid: 70649097503}>, <None, {eid: 84869854783}>, <Model-based testing of embedded systems in hardware in the loop environment, {eid: 84866874472}>, <Model-based testing of automotive software: Some challenges and solutions, {eid: 84944111601}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2015-10-06,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-84994571015
54,,"Bertram V. (AUID: 57192954469), Boß M. (AUID: 57988128500), Kusmenko E. (AUID: 57195075206), Nachmann I.H. (AUID: 57894980200), Rumpe B. (AUID: 55861872700), Trotta D. (AUID: 57987799300), Wachtmeister L. (AUID: 57212111969)",,Neural Language Models and Few Shot Learning for Systematic Requirements Processing in MDSE,2022,"15th ACM SIGPLAN International Conference on Software Language Engineering, SLE 2022, co-located with the ACM SIGPLAN conference on Systems, Programming, Languages, and Applications. SPLASH 2022",,,,,,,2,10.1145/3567512.3567534,https://www.doi.org/10.1145/3567512.3567534,<Rwth Aachen University>,,"© 2022 ACM.Systems engineering, in particular in the automotive domain, needs to cope with the massively increasing numbers of requirements that arise during the development process. The language in which requirements are written is mostly informal and highly individual. This hinders automated processing of requirements as well as the linking of requirements to models. Introducing formal requirement notations in existing projects leads to the challenge of translating masses of requirements and the necessity of training for requirements engineers. In this paper, we derive domain-specific language constructs helping us to avoid ambiguities in requirements and increase the level of formality. The main contribution is the adoption and evaluation of few-shot learning with large pretrained language models for the automated translation of informal requirements to structured languages such as a requirement DSL.","few-shot learning, model-driven engineering, model-driven requirements engineering, natural language processing",,,,,,,,"<A Zero-Shot Learning Approach to Classifying Requirements: A Preliminary Study, {eid: 85127051029}>, <Artifact and Reference Models for Generative Machine Learning Frameworks and Build Systems, {eid: 85120851738}>, <Interoperable Toolchain for Requirements-Driven Model-Based Development, {eid: 85146981366}>, <None, {eid: 85147039607}>, <Component and Connector Views in Practice: An Experience Report, {eid: 85040631558}>, <None, {eid: 85090303288}>, <Grand Challenges in Model-Driven Engineering: An Analysis of the State of Research, {eid: 85077634676}>, <None, {eid: 85092112367}>, <None, {eid: 85057019815}>, <A Methodology for Retrofitting Generative Aspects in Existing Applications, {eid: 85122045750}>, <SMArDT modeling for automotive software testing, {eid: 85055705898}>, <Modellierung, Verifikation und Synthese von validen Planungszuständen für Fernsehausstrahlungen, {eid: 85147040543}>, <Semantic Evolution Analysis of Feature Models, {eid: 85143076817}>, <Model-driven Development of Complex Software: A Research Roadmap, {eid: 34748861160}>, <Meaningful Modeling: Whats the Semantics of ""Semantics"", {eid: 7244261750}>, <NoRBERT: Transfer learning for requirements classification, {eid: 85091480468}>, <Clustering Natural Language Test Case Instructions as Input for Deriving Automotive Testing DSLs, {eid: 85109428691}>, <Modeling Dynamic Architectures of Self-Adaptive Cooperative Systems, {eid: 85075948566}>, <An Approach for Logic-based Knowledge Representation and Automated Reasoning over Underspecification and Refinement in Safety-Critical Cyber-Physical Systems, {eid: 85082966829}>, <Modeling and Training of Neural Processing Systems, {eid: 85075936455}>, <On the Engineering of AI-Powered Systems, {eid: 85079270211}>, <Modeling Architectures of Cyber-Physical Systems, {eid: 85025124378}>, <None, {eid: 85143067431}>, <A Systematic Reviewof the Use of Requirements Engineering Techniques in Model-Driven Development, {eid: 80055026559}>, <Software requirement-specific entity extraction using transformer models, {eid: 85143058768}>, <A Machine Learning Approach to Software Requirements Prioritization, {eid: 84875692349}>, <None, {eid: 82455195427}>, <None, {eid: 85056475484}>, <Detection of Hidden Feature Requests from Massive Chat Messages via Deep Siamese Network, {eid: 85094317439}>, <Cyber Physical Systems: Analyses, challenges and possible solutions, {eid: 85134027388}>, <Attention is all you need, {eid: 85043317328}>, <None, {eid: 85119143718}>, <None, {eid: 85110956191}>",,,"Association for Computing Machinery, Inc",,,2022-12-06,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85143075634
55,,"Yussupov V. (AUID: 57204498259), Breitenbucher U. (AUID: 54929864700), Krieger C. (AUID: 57094718000), Leymann F. (AUID: 6603379902), Wurster M. (AUID: 57191865623), Soldani J. (AUID: 56203938200)",,"Pattern-based Modelling, Integration, and Deployment of Microservice Architectures",2020,"24th IEEE International Enterprise Distributed Object Computing Conference, EDOC 2020",,,,,,,15,10.1109/EDOC49727.2020.00015,https://www.doi.org/10.1109/EDOC49727.2020.00015,"<University of Stuttgart, Institute of Architecture of Application Systems>, <University of Pisa, Department of Computer Science>",,"© 2020 IEEE.Microservice-based architectures (MSAs) gained momentum in industrial and research communities since finer-grained and more independent components foster reuse and reduce time to market. However, to come from the design of MSAs to running applications, substantial knowledge and technology-specific expertise in the deployment and integration of microservices is needed. In this paper, we propose a model-driven and pattern-based approach for composing microservices, which facilitates the transition from architectural models to running deployments. Using a unified modelling for MSAs, including both their integration based on Enterprise Integration Patterns (EIPs) and deployment aspects, our approach enables automatically generating the artefacts for deploying microservice compositions. This helps abstracting away the underlying infrastructure including container orchestration platforms and middleware layer for service integration. To validate the feasibility of our approach, we illustrate its prototypical implementation, with Kubernetes used as container orchestration system and OpenFaaS used for managing integration logic, and we present a case study.","Enterprise Integration Pattern, Microservice Architecture, Model-driven Engineering, Service Composition",,,,,,,,"<None, {eid: 84950338538}>, <None, {eid: 84964234114}>, <Microservices tenets, {eid: 84995489225}>, <The pains and gains of microservices: A systematic grey literature review, {eid: 85054175054}>, <Architectural patterns for microservices: A systematic mapping study, {eid: 85093984653}>, <None, {eid: 10044221068}>, <Towards a taxonomy of microservices architectures, {eid: 85042125420}>, <Contextual understanding of microservice architecture: Current and future directions, {eid: 85049370573}>, <None, {eid: 84937681996}>, <Containers and cloud: From lxc to docker to kubernetes, {eid: 84923248887}>, <Declarative vs. Imperative: Two Modeling Patterns for the Automated Deployment of Applications, {eid: 85050411724}>, <None, {eid: 0003752204}>, <None, {eid: 85096576488}>, <Microservices: Yesterday, today, and tomorrow, {eid: 85054938535}>, <Microservices: The journey so far and challenges ahead, {eid: 85046893906}>, <Towards integrating microservices with adaptable enterprise architecture, {eid: 84992626303}>, <Microart: A software architecture recovery tool for maintaining microservice-based systems, {eid: 85025579355}>, <Microservice ambients: An architectural meta-modelling approach for microservice granularity, {eid: 85021456926}>, <Freshening the air in microservices: Resolving architectural smells via refactoring, {eid: 85084862852}>, <Microservices-lightweight service descriptions for rest architectural style, {eid: 77956283865}>, <Aspect-oriented challenges in system integration with microservices, soa and iot, {eid: 85045152190}>, <Incremental integration of microservices in cloud applications, {eid: 84995923681}>, <Microservices: A language-based approach, {eid: 85041830332}>, <Circuit breakers, discovery, and API gateways in microservices, {eid: 85048621033}>, <None, {eid: 85096558746}>, <An architecture for self-managing microservices, {eid: 84958972998}>, <Container and microservice driven design for cloud infrastructure devops, {eid: 84978128210}>, <Beethoven: An event-driven lightweight platform for microservice orchestration, {eid: 85057285607}>, <A dashboard for microservice monitoring and management, {eid: 85025678915}>, <Model-based engineering for microservice architectures using enterprise integration patterns for inter-service communication, {eid: 85031757791}>, <Medley: An event-driven lightweight platform for service composition, {eid: 84977485477}>, <The edmm modeling and transformation system, {eid: 85084788084}>, <None, {eid: 85046797891}>, <Leveraging Pattern Application via Pattern Refinement, {eid: 85038447563}>, <Cloud Data Patterns for Confidentiality, {eid: 84864874794}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2020-10-05,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85096537599
56,,"De La Vega A. (AUID: 57031617600), Sanchez P. (AUID: 57219994433), Kolovos D.S. (AUID: 8895714200)",,Pinset: A DSL for extracting datasets from models for data mining-based quality analysis,2018,"11th International Conference on the Quality of Information and Communications Technology, QUATIC 2018",,,,,,,1,10.1109/QUATIC.2018.00021,https://www.doi.org/10.1109/QUATIC.2018.00021,"<Software Engineering and Real-Time, Universidad de Cantabria>, <Department of Computer Science, University of York>",,"© 2018 IEEE.Data mining techniques have been successfully applied to software quality analysis and assurance, including quality of modeling artefacts. Before such techniques can be used, though, data under analysis commonly need to be formatted into two-dimensional tables. This constraint is imposed by data mining algorithms, which typically require a collection of records as input for their computations. The process of extracting data from the corresponding sources and formatting them properly can become error-prone and cumbersome. In the case of models, this process is mostly carried out through scripts written in a model management language, such as EOL or ATL. To improve this situation, we present Pinset, a domain-specific language devised for the extraction of tabular datasets from software models. Pinset offers a tailored syntax and built-in facilities for common activities in dataset extraction. For evaluation, Pinset has been used on UML class diagrams to calculate metrics that can be employed as input for several fault-prediction algorithms. The use of Pinset for this calculations led to more compact and high-level specifications when compared to equivalent scripts written in generic model management languages.","Data Mining, Domain-Specific Languages, Model-Driven Engineering, Software Quality",,,,,,,,"<None, {eid: 85009962818}>, <A systematic review of machine learning techniques for software fault prediction, {eid: 84919754115}>, <Investigating code smell co-occurrences using association rule learning: A replicated study, {eid: 85018335521}>, <Using machine learning to design a flexible LOC counter, {eid: 85018331426}>, <Predictive mutation testing, {eid: 85062193490}>, <An extensive comparison of bug prediction approaches, {eid: 77953782938}>, <Travistorrent: Synthesizing travis ci and github for full-stack research on continuous integration, {eid: 85026557876}>, <Mining metrics for understanding metamodel characteristics, {eid: 84911465837}>, <None, {eid: 0004121211}>, <ATL: A model transformation tool, {eid: 45849085734}>, <The design of a conceptual framework and technical infrastructure for model management language engineering, {eid: 70350041761}>, <A metrics suite for object oriented design, {eid: 0028446078}>, <The quest for open source projects that use uml: Mining github, {eid: 85008473064}>, <The epsilon transformation language, {eid: 54249141728}>, <The KDD process for extracting useful knowledge from volumes of data, {eid: 0030285403}>, <Automatic feature selection by regularization to improve bug prediction accuracy, {eid: 85018351732}>, <Predicting software defects with causality tests, {eid: 84900800922}>, <Automated parameter optimization of classification techniques for defect prediction models, {eid: 84971421988}>, <Combining unit and specification-based testing for meta-model validation and verification, {eid: 84994525407}>, <The epsilon object language (EOL), {eid: 33746467089}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2018-09-04,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85061315485
57,,"Wang B. (AUID: 57195149059), Boehm B.W. (AUID: 7102111447)",,Process implications of executable domain models for microservices development,2020,"2020 IEEE/ACM International Conference on Software and System Processes, ICSSP 2020",,,,,,,0,10.1145/3379177.3388896,https://www.doi.org/10.1145/3379177.3388896,<University of Southern California>,,"© 2020 ACM.Microservice architecture has been recognized as an important enabler for continuous development of many cloud-based systems. Code generation has been tried in the tool chain of building microservices. However, most existing tools generally do not consider the risks from continuous development. We have been developing a toolkit which generates microservices from application domain models. Our approach aligns development process to this toolkit and coordinates domain modeling activity over project life cycles. In this paper, we describe its framework and corresponding development process which eliminates delays brought by the uncertainty of a project at a relatively early stage. Several minimum viable products have been built upon the proposed approach during the past years, including automated generation of code from domain decomposition. Our result shows 10% saving of effort and fewer issues. Effort saving increases to 30% under an extreme condition with high-rate personnel turnover. We also discuss our findings on running these projects and raise discussion and questions for future enhancement.","agile, code generation, continuous development, domain modeling, microservices",,,,,,,,"<None, {eid: 85049258745}>, <Continuous software engineering-a microservices architecture perspective, {eid: 85017406300}>, <None, {eid: 84902500464}>, <Requirements that handle ikiwisi, cots, and rapid change, {eid: 0034225745}>, <None, {eid: 0003567818}>, <None, {eid: 84945421024}>, <None, {eid: 85072677005}>, <None, {eid: 85092502208}>, <None, {eid: 85092463737}>, <None, {eid: 26444461500}>, <None, {eid: 85092461991}>, <None, {eid: 85092482656}>, <None, {eid: 85092446543}>, <None, {eid: 85092464832}>, <Xpand: A closer look at the model2text transformation language, {eid: 84876008007}>, <None, {eid: 85092507302}>, <None, {eid: 85092456531}>, <Modeling data-orientedweb applications using uml, {eid: 33847791018}>, <None, {eid: 85092505302}>, <Systematic mapping study of template-based code generation, {eid: 85038035398}>, <None, {eid: 85092487582}>, <None, {eid: 85092515186}>, <Domain modeling and domain engineering: Key tasks in requirements engineering, {eid: 84929561538}>, <Use case driven object modeling with uml: Theory and practice, {eid: 84892311286}>, <Feature-based survey of model transformation approaches, {eid: 33748289548}>, <Xsl transformations (xslt), {eid: 0003247033}>, <None, {eid: 85092494578}>, <None, {eid: 85075142452}>, <The stanford corenlp natural language processing toolkit, {eid: 85117622017}>, <The parallel agile process: Applying parallel processing techniques to software engineering, {eid: 85067873971}>, <Rapid, evolutionary, reliable, scalable system and software development: The resilient agile process, {eid: 85025822289}>, <A field study of the software design process for large systems, {eid: 0024105910}>, <Identifying domain elements from textual specifications, {eid: 84989189561}>, <Extracting conceptual models from user stories with visual narrator, {eid: 85019539096}>, <Automated extraction of conceptual models from user stories via nlp, {eid: 85007173628}>, <A survey of schema-based matching approaches, {eid: 36849011504}>, <A survey of schema matching research using database schemas and instances, {eid: 85062423632}>, <Rapid realization of executable domain models via automatic code generation, {eid: 85049258166}>",,,"Association for Computing Machinery, Inc",,,2020-10-10,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85092467157
58,,"Gautham S. (AUID: 57202302784), Jayakumar A.V. (AUID: 57219110729), Rajagopala A. (AUID: 57215564269), Elks C. (AUID: 6507194517)",,Realization of a model-based DevOps process for industrial safety critical cyber physical systems,2021,"4th IEEE International Conference on Industrial Cyber-Physical Systems, ICPS 2021",,,,,,,7,10.1109/ICPS49255.2021.9468213,https://www.doi.org/10.1109/ICPS49255.2021.9468213,"<Dependable Cyber-Physical Systems Lab, Virginia Commonwealth University>",,"© 2021 IEEE.Safety critical Industrial Cyber Physical Systems (CPS) have stringent safety and security requirements and need assurance of deterministic behavior during system operation. In many safety critical application domains, runtime monitors (or runtime verification) are used to enforce operational safety and security. One of the challenges in runtime verification is to identify the critical safety properties that we want to monitor at runtime. In this paper, we explore how structural verification activities in a Model Based Design and Engineering (MBDE) context help formulate more effective monitoring specifications to cover vulnerable areas in a system. We assert that leveraging synergy between design and runtime verification produces more informed runtime safety monitors. This approach of integrating design assurance and runtime safety and security is an important aspect of the dependable DevOps continuum process. To demonstrate this, we perform verification of an Emergency Diesel Generator Startup Sequencer (EDGSS) implemented on an FPGA overlay architecture using model-based verification techniques. We present our key findings on synergy between runtime verification and design processes to support a more inclusive safety case.","DevOps, Industrial Cyber Physical Systems, Model-based engineering, Runtime verification",,,,,,,,"<Model-based systems engineering: An emerging approach for modern systems, {eid: 84655170010}>, <None, {eid: 84883136062}>, <Towards a model-based devops for cyber-physical systems, {eid: 85079099244}>, <Towards a secure devops approach for cyber-physical systems: An industrial perspective, {eid: 85106659186}>, <Overview of iec 61508. design of electrical/electronic/programmable electronic safety-related systems, {eid: 0033902909}>, <None, {eid: 85112350776}>, <None, {eid: 85112359412}>, <Assume-guarantee testing, {eid: 79959259531}>, <Property-based fault injection: A novel approach to model-based fault injection for safety critical systems, {eid: 85091292067}>, <None, {eid: 1642497296}>, <Your what is my how: Why requirements and architectural design should be iterative, {eid: 84870841976}>, <Industry 4. 0 as a cyber-physical system study, {eid: 84956605744}>, <Towards a taxonomy for eliciting design-operation continuum requirements of cyber-physical systems, {eid: 85093982993}>, <Twinops-devops meets model-based engineering and digital twins for the engineering of cps, {eid: 85096747019}>, <Combining testing and runtime verification techniques, {eid: 84883352338}>, <Dependable adas by combining design time testing and runtime monitoring, {eid: 84922323290}>, <Safety and security in cyber-physical systems and internet-of-things systems, {eid: 85048031318}>, <Testing meets static and runtime verification, {eid: 85052058154}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2021-05-10,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85112350140
59,,"Holmes T. (AUID: 24469746000), Zdun U. (AUID: 55908948800)",,Refactoring architecture models for compliance with custom requirements,2018,"21st ACM/IEEE International Conference on Model Driven Engineering Languages and Systems, MODELS 2018",,,,,,,5,10.1145/3239372.3239379,https://www.doi.org/10.1145/3239372.3239379,"<Technology and Innovation, Deutsche Telekom AG Darmstadt>, <Faculty of Computer Science, University of Vienna>",,"© 2018 Association for Computing Machinery.In the process of software-intensive systems engineering, architectures need to be designed that are compliant to the requirements. For this, architects need to examine those requirements with regard to their architectural impact. Accessing and interpreting the requirements is however not always possible, for instance if custom requirements are yet unknown at the time when the architecture is modeled. Ideally, architectural knowledge as derived from custom requirements could be imposed upon architecture models. This paper proposes a novel concept for automated refactoring of architecture models in order to meet such requirements by formalizing architectural knowledge using model verification and model transformations. Industrial application within a telecommunications service provider is demonstrated in the domain of cloud application orchestration: service providers are enabled to autonomously customize solutions predefined by vendors according to their own internal requirements.",,,,,,,,,"<Antipattern-based model refactoring for software performance improvement, {eid: 84864066029}>, <Model refactoring in Eclipse by LTK, EWL, and EMF refactor: A case study, {eid: 84864712008}>, <A systematic review of cloud modeling languages, {eid: 85042469266}>, <UML-based Cloud Application Modeling with Libraries, Profiles, and Templates, {eid: 84911965669}>, <EMF model refactoring based on graph transformation concepts, {eid: 84871551093}>, <TOSCA: Portable automated deployment and management of cloud applications, {eid: 84930424951}>, <None, {eid: 84886745724}>, <Towards Model-Driven Provisioning, Deployment, Monitoring, and Adaptation of Multi-cloud Systems, {eid: 85184840384}>, <None, {eid: 0004061016}>, <A metamodeling approach to pattern-based model refactoring, {eid: 0141502278}>, <Model refactoring in web applications, {eid: 78751538422}>, <Repetitive model refactoring strategy for the design space exploration of intensive signal processing applications, {eid: 80052419181}>, <CloudML: An integrated language for resource, service and request description for D-clouds, {eid: 84857171458}>, <Refactoring local to cloud data types for mobile apps, {eid: 84903553875}>, <Cloud migration patterns: A multi-cloud service architecture perspective, {eid: 84966630752}>, <Evaluation of model transformation approaches for model refactoring, {eid: 84897094918}>, <The epsilon object language (EOL), {eid: 33746467089}>, <Update transformations in the small with the epsilon wizard language, {eid: 36048961543}>, <Cloud refactoring: Automated transitioning to cloud-based services, {eid: 84902289227}>, <Moving applications to the cloud: An approach based on application model enrichment, {eid: 80052998424}>, <On the use of graph transformations for model refactoring, {eid: 33750084999}>, <A taxonomy of model transformation, {eid: 33644921482}>, <None, {eid: 34748812695}>, <None, {eid: 85056909208}>, <None, {eid: 85056886148}>, <Refactoring to rich internet applications. A model-driven approach, {eid: 52049093867}>, <Migrating application data to the cloud using cloud data, {eid: 84884469493}>, <Migrating enterprise applications to the cloud: Methodology and evaluation, {eid: 84976471683}>, <None, {eid: 84866136327}>, <Model transformation by example, {eid: 33750321819}>, <Requirements as first-class citizens: Integrating Requirements closely with Implementation Artifacts, {eid: 85056869862}>, <Standards-based Devops automation and integration using TOSCA, {eid: 84946692273}>, <A DSL toolkit for deferring architectural decisions in DSL-based software design, {eid: 77955779391}>, <Generic and domain-specific model refactoring using a model transformation engine, {eid: 84892321793}>, <Architectural refactoring: A task-centric view on software evolution, {eid: 84925036831}>",,,"Association for Computing Machinery, Inc",,,2018-10-14,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85056854251
60,,"Spieker H. (AUID: 57189329650), Gotlieb A. (AUID: 56247674500), Marijan D. (AUID: 34872942800), Mossige M. (AUID: 55842764600)",,Reinforcement learning for automatic test case prioritization and selection in continuous integration,2017,"26th ACM SIGSOFT International Symposium on Software Testing and Analysis, ISSTA 2017",,,,,,,163,10.1145/3092703.3092709,https://www.doi.org/10.1145/3092703.3092709,"<Simula Research Laboratory>, <University of Stavanger>, <ABB Robotics>",,"© 2017 Association for Computing Machinery.Testing in Continuous Integration (CI) involves test case prioritization, selection, and execution at each cycle. Selecting the most promising test cases to detect bugs is hard if there are uncertainties on the impact of committed code changes or, if traceability links between code and tests are not available. This paper introduces Retecs, a new method for automatically learning test case selection and prioritization in CI with the goal to minimize the round-trip time between code commits and developer feedback on failed test cases. The Retecs method uses reinforcement learning to select and prioritize test cases according to their duration, previous last execution and failure history. In a constantly changing environment, where new test cases are created and obsolete test cases are deleted, the Retecs method learns to prioritize error-prone test cases higher under guidance of a reward function and by observing previous CI cycles. By applying Retecs on data extracted from three industrial case studies, we show for the first time that reinforcement learning enables fruitful automatic adaptive test case selection and prioritization in CI and regression testing.","Continuous Integration, Machine Learning, Regression testing, Reinforcement Learning, Test case prioritization, Test case selection",,,,,,,,"<Apprenticeship learning via inverse reinforcement learning, {eid: 31844444663}>, <Improving proceeding test case prioritization with learning software agents, {eid: 84902356655}>, <Active learning for automatic classification of software behavior, {eid: 22944435659}>, <Learning for test prioritization: An industrial case study, {eid: 84997235107}>, <Clustering based novel test case prioritization technique, {eid: 84983233375}>, <Using semi-supervised clustering to improve regression test selection techniques, {eid: 79958759034}>, <A multi-objective particle swarm optimization for test case selection based on functional requirements coverage and execution effort, {eid: 84855811230}>, <Search based constrained test case selection using execution effort, {eid: 84885031013}>, <Coverage-based regression test case selection, minimization and prioritization: A case study on an industrial system, {eid: 84928926856}>, <None, {eid: 38549173069}>, <None, {eid: 85026650757}>, <Techniques for improving regression testing in continuous integration development environments, {eid: 84986877429}>, <None, {eid: 0006705483}>, <Ekstazi: Lightweight test selection, {eid: 84951764887}>, <Lightweight automated testing with adaptation-based programming, {eid: 84876394399}>, <A history-based test prioritization technique for regression testing in resource constrained environments, {eid: 0036041041}>, <Test case prioritization based on information retrieval concepts, {eid: 84951272973}>, <Self-improving reactive agents based on reinforcement learning, planning and teaching, {eid: 0000123778}>, <Test case prioritization for continuous regression testing: An industrial case study, {eid: 84891715780}>, <Reward functions for accelerated learning, {eid: 84957895797}>, <Size-constrained regression test case selection using multicriteria optimization, {eid: 84864606587}>, <History-based test case prioritization for black box testing using ant colony optimization, {eid: 84935096380}>, <A similarity-based approach for test case prioritization using historical failure data, {eid: 84964844271}>, <Software testing: A research travelogue (2000-2014), {eid: 84979703490}>, <Historical value-based approach for cost- cognizant test case prioritization to improve the effectiveness of regression testing, {eid: 51749110666}>, <Scikit-learn: Machine Learning in Pjython, {eid: 80555140075}>, <Test case prioritization for multiple processing queues, {eid: 62449129360}>, <Combinatorial interac-tionregressiontesting: Astudyoftestcase generationandprioritization, {eid: 47349111813}>, <Risk-based interoperability testing using reinforcement learning, {eid: 85026664193}>, <Neural fitted Q iteration - First experiences with a data efficient neural Reinforcement Learning method, {eid: 33646398129}>, <Test case prioritization: An empirical study, {eid: 0033326792}>, <Prioritizing test cases for regression testing, {eid: 0035481183}>, <An information retrieval approach for regression test prioritization basedon program changes, {eid: 84951789291}>, <Enabling agile testing through continuous integration, {eid: 70449678931}>, <Experience report: Automated system level regression test prioritization using multiple factors, {eid: 85013287871}>, <None, {eid: 0004102479}>, <Reinforcement learning in continuous action spaces, {eid: 34548807200}>, <None, {eid: 0013153953}>, <None, {eid: 43049140624}>, <Time-aware test suite prioritization, {eid: 34247327814}>, <None, {eid: 84855242052}>, <None, {eid: 78650186589}>, <Time-aware test-case prioritization using integer linear programming, {eid: 85008264025}>, <Solving large scale linear prediction problems using stochastic gradient descent algorithms, {eid: 14344259207}>",,,"Association for Computing Machinery, Inc",,,2017-07-10,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85026639599
61,,"Rios E. (AUID: 14050840000), Iturbe E. (AUID: 56991048200), Palacios M.C. (AUID: 57195943390)",,Self-healing multi-cloud application modelling,2017,"12th International Conference on Availability, Reliability and Security, ARES 2017",,,,,,,5,10.1145/3098954.3104059,https://www.doi.org/10.1145/3098954.3104059,<Tecnalia Research and Innovation>,,"© 2017 Association for Computing Machinery.Cloud computing market forecasts and technology trends confirm that Cloud is an IT disrupting phenomena and that the number of companies with multi-cloud strategy is continuously growing. Cost optimization and increased competitiveness of companies that exploit multi-cloud will only be possible when they are able to leverage multiple cloud offerings, while mastering both the complexity of multiple cloud provider management and the protection against the higher exposure to attacks that multi-cloud brings. .is paper presents the MUSA Security modelling language for multi-cloud applications which is based on the Cloud Application Modelling and Execution Language (CAMEL) to overcome the lack of expressiveness of state-of-the-art modelling languages towards easing: A) the automation of distributed deployment, b) the computation of composite Service Level Agreements (SLAs) that include security and privacy aspects, and c) the risk analysis and service match-making taking into account not only functionality and business aspects of the cloud services, but also security aspects. .e paper includes the description of the MUSA Modeller as the Web tool supporting the modelling with the MUSA modelling language. the paper introduces also the MUSA SecDevOps framework in which the MUSA Modeller is integrated and with which the MUSA Modeller will be validated.","Cloud, Deployment, Modelling, Multi-cloud, Security",,,,,,,,"<Security and privacy-enhancing multicloud architectures, {eid: 84897586246}>, <Security-by-design in clouds: A security-SLA driven methodology to build secure cloud applications, {eid: 84999025090}>, <None, {eid: 84887757193}>, <Scoring cloud services through digital ecosystem community analysis, {eid: 85030315222}>, <None, {eid: 84950162059}>, <None, {eid: 84885817796}>, <None, {eid: 85030308200}>, <None, {eid: 85030314694}>, <None, {eid: 85030323107}>, <None, {eid: 85020656221}>, <None, {eid: 85030321895}>, <None, {eid: 85030308676}>, <None, {eid: 85030326332}>, <An integrated meta-model for cloud application security modelling, {eid: 84999025026}>, <None, {eid: 84892489614}>, <None, {eid: 85030322605}>, <None, {eid: 85030327436}>, <None, {eid: 85030324854}>, <None, {eid: 85030308714}>, <None, {eid: 84958809025}>, <None, {eid: 85030309052}>, <None, {eid: 85030319706}>, <None, {eid: 85030311534}>, <None, {eid: 85048435112}>, <None, {eid: 84992186118}>, <None, {eid: 84969792687}>, <SLA-driven monitoring of multi-cloud application components using the MUSA framework, {eid: 85006699521}>, <None, {eid: 84969906985}>, <The Byzantine empire in the intercloud, {eid: 79955805332}>, <None, {eid: 84877107646}>",,,Association for Computing Machinery,,,2017-08-29,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85030312256
62,,"Li N. (AUID: 55722805100), Escalona A. (AUID: 56704784500), Kamal T. (AUID: 57190806744)",,Skyfire: Model-Based Testing with Cucumber,2016,"9th IEEE International Conference on Software Testing, Verification and Validation, ICST 2016",,,,,,,19,10.1109/ICST.2016.41,https://www.doi.org/10.1109/ICST.2016.41,"<Research and Development, Medidata Solutions>",,"© 2016 IEEE.In the software industry, a Behavior-Driven Development (BDD) tool, Cucumber, has been widely used by practitioners. Usually product analysts, developers, and testers manually write BDD test scenarios that describe system behaviors. Testers write implementation for the BDD scenarios by hand and execute the Cucumber tests. Cucumber provides transparency about what test scenarios are covered and how the test scenarios are mapped to executable tests. One drawback of the Cucumber BDD approach is that test scenarios are generated manually. Thus, the test scenarios are usually weak. More importantly, practitioners do not have a metric to measure test coverage. In this paper, we present a Model-Based Testing (MBT) tool, skyfire. Skyfire can automatically generate effective Cucumber test scenarios to replace manually generated test scenarios. Skyfire reads a behavioral UML diagram (e.g., a state machine diagram), identifies all necessary elements (e.g., transitions) of the diagram, generates effective tests to satisfy various graph coverage criteria, and converts the tests into Cucumber scenarios. Then testers write Cucumber mappings for the generated scenarios. Skyfire does not only generate effective tests but is also completely compatible with the existing agile development and continuous integration (CI) rhythm. We present the design architecture and implementation of skyfire, as well as an industrial case study to show how skyfire is used in practice.",,,,,,,,,"<None, {eid: 77952017756}>, <None, {eid: 84983236359}>, <None, {eid: 84934305775}>, <None, {eid: 84983366604}>, <A UML-based approach to system testing, {eid: 84948995039}>, <Automatic test generation: A use case driven approach, {eid: 33645820260}>, <A test automation language framwork for behavioral models, {eid: 84983287973}>, <None, {eid: 84903153672}>, <None, {eid: 84983337695}>, <None, {eid: 84983366620}>, <None, {eid: 84983287989}>, <None, {eid: 84938799121}>, <None, {eid: 3142731744}>, <None, {eid: 85123212227}>, <Better algorithms to minimize the cost of test paths, {eid: 84862321303}>, <None, {eid: 84983325781}>, <None, {eid: 84983255308}>, <None, {eid: 84983246167}>, <None, {eid: 84983246159}>, <Towards automatic scenario generation from coverage information, {eid: 84885007510}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2016-04-10,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-84983329182
63,,"Amershi S. (AUID: 23007675700), Begel A. (AUID: 6506114539), Bird C. (AUID: 17433640400), DeLine R. (AUID: 6602118069), Gall H. (AUID: 56223438700), Kamar E. (AUID: 23009039400), Nagappan N. (AUID: 8261920700), Nushi B. (AUID: 54581306500), Zimmermann T. (AUID: 16308551800)",,Software Engineering for Machine Learning: A Case Study,2019,"41st IEEE/ACM International Conference on Software Engineering: Software Engineering in Practice, ICSE-SEIP 2019",,,,,,,492,10.1109/ICSE-SEIP.2019.00042,https://www.doi.org/10.1109/ICSE-SEIP.2019.00042,<Microsoft Research>,,"© 2019 IEEE.Recent advances in machine learning have stimulated widespread interest within the Information Technology sector on integrating AI capabilities into software and services. This goal has forced organizations to evolve their development processes. We report on a study that we conducted on observing software teams at Microsoft as they develop AI-based applications. We consider a nine-stage workflow process informed by prior experiences developing AI applications (e.g., search and NLP) and data science tools (e.g. application diagnostics and bug reporting). We found that various Microsoft teams have united this workflow into preexisting, well-evolved, Agile-like software engineering processes, providing insights about several essential engineering challenges that organizations may face in creating large-scale AI solutions for the marketplace. We collected some best practices from Microsoft teams to address these challenges. In addition, we have identified three aspects of the AI domain that make it fundamentally different from prior software application domains: 1) discovering, managing, and versioning the data needed for machine learning applications is much more complex and difficult than other types of software engineering, 2) model customization and model reuse require very different skills than are typically found in software teams, and 3) AI components are more difficult to handle as distinct modules than traditional software components-models may be 'entangled' in complex ways and experience non-monotonic error behavior. We believe that the lessons learned by Microsoft teams will be valuable to other organizations.","Artifical Intelligence, Data, Machine Learning, Process, Software Engineering",,,,,,,,"<Microsoft AI Platform, {eid: 85080663569}>, <Usage and perceptions of agile software development in an industrial context: An exploratory study, {eid: 47949129866}>, <Pair programming: What?s in it for me?, {eid: 62949088997}>, <Have agile techniques been the silver bullet for software development at microsoft?, {eid: 84893262671}>, <DevOps capabilities, practices, and challenges: Insights from a case study, {eid: 85066020410}>, <Maintaining mental models: A study of developer work habits, {eid: 33947315724}>, <The emerging role of data scientists on software development teams, {eid: 84971418613}>, <Data scientists in software teams: State of the art and challenges, {eid: 85030636707}>, <Trials and tribulations of developers of intelligent systems: A field study, {eid: 85000434626}>, <None, {eid: 85080714651}>, <Investigating statistical machine learning as a tool for software development, {eid: 57649217503}>, <None, {eid: 85080729745}>, <The KDD process for extracting useful knowledge from volumes of data, {eid: 0030285403}>, <CRISP-DM: Towards a standard process model for data mining, {eid: 0003157840}>, <How do scientists develop and use scientific software?, {eid: 70349904776}>, <Hardware/software co-design, {eid: 0031101696}>, <Rapid development of multimodal interactive systems: A demonstration of platform for situated intelligence, {eid: 85046681631}>, <Hidden technical debt in machine learning systems, {eid: 84965107309}>, <On human intellect and machine failures: Troubleshooting integrative machine learning systems., {eid: 85030469300}>, <What went wrong and why? Diagnosing situated interaction failures in the wild, {eid: 85035745281}>, <None, {eid: 85051101383}>, <TFX: A tensorflow-based production-scale machine learning platform, {eid: 85029121317}>, <Model governance: Reducing the anarchy of production ML, {eid: 85075761598}>, <Machine learning in manufacturing: Advantages, challenges, and applications, {eid: 84995968996}>, <App-directed learning: An exploratory study, {eid: 84886788510}>, <None, {eid: 0003748768}>, <None, {eid: 85069156786}>, <Data management challenges in production machine learning, {eid: 85021190615}>, <Principles of explanatory debugging to personalize interactive machine learning, {eid: 84939637881}>, <Modeltracker: Redesigning performance analysis tools for machine learning, {eid: 84946584360}>, <Towards accountable AI: Hybrid human-machine analyses for characterizing system failure, {eid: 85167407995}>, <Explainable artificial intelligence (XAI), {eid: 85030164208}>, <None, {eid: 85063146790}>, <Datasheets for datasets, {eid: 85056730810}>, <Data diff: Interpretable, executable summaries of changes in distributions for data wrangling, {eid: 85051461646}>, <""breaking the Code moving between private and public work in collaborative software development, {eid: 18744368769}>, <Sometimes you need to see through walls: A field study of application programming interfaces, {eid: 21644444880}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2019-05-25,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85072111655
64,,"Benni B. (AUID: 57202099197), Mosser S. (AUID: 25654364800), Collet P. (AUID: 8947110100), Riveill M. (AUID: 55800387900)",,Supporting micro-services deployment in a safer way: A static analysis and automated rewriting approach,2018,"33rd Annual ACM Symposium on Applied Computing, SAC 2018",,,,,,,5,10.1145/3167132.3167314,https://www.doi.org/10.1145/3167132.3167314,"<Université Cǒte dAzur, CNRS, I3S>",,"© 2018 ACM.The SOA ecosystem has drastically evolved since its childhood in the early 2000s. From monolithic services, micro-services now cooperate together in ultra-large scale systems. In this context, there is a tremendous need to deploy frequently new services, or new version of existing services. Container-based technologies (e.g., Docker) emerged recently to tool such deployments, promoting a black-box reuse mechanism to support off-the-shelf deployments. Unfortunately, from the service deployment point of view, such form of black-box reuse prevent to ensure what is really shipped inside the container with the service to deploy. In this paper, we propose a formalism to model and statically analyze service deployment artifacts based on state of the art deployment platforms. The static analysis mechanism leverages the hierarchy of deployment descriptors to verify a given deployment, as well as rewrite it to automatically fix common errors. The approach is validated through the automation of the guidelines provided by the user community associated to the reference Docker engine, and the analysis of 20,000 real deployment descriptors (hosted on GitHub).","Container, Docker, Microservice, Static analysis",,,,,,,,"<None, {eid: 85050513152}>, <Microservices architecture enables DevOps: Migration to a cloud-native architecture, {eid: 84968796741}>, <Detecting model inconsistency through operation-based model construction, {eid: 57349190141}>, <An introduction to docker for reproducible research, {eid: 84930642023}>, <None, {eid: 0003885315}>, <None, {eid: 85025659978}>, <CaDAnCE: A criticality-aware deployment and configuration engine, {eid: 49649124090}>, <DevOps com and clusterhq, {eid: 85050520638}>, <An updated performance comparison of virtual machines and Linux containers, {eid: 84937435024}>, <CloudMF: Applying MDE to tame the complexity of managing multicloud applications, {eid: 84946685259}>, <Deploying on the grid with deployware, {eid: 50649090767}>, <None, {eid: 51749119047}>, <HashiCorp, {eid: 85050565151}>, <None, {eid: 85050541680}>, <None, {eid: 84924414777}>, <Docker: Lightweight linux containers for consistent development and deployment, {eid: 84926444656}>, <Hypervisors vs lightweight virtualization: A performance comparison, {eid: 84944351058}>, <A commutative model composition operator to support software adaptation, {eid: 84864072985}>, <None, {eid: 85010410859}>, <Docker cluster management for the cloud-survey results and own solution, {eid: 84963690007}>, <Linux containers and the future cloud, {eid: 84962848574}>, <None, {eid: 85050525050}>, <None, {eid: 85050572740}>, <A unification algorithm for associative-commutative functions, {eid: 84976741234}>, <Performance evaluation of container-based virtualization for high performance computing environments, {eid: 84877674458}>",,,Association for Computing Machinery,,,2018-04-09,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85050555290
65,,"Hegedus C. (AUID: 57193084519), Varga P. (AUID: 8562009900)",,Tailoring MLOps Techniques for Industry 5.0 Needs,2023,"19th International Conference on Network and Service Management, CNSM 2023",,,,,,,0,10.23919/CNSM59352.2023.10327814,https://www.doi.org/10.23919/CNSM59352.2023.10327814,"<Budapest University of Technology and Economics, Department of Telecommunications and Media Informatics>",,"© 2023 IFIP.It is a very popular era for machine learning (ML) applications, and Industry5.0 aims to have AI as one of its key technologies. Still, only a few ML initiatives make it to a production-grade implementation, mostly due to lacking proper Continuous Integration and Delivery framework and MLOps practices. This is especially true for industrial use cases, where the trust and reliability of ML applications are mission-critical. Most of these applications fail during the final stage of the development lifecycle, i.e. acceptance testing and validation of the ML application, while being integrated into Cyber-Physical System of Systems (CPSoS). This paper explores the key requirements for deploying ML applications in industrial scenarios, emphasizing the critical role of Digital Twins, edge AI, and responsible-explainable AI techniques in ensuring efficient and responsible operations. Building upon previous models, this paper suggests two process models: (i) the Olympics model for MLOps-coupled CPS engineering and (ii) the MLOps engineering toolchain for industrial applications.",,,,,,,,,"<None, {eid: 85134560362}>, <Industry 5.0: A survey on enabling technologies and potential applications, {eid: 85114389472}>, <Machine learning operations (mlops): Overview, definition, and architecture, {eid: 85134392928}>, <Tackling faults in the industry 4.0 era-a survey of machine-learning solutions and key aspects, {eid: 85077254717}>, <A survey on machine learning based smart maintenance and quality control solutions, {eid: 85125272990}>, <None, {eid: 85180013954}>, <Towards a devops approach in cyber physical production systems using digital twins, {eid: 85096529757}>, <Industrial applications of digital twins, {eid: 85113295605}>, <A survey on AIdriven digital twins in industry 4.0: Smart manufacturing and advanced robotics, {eid: 85115401810}>, <None, {eid: 85098817727}>, <Industry 4.0: A survey on technologies, applications and open research issues, {eid: 85020118455}>, <Security safety and organizational standard compliance in cyber physical systems, {eid: 85068873395}>, <Smart manufacturing: Characteristics, technologies and enabling factors, ? Proceedings of the Institution of Mechanical Engineers, Part B, {eid: 85045051227}>, <None, {eid: 85180014514}>, <Machine Learning Operations: A Survey on MLOps Tool Support, {eid: 85133747714}>, <None, {eid: 85180013748}>, <Mlops: A taxonomy and a methodology, {eid: 85132730765}>, <None, {eid: 85180011571}>, <None, {eid: 85180012812}>, <Digital twin in industry: State-of-the-art, {eid: 85054374767}>, <Digital twins in industry 5.0: Challenges in modeling and communication, {eid: 85164658186}>, <Modeling an industrial revolution: How to manage large-scale, complex iot ecosystems?, {eid: 85113598035}>, <None, {eid: 85144951265}>, <A devops approach for cyber-physical system-of-systems engineering through arrowhead, {eid: 85113686616}>, <Securing the ml lifecycle, {eid: 85180009357}>, <Structured verification of machine learning models in industrial settings, {eid: 85140199025}>, <Supporting digital supply chains by iot frameworks: Collaboration, control, combination, {eid: 85101332600}>, <Artificial intelligence applications in supply chain management, {eid: 85114030536}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2023-10-30,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85180014841
66,,"Ringert J.O. (AUID: 35085244600), Rumpe B. (AUID: 55861872700), Schulze C. (AUID: 57191918656), Wortmann A. (AUID: 56581745100)",,Teaching agile model-driven engineering for cyber-physical systems,2017,"39th IEEE/ACM International Conference on Software Engineering: Software Engineering and Education Track, ICSE-SEET 2017",,,,,,,15,10.1109/ICSE-SEET.2017.16,https://www.doi.org/10.1109/ICSE-SEET.2017.16,"<School of Computer Science, Tel Aviv University>, <Software Engineering, RWTH Aachen>",,"© 2017 IEEE.Agile development methods, model-driven engineering, and cyber-physical systems are important topics in software engineering education. It is not obvious how to teach their combination while respecting individual challenges posed to students and educators. We have devised a software project class for teaching the agile MDE for CPS. The project class was held in three different semesters. In this paper, we report on the setup of our exploratory study and its goals for teaching. We base our evaluation and insights on interviews and questionnaires. Our results show the feasibility of combination of agile MDE for CPS but also the challenges this combination poses to students and educators.","case study, cyber-physical systems, model-driven engineering, teaching",,,,,,,,"<Introduction for freshmen to embedded systems using lego mindstorms, {eid: 60549092513}>, <Teaching introductory Java through lego mindstorms models, {eid: 0036377027}>, <A case study of lego mindstorms? Suitability for artificial intelligence and robotics courses at the college level, {eid: 0036375342}>, <Teaching domain specific modeling, {eid: 84912120256}>, <Experiences of teaching model-driven engineering in a software design course, {eid: 85026650015}>, <The impact of the model-driven approach to software engineering on software engineering education, {eid: 77951137453}>, <A case study on model-based development of robotic systems using montiarc with embedded automata, {eid: 85086442858}>, <Pragmatic model-driven software development from the viewpoint of a programmer: Teaching experience, {eid: 84912143345}>, <Software engineering project courses with industrial clients, {eid: 84954327014}>, <Learning agile software development in high school: An investigation, {eid: 85021838978}>, <None, {eid: 2342509886}>, <None, {eid: 85009429756}>, <Managing complexity of automotive electronics using the east-Adl, {eid: 46749144944}>, <Model-driven engineering practices in industry, {eid: 79959907898}>, <What industry needs from architectural languages: A survey, {eid: 84878389746}>, <The state of practice in model-driven engineering, {eid: 84899687758}>, <Model-driven development of complex software: A research roadmap, {eid: 34748861160}>, <Cps foundations, {eid: 77956210272}>, <Teaching modeling: Why, when, what?, {eid: 78650400990}>, <None, {eid: 84880160418}>, <Language and code generator composition for model-driven engineering of robotics component & connector systems, {eid: 84998622881}>, <A road map for teaching introductory programming using lego mindstorms robots, {eid: 22244447088}>, <Using lego mindstorms nxt and lejos in an advanced software engineering course, {eid: 77953739930}>, <Teaching model engineering in the large, {eid: 84858787539}>, <Teaching agile: Addressing the conflict between project delivery and application of agile methods, {eid: 85021171536}>, <A classification and comparison framework for software architecture description languages, {eid: 0033892696}>, <None, {eid: 0005266243}>, <Transforming platform-independent to platform-specific component and connector software architecture models, {eid: 84949766019}>, <Ros: An open-source robot operating system, {eid: 77957352104}>, <Model-driven software development in robotics: Communication patterns as key for a robotics component model, {eid: 84255213741}>, <Monticore: Modular development of textual domain specific languages, {eid: 70349315655}>, <Modeling robot and world interfaces for reusable tasks, {eid: 84958162708}>, <Specification and development of interactive systems, {eid: 0038688057}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2017-05-20,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85026747612
67,,"Mamata R. (AUID: 57215323826), Azim A. (AUID: 36023296200), Liscano R. (AUID: 56086121100), Smith K. (AUID: 58593004600), Chang Y.K. (AUID: 57217595523), Seferi G. (AUID: 58508425200), Tauseef Q. (AUID: 58509413000)",,Test Case Prioritization using Transfer Learning in Continuous Integration Environments,2023,"4th IEEE/ACM International Conference on Automation of Software Test, AST 2023",,,,,,,0,10.1109/AST58925.2023.00023,https://www.doi.org/10.1109/AST58925.2023.00023,"<Ontario Tech University>, <International Business Machines Corporation (IBM)>",,"© 2023 IEEE.The continuous Integration (CI) process runs a large set of automated test cases to verify software builds. The testing phase in the CI systems has timing constraints to ensure software quality without significantly delaying the CI builds. Therefore, CI requires efficient testing techniques such as Test Case Prioritization (TCP) to run faulty test cases with priority. Recent research studies on TCP utilize different Machine Learning (ML) methods to adopt the dynamic and complex nature of CI. However, the performance of ML for TCP may decrease for a low volume of data and less failure rate, whereas using existing data with similar patterns from other domains can be valuable. We formulate this as a transfer learning (TL) problem. TL has proven to be beneficial for many real-world applications where source domains have plenty of data, but the target domains have a scarcity of it. Therefore, this research investigates leveraging the benefit of transfer learning for test case prioritization (TCP). However, only some industrial CI datasets are publicly available due to data privacy protection regulations. In such cases, model-based transfer learning is a potential solution to share knowledge among different projects without revealing data to other stakeholders. This paper applies TransBoost, a tree-kernel-based TL algorithm, to evaluate the TL approach for 24 study subjects and identify potential source datasets.","Continuous Integration (CI), Test Case Prioritization (TCP), Transfer Learning (TL)",,,,,,,,"<Techniques for improving regression testing in continuous integration development environments, {eid: 84986877429}>, <Test case prioritization: A family of empirical studies, {eid: 0036472965}>, <Test cases prioritization using open dependency structure algorithm, {eid: 84938909933}>, <Empirically evaluating readily available information for regression test optimization in continuous integration, {eid: 85111442372}>, <Rtptorrent: An open-source dataset for evaluating regression test prioritization, {eid: 85088915265}>, <Transfer learning for automated test case prioritization using xcsf, {eid: 85107515532}>, <None, {eid: 85089600740}>, <Transboost: A boosting-tree kernel transfer learning algorithm for improving financial inclusion, {eid: 85147607385}>, <Learning to rank for information retrieval and natural language processing, {eid: 84943760329}>, <Learning-to-rank vs ranking-to-learn: Strategies for regression testing in continuous integration, {eid: 85094318353}>, <Systemlevel test case prioritization using machine learning, {eid: 85015360836}>, <Using the case-based ranking methodology for test case prioritization, {eid: 34547244888}>, <Optimizing search engines using clickthrough data, {eid: 0242456822}>, <Learning for test prioritization: An industrial case study, {eid: 84997235107}>, <Optimizing test prioritization via test distribution analysis, {eid: 85058263302}>, <Recurrent neural network for web services performance forecasting, ranking and regression testing, {eid: 85082392258}>, <Incorporating fault-proneness estimations into coverage-based test case prioritization methods, {eid: 85079054649}>, <Test case design and test case prioritization using machine learning, {eid: 85074628474}>, <An empirical study on bayesian networkbased approach for test case prioritization, {eid: 50649115541}>, <Studying test case failure prediction for test case prioritization, {eid: 85053197930}>, <An improvement to test case failure prediction in the context of test case prioritization, {eid: 85056719436}>, <Machine learning based test case prioritization in object oriented testing, {eid: 85073755471}>, <A framework for continuous regression and integration testing in iot systems based on deep learning and search-based techniques, {eid: 85097184092}>, <Reinforcement learning for automatic test case prioritization and selection in continuous integration, {eid: 85026639599}>, <Reinforcement learning for test case prioritization, {eid: 85135266050}>, <Test case selection and prioritization using machine learning: A systematic literature review, {eid: 85121144062}>, <Test re-prioritization in continuous testing environments, {eid: 85058303599}>, <Redefining prioritization: continuous prioritization for continuous integration, {eid: 85049407641}>, <Continuous test suite failure prediction, {eid: 85111456523}>, <Reinforcement learning based test case prioritization for enhancing the security of software, {eid: 85098011611}>, <A clustering approach to improving test case prioritization: An industrial case study, {eid: 83455213915}>, <Xcs as a reinforcement learning approach to automatic test case prioritization, {eid: 85089750472}>, <Prioritizing test cases for regression testing, {eid: 0034592889}>, <None, {eid: 85070701944}>, <Application of transfer learning for object detection on manually collected data, {eid: 85072822759}>, <Fastlane: Test minimization for rapidly deployed large-scale online services, {eid: 85072284134}>, <Combinatorial interaction regression testing: A study of test case generation and prioritization, {eid: 47349111813}>, <Machine learning regression techniques for test case prioritization in continuous integration environment, {eid: 85135774956}>, <None, {eid: 85165984191}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2023-05-15,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85165992019
68,,"Kanter G. (AUID: 57188680509), Vain J. (AUID: 13905505300)",,TestIt: An Open-Source Scalable Long-Term Autonomy Testing Toolkit for ROS,2019,"10th International Conference on Dependable Systems, Services and Technologies, DESSERT 2019",,,,,,,3,10.1109/DESSERT.2019.8770011,https://www.doi.org/10.1109/DESSERT.2019.8770011,<Tallinn University of Technology>,,© 2019 IEEE.This paper presents an open-source testing toolkit TestIt that is primarily developed for model-based testing of autonomous systems to improve long-term autonomy. The architecture and tools within this architecture are introduced. The main novelty of presented solution is the scalable multi-pipeline testing architecture that enables incorporation of multi-purpose testing tools including those used in state-of-the-art model-based testing. The usability of TestIt for software testing in autonomous navigation context is demonstrated using Uppaal timed automata model based testing and Uppaal-family tools such as model checker and test execution environments Uppaal TRON and DTRON.,"autonomous robotics, integration testing, model-based testing, robot operating system, simulation, timed automata",,,,,,,,"<Ros: An open-source robot operating system, {eid: 77957352104}>, <Usage, costs, and benefits of continuous integration in open-source projects, {eid: 84989159511}>, <A tutorial on uppaal, {eid: 35048862279}>, <Divine: Explicit-state ltl model checker, {eid: 85070520024}>, <Model-based testing of web applications using nmodel, {eid: 85058442512}>, <The strands project: Long-term autonomy in everyday environments, {eid: 85007063656}>, <None, {eid: 85070487217}>, <A framework for quality assessment of ros repositories, {eid: 85006371128}>, <Dtron: A tool for distributed model-based testing of time critical applications, {eid: 85030699053}>, <Testing real-time embedded software using uppaal-tron: An industrial case study, {eid: 29244458148}>, <Massively multiple robot simulations in stage, {eid: 54249133823}>, <Online testing of nondeterministic systems with the reactive planning tester, {eid: 84860447190}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2019-06-05,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85070486861
69,,"Hametner R. (AUID: 35760794600), Zoitl A. (AUID: 9736057900), Winkler D. (AUID: 57210102724), Östreicher T. (AUID: 36473887600), Biffl S. (AUID: 6701704981)",,The adaptation of test-driven software processes to industrial automation engineering,2010,"8th IEEE International Conference on Industrial Informatics, INDIN 2010",,,,,,,36,10.1109/INDIN.2010.5549620,https://www.doi.org/10.1109/INDIN.2010.5549620,"<Automation and Control Institute, Vienna University of Technology>, <Institute of Software Technology and Interactive Systems, Vienna University of Technology>",,"Software components provide an increasing part of added value in automation systems and become more complex to construct and test. Test-driven development (TDD) of software systems has been successfully used for agile development of business software systems. Test cases guide the system implementation and can be executed automatically after software changes (continuous integration & build strategy). However, TDD processes need to be adapted to control automation systems engineering, where real-world systems are challenging to model and to test automatically. In this paper we introduce an adapted TDD process from the business software engineering domain to industrial automation engineering. We identify a set of UML models that enable the systematic derivation of test cases. Based on an initial empirical study we evaluate the adapted TDD process based on an industrial use case to identify strength and limitation of this approach. Major results of the study were that UML models enabled effective test case derivation in the study context. © 2010 IEEE.",,,,,,,,,"<None, {eid: 84924578268}>, <None, {eid: 48049098904}>, <None, {eid: 36649025165}>, <None, {eid: 0036839425}>, <None, {eid: 0346729820}>, <None, {eid: 38549173069}>, <None, {eid: 39749161554}>, <None, {eid: 85147078511}>, <None, {eid: 0007755133}>, <None, {eid: 4544344257}>, <None, {eid: 77954016340}>, <None, {eid: 0042297467}>, <MDA-based approach for embedded software generation from UML/MOF repositories, {eid: 85084689671}>, <None, {eid: 77956608700}>, <None, {eid: 28444470533}>, <None, {eid: 85007173315}>, <None, {eid: 77949876334}>",,,,,,2010-07-13,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-77956566051
70,,"Rios E. (AUID: 14050840000), Iturbe E. (AUID: 56991048200), Rego A. (AUID: 57197729847), Ferry N. (AUID: 35291975700), Tigli J.Y. (AUID: 6602916792), Lavirotte S. (AUID: 13605275200), Rocher G. (AUID: 57188680515), Nguyen P. (AUID: 55331455800), Song H. (AUID: 57195274282), Dautov R. (AUID: 56626911600), Mallouli W. (AUID: 14037829000), Cavalli A.R. (AUID: 7101898075)",,The DYNABIC approach to resilience of critical infrastructures,2023,"18th International Conference on Availability, Reliability and Security, ARES 2023",,,,,,,0,10.1145/3600160.3605055,https://www.doi.org/10.1145/3600160.3605055,"<TECNALIA Research Innovation, Basque Research and Technology Alliance (BRTA)>, <Faculty of Engineering, University of the Basque Country>, <Université Côte dAzur, I3S>, <SINTEF>, <Montimage EURL>",,"© 2023 ACM.With increasing interdependencies and evolving threats, maintaining operational continuity in critical systems has become a significant challenge. This paper presents the DYNABIC (Dynamic business continuity of critical infrastructures on top of adaptive multi-level cybersecurity) approach as a comprehensive framework to enhance the resilience of critical infrastructures. The DYNABIC approach provides the resilience enhancement through dynamic adaptation, automated response, collaboration, risk assessment, and continuous improvement. By fostering a proactive and collaborative approach to resilience, the DYNABIC framework empowers critical infrastructure sectors to effectively mitigate disruptions and recover from incidents. The paper explores the key components and architecture of the DYNABIC approach and highlights its potential to strengthen the resilience of critical infrastructures using the concept of Digital Twins in the face of evolving threats and complex operating environments involving cascading effects.","Critical Infrastructure Protection, Cybersecurity, Digital Twin, SecDevOps",,,,,,,,"<Adaptive action selection in autonomic software using reinforcement learning, {eid: 50149098645}>, <Incident-centered information security: Managing a strategic balance between prevention and response, {eid: 84890025885}>, <Distributed multi-agent microgrids: A decentralized approach to resilient power system self-healing, {eid: 80053403646}>, <None, {eid: 85169669564}>, <Context-Aware Digital Twins to Support Software Management at the Edge, {eid: 85163398137}>, <The bowtie method: A review, {eid: 84961218774}>, <None, {eid: 85169666437}>, <None, {eid: 85169683612}>, <Development and Operation of Trustworthy Smart IoT Systems: The ENACT Framework, {eid: 85079102926}>, <GeneSIS: Continuous Orchestration and Deployment of Smart IoT Systems, {eid: 85072692587}>, <Continuous Deployment of Trustworthy Smart IoT Systems, {eid: 85089665982}>, <None, {eid: 85169674536}>, <Digital twins as run-time predictive models for the resilience of cyber-physical systems: A conceptual framework, {eid: 85113299831}>, <Security and privacy in device-to-device (D2D) communication: A review, {eid: 85020418154}>, <A review of definitions and measures of system resilience, {eid: 84942543731}>, <A digital supply chain twin for managing the disruption risks and resilience in the era of Industry 4. 0, {eid: 85075117655}>, <Digital twin for legacy systems: Simulation model testing and validation, {eid: 85059985353}>, <Networked microgrids for enhancing the power system resilience, {eid: 85018906315}>, <Model-driven risk analysis: The CORAS approach, {eid: 84952691841}>, <Leveraging digital twin technology in model-based systems engineering, {eid: 85111581098}>, <Assessment of the impact of interdependencies on the resilience of networked critical infrastructure systems, {eid: 85045087910}>, <None, {eid: 85169686821}>, <Data quality issues in online reinforcement learning for self-adaptive systems (keynote), {eid: 85143201826}>, <None, {eid: 85077818052}>, <None, {eid: 85136198721}>, <None, {eid: 84940101628}>, <Information sharing in cybersecurity: A review, {eid: 85072383465}>, <A framework for model-driven engineering of resilient software-controlled systems, {eid: 85090186086}>, <Digital twin for machining tool condition prediction, {eid: 85068465743}>, <A risk-based dynamic decision-making approach for cybersecurity protection in industrial control systems, {eid: 85051805748}>, <Cascading failures in interdependent infrastructures: An interdependent Markov-chain approach, {eid: 84976412595}>, <Power systems resilience metrics: A comprehensive review of challenges and outlook, {eid: 85096324673}>, <Continuous quantitative risk management in smart grids using attack defense trees, {eid: 85089221906}>, <Self-adaptive software: Landscape and research challenges, {eid: 70349742463}>, <Estimating cascading effects in cyber-physical critical infrastructures, {eid: 85077509963}>, <None, {eid: 0003600750}>, <Business continuity management for supply chains facing catastrophic events, {eid: 85089292845}>, <Conceptual framework for developing resilience metrics for the electricity oil and gas sectors in the United States, {eid: 84947261543}>, <A reinforcement learning-based framework for the generation and evolution of adaptation rules, {eid: 85034442783}>",,,Association for Computing Machinery,,,2023-08-29,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85169688970
71,,"Margaria T. (AUID: 36704777800), Chaudhary H.A.A. (AUID: 57315300100), Guevara I. (AUID: 57218602519), Ryan S. (AUID: 57315504600), Schieweck A. (AUID: 57191832777)",,The Interoperability Challenge: Building a Model-Driven Digital Thread Platform for CPS,2021,"10th International Symposium on Leveraging Applications of Formal Methods, ISoLA 2021",,,,,,,13,10.1007/978-3-030-89159-6_25,https://www.doi.org/10.1007/978-3-030-89159-6_25,"<CSIS, University of Limerick>, <Confirm - Centre for Smart Manufacturing>, <Lero - The Science Foundation Ireland Research Centre for Software>",,"© 2021, The Author(s).With the heterogeneity of the industry 4.0 world, and more generally of the Cyberphysical Systems realm, the quest towards a platform approach to solve the interoperability problem is front and centre to any system and system-of-systems project. Traditional approaches cover individual aspects, like data exchange formats and published interfaces. They may adhere to some standard, however they hardly cover the production of the integration layer, which is implemented as bespoke glue code that is hard to produce and even harder to maintain. Therefore, the traditional integration approach often leads to poor code quality, further increasing the time and cost and reducing the agility, and a high reliance on the individual development skills. We are instead tackling the interoperability challenge by building a model driven/low-code Digital Thread platform that 1) systematizes the integration methodology, 2) provides methods and techniques for the individual integrations based on a layered Domain Specific Languages (DSL) approach, 3) through the DSLs it covers the integration space domain by domain, technology by technology, and is thus highly generalizable and reusable, 4) showcases a first collection of examples from the domains of robotics, IoT, data analytics, AI/ML and web applications, 5) brings cohesiveness to the aforementioned heterogeneous platform, and 6) is easier to understand and maintain, even by not specialized programmers. We showcase the power, versatility and the potential of the Digital Thread platform on four interoperability case studies: the generic extension to REST services, to robotics through the UR family of robots, to the integration of various external databases (for data integration) and to the provision of data analytics capabilities in R.","Digital Thread (DT), Interoperability, Low Code Development (LCD), Model Driven Development (MDD), Software platforms",,,,,,,,"<None, {eid: 85118189898}>, <None, {eid: 85117596135}>, <None, {eid: 85118141483}>, <None, {eid: 85118101700}>, <Architecture drivers for trustworthy interoperability in industry 4.0, {eid: 85101767688}>, <Towards model-based intent-driven adaptive software, {eid: 85118165819}>, <None, {eid: 85088221284}>, <None, {eid: 85113536565}>, <None, {eid: 85083536146}>, <None, {eid: 85118148604}>, <Xatkit: A multimodal low-code chatbot development framework, {eid: 85079821080}>, <Model driven design of secure properties for vision-based applications: A case study, {eid: 85053636530}>, <None, {eid: 0003739670}>, <None, {eid: 0003684188}>, <Mazegen: An evolutionary generator for bootstrapping robotic navigation scenarios, {eid: 85118116209}>, <Integrated modeling and development of component-based embedded software in scala, {eid: 85118107068}>, <A pilot study of industry 4.0 asset interoperability challenges in an industry 4.0 laboratory, {eid: 85099761448}>, <Understanding data heterogeneity in the context of cyber-physical systems integration, {eid: 85018169091}>, <Dsls and middleware platforms in a model driven development approach for secure predictive maintenance systems in smart factories, {eid: 85118135928}>, <Dsls for model driven development of secure interoperable automation systems, {eid: 85118110831}>, <Model driven design of reliable robot control programs using the jABC, {eid: 34548128322}>, <Model driven design of reliable robot control programs using the jABC, {eid: 34548128322}>, <Practical semantics for the internet of things: Physical states, device mashups, and open questions, {eid: 84962216157}>, <A framework of a smart injection molding system based on real-time data, {eid: 85029874505}>, <Interoperability of the time of industry 4.0 and the internet of things, {eid: 85061197750}>, <Low-code is often high-code, so we must design low-code platforms to enable proper software engineering, {eid: 85118138977}>, <None, {eid: 85089104737}>, <Service engineering: Linking business and IT, {eid: 33750124865}>, <None, {eid: 57049105432}>, <Model-based design of distributed collaborative bioinformatics processes in the jABC, {eid: 34249867762}>, <None, {eid: 85068425964}>, <None, {eid: 85118167524}>, <Backtracking-free design planning by automatic synthesis in metaframe, {eid: 84957085309}>, <Business process modeling in the jABC: The one-thing approach, {eid: 84898095232}>, <Simplicity as a driver for agile innovation, {eid: 77953342927}>, <Service-orientation: Conquering complexity with XMDD, {eid: 84955352764}>, <Extreme model-driven development (XMDD) technologies as a hands-on approach to software development without coding, {eid: 85103827388}>, <None, {eid: 85118118019}>, <Simplicity driven application development, {eid: 84901806379}>, <CaaSSET: A framework for model-driven development of context as a service, {eid: 85088629160}>, <A review on the characteristics of cyber-physical systems for the future smart factories, {eid: 85078703428}>, <CINCO: A simplicity-driven approach to full generation of domain-specific graphical modeling tools, {eid: 85019270516}>, <None, {eid: 85115136846}>, <None, {eid: 84950338538}>, <Semantic interoperability in Industry 4.0: Survey of recent developments and outlook, {eid: 85055539075}>, <Model-driven development of accessible software: A systematic literature review, {eid: 85126923777}>, <Developing a digital twin and digital thread framework for an ‘Industry 4.0’ shipyard, {eid: 85100095230}>, <Graphical and textual model-driven microservice development, {eid: 85086303989}>, <Semantic interoperability in the Industry 4.0 using the IEEE 1451 standard, {eid: 85097782340}>, <None, {eid: 85125489900}>, <Industry 4.0: Survey from a system integration perspective, {eid: 85087475238}>, <Low-code as enabler of digital transformation in manufacturing industry, {eid: 85077580109}>, <Quantitatively assessing the benefits of model-driven development in agent-based modeling and simulation, {eid: 85086377266}>, <None, {eid: 85098271318}>, <Tailored generation of concurrent benchmarks, {eid: 84906909027}>, <None, {eid: 23044518175}>, <None, {eid: 85118122448}>, <Low-code platform for automating business processes in manufacturing, {eid: 85075858242}>, <Active continuous quality control, {eid: 84880516456}>, <The contribution of systems science to Industry 4.0, {eid: 85087305100}>, <Integration of Industry 4.0 related technologies in construction industry: A framework of cyber-physical system, {eid: 85088707093}>, <None, {eid: 85111430379}>, <Pyrus: An online modeling environment for no-code data-analytics service composition, {eid: 85118145576}>, <Aligned, purpose-driven cooperation: The future way of system development, {eid: 85118172762}>",,,Springer Science and Business Media Deutschland GmbH,,,2021-10-17,,,,,,,eng,,Book Series,,,,2-s2.0-85118123247
72,,"Wild K. (AUID: 57217100826), Breitenbucher U. (AUID: 54929864700), Harzenetter L. (AUID: 57204508640), Leymann F. (AUID: 6603379902), Vietz D. (AUID: 57204730904), Zimmermann M. (AUID: 7201478503)",,TOSCA4QC: Two Modeling Styles for TOSCA to Automate the Deployment and Orchestration of Quantum Applications,2020,"24th IEEE International Enterprise Distributed Object Computing Conference, EDOC 2020",,,,,,,16,10.1109/EDOC49727.2020.00024,https://www.doi.org/10.1109/EDOC49727.2020.00024,"<University of Stuttgart, Institute of Architecture of Application Systems>",,"© 2020 IEEE.Quantum computing introduces a new computing paradigm that promises to solve problems that cannot be solved by classical computers efficiently. Thus, quantum applications will be more and more integrated in classical applications. To bring these composite applications into production, technologies for an automated deployment and orchestration are required to avoid manual error-prone and time-consuming processes. For non-quantum applications, a variety of deployment technologies have been developed in recent years. However, the deployment of quantum applications currently differs significantly from non-quantum applications and thus, leads to a different modeling procedure for the deployment of quantum applications. To overcome these problems, we propose TOSCA4QC that introduces two deployment modeling styles based on the Topology and Orchestration Specification for Cloud Applications (TOSCA) standard for automating the deployment and orchestration of quantum applications: (i) SDK-specific modeling style to cover all technical deployment details and (ii) SDK-Agnostic modeling style supporting common modeling principles. We further show how existing model-driven development (MDD) approach can be applied to refine a SDK-Agnostic model to an executable SDK-specific model. We demonstrate the practical feasibility by a prototypical implementation as an extension of the TOSCA ecosystem OpenTOSCA and three case studies with IBMQ and a quantum simulator.","Deployment Automation, Modeling, Orchestration, Quantum Computing, TOSCA",,,,,,,,"<None, {eid: 85065113346}>, <Quantum Computing in the NISQ era and beyond, {eid: 85093671738}>, <None, {eid: 85074074842}>, <None, {eid: 84858197925}>, <The Essential Deployment Metamodel: A Systematic Review of Deployment Automation Technologies, {eid: 85071420580}>, <Declarative vs. Imperative: Two Modeling Patterns for the Automated Deployment of Applications, {eid: 85050411724}>, <None, {eid: 85096572822}>, <Internet of Things out of the Box: Using TOSCA for Automating the Deployment of IoT Environments, {eid: 85096614640}>, <Towards automated iot application deployment by a cloud-based approach, {eid: 84894154092}>, <OpenTOSCA for IoT: Automating the Deployment of IoT Applications based on the Mosquitto Message Broker, {eid: 85000926700}>, <C2: General purpose cloud platform with nfv lifecycle management, {eid: 85044327100}>, <A service orchestration architecture for fog-enabled infrastructures, {eid: 85028529556}>, <The pragmatics of model-driven development, {eid: 0141725660}>, <The OpenTOSCA Ecosystem-Concepts & Tools, {eid: 85071440091}>, <None, {eid: 84861593360}>, <None, {eid: 84870888277}>, <Overview and Comparison of Gate Level Quantum Software Platforms, {eid: 85093864691}>, <Measurement-based quantum computation, {eid: 58149330782}>, <Adiabatic Quantum Computation Is Equivalent to Standard Quantum Computation, {eid: 56349168935}>, <None, {eid: 85086999778}>, <None, {eid: 85096539024}>, <None, {eid: 85096617813}>, <None, {eid: 85096573316}>, <None, {eid: 85062596280}>, <None, {eid: 85096575694}>, <A Taxonomy and Survey of Cloud Resource Orchestration Techniques, {eid: 85019878673}>, <Combining Declarative and Imperative Cloud Application Provisioning based on TOSCA, {eid: 84908563698}>, <Vino4TOSCA: A Visual Notation for Application Topologies based on TOSCA, {eid: 84872817495}>, <None, {eid: 85096547263}>, <A Roadmap for Automating the Selection of Quantum Computers for Quantum Algorithms, {eid: 85096563479}>, <OASIS, {eid: 85096577988}>, <OASIS, {eid: 85096582986}>, <OpenTOSCA-A Runtime for TOSCA-based Cloud Applications, {eid: 84892400015}>, <A Systematic Review of Cloud Modeling Languages, {eid: 85042469266}>, <Quantum in the Cloud: Application Potentials and Research Opportunities, {eid: 85088372068}>, <Towards a Platform for Sharing Quantum Software, {eid: 85093082775}>, <PlanQK-Quantum Computing Meets Artificial Intelligence, {eid: 85096605986}>, <Polynomial-Time Algorithms for Prime Factorization and Discrete Logarithms on a Quantum Computer, {eid: 0142051871}>, <Pattern-based Deployment Models and Their Automatic Execution, {eid: 85061703674}>, <Pattern-based rewrite and refinement of architectures using graph theory, {eid: 85096552142}>, <Pattern-based Deployment Models Revisited: Automated Pattern-driven Deployment Configuration, {eid: 85122069694}>, <Process Fragments, {eid: 78650702502}>, <None, {eid: 85096617093}>, <None, {eid: 85096567881}>, <A TOSCAbased Programming Model for Interacting Components of Automatically Deployed Cloud and IoT Applications, {eid: 85023172117}>, <None, {eid: 85094252790}>, <None, {eid: 85096618616}>, <Prototype container-based platform for extreme quantum computing algorithm development, {eid: 85076795941}>, <None, {eid: 85096619720}>, <None, {eid: 80052512121}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2020-10-05,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85096528009
73,,"Maldonado S.D.R. (AUID: 58166749700), Garcia J.J.B. (AUID: 58166749800)",,Towards a Domain-Specific Language for Provisioning Multiple Cloud Testing Environments for Mobile Applications,2022,"3rd International Conference on Information Systems and Software Technologies, ICI2ST 2022",,,,,,,0,10.1109/ICI2ST57350.2022.00033,https://www.doi.org/10.1109/ICI2ST57350.2022.00033,<Universidad de Los Andes>,,"© 2022 IEEE.Towards a Domain-Specific LanguagTowards a Domain-Specific Languag Provisioning testing environments for mobile applications is one of the most significant challenges within the software industry. Due to this high complexity that exists when provisioning test environments within the multiple available cloud platforms, it is necessary to make a significant investment in human resources, like time and effort for the implementation and execution of testing. There is additional complexity: testing software in a single environment is no longer sufficient. Today's mobile industry is constantly growing, and execution environments tend to be always different; the hardware configuration is usually different and sometimes exceeds the software barrier. It is challenging to execute testing on each of the existing devices, as this requires a long task of human intervention. Today some platforms provide testing services in different environments. However, not all providers have the complete set of environments that one would like to have, and specific knowledge is mandatory for using each available tool. It is a task that requires expertise and time. This work seeks to mitigate the impact on time and the learning curve through a high-level tool developed using a model-oriented approach, thus reducing the time needed for setting up each required platform for organizations. As a solution, we propose a Domain-Specific Language for provisioning multiple cloud testing environments for mobile applications. The configuration of the environment is done with the Domain Specific Language to make the usage easier by the final user. The necessary code is generated through transformations to set up an environment on cloud platforms such as Amazon Web Services (AWS) and Google Cloud Platform (GCP). This usage of this platform results in fewer code lines written and less time learning about the specific knowledge for each platform.","cloud, DevOPS, DSL, mobile, testing",,,,,,,,"<A systematic mapping study addressing the reliability of mobile applications: The need to move beyond testing reliability, {eid: 85121658690}>, <Review paper on various software testing techniques and strategies, {eid: 85097548924}>, <Developing mobile applications via model driven development: A systematic literature review, {eid: 85112044746}>, <Checking app behavior against app descriptions: What if there are no app descriptions?, {eid: 85112056079}>, <None, {eid: 85151337914}>, <Tracking for mobile devices: A systematic mapping study, {eid: 84962519405}>, <Vision: Improved development of mobile ehealth applications, {eid: 85051662042}>, <Validation of architectural requirements for tackling cloud computing barriers: Cloud provider perspective, {eid: 85105617772}>, <Serverless execution of scientific workflows: Experiments with hyperflow, aws lambda and google cloud functions, {eid: 85035082302}>, <Streamlining devops automation for cloud applications using tosca as standardized metamodel, {eid: 84958740530}>, <Response time evaluation of mobile applications combining network protocol analysis and information fusion, {eid: 85123008106}>, <Continuous benchmarking: Using system benchmarking in build pipelines, {eid: 85071486300}>, <Continuous testing and solutions for testing problems in continuous delivery: A systematic literature review, {eid: 85055587228}>, <Appflow: Using machine learning to synthesize robust, reusable ui tests, {eid: 85058288795}>, <What will it take? a view on adoption of model-based methods in practice, {eid: 84867900536}>, <None, {eid: 85133664838}>, <None, {eid: 85151317339}>, <None, {eid: 85140296427}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2022-11-08,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85151342791
74,,"Colantoni A. (AUID: 57220071865), Berardinelli L. (AUID: 23466256500), Garmendia A. (AUID: 55891368600), Bräuer J. (AUID: 57191492619)",,Towards Blended Modeling and Simulation of DevOps Processes: the Keptn Case Study,2022,"25th ACM/IEEE International Conference on Model Driven Engineering Languages and Systems, MODELS 2022",,,,,,,0,10.1145/3550356.3561597,https://www.doi.org/10.1145/3550356.3561597,"<Johannes Kepler University>, <Dynatrace Gmbh>",,"© 2022 Owner/Author.DevOps and Model Driven Engineering (MDE) provide differently skilled IT stakeholders with methodologies and tools for organizing and automating continuous software engineering activities and using models as key engineering artifacts. JSON is a popular data format, and JSON Schema provides a general-purpose schema language for JSON. This paper presents our work in progress on blended modeling and scenario simulation of continuous delivery pipelines as executable JSON-based models. For this purpose, we show a case study based on Keptn, an open source tool for DevOps automation of cloud-native applications, and its language, Shipyard, a JSON-based process language for continuous delivery pipeline specification.","blended modeling, DevOps, MDE, simulation",,,,,,,,"<2019. DECIDE: An Extended DevOps Framework for Multi-cloud Applications, {eid: 85074354336}>, <2021 DevOps Workflow Verification and Duration Prediction Using Non-Markovian Stochastic Petri Nets, {eid: 85097025889}>, <None, {eid: 84986537458}>, <2005 on the unification power of models, {eid: 19644394108}>, <None, {eid: 85142929996}>, <None, {eid: 85142920079}>, <DevOps for models and modeling DevOps, {eid: 85142938265}>, <2020. Towards Modeling Framework for DevOps: Requirements Derived from Industry Use Case, {eid: 85079101956}>, <None, {eid: 84878326137}>, <2019 Contents for a Model-Based Software Engineering Body of Knowledge, {eid: 85069478287}>, <None, {eid: 85075598452}>, <2019. Blended Modelling-What, Why and How, {eid: 85075926513}>, <2019. Blended Modelling-What, Why and How, {eid: 85075926513}>, <Cloud Native Computing Foundation, {eid: 85142919928}>, <2020. DevOpsML: Towards modeling DevOps processes and platforms, {eid: 85096806448}>, <2021. Leveraging Model-Driven Technologies for JSON Artefacts: The Shipyard Case Study, {eid: 85123405038}>, <2021. Towards Continuous Consistency Checking of DevOps Artefacts, {eid: 85124002916}>, <Blended modeling in commercial and open-source model-driven software engineering tools: A systematic study, {eid: 85130820987}>, <None, {eid: 85142919651}>, <None, {eid: 85142928816}>, <None, {eid: 85142934575}>, <Modern continuous delivery with Keptn-Talk at Lowcomote Heterogeneous Low-Code Engineering in Industry, {eid: 85142925275}>, <Eclipse Modeling Framework, {eid: 85142937891}>, <None, {eid: 85142929476}>, <None, {eid: 85142921597}>, <Eclipse Foundation, {eid: 85142930314}>, <Eclipse Foundation, {eid: 85142938538}>, <Eclipse Foundation, {eid: 85142938538}>, <2021. AIDOaRt: AI-Augmented Automation for DevOps, a Model-based Framework for Continuous Development in Cyber-Physical Systems, {eid: 85119884136}>, <2019. Stepwise Adoption of Continuous Delivery in Model-Driven Engineering, {eid: 85061101819}>, <The GEMOC Initiative on the Globalization of Modeling Languages, {eid: 85142934512}>, <Dynatrace Gmbh, {eid: 85142925137}>, <2018. MELODIC: Utility Based Cross Cloud Deployment Optimisation, {eid: 85056262683}>, <None, {eid: 85022320758}>, <None, {eid: 85142935743}>, <None, {eid: 85142924888}>, <None, {eid: 85142925543}>, <Technological spaces: An Initial Appraisal, {eid: 18144421716}>, <None, {eid: 85037105274}>, <2019. What Are Real JSON Schemas Like?, {eid: 85077693677}>, <2021 the Development of a Simulation Model for Assessing the CI/CD Pipeline Quality in the Development of Information Systems Based on a Multi-Agent Approach, {eid: 85142937873}>, <Melodic Homepage, {eid: 85142919912}>, <JKU Institute of Business Informatics, {eid: 85142924828}>, <Software & Systems Process Engineering Metamodel, {eid: 85142937550}>, <Business Process Model and Notation, {eid: 85142930777}>, <Unified Modeling Language, {eid: 85142928591}>, <2016. Foundations of JSON Schema, {eid: 85021210851}>, <JSON Schema Implementations, {eid: 85142926104}>, <JSON Schema Test Suite, {eid: 85142931174}>, <Road to a reactive and incremental model transformation platform: Three generations of the VIATRA framework, {eid: 84966700829}>, <Weaveworks, {eid: 85142920890}>",,,"Association for Computing Machinery, Inc",,,2022-10-23,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85142919813
75,,"Bergelin J. (AUID: 57713657400), Cicchetti A. (AUID: 22733357800)",,Towards Continuous Modelling to Enable DevOps: A Preliminary Study with Practitioners,2022,"25th ACM/IEEE International Conference on Model Driven Engineering Languages and Systems, MODELS 2022",,,,,,,1,10.1145/3550356.3561582,https://www.doi.org/10.1145/3550356.3561582,<Mälardalen University>,,"© 2022 Owner/Author.Model-based methods and techniques continuously evolve to meet the increasing challenges of modern-day technical landscapes. Parallel to Model-based methods, other paradigms are similarly maturing and being integrated, and one such paradigm is DevOps. Model-based methods and DevOps are perceived to provide benefits when viewed in isolation. Recently, there has been an increased interest in matching the two paradigms, with various proposals and early adoption results. However, little focus is put on the practitioners' view. In this paper, we propose a methodology that aims to utilise Model-driven engineering and DevOps practices in conjunction. Together with the methodology, we present an early evaluation of it from a practitioner's perspective. In particular, we study a large and long-running student project aiming to build a solar vehicle, by presenting the current integration and potential future directions. In this paper we limit the observation to the development phase. Early feedback from the case study indicates significant benefits for several identified project pain points, and it's expected that more benefits will emerge when more advanced DevOps aspects are integrated with model-based methods, and the project matures.","DevOps, model-based engineering, practitioners, simulink",,,,,,,,"<User Experience for Model-Driven Engineering: Challenges and Future Directions, {eid: 85040569509}>, <Early validation of heterogeneous battery systems in the railway domain, {eid: 85130823867}>, <Towards modeling framework for devops: Requirements derived from industry use case, {eid: 85079101956}>, <Model-driven software engineering in practice, {eid: 84878326137}>, <Grand challenges in model-driven engineering: An analysis of the state of the research, {eid: 85077634676}>, <Experiences of teaching model-driven engineering in a software design course, {eid: 85026650015}>, <DevopsML: Towards modeling devops processes and platforms, {eid: 85096806448}>, <Towards a model-based devops for cyber-physical systems, {eid: 85096956543}>, <Systems engineering challenges and MBSE opportunities for automotive system design, {eid: 85044377052}>, <Challenges and best practices in industry-Academia collaborations in software engineering: A systematic literature review, {eid: 84980410074}>, <Descriptive vs Prescriptive Models in Industry, {eid: 85008425440}>, <What is DevOps A systematic mapping study on definitions and practices, {eid: 85019409567}>, <Consistency management in industrial continuous model-based development settings: A reality check, {eid: 85142933274}>, <Adopting DevOps in the real world: A theory, a model, and a case study, {eid: 85070228584}>, <The systems engineering DevOps lemniscate and model-based system operations, {eid: 85130822811}>, <MDE adoption in industry: Challenges and success criteria, {eid: 67650136136}>, <DevOps adoption benefits and challenges in practice: A case study, {eid: 84998953411}>, <Continuous integration, delivery and deployment: A systematic review on approaches, tools, challenges and practices, {eid: 85019140530}>, <Adopting MBSE in construction equipment industry: An experience report, {eid: 85066815769}>, <Using DevOps toolchains in Agile model-driven engineering, {eid: 85142922086}>, <INCOSE systems engineering handbook version 4: Updating the reference for practitioners, {eid: 85166328746}>, <Industrial adoption of model-driven engineering: Are the tools really the problem, {eid: 84886821083}>",,,"Association for Computing Machinery, Inc",,,2022-10-23,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85142926746
76,,"Franch X. (AUID: 6603081752), Oriol M. (AUID: 53880191200), Seyff N. (AUID: 6507025730), Fricker S. (AUID: 24477288600), Groher I. (AUID: 17433896500), Vierhauser M. (AUID: 36661447400), Wimmer M. (AUID: 14030698000)",,Towards Integrating Data-Driven Requirements Engineering into the Software Development Process: A Vision Paper,2020,"26th International Working Conference on Requirements Engineering: Foundation for Software Quality, REFSQ 2020",,,,,,,6,10.1007/978-3-030-44429-7_10,https://www.doi.org/10.1007/978-3-030-44429-7_10,"<Universitat Politècnica de Catalunya>, <University of Applied Sciences and Arts Northwestern Switzerland FHNW>, <Johannes Kepler University Linz & CDL-MINT>",,"© 2020, Springer Nature Switzerland AG.[Context and motivation] Modern software engineering processes have shifted from traditional upfront requirements engineering (RE) to a more continuous way of conducting RE, particularly including data-driven approaches. [Question/problem] However, current research on data-driven RE focuses more on leveraging certain techniques such as natural language processing or machine learning than on making the concept fit for facilitating its use in the entire software development process. [Principal ideas/results] In this paper, we propose a research agenda composed of six distinct research directions. These include a data-driven RE infrastructure, embracing data heterogeneity, context-aware adaptation, data analysis and decision support, privacy and confidentiality, and finally process integration. Each of these directions addresses challenges that impede the broader use of data-driven RE. [Contribution] For researchers, our research agenda provides topics relevant to investigate. For practitioners, overcoming the underlying challenges with the help of the proposed research will allow to adopt a data-driven RE approach and facilitate its seamless integration into modern software engineering. For users, the proposed research will enable the transparency, control, and security needed to trust software systems and software providers.","Data-driven requirements engineering, Feedback gathering, Model-driven Engineering, Requirements monitoring",,,,,,,,"<None, {eid: 84878326137}>, <3LConOnt: A three-level ontology for context modelling in context-aware computing, {eid: 85027518520}>, <None, {eid: 85064059329}>, <Data science: technologies for better software, {eid: 85074196089}>, <How can quality awareness support rapid software development? – a research preview, {eid: 85013935704}>, <The brave new world of design requirements, {eid: 79958086098}>, <How do practitioners capture and utilize user feedback during continuous software engineering?, {eid: 85076916687}>, <Raising the odds of success: The current state of experimentation in product development, {eid: 84964692724}>, <Toward data-driven requirements engineering, {eid: 84971524522}>, <Data-driven requirements engineering: An update, {eid: 85072125118}>, <Continuously assessing and improving software quality with software analytics tools: A case study, {eid: 85067226210}>, <FAME: Supporting continuous requirements elicitation by combining user feedback and monitoring, {eid: 85056819919}>, <None, {eid: 85083975397}>, <The interplay of design and runtime traceability for non-functional requirements, {eid: 85073000295}>, <Ubiquitous requirements engineering: A paradigm shift that affects everyone, {eid: 85062173979}>, <None, {eid: 85064051708}>",,,Springer,,,2020-03-24,,,,,,,eng,,Book Series,,,,2-s2.0-85083963946
77,,"Bruneliere H. (AUID: 27067480800), De Kerchove F.M. (AUID: 55646340800), Daniel G. (AUID: 56503216700), Cabot J. (AUID: 8963493600)",,Towards scalable model views on heterogeneous model resources,2018,"21st ACM/IEEE International Conference on Model Driven Engineering Languages and Systems, MODELS 2018",,,,,,,10,10.1145/3239372.3239408,https://www.doi.org/10.1145/3239372.3239408,"<IMT Atlantique - LS2N (CNRS) &, ARMINES>, <IN3, Universitat Oberta de Catalunya (UOC)>, <ICREA and Universitat Oberta de Catalunya (UOC)>",,"© 2018 Association for Computing Machinery.When engineering complex systems, models are used to represent various systems aspects. These models are often heterogeneous in terms of modeling language, provenance, number or scale. They can be notably managed by different persistence frameworks adapted to their nature. As a result, the information relevant to engineers is usually split into several interrelated models. To be useful in practice, these models need to be integrated together to provide global views over the system under study. Model view approaches have been proposed to tackle such an issue. They provide an unification mechanism to combine and query heterogeneous models in a transparent way. These views usually target specific engineering tasks such as system design, monitoring, evolution, etc. In our present context, the MegaM@Rt2 industrially-supported European initiative defines a set of large-scale use cases where model views can be beneficial for tracing runtime and design time data. However, existing model view solutions mostly rely on in-memory constructs and low-level modeling APIs that have not been designed to scale in the context of large models stored in different kinds of sources. This paper presents the current status of our work towards a general solution to efficiently support scalable model views on heterogeneous model resources. It describes our integration approach between model view and model persistence frameworks. This notably implies the refinement of the view framework for the construction of large views from multiple model storage solutions. This also requires to study how parts of queries can be computed on the contributing models rather than on the view. Our solution has been benchmarked on a practical large-scale use case from the MegaM@Rt2 project, implementing a runtime - design time feedback loop. The corresponding EMF-based tooling support and modeling resources are fully available online.","Database, Design Time, Modeling, Persistence, Runtime, Scalability, Views",,,,,,,,"<The Megam@rt2 ECSEL project: Megamodelling at runtime - Scalable model-based framework for continuous development and runtime validation of complex systems, {eid: 85048178927}>, <Hawk: Towards a scalable model indexing architecture, {eid: 84904444713}>, <Incremental Evaluation of Model Queries over EMF models, {eid: 78349303110}>, <A Feature-based Survey of Model View Approaches, {eid: 85066350223}>, <Modisco: A model driven reverse engineering framework, {eid: 84900002114}>, <EMF views: A view mechanism for integrating heterogeneous models, {eid: 84951747182}>, <View-based Model-driven Software Development with ModelJoin, {eid: 84901557393}>, <How can we implement a Multidimensional Data Warehouse using NoSQL?, {eid: 84958972862}>, <Gremlin-ATL: A scalable model transformation framework, {eid: 85041446404}>, <NeoEMF: A Multi-database Model Persistence Framework for Very Large Models, {eid: 85028586965}>, <Mogwaï: A framework to handle complex queries on large models, {eid: 84987607022}>, <Query-driven incremental synchronization of view models, {eid: 84907072374}>, <Modeling cyber-physical systems, {eid: 84155172767}>, <None, {eid: 85056861122}>, <An eclipse modelling framework alternative to meet the models@runtime requirements, {eid: 84867650983}>, <Addressing Modularity for Heterogeneous Multi-model Systems using Model Federation, {eid: 84965060048}>, <Selection of views to materialize in a data warehouse, {eid: 84948964173}>, <Model-driven engineering practices in industry: Social, organizational and managerial factors that lead to success or failure, {eid: 84900499307}>, <ATL: A model transformation tool, {eid: 45849085734}>, <CloudMDSQL: Querying heterogeneous cloud data stores with a common language, {eid: 84944603835}>, <Eclipse development tools for epsilon, {eid: 36049004338}>, <Merging models with the epsilon merging language (EML), {eid: 33750362774}>, <A research roadmap towards achieving scalability in model driven engineering, {eid: 84880430801}>, <Constructing and navigating noninvasive model decorations, {eid: 77954752082}>, <None, {eid: 85056869322}>, <None, {eid: 85056824922}>, <None, {eid: 85049685176}>, <None, {eid: 74549142762}>, <None, {eid: 85048809213}>, <EMF-incquery: An integrated development environment for live model queries, {eid: 84916891711}>, <Road to a reactive and incremental model transformation platform: Three generations of the Viatra framework, {eid: 84966700829}>, <An efficient computation strategy for allinstances(), {eid: 84938600227}>, <The state of practice in model-driven engineering, {eid: 84899687758}>, <Deterministic lazy mutable OCL collections, {eid: 85042681746}>",,,"Association for Computing Machinery, Inc",,,2018-10-14,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85056878573
78,,"Ailane M.T. (AUID: 57873696600), Aniculaesei A. (AUID: 54917186100), Knieke C. (AUID: 24802237700), Rausch A. (AUID: 8586021000), Sholichin F. (AUID: 57210914519)",,Towards Specification Completion for Systems with Emergent Behavior based on DevOps,2022,"2022 International Conference on Computational Science and Computational Intelligence, CSCI 2022",,,,,,,1,10.1109/CSCI58124.2022.00330,https://www.doi.org/10.1109/CSCI58124.2022.00330,"<Clausthal University of Technology, Institute for Software and Systems Engineering>",,"© 2022 IEEE.Software systems may experience multiple emergent behaviors during their operation time. These emergent system behaviors occur when system engineers develop their system under the closed-world assumption, but this assumption is not met during its operation. This means that system engineers work on the basis that they have complete knowledge of the system and its environment during its design, when the system specification that has been created is actually incomplete. In this paper, an observation of an emergent behavior is considered to be a solid proof that the system model specification is still incomplete. A conceptual framework is proposed to harness the emergent behavior and complete the system specification that is provided during the its design. The framework consists of two parts, system development and system operations. It is built on a model-driven approach in order to provide a clear definition of the emergent behavior and a concrete development scheme. The framework exploits the DevOps paradigm as a successful paradigm to achieve the ultimate goal of developing complete system models through the continuous specification completion based on the observed emergent behavior. The goal of this framework is to help develop high-quality and reliable emergent systems based on the specification derived from the emergent behavior that occurred at run time.","Complex systems, DevOps, For-mal methods, Software development process, Software evolution",,,,,,,,"<Model-driven software engineering in practice, {eid: 84878326137}>, <Introduction to model checking, {eid: 85054044441}>, <The agile manifesto, {eid: 2342509886}>, <10+ deploys per day: Dev and ops cooperation at flickr, {eid: 84889710019}>, <A survey of devops concepts and challenges, {eid: 85075608026}>, <How to extend the abstraction refinement model for systems with emergent behavior, {eid: 85171980959}>, <Towards a model-based devops for cyberphysical systems, {eid: 85096956543}>, <None, {eid: 85169581544}>, <None, {eid: 85148103544}>, <Explorations in cyber-physical systems education, {eid: 85129213195}>, <Abstraction refinement: A model of software evolution, {eid: 84987195843}>, <Specminer: Heuristicbased mining of service behavioral models from interaction traces, {eid: 85097190698}>, <General ltl specification mining (t), {eid: 84963856546}>, <Mining program workflow from interleaved logs, {eid: 85172026613}>, <On the synthesis of finite-state machines from samples of their behavior, {eid: 84938806379}>, <Deep specification mining, {eid: 85051560408}>, <Dynamic specification mining based on transformer, {eid: 85135016391}>, <General past-time linear temporal logic specification mining, {eid: 85131808183}>, <Automated generation of requirements-based test cases for an adaptive cruise control system, {eid: 85051046296}>, <Nusmv: a new symbolic model checker, {eid: 84896869660}>, <Mesa: an agent-based modeling framework, {eid: 85033460993}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2022-12-14,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85171982715
79,,"Vodyaho A. (AUID: 56406468200), Subbotin A. (AUID: 57226847043), Chervontsev M. (AUID: 57209212400), Stankova E. (AUID: 57213608799), Zhukova N. (AUID: 56406142300)",,Use of Digital Twins and Digital Threads for Subway Infrastructure Monitoring,2022,"22nd International Conference on Computational Science and Its Applications , ICCSA 2022",,,,,,,4,10.1007/978-3-031-10542-5_48,https://www.doi.org/10.1007/978-3-031-10542-5_48,"<Saint-Petersburg State Electrotechnical University>, <St. Petersburg State University>, <St. Petersburg Institute of Informatics and Automation of the Federal Research Center at the Russian Academy of Sciences (FRC RAS)>",,"© 2022, The Author(s), under exclusive license to Springer Nature Switzerland AG.The article deals with the problem of using digital twins and digital threads in complex distributed cyber-physical systems with a high level of structural and functional dynamics. A three-level model of the life cycle of a complex cyber-physical system is proposed. At the upper level, the observed system is described in terms of a continuous architecture. At the middle level, the observed system is described in terms of an agile architecture. At the lower level, the observed system is described in terms of a multigraph, which allows describe both the observed system structure and behavior. In the case study the solution of the problem of monitoring the state of the subway infrastructure is considered. The proposed approach has shown its effectiveness and can be applied in other domains such as smart cities.","Digital thread, Digital twin, Event monitoring and visualization, Machine learning, Neural network algorithms, Smart city",,,,,,,,"<Socio-cyber-physical systems: Models, opportunities, {eid: 85135893382}>, <Analysis and design of cyber-physical systems. A hybrid control systems approach, {eid: 85026795627}>, <Guide to Ambient Intelligence in the IoT Environment Principles, {eid: 85135885423}>, <Internet of Things architectures, technologies, applications, challenges, and future directions for enhanced living environments and healthcare systems: A review, {eid: 85073463121}>, <None, {eid: 85084989009}>, <None, {eid: 85135941024}>, <None, {eid: 85006460153}>, <None, {eid: 85019031731}>, <None, {eid: 85042844676}>, <None, {eid: 84892809140}>, <None, {eid: 84943326563}>, <The Agile Architecture Revolution: How Cloud Computing, REST-based SOA, {eid: 85075856334}>, <None, {eid: 85135898049}>, <A 3-D stacked wire bondless silicon carbide power module, {eid: 85116381178}>, <None, {eid: 85135964860}>, <None, {eid: 85135933201}>, <None, {eid: 85128424875}>, <None, {eid: 0003787207}>, <About one approach to using dynamic models to build digital twins, {eid: 85125914065}>, <Automatic synthesis of multilevel automata models of biological objects, {eid: 85069167345}>, <About one approach to multilevel behavioral program synthesis for television devices, {eid: 85073102210}>, <A 3-D stacked wire bondless silicon carbide power module, {eid: 85010676756}>, <Inductive synthesis of the models of biological systems according to clinical trials, {eid: 85027149081}>, <None, {eid: 84961347393}>, <Cascading failures in Internet of Things: Review and perspectives on reliability and resilience, {eid: 85098290521}>, <Towards dynamic model-based agile architecting of cyber-physical systems, {eid: 85128352540}>, <Architecture of the intelligent video surveillance systems for fog environments based on embedded computers, {eid: 85114210359}>",,,Springer Science and Business Media Deutschland GmbH,,,2022-07-04,,,,,,,eng,,Book Series,,,,2-s2.0-85135951843
80,,"Leal L. (AUID: 57211116981), Ceccarelli A. (AUID: 18041935700), Montecchi L. (AUID: 25654395000), Martins E. (AUID: 7103315128)",,Using Metamodels to Improve Model-Based Testing of Service Orchestrations,2020,"25th IEEE Pacific Rim International Symposium on Dependable Computing, PRDC 2020",,,,,,,1,10.1109/PRDC50213.2020.00024,https://www.doi.org/10.1109/PRDC50213.2020.00024,"<University of Campinas>, <University of Florence>",,"© 2020 IEEE.Online model-based testing is one of the most suitable techniques to assess the proper behavior of service orchestrations. However, the diverse panorama in terms of modeling languages and test case generation tools is a limitation to widespread adoption. We advocate that the application of Model-Driven Engineering principles as meta-modeling and model transformation can cope with this problem, improving the interoperability of artifacts in the test case generation process, thus bringing benefits in case of agile development processes, where system and technology evolution is frequent. In this paper, we present our contribution to this idea, introducing i) a reference metamodel, which stores the business process behavior and the information to generate input models for testing tools, and ii) transformations from orchestration languages towards testing tools. The proposed approach is implemented in a testing framework and evaluated on a case study where multiple orchestrations are expressed in two languages. Also, the paper presents how test cases are appropriately generated and successfully executed, starting from an orchestration model as a consequence of successful transformations.","Meta-modeling, Model-Based Testing, Model-Driven Engineering, SOA",,,,,,,,"<None, {eid: 85099885107}>, <Integration of distributed enterprise applications: A survey, {eid: 84898426599}>, <Microservices approach for the internet of things, {eid: 84996593372}>, <Making system of systems interoperable-The core components of the arrowhead framework, {eid: 84994852297}>, <Web services orchestration and choreography, {eid: 0142039821}>, <Testing and verification in service-oriented architecture: A survey, {eid: 84877618825}>, <Devops enhancement with continuous test optimization, {eid: 85056906246}>, <Evaluating the efficiency of continuous testing during test-driven development, {eid: 85051030523}>, <World quality report 2019-20, {eid: 85099886365}>, <A holistic approach to model-based testing of Web service compositions, {eid: 84891832091}>, <None, {eid: 85099885041}>, <The samba approach for self-Adaptive model-based online testing of services orchestrations, {eid: 85072691171}>, <Guest editor?s introduction: Model-driven engineering, {eid: 33344465743}>, <Model-driven engineering: A survey supported by the unified conceptual model, {eid: 84938742646}>, <A taxonomy of model-based testing approaches, {eid: 84862325128}>, <The vision of autonomic computing, {eid: 0037253062}>, <None, {eid: 41649087956}>, <None, {eid: 85020724579}>, <None, {eid: 85082763956}>, <None, {eid: 85099877081}>, <None, {eid: 84942524388}>, <None, {eid: 85099877717}>, <None, {eid: 85099882557}>, <Classification of model transformation approaches, {eid: 17744391650}>, <None, {eid: 84921469336}>, <The oracle problem in software testing: A survey, {eid: 84929331583}>, <None, {eid: 41649087956}>, <ATL-eclipse support for model transformation, {eid: 85099878178}>, <None, {eid: 85099885759}>, <None, {eid: 79958013259}>, <None, {eid: 85082763956}>, <A survey on modelbased testing tools for test case generation, {eid: 85099875604}>, <Model-based testing in practice, {eid: 0032660359}>, <Momut:: UML model-based mutation testing for UML, {eid: 84935063995}>, <Automatic generation of test cases from UML models, {eid: 85075930566}>, <The MIDAS cloud platform for testing SOA applications, {eid: 84935107263}>, <A meta-model to support regression testing of web applications, {eid: 70449727279}>, <A formal framework for service orchestration testing based on symbolic transition systems, {eid: 70549108087}>, <Introducing modeldriven testing in scrum process using U2TP and AndroMDA, {eid: 85073151444}>, <Improving evidence about software technologies: A look at model-based testing, {eid: 44149126224}>, <Basic concepts on systems of systems, {eid: 85006741799}>, <A simulation-based architecture for smart cyberphysical systems, {eid: 84991687905}>",,,IEEE Computer Society,,,2020-12-01,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85099878724
81,,"Sadovykh A. (AUID: 24479058100), Bagnto A. (AUID: 36052505500), Widforss G. (AUID: 57188769074), Enoiu E.P. (AUID: 36462407100), Hendel O. (AUID: 57226269201), Truscan D. (AUID: 6508330976), Mallouli W. (AUID: 14037829000), Iglesias R. (AUID: 24478273400)",,VeriDevOps: Automated Protection and Prevention to Meet Security Requirements in DevOps,2021,"2021 Design, Automation and Test in Europe Conference and Exhibition, DATE 2021",,,,,,,8,10.23919/DATE51398.2021.9474185,https://www.doi.org/10.23919/DATE51398.2021.9474185,"<Softeam>, <Innopolis University>, <Mälardalen University>, <Åbo Akademi University>, <Montimage Eurl>, <Ikerlan Technology Research Centre, Basque Research and Technology Alliance (BRTA)>",,"© 2021 EDAA.Current software development practices are increasingly based on using both COTS and legacy components which make such systems prone to security vulnerabilities. The modern practice addressing ever changing conditions, DevOps, promotes frequent software deliveries, however, verification methods artifacts should be updated in a timely fashion to cope with the pace of the process. VeriDevOps, Horizon 2020 project, aims at providing a faster feedback loop for verifying the security requirements and other quality attributes of large scale cyber-physical systems. VeriDevOps focuses on optimizing the security verification activities, by automatically creating verifiable models directly from security requirements formulated in natural language, using these models to check security properties on design models and then generating artefacts such as, tests or monitors that can be used later in the DevOps process. The main drivers for these advances are: Natural Language Processing, a combined formal verification and model-based testing approach, and machine-learning-based security monitors. VeriDevOps is in its initial stage - the project started on 1.10.2020 and it will run for three years. In this paper we will present the major conceptual ideas behind the project approach as well as the organizational settings.","Cybersecurity, Design checking, Machine Learning, Model-Driven Engineering, Natural Language Processing, Prevention and Reaction, Requirement, Root cause analysis, Runtime Analysis, Security-by-design, Testing and validation",,,,,,,,"<None, {eid: 85111002309}>, <None, {eid: 85099663696}>, <None, {eid: 85111050414}>, <Embedded systems security: Threats, vulnerabilities, and attack taxonomy, {eid: 84958678561}>, <The real cost of software errors, {eid: 65249116275}>, <Systems security engineering, {eid: 79953671772}>, <Rapid continuous software engineering, {eid: 85029856271}>, <Continuous delivery: Reliable software releases through build, {eid: 84858197925}>, <None, {eid: 84943326563}>, <Software development waste, {eid: 85027163553}>, <None, {eid: 85066604509}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2021-02-01,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85108370840
82,,"Ferry N. (AUID: 35291975700), Song H. (AUID: 57195274282), Rossini A. (AUID: 7102582294), Chauvel F. (AUID: 13104917300), Solberg A. (AUID: 14827375100)",,Cloud MF: Applying MDE to tame the complexity of managing multi-cloud applications,2014,"7th IEEE/ACM International Conference on Utility and Cloud Computing, UCC 2014",,,,,,,64,10.1109/UCC.2014.36,https://www.doi.org/10.1109/UCC.2014.36,"<Department of Networked Systems and Services, SINTEF>",,"© 2014 IEEE.The market of cloud computing encompasses an ever-growing number of cloud providers offering a multitude of infrastructure-as-a-service (IaaS) and platform-as-a-service (PaaS) solutions. The heterogeneity of these solutions hinders the proper exploitation of cloud computing since it prevents interoperability and promotes vendor lock-in, which increases the complexity of executing and managing multi-cloud applications (i.e., Applications that can be deployed across multiple cloud infrastructures and platforms). Providers of multi-cloud applications seek to exploit the peculiarities of each cloud solution and to combine the delivery models of IaaS and PaaS in order to optimise performance, availability, and cost. In this paper, we show how the Cloud Modelling Framework leverages upon model-driven engineering to tame this complexity by providing: (i) a tool-supported domain-specific language for specifying the provisioning and deployment of multi-cloud applications, and (ii) a models@run-time environment for enacting the provisioning, deployment, and adaptation of these applications.","Cloud computing, Cloud ML, Model-driven engineering, Multi-cloud",,,,,,,,"<The NIST definition of cloud computing, {eid: 84861307113}>, <Consuming resources and services from multiple clouds, {eid: 84904958872}>, <The future of cloud computing, {eid: 77955222592}>, <A roadmap for advanced cloud technologies under h2020, {eid: 84887629370}>, <MODACLOUDS, a model-driven approach for the design and execution of applications on multiple clouds, {eid: 84864997201}>, <Towards model-driven provisioning, deployment, monitoring, and adaptation of multi-cloud systems, {eid: 84884667453}>, <Managing multi-cloud systems with CloudMF, {eid: 84884604847}>, <None, {eid: 84858197925}>, <SENSAPP as a reference platform to support cloud experiments: From the internet of things to the internet of services, {eid: 84875682114}>, <Guest editors introduction: Model-driven engineering, {eid: 33344465743}>, <None, {eid: 17644389388}>, <None, {eid: 0003562903}>, <Rearchitecting the UML infrastructure, {eid: 0141796082}>, <Matters of (meta-)modeling, {eid: 34248658631}>, <Models@run. Time to support dynamic adaptation, {eid: 70350345225}>, <Models@run. Time, {eid: 85008066028}>, <Models@ runtime to support the iterative and continuous design of autonomous reasoners, {eid: 84924026082}>, <An eclipse modelling framework alternative to meet the models@runtime requirements, {eid: 84867650983}>, <Xtext: Implement your language faster than the quick and dirty way, {eid: 78650158701}>, <None, {eid: 84923694474}>, <Building an open-source platform-as - A-service with intelligent management of multiple cloud resources, {eid: 84874243873}>, <Topology and orchestration specification for cloud applications (tosca), {eid: 84886743417}>, <PaaS-independent provisioning and management of applications in the cloud, {eid: 84897744190}>, <CloudScale: Scalability management for cloud systems, {eid: 84878201490}>, <The reservoir model and architecture for open federated cloud computing, {eid: 74049087607}>, <A runtime model based monitoring approach for cloud, {eid: 77957948402}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2014-12-08,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-84946685259
83,,"Dobaj J. (AUID: 57203317154), Krug T. (AUID: 57218595912), Seidl M. (AUID: 57218597496), MacHer G. (AUID: 56418503500), Riel A. (AUID: 6507294478), Egretzberger M. (AUID: 58823980100)",,Towards Digital Twin-enabled DevOps for CPS providing Architecture-Based Service Adaptation & Verification at Runtime,2022,"17th Symposium on Software Engineering for Adaptive and Self-Managing Systems, SEAMS 2022",,,,,,,4,10.1145/3524844.3528057,https://www.doi.org/10.1145/3524844.3528057,"<Graz University of Technology, Institute of Technical Informatics>, <Grenoble Alps University, CNRS, G-SCOP Laboratory>, <RandD Automation Andritz Hydro GmbH>",,"© 2022 ACM.Background: Industrial Product-Service Systems (IPSS) denote a service-oriented way of providing access to cyber-physical systems' (CPS) capabilities. The design of such systems bears high risk due to uncertainty in requirements related to service function and behavior, operation environments, and evolving customer needs. Such risks and uncertainties are well known in the IT sector, where DevOps principles ensure continuous system improvement through reliable and frequent delivery processes. A modular and service-oriented system architecture complements these processes to facilitate IT system adaptation and evolution.Objective: This work proposes a method to use and extend the Digital Twins (DTs) of IPSS assets for enabling the continuous optimization of CPS service delivery and the latter's adaptation to changing needs and environments. This reduces uncertainty during design and operations by assuring IPSS integrity and availability, especially for design and service adaptations at CPS runtime.Methodology: The method builds on transferring IT DevOps principles to DT-enabled CPS IPSS. The chosen design approach integrates, reuses, and aligns the DT processing and communication resources with DevOps requirements derived from literature.Results: We use these requirements to propose a DT-enabled self-Adaptive CPS model, which guides the realization of DT-enabled DevOps in CPS IPSS. We further propose detailed design models for operation-critical DTs that integrate CPS closed-loop control and architecture-based CPS adaptation. This integrated approach enables the implementation of A/B testing as a use case and central concept to enable CPS IPSS service adaptation and reconfiguration.Conclusion: The self-Adaptive CPS model and DT design concept have been validated in an evaluation environment for operation-critical CPS IPSS. The demonstrator achieved sub-millisecond cycle times during service A/B testing at runtime without causing CPS operation interferences and downtime.","CPS, Deployment, DevOps, Digital Twin, IPSS, Self-Adaptation",,,,,,,,"<Key Performance Indicators for Assessing the Planning and Delivery of Industrial Services, {eid: 84885761606}>, <Industrial Product-Service Systems-IPS 2, {eid: 77955554456}>, <Designing Valule-Driven Solutions the Evolution of Industrial Product-Service Systems, {eid: 85135336776}>, <A framework for understanding uncertainty and its mitigation and exploitation in complex systems, {eid: 33947197638}>, <State-of-The-Art of design evaluation, and operation methodologies in product service systems, {eid: 84959354571}>, <Why Enterprises Must Adopt Devops to Enable Continuous Delivery, {eid: 84860316008}>, <DevOps, {eid: 84968831988}>, <A Survey of DevOps Concepts and Challenges, {eid: 85075608026}>, <Characterising the Digital Twin: A systematic literature review, {eid: 85081219520}>, <The Evolution of Factory and Building Automation, {eid: 80054695924}>, <The Future of Industrial Communication: Automation Networks in the Era of the Internet of Things and Industry 4.0, {eid: 85017596114}>, <Understanding the implications of digitisation and automation in the context of Industry 4.0: A triangulation approach and elements of a research agenda for the construction industry, {eid: 84992398667}>, <None, {eid: 77953794996}>, <None, {eid: 84879852118}>, <Digital Twins and Cyber-Physical Systems toward Smart Manufacturing and Industry 4.0: Correlation and Comparison, {eid: 85068798049}>, <Digital Twin-The Simulation Aspect, in, {eid: 85016457439}>, <Modeling Dimensions of Self-Adaptive Software Systems, {eid: 70350031595}>, <CyPhEF, {eid: 85049692631}>, <Web-based digital twin modeling and remote control of cyberphysical production systems, {eid: 85079532714}>, <Virtual engineering of cyber-physical automation systems: The case of control logic, {eid: 85059050409}>, <A design framework for adaptive digital twins, {eid: 85084813252}>, <Towards Flexible Evolution of Digital Twins with Fluent APIs, {eid: 85122939172}>, <Process Model for Integrated Product Lifecycles Using Digital Twins and Predictive Analytics, {eid: 85112218914}>, <Digital Twin for maintenance: A literature review, {eid: 85092055078}>, <Machine learning and reasoning for predictive maintenance in Industry 4.0: Current status and challenges, {eid: 85090002405}>, <Towards integrating undependable selfadaptive systems in safety-critical environments, {eid: 85051472391}>, <A fault-Tolerant architectural approach for dependable systems, {eid: 33644994019}>, <Engineering Trustworthy Self-Adaptive Software with Dynamic Assurance Cases, {eid: 85029184307}>, <Increasing System Dependability through Architecture-Based Self-Repair, {eid: 84881232222}>, <Toward Self-Manageable and Adaptive Industrial Cyber-Physical Systems with Knowledge-Driven Autonomic Service Management, {eid: 85018170448}>, <Context-sensitive Adaptive Production Processes, {eid: 84968919510}>, <Software Engineering Meets Control Theory, {eid: 84953230202}>, <Self-Adaptive Software with Decentralised Control Loops, in, {eid: 84944216887}>, <MAPE-K Formal Templates to Rigorously Design Behaviors for Self-Adaptive Systems, {eid: 84940991650}>, <Environment as a first class abstraction in multiagent systems, {eid: 35148899434}>, <Evolving an adaptive industrial software system to use architecture-based self-Adaptation, in, {eid: 84884999929}>, <Applying Architecture-Based Adaptation to Automate the Management of Internet-of-Things, {eid: 85057266777}>, <A systematic literature review on methods that handle multiple quality attributes in architecture-based self-Adaptive systems, {eid: 85019033585}>, <Software Architecture-Based Self-Adaptation, {eid: 79960016261}>, <ASPLe: A methodology to develop self-Adaptive software systems with systematic reuse, {eid: 85084955201}>, <Rainbow: Architecture-based self-Adaptation with reusable infrastructure, {eid: 7244223259}>, <Towards a continuous certification of safety-critical avionics software, {eid: 85099005211}>, <Towards a Model-Based DevOps for Cyber-Physical Systems, in, {eid: 85079099244}>, <TwinOps-DevOps meets model-based engineering and digital twins for the engineering of CPS, {eid: 85096747019}>, <Towards a DevOps Approach in Cyber Physical Production Systems Using Digital Twins, {eid: 85096529757}>, <Industrial DevOps, {eid: 85066507341}>, <Agent-Based DevOps of Software and Hardware Resources for Digital Twins of Infrastructural Objects, {eid: 85118224097}>, <Towards Cyber-Physical Infrastructure as-A-Service (CPIaaS) in the Era of Industry 4.0, {eid: 85072988188}>, <The Digital Twin as a Common Knowledge Base in DevOps to Support Continuous System Evolution, {eid: 85115129760}>, <Mitigating Unpredictable, Undesirable Emergent Behavior in Complex Systems, {eid: 85006339863}>, <Deployment strategies on Kubernetes, {eid: 85134191784}>, <The Three Generations of Field-Level Networks-Evolution and Compatibility Issues, {eid: 77957990921}>, <Dependable mesh networking patterns, {eid: 85076670133}>, <Towards a security-driven automotive development lifecycle, {eid: 85119838192}>, <Software Engineering of Self-Adaptive Systems, in, {eid: 85083949468}>, <None, {eid: 85076135347}>, <None, {eid: 84883567065}>, <None, {eid: 85132088763}>, <Microservice Patterns for the Life Cycle of Industrial Edge Software, {eid: 85123777425}>, <Architectural Patterns for Integrating AI Technology into Safety-Critical Systems, {eid: 85123803765}>, <A six-layer architecture for the digital twin: A manufacturing case study implementation, {eid: 85076271545}>, <Review of digital twin applications in manufacturing, {eid: 85073116667}>, <Analysis of Control Architectures in the Context of Industry 4.0, {eid: 85020758083}>, <None, {eid: 85029449972}>, <Digital Twin as a Service (DTaaS) in Industry 4.0: An Architecture Reference Model, {eid: 85097743225}>, <None, {eid: 84907879362}>, <None, {eid: 84968904605}>, <None, {eid: 85044442846}>, <None, {eid: 85134178068}>, <None, {eid: 84894206588}>, <Modeling and analysis of the disruptor framework in CSP, {eid: 85047441678}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2022-05-18,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85134157307
84,,,,Simulation deployment blockset for MATLAB/Simulink,2016,"2016 TMS/DEVS Symposium on Theory of Modeling and Simulation, TMS/DEVS 2016, Part of the 2016 Spring Simulation Multiconference, SpringSim 2016",,,,,,,2,10.23919/TMS.2016.7918818,https://www.doi.org/10.23919/TMS.2016.7918818,,,"© 2016 Society for Modeling & Simulation International (SCS).Model-based approaches are being employed more and more in simulation development. Graphical modeling languages and code generation technologies are enabling agile model development workflows, so that simulation modelers can update their models more easily. However, the process from changing the model to releasing a new simulation version is overlooked. Simulation deployment can be defined as a collection of activities, including model checking, Model-in-the-Loop testing, code generation, build, Software-in-the-Loop testing, deployment, when applicable Processor-in-the-Loop and Hardware-in-the-Loop testing and release. When it is conducted manually and ad hoc, it is repetitive, labor intensive, time-consuming and error prone. The automation of deployment pipeline, on the other hand, requires extensive scripting, unfortunately, in way in which simulation modelers are usually not accustomed. Causal Block Diagrams propose a graphical modeling language that is extensively used in simulation of technical systems. MATLAB/Simulink supports them as the basic modeling language. Exploiting the competence of MATLAB/Simulink users on Causal Block Diagrams, this paper presents a model-based approach for automating the simulation deployment activities. Thus, rather than scripting, the deployment automation functions are made available and accessible to the simulation modelers within the graphical modeling environment that they are using.","Continuous delivery, Model-based simulation systems engineering, Simulation deployment",,,,,,,,None,,,The Society for Modeling and Simulation International,,,None,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85051093462
