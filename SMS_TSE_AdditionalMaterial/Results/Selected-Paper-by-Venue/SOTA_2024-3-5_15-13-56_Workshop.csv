,Authors,Author full names,Author(s) ID,Title,Year,Source title,Volume,Issue,Art. No.,Page start,Page end,Page count,Cited by,DOI,Link,Affiliations,Authors with affiliations,Abstract,Author Keywords,Index Keywords,Molecular Sequence Numbers,Chemicals/CAS,Tradenames,Manufacturers,Funding Details,Funding Texts,References,Correspondence Address,Editors,Publisher,Sponsors,Conference name,Conference date,Conference location,Conference code,ISSN,ISBN,CODEN,PubMed ID,Language of Original Document,Abbreviated Source Title,Document Type,Publication Stage,Open Access,Source,EID
0,,Sandobalin J. (AUID: 57196234105),,A Model-Driven Approach to Continuous Delivery of Cloud Resources,2017,"15th International Conference on Service-Oriented Computing, ICSOC 2017, Workshop track: 2nd Workshop on Adaptive Service-Oriented and Cloud Applications, ASOCA 2017, 2nd Workshop on IoT Systems Provisioning and Management in Cloud Computing, ISyCC 2016, 13th International Workshop on Engineering Service-Oriented Applications and Cloud Services, WESOACS 2017 and Satellite Events",,,,,,,1,10.1007/978-3-319-91764-1_29,https://www.doi.org/10.1007/978-3-319-91764-1_29,"<Escuela Politécnica Nacional>, <Universitat Politècnica de València>",,"© Springer International Publishing AG, part of Springer Nature 2018.DevOps is a paradigm which brings practices and tools that optimize the software delivery time. Cloud-based DevOps processes facilitate the continuous delivery of infrastructure and software applications (i.e. cloud resources). In particular, Infrastructure as Code is the cornerstone of DevOps for automating the infrastructure provisioning based on practices from software development. There exist several Configuration Management Tools (CMTs) that use script languages to define the infrastructure provisioning to be deployed in a particular cloud provider. However, manual setting of the script languages to establish the infrastructure provisioning in a CMT for a particular cloud provider is a time-consuming and error-prone activity. For these reasons, the aim of my PhD research is proposing a model-driven approach to abstract and automate a continuous delivery process of cloud resources through model-driven techniques and DevOps. In addition, this approach seeks to cover the development process of cloud resources in development, testing and production environments.","Cloud computing, Cloud resources, Continuous delivery, DevOps, Infrastructure as code, Model-Driven development",,,,,,,,"<Modern DevOps: Optimizing software development through effective system interactions, {eid: 84940533528}>, <None, {eid: 84858197925}>, <None, {eid: 85026761147}>, <None, {eid: 84956782190}>, <Streamlining DevOps automation for Cloud applications using TOSCA as standardized metamodel, {eid: 84958740530}>, <MORE: A model-driven operation service for cloud-based IT systems. In: Proceed, {eid: 84989959655}>, <None, {eid: 85032346645}>, <End to end automation on cloud with build pipeline: The case for DevOps in insurance industry, continuous integration, continuous testing, and continuous delivery, {eid: 84966553219}>, <Test orchestration a framework for Continuous Integration and Continuous deployment, {eid: 84929237628}>, <An infrastructure modelling tool for cloud provisioning, {eid: 85032348388}>, <Eugenia: Towards disciplined and automated development of GMF-based graphical model editors, {eid: 84923537629}>, <EMF: Eclipse Modeling Framework, {eid: 74549142762}>, <End-to-End automation in cloud infrastructure provisioning, {eid: 85049009196}>",,,Springer Verlag,,,2017-11-13,,,,,,,eng,,Book Series,,,,2-s2.0-85049013424
1,,"Castellanos C. (AUID: 55418649100), Perez B. (AUID: 44061764600), Correal D. (AUID: 16306282100), Varela C.A. (AUID: 8382441200)",,A Model-Driven Architectural Design Method for Big Data Analytics Applications,2020,"2020 IEEE International Conference on Software Architecture Companion, ICSA-C 2020",,,,,,,2,10.1109/ICSA-C50368.2020.00026,https://www.doi.org/10.1109/ICSA-C50368.2020.00026,"<University of Los Andes, System Engineering and Computing Department>, <Department of Systems, Francisco de Paula Santander University>, <Rensselaer Polytechnic Institute, Computer Science Department>",,"© 2020 IEEE.Big data analytics (BDA) applications use machine learning to extract valuable insights from large, fast, and heterogeneous data sources. The architectural design and evaluation of BDA applications entail new challenges to integrate emerging machine learning algorithms with cutting-edge practices whilst ensuring performance levels even in the presence of large data volume, velocity, and variety (3Vs). This paper presents a design process approach based on the Attribute-Driven Design (ADD) method and Architecture tradeoff analysis method (ATAM) to specify, deploy, and monitor performance metrics in BDA applications supported by domain-specific modeling and DevOps. Our design process starts with the definition of architectural drivers, followed by functional and deployment specification through integrated high-level modeling which enables quality scenarios monitoring. We used two use cases from avionics to evaluate this proposal, and the preliminary results suggest advantages by integrating multiple views, automating deployment and monitoring compared to similar approaches.","ADD, ATAM, Attribute-Driven Design, Big data analytics deployment, DevOps, Domain-specific model, Quality Scenarios, Software architecture",,,,,,,,"<How lufthansa capitalized on big data for business model renovation, {eid: 85065072840}>, <Executing architectural models for big data analytics, {eid: 85057231099}>, <None, {eid: 84948002011}>, <None, {eid: 0006029493}>, <A neural network meta-model and its application for manufacturing, {eid: 84963753286}>, <A performance modeling framework for lambda architecture based applications, {eid: 85026670445}>, <Towards model based approach to hadoop deployment and configuration, {eid: 84964299938}>, <Optiml: An implicitly parallel domain-specific language for machine learning, {eid: 80053441759}>, <None, {eid: 85057250097}>, <None, {eid: 85085751486}>, <Spring xd: A modular distributed stream and batch processing system, {eid: 84960970167}>, <Infrastructure-As-code for data-intensive architectures: A model-driven development approach, {eid: 85051103640}>, <A survey on big data analytics solutions deployment, {eid: 85072839250}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2020-03-16,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85085757835
2,,"Meyers B. (AUID: 16646603800), Gadeyne K. (AUID: 22734132700), Oakes B. (AUID: 56289881100), Bernaerts M. (AUID: 57212107505), Vangheluwe H. (AUID: 6602402077), Denil J. (AUID: 35145566200)",,A model-driven engineering framework to support the functional safety process,2019,"22nd ACM/IEEE International Conference on Model Driven Engineering Languages and Systems Companion, MODELS-C 2019",,,,,,,8,10.1109/MODELS-C.2019.00094,https://www.doi.org/10.1109/MODELS-C.2019.00094,"<CodesignS>, <AnSyMo/CoSys, University of Antwerp and Flanders Make>",,"© 2019 IEEE.The design of safety-related systems traditionally has long and costly development cycles due to the highly manual safety engineering process, which is guided by industry standards. In this paper, we present a modelling framework that supports DevOps principles of continuous testing and fast development iterations for the design of safety-critical systems. We show how modelling can help introducing DevOps in the context of functional safety analysis, and we also report how DevOps was used during the development of the framework.","Automotive, Devops, Iso26262, Safety critical, Verification",,,,,,,,"<Connected car: Technologies, issues, future trends, {eid: 84994267550}>, <None, {eid: 0004217479}>, <None, {eid: 85075927084}>, <None, {eid: 85107187033}>, <Evaluating the use of domainspecific modeling in practice, {eid: 79952254738}>, <Simulation aided hazard analysis and risk assessment SAHARA, {eid: 85075949433}>, <Matters of (meta-) modeling, {eid: 34248658631}>, <The SAE architecture analysis & design language (AADL) A standard for engineering performance critical systems, {eid: 43049160930}>, <Meta modeling approach to safety standard for consumer devices, {eid: 85075944948}>, <Deriving safety requirements according to iso 26262 for complex systems: A method applied in the automotive industry, {eid: 85075941648}>, <Model-based specification of safety compliance needs for critical systems: A holistic generic metamodel, {eid: 84958618379}>, <Survey of model-based systems engineering methodologies, {eid: 63349087969}>, <FTG+PM: An integrated framework for investigating model transformation chains, {eid: 84885803987}>, <None, {eid: 85072551458}>, <Taming Dr. Frankenstein: Contract-based design for cyber-physical systems, {eid: 84875154791}>, <A contract-based methodology for aircraft electric power system design, {eid: 84904792110}>, <Structuring safety requirements in ISO 26262 using contract theory, {eid: 84886387891}>, <Aligning qualitative, real-time, and probabilistic property specification patterns using A structured English grammar, {eid: 84937702668}>, <A framework for temporal verification support in domain-specific modelling, {eid: 85084109347}>, <Breach, A toolbox for verification and parameter synthesis of hybrid systems, {eid: 77954986410}>, <Using rigorous simulation to support ISO 26262 hazard analysis and risk assessment, {eid: 84961700429}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2019-09-15,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85075948199
3,,Azizi M. (AUID: 57203114144),,A tag-based recommender system for regression test case prioritization,2021,"14th IEEE International Conference on Software Testing, Verification and Validation Workshops, ICSTW 2021",,,,,,,6,10.1109/ICSTW52544.2021.00035,https://www.doi.org/10.1109/ICSTW52544.2021.00035,"<East Carolina University, Departemant of Computer Sceince>",,"© 2021 IEEE.In continuous integration development environments (CI), the software undergoes frequent changes due to bug fixes or new feature requests. Some of these changes may accidentally cause regression issues to the newly released software version. To ensure the correctness of the newly released software, it is important to perform enough testing prior to code submission to avoid breaking builds. Regression testing is one of the important maintenance activities that can control the quality and reliability of modified software, but it can also be very expensive. Test case prioritization can reduce the costs of regression testing by reordering test cases to meet testing objectives better. To date, various test prioritization techniques have been developed, however, the majority of the proposed approaches utilize static or dynamic analyses to decide which test cases should be selected. These analyses often have significant cost overhead and are time consuming. This paper introduces a new method for automatic test case prioritization in a CI environment intending to minimize the testing cost. Our proposed approach uses information retrieval to automatically select test cases based on their textual similarity to the portion of the code that has been changed. Our technique not only helps developers to organize and manage the software repository but also helps them to find the relevant resources quickly. To evaluate our approach, we performed an empirical study using 37 versions of 6 open source applications. The results of our empirical study indicate that our proposed method can improve the effectiveness and efficiency of test case prioritization technique.","Continuous Integration, IR-based Regression Testing, Recommender Systems, Regression Testing, Tag-based Recommender System, Test Case Prioritization",,,,,,,,"<None, {eid: 85108030650}>, <None, {eid: 85108030827}>, <None, {eid: 85108029235}>, <None, {eid: 85108030303}>, <None, {eid: 85108030115}>, <None, {eid: 85108023654}>, <None, {eid: 85108029453}>, <Code coverage based technique for prioritizing test cases for regression testing, {eid: 77958172355}>, <An information-theoretic perspective of tf-idf measures, {eid: 0037213089}>, <Improving bug location using binary class relationships, {eid: 84872356613}>, <Recovering traceability links between code and documentation, {eid: 0036821537}>, <Software traceability with topic modeling, {eid: 77954731555}>, <A collaborative filtering recommender systemfor test case prioritization in web applications, {eid: 85108022440}>, <Retest: A cost effective test case selection technique for modern software development, {eid: 85059652407}>, <Understanding lda in source code analysis, {eid: 84931027268}>, <Latent dirichlet allocation, {eid: 0141607824}>, <Impact analysis by mining software and change request repositories, {eid: 33749054435}>, <A clustering approach to improving test case prioritization: An industrial case study, {eid: 83455213915}>, <A survey of automatic query expansion in information retrieval, {eid: 84857617983}>, <Breaking the big-bang practice of traceability: Pushing timely trace recommendations to project stakeholders, {eid: 84870679581}>, <An extensive comparison of bug prediction approaches, {eid: 77953782938}>, <Feature location in source code: A taxonomy and survey, {eid: 84875382544}>, <On the use of mutation faults in empirical assessments of test case prioritization techniques, {eid: 33750208158}>, <Empirical studies of test case prioritization in a JUnit testing environment, {eid: 16244385003}>, <Prioritizing JUnit test cases: An empirical assessment and cost-benefits analysis, {eid: 32944458769}>, <Extending a hybrid tag-based recommender system with personalization, {eid: 77954710247}>, <Prioritizing test cases for regression testing, {eid: 0013040112}>, <Test case prioritization: A family of empirical studies, {eid: 0036472965}>, <Social media recommendation based on people and tags, {eid: 77956016063}>, <Evaluating the specificity of text retrieval queries to support software engineering, {eid: 84864225686}>, <Automatic query performance assessment during the retrieval of software artifacts, {eid: 85108026097}>, <Predicting query quality for applications of text retrieval to software engineering tasks, {eid: 85027020471}>, <Automatic query reformulations for text retrieval in software engineering, {eid: 84886393561}>, <None, {eid: 85099407803}>, <Achieving scalable model based testing through test case diversity, {eid: 84874821350}>, <Prioritizing manual test cases in traditional and rapid release environments, {eid: 84935083544}>, <A history-based cost-cognizant test case prioritization technique in regression testing, {eid: 84857373389}>, <The tagrec framework as a toolkit for the development of tag-based recommender systems, {eid: 85026852503}>, <Bug localization with combination of deep learning and information retrieval, {eid: 85025129443}>, <Information retrieval methods for automated traceability recovery, {eid: 84949179664}>, <An information retrieval approach for automatically constructing software libraries, {eid: 85108021869}>, <Text retrieval approaches for concept location in source code, {eid: 84893797238}>, <Identification of high-level concept clones in source code, {eid: 85116901733}>, <Test case prioritization for continuous regression testing: An industrial case study, {eid: 85108028388}>, <A static approach to prioritizing junit test cases, {eid: 84870485125}>, <Query-based configuration of text retrieval solutions for software engineering tasks, {eid: 84960414350}>, <A similarity-based approach for test case prioritization using historical failure data, {eid: 84964844271}>, <Classifying software for reusability, {eid: 0023126084}>, <Improving ir-based bug localization with context-aware query reformulation, {eid: 85058330812}>, <Test case prioritization: An empirical study, {eid: 0033326792}>, <Prioritizing test cases for regression testing, {eid: 0035481183}>, <An information retrieval approach for regression test prioritization based on program changes, {eid: 84951789291}>, <Improving bug localization using structured information retrieval, {eid: 84893534431}>, <Modeling the evolution of topics in source code histories, {eid: 85108028119}>, <Static test case prioritization using topic, {eid: 84893748831}>, <Mining software repositories using topic models, {eid: 79959916400}>, <Multi-objective test prioritization in software product line testing: An industrial case study, {eid: 84907843595}>, <Qtep: Quality-aware test case prioritization, {eid: 85030769956}>, <Qtep: Quality-aware test case prioritization, {eid: 85030769956}>, <A study of effective regression testing in practice, {eid: 0031335528}>, <Pareto efficient multi-objective test case selection, {eid: 34548278353}>, <Regression testing minimization, selection and prioritization: A survey, {eid: 84857550008}>, <Improved bug localization based on code change histories and bug reports, {eid: 84995673130}>, <Social ranking: Uncovering relevant content usingtag-based recomm ender systems, {eid: 63449133288}>, <Automatically recommending peer reviewers in modern code review, {eid: 84976536052}>, <Bridging the gap between the total and additional test-case prioritization strategies, {eid: 84881274508}>, <Where should the bugs be fixed? more accurate information retrieval-based bug localization based on bug reports, {eid: 84864197777}>, <Predicting defects for eclipse, {eid: 36949012531}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2021-04-12,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85108029154
4,,"Gerasimov A. (AUID: 57215435224), Michael J. (AUID: 55341586200), Netz L. (AUID: 57188959185), Rumpe B. (AUID: 55861872700)",,Agile Generator-Based GUI Modeling for Information Systems,2020,"2nd International Workshop on Modelling to Program, M2P 2020",,,,,,,7,10.1007/978-3-030-72696-6_5,https://www.doi.org/10.1007/978-3-030-72696-6_5,"<Software Engineering, RWTH Aachen>",,"© 2021, Springer Nature Switzerland AG.We use two code generators for the model-based continuous development of information systems including its graphical user interfaces (GUIs). As our goal is to develop full-size real-world systems for different domains, the continuous and iterative model-based engineering of their GUIs comes along with challenges regarding their extension and modification. These challenges concern models, the languages they are written in and hand-written code. In this work we present four complementary approaches to allow extensions for GUIs that we encounter with the generator-based framework MontiGem to tackle these challenges. We discuss the four approaches in detail and present extensions of the framework in the grammar of the language, via atomic components, via hand-written amendments of generated models and by generating connections between the GUI and data structure models. These techniques can be used to create a flexible DSL for engineering information systems, adaptable for different domains and rapidly changing requirements.","Code generation, Information system, Model-Based Software Engineering, Modeling graphical user interfaces, MontiGem",,,,,,,,"<Enterprise information systems in academia and practice: lessons learned from a MBSE project, {eid: 85115262972}>, <Model-based generation of enterprise information systems, {eid: 85048362638}>, <None, {eid: 84975796016}>, <M3D: A tool for the model driven development of web applications, {eid: 84870479284}>, <None, {eid: 85020530284}>, <None, {eid: 84876753098}>, <None, {eid: 84996938035}>, <None, {eid: 84906761801}>, <None, {eid: 85107455870}>, <None, {eid: 85097375593}>, <None, {eid: 84893010361}>, <None, {eid: 85107456878}>, <None, {eid: 85080937709}>, <Continuous transition from model-driven prototype to full-size real-world enterprise information systems, {eid: 85096970269}>, <None, {eid: 84955290689}>, <Cross-platform model-driven development of mobile applications with md2, {eid: 84877947656}>, <Innovations in model-based software and systems engineering, {eid: 85071393498}>, <MontiCore 5 language workbench edition 2017. Aachener Informatik-Berichte, Software Engineering, {eid: 85053070397}>, <Software language engineering in the large: Towards composing and deriving languages, {eid: 85053063379}>, <AXIOM: A model-driven approach to cross-platform application development, {eid: 84868703078}>, <UML-based web engineering, {eid: 70350212505}>, <MontiCore: A framework for compositional development of domain specific languages, {eid: 77955230740}>, <Model-driven generation of web applications in UWE, {eid: 84884648860}>, <A primer for model-based systems engineering, {eid: 85107433349}>, <None, {eid: 85052692187}>, <None, {eid: 85048474592}>, <None, {eid: 77955589078}>, <None, {eid: 85125489900}>, <None, {eid: 85067464593}>, <The pragmatics of model-driven development, {eid: 0141725660}>, <Modellgetriebene Softwareentwicklung: Techniken, Engineering, {eid: 78650566471}>, <None, {eid: 85097405814}>",,,Springer Science and Business Media Deutschland GmbH,,,2020-03-11,,,,,,,eng,,Book Series,,,,2-s2.0-85107450806
5,,"Gerlitz T. (AUID: 50861005000), Hansen N. (AUID: 57190119879), Dernehl C. (AUID: 57190130815), Kowalewski S. (AUID: 7006648507)",,Artshop: A continuous integration and quality assessment framework for model-based software artifacts,2016,"12th Dagstuhl-Workshop Modellbasierte Entwicklung Eingebetteter Systeme, MBEES 2016 - 12th Dagstuhl-Workshop on Model-Based Development of Embedded Systems, MBEES 2016",,,,,,,6,,,"<RWTH Aachen, Informatik, Embedded Software>",,"© Modellbasierte Entwicklung Eingebetteter Systeme. All rights reserved.Due to the increasing amount of features, software developer within the automotive domain are confronted with steadily increasing complexity of models within their respective model-based development tools. This also impacts the cost and time needed to perform manual maintenance and quality control during the evolution of model-based software, delaying the detection and correction of quality defects. To prevent quality defects to pervade a model, quality assessment should continuously be performed, to provide rapid feedback to the developers. This paper introduces a framework to enable integrated quality assessment during the evolution of model-based software artifacts. The framework includes a model repository supporting the import of data-flow diagrams from The Mathwork's Matlab-Simulink/Stateflow, formal modules from IBM Rational DOORS and variability documentations from pure:systems pure:variants, as well as the synchronization of imported models with their initial sources. Analyses provided by the framework range from structural and semantical checks of MATLAB/Simulink models to consistency and user-defined conformity checks across all supported artifact types. Results computed by the framework are stored alongside the revisions of the artifacts they refer to.","Artifact integration, Model-based development, Quality assessment",,,,,,,,"<Models are code too: Near-miss clone detection for simulink models, {eid: 84873107888}>, <Seamless model-based development: From isolated tools to integrated model engineering environments, {eid: 77950458920}>, <None, {eid: 84905563698}>, <None, {eid: 85089593828}>, <Static value range analysis for matlab/simulink-models, {eid: 84990044733}>, <Code clone detection in practice, {eid: 77954702935}>, <Automatic evaluation of modelling rules and design guidelines, {eid: 84873932194}>, <Issues in clone classification for dataflow languages, {eid: 77954705103}>, <Detection and handling of model smells for matlab/simulink models, {eid: 84990067079}>, <Incremental integration of heterogeneous systems views, {eid: 34748818690}>, <None, {eid: 84955316092}>, <Duplicate detection and refactoring of matlab/simulink models, {eid: 84983369336}>, <Model-driven tool integration with modelbus, {eid: 74549141750}>, <None, {eid: 0003589319}>, <None, {eid: 84873502254}>, <None, {eid: 85089604892}>, <Model-based analysis of design artefacts applying an annotation concept, {eid: 85135931496}>, <None, {eid: 85089574469}>, <Software engineering and formal methods: 12th international conference, sefm 2014, grenoble, France, september 1-5 2014, {eid: 85089593394}>, <None, {eid: 74549142762}>, <Das mate projekt-visuelle spezifikation von matlab simulink/stateflow analysen und transformationen, {eid: 84873926944}>, <None, {eid: 85089569822}>, <Presentation of emf compare utility, {eid: 47749101164}>, <Gspan: Graph-based substructure pattern mining, {eid: 78149333073}>",,,fortiss GmbH,,,2016-03-30,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-84996742929
6,,"Biffl S. (AUID: 6701704981), Mordinyi R. (AUID: 19933869600), Moser T. (AUID: 25723604600)",,Automated derivation of configurations for the integration of software(+) engineering environments,2010,"1st International Workshop on Automated Configuration and Tailoring of Applications, ACoTA 2010",,,,,,,2,,,"<Christian Doppler Laboratory, Software Engineering Integration for Flexible Automation Systems, Vienna University of Technology>",,"Today's systems integration technologies enable the integration of (software+) engineering environments to support engineering processes across domain and tool boundaries. These engineering processes heavily rely on manual configuration of integration frameworks, resulting in costly, time-consuming, and error-prone human work. In this paper, we introduce an extended model-driven approach for the automated derivation of integration technology configurations for supporting engineering processes. This allows both an efficient and effective derivation of initial configurations, as well as easy adaptations of existing configurations in case of changed engineering processes. Based on a standard software engineering process, we show the feasibility of the proposed approach and discuss the advantages and limitations for software(+) engineering.","Automated configuration, Engineering domains, Model-driven approach, Systems integration",,,,,,,,"<None, {eid: 38349130091}>, <None, {eid: 1642298252}>, <Ontology-supported quality assurance for component-based systems configuration, {eid: 57049105868}>, <A model-driven architecture approach using explicit stakeholder quality requirement models for building dependable information systems, {eid: 47649118460}>, <A platform for service-oriented integration of software engineering environments, {eid: 72949087919}>, <Integration of heterogeneous engineering environments for the automation systems lifecycle, {eid: 71049115134}>, <None, {eid: 22944474960}>, <Introduction to the special issue on semantic integration, {eid: 85013588445}>, <None, {eid: 38549173069}>, <Why your data wont mix, {eid: 84985927584}>, <None, {eid: 84871261540}>, <None, {eid: 10044221068}>, <None, {eid: 71049147647}>, <None, {eid: 71049152987}>, <None, {eid: 18744398825}>, <Foundations for a model-driven integration of business services in a safety-critical application domain, {eid: 74549151149}>, <Making expert knowledge explicit to facilitate tool support for integrating complex information systems in the atm domain, {eid: 70349731575}>, <Semantic service matchmaking in the atm domain considering infrastructure capability constraints, {eid: 77958489243}>, <SAMOA-A semi-automated ontology alignment method for systems integration in safety-critical environments, {eid: 70349740886}>, <Semantic integration, {eid: 17244362536}>, <None, {eid: 72849113175}>, <Streamlining product lifecycle processes: A survey of product lifecycle management implementations, directions, and challenges, {eid: 27844583815}>",,,,,,2010-09-20,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-84871277070
7,,"Günalp O. (AUID: 55421095800), Gürgen L. (AUID: 14632037200), Lestideau V. (AUID: 13611299300), Lalanda P. (AUID: 22734050600)",,Autonomic pervasive applications driven by abstract specifications,2012,"1st International Workshop on Self-Aware Internet of Things, Self-IoT'12",,,,,,,2,10.1145/2378023.2378028,https://www.doi.org/10.1145/2378023.2378028,"<CEA, LETI, Minatec Campus>, <Grenoble University>",,"Pervasive application architectures present stringent requirements that make their development especially hard. In particular, they need to be flexible in order to cope with dynamism in different forms (e.g. service and data providers and consumers). The current trend to build applications out of remote services makes the availability of constituent application components inherently dynamic. Developers can no longer assume that applications are static after development or at run time. Unfortunately, developing applications that are able to cope with dynamism is very complex. Existing development approaches do not provide explicit support for managing dynamism. In this paper we describe Rondo, a tool suite for designing pervasive applications. More specifically, we present our propositions in pervasive application specification, which borrows concepts from service-oriented component assembly, model-driven engineering (MDE) and continuous deployment, resulting in a more flexible approach than traditional application definitions. Then the capabilities of our application model are demonstrated with an example application scenario designed using our approach. Copyright 2012 ACM.","Autonomic computing, Internet of things, Pervasive computing, Service-oriented computing",,,,,,,,"<A survey on context-aware systems, {eid: 34548725499}>, <Towards an automatic integration of heterogeneous services and devices, {eid: 79952392072}>, <On the use of models during software execution, {eid: 77949867601}>, <A tool suite to prototype pervasive computing applications, {eid: 77953990818}>, <Applying OMG D&C specification and eca rules for autonomous distributed component- based systems, {eid: 38149010361}>, <IPojo: An extensible service-oriented component framework, {eid: 35248852965}>, <Opportunistic computing experience with the SAM platform, {eid: 77954614217}>, <A perspective on the future of middleware-based software engineering, {eid: 34748852148}>, <The vision of autonomic computing, {eid: 0037253062}>, <None, {eid: 84867694832}>, <Service-oriented computing: A research roadmap, {eid: 79952905352}>, <MUSIC: Middleware support for self-adaptation in ubiquitous and service- oriented environments, {eid: 70350023579}>, <Self-adaptive software: Landscape and research challenges, {eid: 70349742463}>, <Pervasive computing: Vision and challenges, {eid: 0035428427}>, <A taxonomy of variability realization techniques: Research articles, {eid: 21644473421}>, <Toward megamodels at runtime, {eid: 79957668356}>",,,,,,2012-09-17,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-84867731898
8,,"Hähnle R. (AUID: 6701714849), Steffen B. (AUID: 55788171500)",,Constraint-based behavioral consistency of evolving software systems,2016,"International Dagstuhl Seminar 16172 Machine Learning for Dynamic Software Analysis: Potentials and Limits, 2016",,,,,,,1,10.1007/978-3-319-96562-8_8,https://www.doi.org/10.1007/978-3-319-96562-8_8,"<Department of Computer Science, Technische Universität Darmstadt>, <Department of Computer Science, Technische Universität Dortmund>",,"© Springer International Publishing AG, part of Springer Nature 2018.Any complex software system exhibits a tension between the technical perspective required for its realization and the user-level perspective. We term this the “how-what gap”, represented by the questions “how is a system implemented” vs. “what is its functionality/usage”. The normative, anticipated behavior of a software system as envisaged during its development and the de facto, observed behavior emerging after its continued operation tends to drift apart, resulting in behavioral inconsistency. We discuss how behavioral consistency in software systems can be captured in technical and formal terms, we sketch a possible tool chain that could support it, and we describe some of the research challenges that must be solved. Our main idea is to combine software analysis approaches represented by various forms of static analysis and formal verification with runtime verification, monitoring, and automata learning in order to optimally leverage the de facto observed behaviour of the deployed systems.",,,,,,,,,"<Automata learning through counterexample guided abstraction refinement, {eid: 84866000299}>, <Generating models of infinite-state communication protocols using regular inference with abstraction, {eid: 84910634644}>, <None, {eid: 0003709343}>, <Deductive Software Verification-The KeY Book: From Theory to Practice, {eid: 85028960972}>, <Verifying data-and control-oriented properties combining static and runtime verification: Theory and tools, {eid: 85017166327}>, <None, {eid: 85051117529}>, <SACO: Static analyzer for concurrent objects, {eid: 84900528471}>, <A formal verification framework for static analysis—as well as its instantiation to the resource analyzer COSTA and formal verification tool KeY, {eid: 84988446281}>, <Formal modeling of resource management for cloud architectures: An industrial case study using real-time ABS, {eid: 84920252893}>, <SYCO: A systematic testing tool for concurrent objects, {eid: 84966472218}>, <Learning regular sets from queries and counterexamples, {eid: 0023453626}>, <None, {eid: 85051144593}>, <Never-stop learning: Continuous validation of learned models for evolving systems through monitoring, {eid: 84903886826}>, <Analysis of executable software models, {eid: 84902819627}>, <Learning extended finite state machines, {eid: 84905973988}>, <Extending automata learning to extended finite state machine, {eid: 85051143763}>, <StaRVOOrS: A tool for combined static and runtime verification of Java, {eid: 84950316422}>, <The 2012 SMT competition, {eid: 84969357578}>, <OpenJDK’s Java.Utils.collection.sort() is broken: The good, the bad and the worst case, {eid: 84950975371}>, <KeY-ABS: A deductive verification tool for the concurrent modelling language ABS, {eid: 84949309016}>, <Exploit generation for information flow leaks in object-oriented programs, {eid: 84942636308}>, <Generating unit tests from formal proofs, {eid: 38049081121}>, <A multiple case study on risk-based testing in industry, {eid: 84906951272}>, <A framework for deadlock detection in core ABS, {eid: 84922366074}>, <None, {eid: 0003724351}>, <Model generation by moderated regular extrapolation, {eid: 84958766854}>, <The abstract behavioral specification language: A tutorial introduction, {eid: 84883436097}>, <Uniform modeling of railway operations, {eid: 85013339605}>, <Symbolic execution debugger (SED), {eid: 84909637282}>, <None, {eid: 85051114083}>, <Inferring canonical register automata, {eid: 84856199447}>, <From ZULU to RERS, {eid: 78650283905}>, <Automata learning with automated alphabet abstraction refinement, {eid: 79251534375}>, <None, {eid: 84977544384}>, <Inferring automata with state-local alphabet abstractions, {eid: 84883421838}>, <Learning register automata: From languages to program structures, {eid: 84903881770}>, <The TTT algorithm: A redundancy-free approach to active automata learning, {eid: 84921627713}>, <The open-source LearnLib, {eid: 84951090020}>, <An abstract framework for counterexample analysis in active automata learning, {eid: 84950324277}>, <What is DevOps? A systematic mapping study on definitions and practices, {eid: 85019409567}>, <Program transformation based on symbolic execution and deduction, {eid: 84885910274}>, <ABS: A core language for abstract behavioral specification, {eid: 84255187324}>, <Learning of automata models extended with data, {eid: 79959235836}>, <None, {eid: 84953402219}>, <Symbolic computation and automated reasoning for program analysis, {eid: 84977530936}>, <Business process modelling in the jABC: The one-thing-approach, {eid: 84898095232}>, <Service-orientation: Conquering complexity with XMDD, {eid: 84955352764}>, <None, {eid: 85051142483}>, <Next generation LearnLib, {eid: 79953206304}>, <Risk-based testing via active continuous quality control, {eid: 84906949366}>, <Towards a DevOps approach for software quality engineering, {eid: 84929084415}>, <Sequential, parallel, and quantified updates of first-order structures, {eid: 33845220119}>, <None, {eid: 85025133176}>, <Unifying models, {eid: 84949683005}>, <Incremental formalization: A key to industrial success, {eid: 33744962473}>, <Model-driven development with the jABC, {eid: 38049113286}>, <Quality engineering: Leveraging heterogeneous information, {eid: 79251567068}>, <The CADE-25 automated theorem proving system competition: CASC-25, {eid: 84969834709}>, <Generating specifications for recursive methods by abstracting program states, {eid: 84951203985}>, <Active continuous quality control, {eid: 84880516456}>, <The ABS tool suite: Modelling, executing and analysing distributed adaptable object-oriented systems, {eid: 84866277516}>",,,Springer Verlag,,,2016-04-24,,,,,,,eng,,Book Series,,,,2-s2.0-85051119701
9,,"Mendoza C. (AUID: 57215292506), Garces K. (AUID: 35113054600), Casallas R. (AUID: 15064114500), Bocanegra J. (AUID: 41661082200)",,Detecting architectural issues during the continuous integration pipeline,2019,"22nd ACM/IEEE International Conference on Model Driven Engineering Languages and Systems Companion, MODELS-C 2019",,,,,,,2,10.1109/MODELS-C.2019.00090,https://www.doi.org/10.1109/MODELS-C.2019.00090,"<Department of Systems and Computing Engineering, School of Engineering, Universidad de Los Andes>",,"© 2019 IEEE.The use of a software reference architecture limits possible deviations and errors in the implementation of software projects, as the code must follow predefined rules that developers must respect to guarantee quality. However, when introducing new code to projects these rules can be violated. As a result, architectural erosion, bad smells, or even bugs that can be difficult to find are introduced to the projects. This paper proposes an approach for reviewing compliance to predefined rules that map architectural decisions to code. During the continuous integration process, the automatic analysis raises an issue for each rule violation. Developers can analyze and correct issues, and trace/visualize improvements, or lack thereof, through time. We present a validation experiment carried out in the context of a Software Development course, and we show how the approach helps developers to write better code.","Architectural rules, Continuous integration, Issue identification, Issue visualization, Rule violation",,,,,,,,"<Architectural bad smells in software product lines, {eid: 84904549333, doi: 10.1145/2578128.2578237}>, <None, {eid: 84889956825}>, <Software architecture in practice, {eid: 0004025223, doi: 10.1024/0301-1526.32.1.54}>, <An architectural smells detection tool for c and c++ projects, {eid: 85057141088}>, <Teaching clean code, {eid: 85044541080}>, <None, {eid: 0004061016}>, <A method for detecting bad smells and ITS application to software engineering education, {eid: 84918555406, doi: 10.1109/IIAI-AAI.2014.139}>, <Software architecture as A set of architectural design decisions, {eid: 33947154413}>, <Spotting the phenomenon of bad smells in MobileMedia product line architecture, {eid: 84908611568, doi: 10.1109/IC3.2014.6897200}>, <A comparison of static architecture compliance checking approaches, {eid: 34547169524}>, <Benefits and drawbacks of reference architectures, {eid: 84879860179, doi: 10.1007/978-3-642-39031-926}>, <Restructure101 for Java, {eid: 85080327241}>, <Software architecture: Foundations, theory, and practice, {eid: 77954720414, doi: 10.1145/1810295.1810435}>, <None, {eid: 33751002702}>, <Code smell analyzer: A tool to teaching support of refactoring techniques source code, {eid: 84963951626, doi: 10.1109/TLA.2016.7437235}>, <Recommending refactorings to reverse software architecture erosion, {eid: 84860503189}>, <How to improve code quality by measurement and refactoring, {eid: 85013761756, doi: 10.1109/QUATIC.2016.034}>, <Characterization and automatic detection of bad smells MVC, {eid: 85049189336, doi: 10.17013/risti.26.54-67}>, <Towards detecting MVC architectural smells, {eid: 85032694896, doi: 10.1007/978-3-319-69341-523}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2019-09-15,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85075921993
10,,"Munk P. (AUID: 57188765553), Schweizer M. (AUID: 57203943448)",,DevOps and Safety? SafeOps! Towards Ensuring Safety in Feature-Driven Development with Frequent Releases,2022,"Workshops on DECSoS, DepDevOps, SASSUR, SENSEI, USDAI, and WAISE, held in conjunction with the 41st International Conference on Computer Safety, Reliability, and Security, SAFECOMP 2022",,,,,,,0,10.1007/978-3-031-14862-0_11,https://www.doi.org/10.1007/978-3-031-14862-0_11,<Robert Bosch GmbH>,,"© 2022, The Author(s), under exclusive license to Springer Nature Switzerland AG.The increasing importance of software and rising level of connectivity of safety-critical products such as vehicles enable continuously improving and adding the functionality. DevOps development principles support such kind of continuous deployment. However, safety-critical products shall fulfill safety standards. In addition, it is impossible to show that a new or updated functionality is safe without considering the entire system. We introduce the SafeOps approach that leverages the DevOps principles automation, feature-driven development, and monitoring during operations to fulfill the requirements of the ISO 26262 when iteratively extending and improving safety-critical products. We present concepts and existing approaches to increase the level of automation of safety engineering tasks like safety analysis and generation of safety artifacts and we show how the management of these artifacts can be supported. Furthermore, we outline future research questions and propose a first concept to obtain quick and systematic feedback of the quality of the safety concept from the deployed products, enabling to enter the DevOps cycle from a safety point of view.","Agile, CD, Dependability, FMEA, FTA, MBSA, MBSE",,,,,,,,"<A structured and model-based hazard analysis and risk assessment method for automotive systems–a disruptive study, {eid: 84992052014}>, <None, {eid: 85139011079}>, <Software trace-ability: Trends and future directions, {eid: 84908645050}>, <SafeOps: A concept of continuous safety, {eid: 85097175002}>, <Realization of a model-based DevOps process for industrial safety critical cyber physical systems, {eid: 85112350140}>, <Runtime verification monitoring for automotive embedded systems using the ISO 26262 Functional Safety Standard as a guide for the definition of the monitored properties, {eid: 84910654721}>, <None, {eid: 85061801235}>, <What is DevOps? A systematic mapping study on definitions and practices, {eid: 85101950847}>, <A proposal for model-based safety analysis, {eid: 33746265011}>, <A new component concept for fault trees, {eid: 24344487791}>, <Advances in component fault trees, {eid: 85056848167}>, <None, {eid: 80052110935}>, <Model-based safety assessment with SysML and component fault trees: Application and lessons learned, {eid: 85080047812}>, <None, {eid: 85139045442}>, <None, {eid: 0037680682}>, <Analysis and synthesis of the behaviour of complex programmable electronic systems in conditions of failure, {eid: 0035283779}>, <None, {eid: 84955687505}>, <A model-driven approach for dependent failure analysis in consideration of multicore processors using modified EAST-ADL, {eid: 85018375157}>, <FASTEN: An extensible platform to experiment with rigorous modeling of safety-critical systems, {eid: 85122621736}>, <None, {eid: 85139053380}>, <None, {eid: 85139041783}>, <Keeping continuous deliveries safe, {eid: 85026752449}>, <Towards continuous safety assessment in context of DevOps, {eid: 85115199750}>",,,Springer Science and Business Media Deutschland GmbH,,,2022-09-06,,,,,,,eng,,Book Series,,,,2-s2.0-85139059524
11,,"Colantoni A. (AUID: 57220071865), Berardinelli L. (AUID: 23466256500), Wimmer M. (AUID: 14030698000)",,DevOpsML: Towards modeling DevOps processes and platforms,2020,"23rd ACM/IEEE International Conference on Model Driven Engineering Languages and Systems, MODELS-C 2020",,,,,,,16,10.1145/3417990.3420203,https://www.doi.org/10.1145/3417990.3420203,"<Institute of Business Informatics - Software Engineering, Johannes Kepler University>",,"© 2020 ACM.DevOps and Model Driven Engineering (MDE) provide differently skilled IT stakeholders with methodologies and tools for organizing and automating continuous software engineering activities-from development to operations, and using models as key engineering artifacts, respectively. Both DevOps and MDE aim at shortening the development life-cycle, dealing with complexity, and improve software process and product quality. The integration of DevOps and MDE principles and practices in low-code engineering platforms (LCEP) are gaining attention by the research community. However, at the same time, new requirements are upcoming for DevOps and MDE as LCEPs are often used by non-technical users, to deliver fully functional software. This is in particular challenging for current DevOps processes, which are mostly considered on the technological level, and thus, excluding most of the current LCEP users. The systematic use of models and modeling to lowering the learning curve of DevOps processes and platforms seems beneficial to make them also accessible for non-technical users. In this paper, we introduce DevOpsML, a conceptual framework for modeling and combining DevOps processes and platforms. Tools along with their interfaces and capabilities are the building blocks of DevOps platform configurations, which can be mapped to software engineering processes of arbitrary complexity. We show our initial endeavors on DevOpsML and present a research roadmap how to employ the resulting DevOpsML framework for different use cases.","DevOps, Model-driven engineering, Modeling languages",,,,,,,,"<The multi process challenge, {eid: 85075927615}>, <None, {eid: 85096751792}>, <Modeling devops deployment choices using process architecture design dimensions, {eid: 84952662031}>, <Model driven engineering: An emerging technical space, {eid: 33750045718}>, <None, {eid: 85096790510}>, <None, {eid: 85096779854}>, <Towards modeling framework for devops: Requirements derived from industry use case, {eid: 85079101956}>, <None, {eid: 84878326137}>, <Process-centered model engineering, {eid: 33645491644}>, <Contents for a model-based software engineering body of knowledge, {eid: 85069478287}>, <None, {eid: 85075598452}>, <Blended modelling-what, why and how, {eid: 85075926513}>, <Slebok: The software language engineering body of knowledge (dagstuhl seminar 17342), {eid: 85055482539}>, <Towards a model-based devops for cyber-physical systems, {eid: 85079099244}>, <Aiops: Real-world challenges and research innovations, {eid: 85071852727}>, <The tao of modeling spaces, {eid: 33846101237}>, <None, {eid: 84889269573}>, <None, {eid: 85096811836}>, <None, {eid: 85096743853}>, <Stepwise adoption of continuous delivery in model-driven engineering, {eid: 85061101819}>, <Characterizing and evaluating the quality of software process modeling language: Comparison of ten representative model-based languages, {eid: 85057788064}>, <None, {eid: 84969784175}>, <What is devops? A systematic mapping study on definitions and practices, {eid: 84991510816}>, <The Epsilon book, {eid: 84910613230}>, <A survey of devops concepts and challenges, {eid: 85075608026}>, <Model transformation intents and their properties, {eid: 84904275821}>, <Towards liquid models: An evolutionary modeling approach, {eid: 85010424048}>, <DevSecOps: A multivocal literature review, {eid: 85029742916}>, <None, {eid: 85096748837}>, <None, {eid: 85068600733}>, <Devops as a service: Pushing the boundaries of microservice adoption, {eid: 85048686688}>, <Foundations for the study of software architecture, {eid: 0001956194}>, <Supporting the understanding and comparison of low-code development platforms, {eid: 85096555654}>, <Three-view-concept for modeling process or manufacturing plants with AutomationML, {eid: 77949895994}>, <A megamodel for Software Process Line modeling and evolution, {eid: 84961678065}>, <None, {eid: 85069741151}>, <None, {eid: 34547319975}>, <None, {eid: 85051214413}>, <The essential deployment metamodel: A systematic review of deployment automation technologies, {eid: 85071420580}>",,,"Association for Computing Machinery, Inc",,,2020-10-16,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85096806448
12,,"Casale G. (AUID: 21742204200), Pérez J. (AUID: 14523278100), Ardagna D. (AUID: 6508040906), Di Nitto E. (AUID: 6602196755), Rossi M. (AUID: 7403708768), Artac M. (AUID: 57060212700), Vladušič D. (AUID: 9735302400), Barbier F. (AUID: 57188929787), Henry A. (AUID: 36813396200), Joubert C. (AUID: 57188927971), Merseguer J. (AUID: 6602569693), Iuhasz G. (AUID: 55636460100), Munteanu V. (AUID: 54584037900), Petcu D. (AUID: 6603604868), Sheridan C. (AUID: 37014892600), Spais I. (AUID: 8453001800)",,DICE: Quality-driven development of data-intensive cloud applications,2015,"7th International Workshop on Modeling in Software Engineering, MiSE 2015",,,,,,,54,10.1109/MiSE.2015.21,https://www.doi.org/10.1109/MiSE.2015.21,"<Imperial College London>, <Politecnico di Milano>, <XLAB>, <Netfective>, <Prodevelop>, <Universidad de Zaragoza>, <Institute E-Austria Timisoara>, <Flexiant Technologies>, <Athens Technology Center SA>",,"© 2015 IEEE.Model-driven engineering (MDE) often features quality assurance (QA) techniques to help developers creating software that meets reliability, efficiency, and safety requirements. In this paper, we consider the question of how quality-aware MDE should support data-intensive software systems. This is a difficult challenge, since existing models and QA techniques largely ignore properties of data such as volumes, velocities, or data location. Furthermore, QA requires the ability to characterize the behavior of technologies such as Hadoop/MapReduce, NoSQL, and stream-based processing, which are poorly understood from a modeling standpoint. To foster a community response to these challenges, we present the research agenda of DICE, a quality-aware MDE methodology for data-intensive cloud applications. DICE aims at developing a quality engineering tool chain offering simulation, verification, and architectural optimization for Big Data applications. We overview some key challenges involved in developing these tools and the underpinning models.","Big data, Model-driven engineering, Quality assurance",,,,,,,,"<MODAClouds: A modeldriven approach for the design and execution of applications on multiple Clouds, {eid: 84864997201}>, <Dependability modeling and analysis of software systems specified with UML, {eid: 84871237155}>, <Devops A software revolution in the making?, {eid: 84940375618}>, <A framework for utility-based service oriented design in SASSY, {eid: 77950509895}>, <Automatically improve software architecture models for performance, reliability, and cost using evolutionary algorithms, {eid: 77950538861}>, <Space4Cloud: A tool for system performance and cost evaluation of cloud systems, {eid: 84879756696}>, <Assessing SLA compliance from Palladio component models, {eid: 84904556663}>, <Estimating computational requirements in multi-threaded applications, {eid: 84925135842}>, <A unified modeling framework for distributed resource allocation of general fork and join processing networks, {eid: 77954909384}>, <None, {eid: 84866896733}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2015-05-16,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-84964265469
13,,"Ferry N. (AUID: 35291975700), Solberg A. (AUID: 14827375100), Song H. (AUID: 57195274282), Lavirotte S. (AUID: 13605275200), Tigli J.Y. (AUID: 6602916792), Winter T. (AUID: 57205679964), Muntés-Mulero V. (AUID: 8905990700), Metzger A. (AUID: 15119826600), Rios Velasco E. (AUID: 14050840000), Castelruiz Aguirre A. (AUID: 8653242100)",,"Enact: Development, operation, and quality assurance of trustworthy smart iot systems",2018,"1st International Workshop on Software Engineering Aspects of Continuous Development and New Paradigms of Software Production and Deployment, DEVOPS 2018",,,,,,,20,10.1007/978-3-030-06019-0_9,https://www.doi.org/10.1007/978-3-030-06019-0_9,"<SINTEF Digital>, <Université Côte d’Azur, CNRS, I3S>, <EVIDIAN>, <Beawre>, <paluno (The Ruhr Institute for Software Technology), University of Duisburg-Essen>, <Fundación Tecnalia Research & Innovation>",,"© 2019, Springer Nature Switzerland AG.To unleash the full potential of IoT and flourishing innovations in application domains such as eHealth or smart city, it is critical to facilitate the creation and operation of trustworthy Smart IoT Systems (SIS). Since SIS typically operate in a changing and often unpredictable environment, the ability of these systems to continuously evolve and adapt to their new environment is decisive to ensure and increase their trustworthiness, quality and user experience. The DevOps movement advocates a set of software engineering best practices and tools, to ensure Quality of Service whilst continuously evolving complex systems. However, there is no complete DevOps support for trustworthy SIS today. In this paper we present a research roadmap to enable DevOps in such systems and introduce the ENACT DevOps concepts and Framework.","DevOps, Internet of things, Trustworthiness",,,,,,,,"<None, {eid: 85061092817}>, <None, {eid: 84870773703}>, <Recommendations for ICT Work Programme 2018+, {eid: 85061091804}>, <None, {eid: 84858197925}>, <A roadmap to the programmable world: Software challenges in the IoT era, {eid: 85010433150}>, <A generative middleware for heterogeneous and distributed services, {eid: 84981516069}>, <CloudMF: Applying MDE to tame the complexity of managing multi-cloud applications, {eid: 84946685259}>, <The koala component model for consumer electronics software, {eid: 0033901302}>, <Think: A software framework for component-based operating system kernels, {eid: 85084161456}>, <A dynamic component model for cyber physical systems, {eid: 84864044924}>, <Software engineering for self-adaptive systems: A second research roadmap, {eid: 84879852118}>, <Taming uncertainty in self-adaptive software, {eid: 80053212005}>, <AutoRELAX: Automatically RELAXing a goal model to address uncertainty, {eid: 84907594075}>, <A learning-based framework for engineering feature-oriented self-adaptive software systems, {eid: 84887877241}>, <Learning and evolution in dynamic software product lines, {eid: 84974574995}>, <Addressing highly dynamic changes in service-oriented systems: Towards agile evolution and adaptation, {eid: 84944675741}>, <None, {eid: 84929547742}>, <None, {eid: 84979541826}>, <None, {eid: 84961385029}>, <Fast root cause analysis on distributed systems by composing precompiled Bayesian networks, {eid: 85013367886}>, <Internet of Things Top Ten, {eid: 85061076747}>, <Learning internet-of-things security “hands-on, {eid: 84962010405}>, <Classification of security risks in the IoT environment, {eid: 84987624024}>, <Modelling and simulation challenges in internet of things, {eid: 85017336051}>, <Simulation of the internet of things, {eid: 84991666309}>, <Multi-level simulation of internet of things on smart territories, {eid: 85005975921}>, <Multitier diversification in web-based software applications, {eid: 84922900995}>, <Dismantling megamos crypto: Wirelessly lock-picking a vehicle immobilizer, {eid: 84979836592}>, <DIVER-SIFY: Ecology-inspired software evolution for diversity emergence, {eid: 84898477308}>",,,Springer Verlag,,,2018-03-05,,,,,,,eng,,Book Series,,,,2-s2.0-85061085691
14,,"Lourenço H. (AUID: 57094816800), Tavares J. (AUID: 57220071537), Eugénio R. (AUID: 57745495100), Lourenço M. (AUID: 57220068344), Simões T. (AUID: 57517471600)",,LUV is not the answer: Continuous delivery of a model driven development platform,2020,"23rd ACM/IEEE International Conference on Model Driven Engineering Languages and Systems, MODELS-C 2020",,,,,,,3,10.1145/3417990.3419502,https://www.doi.org/10.1145/3417990.3419502,<OutSystems>,,"© 2020 ACM.The OutSystems Platform is a visual model-driven development and delivery platform that allows developers to create enterprise-grade cross platform web and mobile applications. The platform consists of several inter-dependent components, most notably Service Studio, the Platform Server, and LifeTime. Service Studio is an integrated development environment used to create applications that are then compiled by the Platform Server. LifeTime is used to stage applications between different environments (e.g., development, testing, production). Our meta-model is versioned using a version number that we call Last Upgrade Version (LUV). Service Studio, the Platform Server, and the models they create/process are associated with a particular LUV. As a general rule, a platform component is only able to process models with the same LUV as the component itself. This approach is not very flexible: a change to the meta-model requires releasing a new set of platform components that our customers then need to install. Although there's low resistance to installing new versions of Service Studio, the same is not true for the Platform Server. Thus, for all practical purposes LUV changes are tied to releases of major versions of the OutSystems Platform. In this paper we share the techniques that allowed us to transition to a Continuous Delivery process in which our meta-model can evolve freely with no impact on our installed base.","Continuous delivery, Meta-model evolution, Model driven development, Model evolution",,,,,,,,"<None, {eid: 85096742698}>, <Approaches to co-evolution of metamodels and models: A survey, {eid: 85021770842}>, <None, {eid: 84956534232}>, <Metamodel-specific coupled evolution based ondynamically typed graph transformations, {eid: 84884323976}>, <Truechange (tm) under the hood: How we check the consistency of large models (almost) instantly, {eid: 85075948222}>, <Graph transformation concepts for meta-model evolution guaranteeing permanent type conformance throughout model migration, {eid: 84867880463}>, <None, {eid: 85080499649}>, <None, {eid: 85096618284}>",,,"Association for Computing Machinery, Inc",,,2020-10-16,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85096761857
15,,"Combemale B. (AUID: 24343217800), Jezequel J.M. (AUID: 35618077100), Perez Q. (AUID: 57210745319), Vojtisek D. (AUID: 56507460600), Jansen N. (AUID: 57204976543), Michael J. (AUID: 55341586200), Rademacher F. (AUID: 57015087900), Rumpe B. (AUID: 55861872700), Wortmann A. (AUID: 56581745100), Zhang J. (AUID: 58813182600)",,Model-Based DevOps: Foundations and Challenges,2023,"2023 ACM/IEEE International Conference on Model Driven Engineering Languages and Systems, MODELS-C 2023",,,,,,,0,10.1109/MODELS-C59198.2023.00076,https://www.doi.org/10.1109/MODELS-C59198.2023.00076,"<University of Rennes 1>, <Rwth Aachen University, Software Engineering>, <Institute for Control Engineering of Machine Tools and Manufacturing Units (ISW), University of Stuttgart>",,"© 2023 IEEE.Time-to-market and continuous improvement are key success indicators to deliver for Industry 4.0 Cyber-Physical Systems (CPSs). There is thus a growing interest in adapting DevOps approaches coming from software systems to CPSs. However, CPSs are made not only of software but also of physical parts that need to be monitored at runtime. In this paper, we claim that Model-Driven Engineering can facilitate DevOps for CPSs by automatically connecting a CPS design model to its runtime monitoring, in the form of a digital twin.","DevOps, digital twins, evolution of engineering models, model-based software engineering, models at runtime, self-adaptation",,,,,,,,"<None, {eid: 84943326563}>, <A cyber-physical systems architecture for industry 4.0-based manufacturing systems, {eid: 84921300723}>, <Conceptualizing digital twins, {eid: 85120045327}>, <Industry 4.0, {eid: 84926457128}>, <Digital twins for sustainable software systems, {eid: 85168134336}>, <None, {eid: 85161813629}>, <None, {eid: 85168144723}>, <None, {eid: 85092345471}>, <Environment, economy and society: Fitting them together into sustainable development, {eid: 0036856605}>, <None, {eid: 85023646999}>, <Models@run.time, {eid: 85008066028}>, <Models@run.time to support dynamic adaptation, {eid: 70350345225}>, <Model-driven Digital Twin Construction: Synthesizing the Integration of Cyber-Physical Systems with Their Information Systems, {eid: 85096992990}>, <A survey on engineering approaches for self-adaptive systems, {eid: 84924224388}>, <Toward self-healing infrastructure systems, {eid: 0342845322}>, <Towards a devops approach in cyber physical production systems using digital twins, {eid: 85096529757}>, <Process-Aware Digital Twin Cockpit Synthesis from Event Logs, {eid: 85131671533}>, <Requirements and design patterns for adaptive, autonomous, and context-aware digital twins in industry 4.0 digital factories, {eid: 85152477901}>, <Model-Driven Development of a Digital Twin for Injection Molding, {eid: 85086228557}>, <AML4DT: A model-driven framework for developing and maintaining digital twins with automationml, {eid: 85122957318}>, <CPSAML: A language and code generation framework for digital twin based monitoring of mobile cyber-physical systems, {eid: 85142923460}>, <Towards a Model-Driven Architecture for Interactive Digital Twin Cockpits, {eid: 85097375593}>, <Process Prediction with Digital Twins, {eid: 85121810059}>, <Systematic literature review of the objectives, techniques, kinds, and architectures of models at runtime, {eid: 84956643403}>, <MRUBiS: An exemplar for model-based architectural selfhealing and self-optimization, {eid: 85051484080}>, <Using trace alignments for measuring the similarity between a physical and its digital twin, {eid: 85142936475}>, <TwinOps-DevOps Meets Model-Based Engineering and Digital Twins for the Engineering of CPS, {eid: 85096747019}>, <Reactive Links across Multi-Domain Engineering Models, {eid: 85141855846}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2023-10-01,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85182393081
16,,"Artač M. (AUID: 57060212700), Borovšak T. (AUID: 57203285817), Di Nitto E. (AUID: 6602196755), Guerriero M. (AUID: 57162975400), Tamburri D. (AUID: 35488974800)",,Model-Driven continuous deployment for quality devops,2016,"2nd International Workshop on Quality-Aware DevOps, QUDOS 2016, co-located with the International Symposium on Software Testing and Analysis, ISSTA 2016",,,,,,,32,10.1145/2945408.2945417,https://www.doi.org/10.1145/2945408.2945417,"<XLAB>, <Politecnico di Milano>",,"© 2016 ACM.DevOps entails a series of software engineering strategies and tools that promise to deliver quality and speed at the same time with little or no additional expense. In our work we strived to enable a DevOps way of working, combining Model-Driven Engineering tenets with the challenges of de- livering a model-driven continuous deployment tool that al- lows quick (re-)deployment of cloud applications for the purpose of continuous improvement. This paper illustrates the DICER tool and elaborates on how it can bring about the DevOps promise and enable the quality-awareness.","Continuous deployment, Model-driven engineering, Quality-aware devops",,,,,,,,"<None, {eid: 85055100906}>, <Dice: Quality-driven development of data-intensive cloud applications, {eid: 84964265469}>, <Big data: A survey, {eid: 84898796363}>, <Modern devops: Optimizing software development through effective system interactions, {eid: 84998797474}>, <Cloud mf: Applying MDE to tame the complexity of managing multi-cloud applications, {eid: 84946685259}>, <Towards a model-driven design tool for big data architectures, {eid: 84974539619}>",,,"Association for Computing Machinery, Inc",,,2016-07-21,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85054816400
17,,"Gatto N. (AUID: 57212105778), Kusmenko E. (AUID: 57195075206), Rumpe B. (AUID: 55861872700)",,Modeling deep reinforcement learning based architectures for cyber-physical systems,2019,"22nd ACM/IEEE International Conference on Model Driven Engineering Languages and Systems Companion, MODELS-C 2019",,,,,,,8,10.1109/MODELS-C.2019.00033,https://www.doi.org/10.1109/MODELS-C.2019.00033,"<Department of Software Engineering, RWTH Aachen University>",,"© 2019 IEEE.Reinforcement learning is a sub-field of machine learning where an agent aims to learn a behavior or a policy maximizing a reward function by trial and error. The approach is particularly interesting for the design of autonomous cyber-physical systems such as self-driving cars. In this work we present a generative, domain-specific modeling framework for the design, training and integration of reinforcement learning systems. It consists of a neural network modeling language which is used to design the models to be trained, e.g. actor and critic networks, and a training language used to describe the training procedure and set the corresponding hyperparameters. The underlying component model allows the modeler to embed the trained networks in larger component & connector architectures. We illustrate our framework by the example of a self-driving racing car.","Cyber-physical systems, Domain-specific languages, Machine learning, Reinforcement learning",,,,,,,,"<None, {eid: 85075941065}>, <Bridge view and labview: g programming reference manual, {eid: 33646566908}>, <Modeling and training of neural processing systems, {eid: 85075936455}>, <Modeling architectures of cyber-physical systems, {eid: 85025124378}>, <Highly-optimizing and multi-target compiler for embedded system models: C++ compiler toolchain for the component and connector language embeddedmontiarc, {eid: 85056871758}>, <None, {eid: 0004102479}>, <None, {eid: 85044675243}>, <None, {eid: 84904867557}>, <None, {eid: 84965135289}>, <None, {eid: 0003673017}>, <Deterministic policy gradient algorithms, {eid: 85030997365}>, <TensorFlow: Large-scale machine learning on heterogeneous systems, 2015, {eid: 85010814719}>, <None, {eid: 84979557463}>, <None, {eid: 85050596935}>, <None, {eid: 85075936413}>, <None, {eid: 85057255740}>, <None, {eid: 85073625968}>, <None, {eid: 85075932055}>, <Torcs, the open racing car simulator, {eid: 85046286984}>, <None, {eid: 85057110784}>, <None, {eid: 85057283496}>, <ROS: An open-source robot operating system, {eid: 77957352104}>, <Component-based integration of interconnected vehicle architectures, {eid: 85072280010}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2019-09-15,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85075937600
18,,"Kusmenko E. (AUID: 57195075206), Pavlitskaya S. (AUID: 57212167862), Rumpe B. (AUID: 55861872700), Stuber S. (AUID: 57206668572)",,On the engineering of ai-powered systems,2019,"34th IEEE/ACM International Conference on Automated Software Engineering Workshops, ASEW 2019",,,,,,,7,10.1109/ASEW.2019.00042,https://www.doi.org/10.1109/ASEW.2019.00042,"<Department of Software Engineering, RWTH Aachen University>",,"© 2019 IEEE.More and more tasks become solvable using deep learning technology nowadays. Consequently, the amount of neural network code in software rises continuously. To make the new paradigm more accessible, frameworks, languages, and tools keep emerging. Although, the maturity of these tools is steadily increasing, we still lack appropriate domain specific languages and a high degree of automation when it comes to deep learning for productive systems. In this paper we present a multi-paradigm language family allowing the AI engineer to model and train deep neural networks as well as to integrate them into software architectures containing classical code. Using input and output layers as strictly typed interfaces enables a seamless embedding of neural networks into component-based models. The lifecycle of deep learning components can then be governed by a compiler accordingly, e.g. detecting when (re-)training is necessary or when network weights can be shared between different network instances. We provide a compelling case study, where we train an autonomous vehicle for the TORCS simulator. Furthermore, we discuss how the methodology automates the AI development process if neural networks are changed or added to the system.","Deep learning, Mde, Neural networks",,,,,,,,"<Modeling and training of neural processing systems, {eid: 85075936455}>, <Modeling architectures of cyber-physical systems, {eid: 85025124378}>, <Highly-optimizing and multi-Target compiler for embedded system models: C++ compiler toolchain for the component and connector language embeddedmontiarc, {eid: 85056871758}>, <Simulink user?s guide.Technical report r2019a, {eid: 85080014559}>, <Tensorflow: A system for large-scale machine learning, {eid: 85075670920}>, <Torch7: A matlab-like environment for machine learning, {eid: 84888340666}>, <None, {eid: 85079977198}>, <Collaborative hyperparameter tuning, {eid: 84882279850}>, <None, {eid: 85079981380}>, <Imagenet classification with deep convolutional neural networks, {eid: 84876231242}>, <Convolutional networks and applications in vision, {eid: 77955998889}>, <Deepdriving: Learning affordance for direct perception in autonomous driving, {eid: 84973888858}>, <Torcs, the open racing car simulator, {eid: 85046286984}>, <None, {eid: 85010075270}>, <None, {eid: 85053070397}>, <Pedram mir seyed nazari, {eid: 85079968713}>, <Imagenet classification with deep convolutional neural networks, {eid: 84876231242}>, <Engineering tagging languages for dsls, {eid: 84961634193}>, <Ros: An open-source robot operating system, {eid: 77957352104}>, <Component-based integration of interconnected vehicle architectures, {eid: 85072280010}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2019-11-10,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85079270211
19,,"Elaasar M. (AUID: 8835817100), Rouquette N. (AUID: 6505834104), Wagner D. (AUID: 57213115862), Hamou-Lhadj A. (AUID: 24314702300), Oakes B.J. (AUID: 56289881100), Hamdaqa M. (AUID: 35810456100)",,openCAESAR: Balancing Agility and Rigor in Model-Based Systems Engineering,2023,"2023 ACM/IEEE International Conference on Model Driven Engineering Languages and Systems, MODELS-C 2023",,,,,,,1,10.1109/MODELS-C59198.2023.00051,https://www.doi.org/10.1109/MODELS-C59198.2023.00051,"<California Institute of Technology, Nasa Jet Propulsion Lab>, <Concordia University, Electrical and Computer Engineering>, <Diro, Université de Montréal>, <Polytechnique Montréal, Computer and Software Engineering>",,"© 2023 IEEE.Model-Based System Engineering (MBSE) employs models and formal languages to support development of complex (systems-of-) systems. NASA Jet Propulsion Laboratory (JPL) sees MBSE as a key approach to managing the complexity of system development. However, balancing agility and rigor in MBSE has been reported as a challenging task not yet addressed by modeling tools and frameworks. This is because existing MBSE approaches may enable agility but compromise rigor, or enhance rigor but impede agility. We discuss the challenges of balancing agility and rigor in MBSE across seven systems engineering architectural functions defined by the JPL Integrated Model-Centric Engineering (IMCE) initiative. We demonstrate how openCAESAR, an open-source MBSE methodology and framework created at JPL, can strike a balance between agility and rigor through a case study of the Kepler16b project and discussion of lessons learned from past projects.","Model-Based Systems Engineering, OML, Ontology-based Modeling, openCAESAR, Systems Engineering",,,,,,,,"<Model-based systems engineering: Motivation, current status, and research opportunities, {eid: 85046694426}>, <Value and benefits of model-based systems engineering (MBSE): Evidence from the literature, {eid: 85098450048}>, <State-of-practice survey of model-based systems, {eid: 85052963713}>, <None, {eid: 2342509886}>, <A survey of devops concepts and challenges, {eid: 85075608026}>, <CAESAR model-based approach to harness design, {eid: 85092558185}>, <Ontological Metamodeling and Analysis Using openCAESAR, {eid: 85182396192}>, <Ontology building for cyber-physical systems: Application in the manufacturing domain, {eid: 85085751213}>, <Balancing systems engineering rigor with agile software development flexibility, {eid: 85171892288}>, <Investigating relationships and semantic sets amongst system lifecycle properties (ilities), {eid: 84938572797}>, <Agility in the future of systems engineering (FuSE)-a roadmap of foundational concepts, {eid: 85163738551}>, <Models as enablers of agility in complex systems engineering, {eid: 85130817821}>, <Systematic literature review of MBSE tool-chains, {eid: 85127743743}>, <A Survey on MBSE Adoption Challenges, {eid: 85106386252}>, <Model-based systems engineering: An emerging approach for modern systems, {eid: 84655170010}>, <None, {eid: 85182394753}>, <Towards agile model-based systems engineering, {eid: 85041433552}>, <DSMCompare: Domain-specific model differencing for graphical domainspecific languages, {eid: 85122347279}>, <Semantically-rigorous systems engineering modeling using SysML and OWL, {eid: 84906870818}>, <Application of agile model-based systems engineering in aircraft conceptual design, {eid: 85060448994}>, <10.5. 1 an MBSE case study and research challenges, {eid: 84939228470}>, <Applying model based systems engineering (MBSE) to a standard cubesat, {eid: 84861121452}>, <MBSE applications for the MSR SRC Mars Ascent Vehicle, {eid: 85137577843}>, <An MBSE architectural framework for the agile definition of system stakeholders, needs and requirements, {eid: 85124455676}>, <Ontologybased design of space systems, {eid: 84992660381}>, <Towards an open platform for democratized model-based design and engineering of cyber-physical systems, {eid: 85182390527}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2023-10-01,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85182402872
20,,"Barriga A. (AUID: 57207860282), Rutle A. (AUID: 26967894200), Heldal R. (AUID: 6602582740)",,Personalized and automatic model repairing using reinforcement learning,2019,"22nd ACM/IEEE International Conference on Model Driven Engineering Languages and Systems Companion, MODELS-C 2019",,,,,,,17,10.1109/MODELS-C.2019.00030,https://www.doi.org/10.1109/MODELS-C.2019.00030,"<Department of Software Engineering, Western Norway University of Applied Sciences>",,"© 2019 IEEE.When performing modeling activities, the chances of breaking a model increase together with the size of development teams and number of changes in software specifications. Model repair research mostly proposes two different solutions to this issue: fully automatic, non-interactive model repairing tools or support systems where the repairing choice is left to the developer's criteria. In this paper, we propose the use of reinforcement learning algorithms to achieve the repair of broken models allowing both automation and personalization. We validate our proposal by repairing a large set of broken models randomly generated with a mutation tool.","Model repair, Personalization, Reinforcement learning",,,,,,,,"<The state of practice in model-driven engineering, {eid: 84899687758}>, <None, {eid: 85075940490}>, <Automatic model repair using reinforcement learning, {eid: 85063099879}>, <None, {eid: 0004007508}>, <Cognifying modeldriven software engineering, {eid: 85042643413}>, <None, {eid: 84877770961}>, <Online img2uml repository: An online repository for UML, {eid: 84925010640}>, <Mdeforge: An extensible web-based modeling platform, {eid: 84911959056}>, <None, {eid: 34547932110}>, <Reinforcement learning: A survey, {eid: 0029679044}>, <None, {eid: 74549142762}>, <None, {eid: 85075921623}>, <None, {eid: 85075956634}>, <None, {eid: 85075941591}>, <None, {eid: 85075955114}>, <None, {eid: 85075938557}>, <None, {eid: 85075941052}>, <Amor-towards adaptable model versioning, {eid: 79956310521}>, <Wodel: A domainspecific language for model mutation, {eid: 84975841244}>, <Resolving model inconsistencies using automated regression planning, {eid: 84922337776}>, <Rule-based repair of EMF models: An automated interactive approach, {eid: 85025137338}>, <Change-preserving model repair, {eid: 85016408527}>, <An automated and instant discovery of concrete repairs for model inconsistencies, {eid: 85049674679}>, <Searchbased detection of model level changes, {eid: 84988735029}>, <EMF metrics: Specification and calculation of model metrics within the eclipse modeling framework, {eid: 84924957768}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2019-09-15,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85075917035
21,,"Di Rocco J. (AUID: 55877197500), Di Sipio C. (AUID: 57215525221)",,ResyDuo: Combining Data Models and CF-Based Recommender Systems to Develop Arduino Projects,2023,"2023 ACM/IEEE International Conference on Model Driven Engineering Languages and Systems, MODELS-C 2023",,,,,,,0,10.1109/MODELS-C59198.2023.00091,https://www.doi.org/10.1109/MODELS-C59198.2023.00091,<University of lAquila>,,"© 2023 IEEE.While specifying an IoT-based system, software developers have to face a set of challenges, spanning from selecting the hardware components to writing the actual source code. Even though dedicated development environments are in place, a non-expert user might struggle with the over-choice problem in selecting the proper component. By combining MDE and recommender systems, this paper proposes an initial prototype, called ResyDuo, to assist Arduino developers by providing two different artifacts, i.e., hardware components and software libraries. In particular, we make use of a widely adopted collaborative filtering algorithm by collecting relevant information by means of a dedicated data model. ResyDuo can retrieve hardware components by using tags or existing Arduino projects stored on the ProjectHub repository. Then, the system can eventually retrieve corresponding software libraries based on the identified hardware devices. ResyDuo is equipped with a web-based interface that allows users to easily select and configure the under-developing Arduino project. To assess ResyDuo's performances, we run the ten-fold cross-validation by adopting the grid search strategy to optimize the hyperparameters of the CF-based algorithm. The conducted evaluation shows encouraging results even though there is still room for improvement in terms of the examined metrics.","IoT development, Model-Driven Engineering, Recommendation Systems",,,,,,,,"<Internet of Things: Applications and Challenges in Technology and Standardization, {eid: 79959280293}>, <The Internet of Things: A survey, {eid: 77956877124}>, <IoT technologies for embedded computing: A survey, {eid: 84995379866}>, <Iot bugs and development challenges, {eid: 85115711213}>, <None, {eid: 85171336790}>, <A model-based framework for IoT systems in wastewater treatment plants, {eid: 85166905440}>, <Modelbased analysis support for dependable complex systems in CHESS, {eid: 85171322972}>, <None, {eid: 84948114701}>, <None, {eid: 77955202099}>, <Software assistants in software engineering: A systematic mapping study, {eid: 85144071056}>, <None, {eid: 85069151852}>, <Cross-validation, {eid: 79954553074}>, <None, {eid: 85065146640}>, <None, {eid: 85171350885}>, <ThingML: A Language and Code Generation Framework for Heterogeneous Targets, {eid: 85008457888}>, <Modeling iot applications with sysml4iot, {eid: 85020698595}>, <Model-driven engineering for mission-critical iot systems, {eid: 85010302951}>, <Building blocks for IoT testing-a benchmark of IoT apps and a functional testing framework, {eid: 85136201974}>, <Multi-paradigm modelling for cyber-physical systems: A descriptive framework, {eid: 85107508780}>, <Conceptualizing digital twins, {eid: 85120045327}>, <Devopsml: Towards modeling devops processes and platforms, {eid: 85096806448}>, <None, {eid: 34249990939}>, <Recommender systems and linked open data, {eid: 84951007211}>, <User-based collaborative-filtering recommendation algorithms on hadoop, {eid: 77952180804}>, <Item-based collaborative filtering recommendation algorithms, {eid: 85052617391}>, <Crossed wires: Investigating the problems of end-user developers in a physical computing task, {eid: 84995787982}>, <Surprise: A python library for recommender systems, {eid: 85095915907}>, <Performance evaluation of recommender systems, {eid: 85038570002}>, <Nearest neighbor pattern classification, {eid: 84926662675}>, <Grid search in hyperparameter optimization of machine learning models for prediction of HIV/aids test results, {eid: 85114673688}>, <Collaborative filtering recommender systems, {eid: 34249990939}>, <Cosine similarity to determine similarity measure: Study case in online essay assessment, {eid: 84994086881}>, <None, {eid: 85139430410}>, <MUDABlue: An automatic categorization system for open source repositories, {eid: 18944403532}>, <Tag-aware recommender systems based on deep neural networks, {eid: 84963829745}>, <TGCN: Tag Graph Convolutional Network for Tag-Aware Recommendation, {eid: 85095862694}>, <JIT2R: A Joint Framework for Item Tagging and Tag-based Recommendation, {eid: 85090145629}>, <Automated library recommendation, {eid: 84893346645}>, <Diversified thirdparty library prediction for mobile app development, {eid: 85072166366}>, <Crossrec: Supporting software developers by recommending thirdparty libraries, {eid: 85075896516}>, <Req2lib: A semantic neural model for software library recommendation, {eid: 85083549113}>, <Embedding app-library graph for neural third party library recommendation, {eid: 85116207161}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2023-10-01,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85182400005
22,,"Wiecher C. (AUID: 57212110875), Wolff C. (AUID: 54421696300), Japs S. (AUID: 57219564724), Kaiser L. (AUID: 35750063500), Dumitrescu R. (AUID: 35101763000), Greenyer J. (AUID: 22979533400)",,Scenarios in the loop: Integrated requirements analysis and automotive system validation,2020,"23rd ACM/IEEE International Conference on Model Driven Engineering Languages and Systems, MODELS-C 2020",,,,,,,12,10.1145/3417990.3421264,https://www.doi.org/10.1145/3417990.3421264,"<Dortmund University of Applied Sciences and Arts>, <Fraunhofer IEM>, <Leibniz Universität Hannover>",,"© 2020 ACM.The development of safety-relevant systems in the automotive industry requires the definition of high-quality requirements and tests for the coordination and monitoring of development activities in an agile development environment. In this paper we describe a Scenarios in the Loop (SCIL) approach. SCIL combines (1) natural language requirements specification based on Behavior-Driven Development (BDD) with (2) formal and test-driven requirements modeling and analysis, and (3) integrates discipline-specific tools for software and system validation during development. A central element of SCIL is a flexible and executable scenario-based modeling language, the Scenario Modeling Language for Kotlin (SMLK). SMLK allows for an intuitive requirements formalization, and supports engineers to move iteratively, and continuously aided by automated checks, from stakeholder requirements to the validation of the implemented system. We evaluated the approach using a real example from the field of e-mobility.","Automotive systems engineering, BizDevOps, Requirements analysis, System validation",,,,,,,,"<Modellbasiertes Anforderungsmanagement von Systems-of-Systems am Beispiel des vernetzten Fahrzeugs, {eid: 85051268771}>, <None, {eid: 85096776710}>, <{scenariotools} real-time play-out for test sequence validation in an automotive case study, {eid: 84988009390}>, <Soap opera testing, {eid: 34247584681}>, <{LSCs}: Breathing life into message sequence charts, {eid: 0035393979}>, <None, {eid: 85096810277}>, <SMArDT modeling for automotive software testing, {eid: 85055705898}>, <None, {eid: 84944037468}>, <None, {eid: 84867963508}>, <Towards definitions for release engineering and devops, {eid: 84962216125}>, <Usage of agile practices in mechatronics system desing-potentials, challenges and actual surveys, {eid: 85051557873}>, <ScenarioTools-A tool suite for the scenario-based modeling and analysis of reactive systems, {eid: 85027394534}>, <Evaluating a formal scenario-based method for the requirements analysis in automotive software engineering, {eid: 84960399450}>, <Behavioral programming, {eid: 84863756164}>, <Die Zukunft im Griff, Virtualisierte Tests und XiL für automatisiertes Fahren Fahrerassistenzsysteme, {eid: 85096762101}>, <Integrated and iterative systems engineering and software requirements engineering for technical systems, {eid: 84971484567}>, <Model-driven engineering practices in industry: Social, organizational and managerial factors that lead to success or failure, {eid: 84900499307}>, <None, {eid: 85096749880}>, <None, {eid: 0003726721}>, <None, {eid: 85096797445}>, <None, {eid: 85096800583}>, <None, {eid: 85096765476}>, <None, {eid: 85096744727}>, <None, {eid: 79953862404}>, <None, {eid: 85096746928}>, <Use, potential, and showstoppers of models in automotive requirements engineering, {eid: 85047393082}>, <Organisation and communication problems in automotive requirements engineering, {eid: 84994509953}>, <Verifikation und Validierung im Produktentstehungsprozess, {eid: 84978065480}>, <Where is the proof-A review of experiences from applying mde in industry, {eid: 70349858084}>, <None, {eid: 85096763954}>, <Synthesizing tests for combinatorial coverage of modal scenario specifications, {eid: 84961636947}>, <Status of the development of iso/sae 21434, {eid: 85053121537}>, <Twelve systems engineering roles, {eid: 24044504613}>, <None, {eid: 85096788201}>, <Scenario-based requirements engineering, {eid: 84897615313}>, <None, {eid: 85091753206}>, <None, {eid: 85089542039}>, <None, {eid: 85018396952}>, <None, {eid: 85096798351}>, <Feature dependencies in automotive software systems: Extent, awareness, and refactoring, {eid: 85074794408}>, <Test-driven scenario specification of automotive software components, {eid: 85075925849}>",,,"Association for Computing Machinery, Inc",,,2020-10-16,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85096773418
23,,"Garcia J. (AUID: 58083558200), Cabot J. (AUID: 8963493600)",,Stepwise adoption of continuous delivery in model-driven engineering,2018,"1st International Workshop on Software Engineering Aspects of Continuous Development and New Paradigms of Software Production and Deployment, DEVOPS 2018",,,,,,,8,10.1007/978-3-030-06019-0_2,https://www.doi.org/10.1007/978-3-030-06019-0_2,"<IK4-IKERLAN>, <ICREA-UOC>",,"© 2019, Springer Nature Switzerland AG.Continuous Delivery (CD) and, in general, Continuous Software Engineering (CSE) is becoming the norm. Still, current practices and available integration platforms are too code-oriented. They are not well adapted to work with other, non text-based, software artifacts typically produced during early phases of the software engineering life-cycle. This is especially problematic for teams adopting a Model-Driven Engineering (MDE) approach to software development where several (meta)models (and model transformations) are built and executed as part of the development process. Typically, (part of) the code is automatically generated from such models. Therefore, in a complete CD process, changes in a model should trigger changes on the generated code when appropriate. A step further would be to apply CD practices to the development of modeling artefacts themselves. Analogously to “traditional” CD, where the goal is to have the mainline codebase always in a deployable state, the aim would be to have the modeling infrastructure always ready to be used. Those models could be the final product themselves or an intermediate artifact in a complete CSE process as described above. Either way, a tighter integration between CD and MDE would benefit software practitioners by providing them with complete CSE, covering also analysis and design stages of the process.","Continuous delivery, Continuous evolution, Model-driven engineering",,,,,,,,"<None, {eid: 85061088999}>, <Agile software development, {eid: 84862080030}>, <Model-driven continuous deployment for quality DevOps, {eid: 85054816400}>, <None, {eid: 4243422367}>, <None, {eid: 84878326137}>, <None, {eid: 84977560005}>, <None, {eid: 77955162010}>, <Co-evolution of metamodels and models through consistent change propagation, {eid: 84925249904}>, <Automated co-evolution of GMF editor models, {eid: 79952273948}>, <Models@Runtime for continuous design and deployment, {eid: 85028707045}>, <Continuous software engineering: A roadmap and agenda, {eid: 84991441356}>, <Model transformation co-evolution: A semiautomatic approach, {eid: 84872726686}>, <Combining the continuous integration practice and the model-driven engineering approach, {eid: 84981165314}>, <MORSE: A model-aware service environment, {eid: 77949633453}>, <Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation, {eid: 84903601568}>, <EMFStore: A model repository for EMF models, {eid: 77954724460}>, <Merging models with the epsilon merging language (EML), {eid: 33750362774}>, <A framework for composing modular and interoperable model management tasks, {eid: 70350086431}>, <Evolving models in model-driven engineering: State-of-the-art and future challenges, {eid: 84949883493}>, <An infrastructure modelling tool for cloud provisioning, {eid: 85032348388}>, <Presentation of EMF compare utility, {eid: 47749101164}>, <The state of practice in model-driven engineering, {eid: 84899687758}>, <Industrial adoption of model-driven engineering: Are the tools really the problem?, {eid: 84886821083}>",,,Springer Verlag,,,2018-03-05,,,,,,,eng,,Book Series,,,,2-s2.0-85061101819
24,,"Bernard E. (AUID: 57219183437), Ambert F. (AUID: 55580956100), Legeard B. (AUID: 6603012582)",,Supporting efficient test automation using lightweight MBT,2020,"13th IEEE International Conference on Software Testing, Verification and Validation Workshops, ICSTW 2020",,,,,,,1,10.1109/ICSTW50294.2020.00028,https://www.doi.org/10.1109/ICSTW50294.2020.00028,"<Univ. Bourgogne Franche-Comté, Cnrs, FEMTO-ST Institute>",,"© 2020 IEEE.The Agile and DevOps transformation of software development practices enhances the need for increased automation of functional testing, especially for regression testing. This poses challenges both in the effort that needs to be devoted to the creation and maintenance of automated test scripts, and in their relevance (i.e. their alignment with business needs). Test automation is still difficult to implement and maintain and the return on investment comes late while projects tend to be short. In this context, we have experimented a lightweight model-based test automation approach to address both productivity and relevance challenges. It integrates test automation through a simple process and tool-chain experimented on large IT projects.",,,,,,,,,"<An experience report on applying software testing academic results in industry: We need usable automated test generation, {eid: 85035083036}>, <A taxonomy of model-based testing approaches, {eid: 84862325128}>, <End-to-end automatic business process validation, {eid: 85051251425}>, <Design of a tool for generating test cases from bpmn, {eid: 84946687742}>, <Design and implementation of automation testing framework based on keyword driven, {eid: 84906514519}>, <A framework for testing web applications using action word based testing, {eid: 84964515042}>, <Agile testing concepts based on keyword-driven testing for industrial automation systems, {eid: 84872900487}>, <An adapter framework for keyword-driven testing, {eid: 77950625334}>, <Lightweight modelbased testing for enterprise it, {eid: 85050968271}>, <On the evolution of keyword-driven test suites, {eid: 85067954868}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2020-03-23,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85091755014
25,,"Truong H.L. (AUID: 7006826705), Berardinelli L. (AUID: 23466256500)",,Testing uncertainty of cyber-physical systems in IoT cloud infrastructures: Combining model-driven engineering and elastic execution,2017,"1st ACM SIGSOFT International Workshop on Testing Embedded and Cyber-Physical Systems, TECPS 2017",,,,,,,9,10.1145/3107091.3107093,https://www.doi.org/10.1145/3107091.3107093,"<Distributed Systems Group, TU Wien>",,"© 2017 Copyright held by the owner/author(s).Today's cyber-physical systems (CPS) span IoT and cloud-based datacenter infrastructures, which are highly heterogeneous with various types of uncertainty. Thus, testing uncertainties in these CPS is a challenging and multidisciplinary activity. We need several tools for modeling, deployment, control, and analytics to test and evaluate uncertainties for different configurations of the same CPS. In this paper, we explain why using state-of-the art model-driven engineering (MDE) and model-based testing (MBT) tools is not adequate for testing uncertainties of CPS in IoT Cloud infrastructures. We discus how to combine them with techniques for elastic execution to dynamically provision both CPS under test and testing utilities to perform tests in various IoT Cloud infrastructures.","Cloud, Elasticity, IoT, MBT, MDE, Testing, Uncertainty",,,,,,,,"<None, {eid: 85027729341}>, <None, {eid: 85027728327}>, <A DSL-based approach for elasticity testing of cloud systems, {eid: 85015190973}>, <None, {eid: 84904817736}>, <Distributed model-to-model transformation with ATL on MapReduce, {eid: 84962516937}>, <Model-based testing: Where does it stand?, {eid: 84921905086}>, <None, {eid: 84992363346}>, <Towards a model-driven design tool for big data architectures, {eid: 84974539619}>, <SALSA: A framework for dynamic configuration of cloud services, {eid: 84937925214}>, <None, {eid: 85027714200}>, <Model driven development for internet of things application prototyping, {eid: 84937677098}>, <Automatic test case generation from UML models, {eid: 47349099179}>, <Model-based testing IoT communication via active automata learning, {eid: 85018671468}>, <Principles for engineering IoT cloud systems, {eid: 84962060491}>, <Understanding uncertainty in cyber-physical systems: A conceptual model, {eid: 84977479326}>",,,"Association for Computing Machinery, Inc",,,2017-07-13,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85027713666
26,,"Mertens J. (AUID: 57209744557), Denil J. (AUID: 35145566200)",,The Digital Twin as a Common Knowledge Base in DevOps to Support Continuous System Evolution,2021,"40th International Conference on Computer Safety, Reliability and Security, SAFECOMP 2021 held in conjunction with Workshops on DECSoS, MAPSOD, DepDevOps, USDAI and WAISE 2021",,,,,,,4,10.1007/978-3-030-83906-2_12,https://www.doi.org/10.1007/978-3-030-83906-2_12,"<Faculty of Applied Engineering, University of Antwerp>, <Flanders Make @ University of Antwerp>",,"© 2021, Springer Nature Switzerland AG.There is an industry wide push for faster and more feature rich systems, also in the development of Cyber-Physical Systems (CPS). Therefore, the need for applying agile development practices in the model-based design of CPS is becoming more widespread. This is no easy feat, as CPS are inherently complex, and their model-based development is less suited for agile development. Model-based development does suit the concept of digital twin, that is, design models representing a system instance in operation. In this paper we present an approach where the digital twins of system instances serve as a common-knowledge base for the entire agile development cycle of the system when performing system updates. Doing so enables interesting possibilities, such as the identification and detection of system variants, which is beneficial for the verification and validation of the system update. It also brings along challenges, as the executable physics based digital twin is generally computationally expensive. In this paper we introduce this approach by means of a small example of a swiveling pick and place robotic arm. We also elaborate on related work, and open future challenges.","Cyber-physical system, DevOps, Digital twin",,,,,,,,"<Valid (Re-)use of models-of-the-physics in cyber-physical systems using validity frames, {eid: 85068596867}>, <The functional mockup interface for tool independent exchange of simulation models, {eid: 84871289819}>, <None, {eid: 85115114425}>, <None, {eid: 85115177356}>, <Towards agile model-based systems engineering, {eid: 85041433552}>, <None, {eid: 84881132720}>, <Continuous integration for embedded systems using simulation, {eid: 85047541283}>, <None, {eid: 85104801535}>, <None, {eid: 85115131147}>, <None, {eid: 85016450943}>, <Virtual test environment for efficient verification of software updates for variant-rich automotive systems, {eid: 85073159022}>, <The DevOps Handbook: How to Create World-Class Agility, Reliability, and Security in Technology Organizations, {eid: 85056895078}>, <None, {eid: 85115186825}>, <Leveraging digital twin technology in model-based systems engineering, {eid: 85111581098}>, <Digital twins for continuous deployment in model-based systems engineering of cyber-physical systems, {eid: 85102746191}>, <None, {eid: 85115131147}>, <Validity frame concept as effort-cutting technique within the verification and validation of complex cyber-physical systems, {eid: 85096774246}>, <None, {eid: 85144595929}>, <An introduction to multi-paradigm modelling and simulation, {eid: 0012303245}>, <Continuous deployment for dependable systems with continuous assurance cases, {eid: 85080908823}>, <An industrial roadmap for continuous delivery of software for safety-critical systems, {eid: 85108593963}>",,,Springer Science and Business Media Deutschland GmbH,,,2021-09-07,,,,,,,eng,,Book Series,,,,2-s2.0-85115129760
27,,"Mussbacher G. (AUID: 22135401000), Kienzle J. (AUID: 8709922800), Combemale B. (AUID: 24343217800), Abrahão S. (AUID: 8211929700), Bencomo N. (AUID: 17345086800), Burgueño L. (AUID: 55323008900), Engels G. (AUID: 7004530938), Kühn T. (AUID: 56333529900), Mosser S. (AUID: 25654364800), Sahraoui H. (AUID: 57196894039), Weyssow M. (AUID: 57218143928)",,Towards an assessment grid for intelligent modeling assistance,2020,"23rd ACM/IEEE International Conference on Model Driven Engineering Languages and Systems, MODELS-C 2020",,,,,,,9,10.1145/3417990.3421396,https://www.doi.org/10.1145/3417990.3421396,"<McGill University>, <University of Toulouse and Inria>, <Universitat Politècnica de València>, <Aston University>, <Open Uni. of Catalonia>, <CEA List>, <Paderborn University>, <Karlsruher Institut für Technologie>, <Université du Québec À Montreál>, <DIRO, Université de Montreál>",,"© 2020 ACM.The ever-growing complexity of systems, the growing number of stakeholders, and the corresponding continuous emergence of new domain-specific modeling abstractions has led to significantly higher cognitive load on modelers. There is an urgent need to provide modelers with better, more Intelligent Modeling Assistants (IMAs). An important factor to consider is the ability to assess and compare, to learn from existing and inform future IMAs, while potentially combining them. Recently, a conceptual Reference Framework for Intelligent Modeling Assistance (RF-IMA) was proposed. RF-IMA defines the main required components and high-level properties of IMAs. In this paper, we present a detailed, level-wise definition for the properties of RF-IMA to enable a better understanding, comparison, and selection of existing and future IMAs. The proposed levels are a first step towards a comprehensive assessment grid for intelligent modeling assistance. For an initial validation of the proposed levels, we assess the existing landscape of intelligent modeling assistance and three future scenarios of intelligent modeling assistance against these levels.","Artificial intelligence, Assessment levels, Feedback, Integrated development environment, Intelligent modeling assistance, Model-based software engineering",,,,,,,,"<None, {eid: 85096770105}>, <None, {eid: 85096745967}>, <None, {eid: 85096770189}>, <Harmonization and categorization of metrics and criteria for evaluation of recommender systems in healthcare from dual perspectives, {eid: 85074342440}>, <Domore-A recommender system for domain modeling, {eid: 85052025506}>, <Development of a tool for measuring and analyzing computer user satisfaction, {eid: 0020749247}>, <Feature extraction approaches from natural language requirements for reuse in software product lines: A systematic literature review, {eid: 84930795477}>, <Multi-step learning and adaptive search for learning complex model transformations from examples, {eid: 84975316777}>, <The probability of timeliness of a fully connected exchange in a redundant real-time communication system, {eid: 85088584840}>, <Grand challenges in model-driven engineering: An analysis of the state of the research, {eid: 85077634676}>, <Expressing confidence in models and in model transformation elements, {eid: 85056905500}>, <An lstm-based neural network architecture for model transformations, {eid: 85076107429}>, <Belief uncertainty in software models, {eid: 85074883882}>, <TEAN: Timeliness enhanced attention network for session-based recommendation, {eid: 85087275814}>, <A hitchhikers guide to model-driven engineering for data-centric systems, {eid: 85085080142}>, <An UML class recommender system for software design, {eid: 85022041165}>, <Timeliness Measurement Model: A mathematical approach for measuring the timeliness of handheld application usage, {eid: 85018337831}>, <Process model generation from natural language text, {eid: 79960335582}>, <Non-human modelers: Challenges and roadmap for reusable self-explanation, {eid: 85042680029}>, <The next evolution of mde: A seamless integration of machine learning into domain modeling, {eid: 85040582253}>, <Class diagram extraction from textual requirements using natural language processing (nlp) techniques, {eid: 77955200725}>, <Towards model-driven sustainability evaluation, {eid: 85080891648}>, <Recommender system for model driven software development, {eid: 85030768868}>, <Defining quality aspects for conceptual models, {eid: 2442599587}>, <Pattern-based auto-completion of uml modeling activities, {eid: 84908611338}>, <None, {eid: 0004276920}>, <Understanding quality in conceptual modeling, {eid: 0028396177}>, <None, {eid: 84921662598}>, <Expert voice: Opportunities in intelligent modeling assistance, {eid: 85088027792}>, <Humans and automation: Use, misuse, disuse, abuse, {eid: 0031171736}>, <Towards automating the synthesis of chatbots for conversational model query, {eid: 85088020707}>, <Collaborative modeling and group decision making using chatbots in social networks, {eid: 85049777217}>, <How far you can get using machine learning black-boxes, {eid: 79952852833}>, <None, {eid: 84968875300}>, <Towards domain-specific model editors with automatic model completion, {eid: 76349083874}>, <Improving the timeliness of bluetooth low energy in dynamic rf environments, {eid: 85096807803}>, <Ucda: Use case driven development assistant tool for class model generation, {eid: 59849121184}>, <None, {eid: 78649516976}>, <The state of practice in model-driven engineering, {eid: 84899687758}>, <Empirical validation of website timeliness measures, {eid: 34248564908}>",,,"Association for Computing Machinery, Inc",,,2020-10-16,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85096779067
28,,"Colantoni A. (AUID: 57220071865), Horvath B. (AUID: 57201589833), Berardinelli L. (AUID: 23466256500), Wimmer M. (AUID: 14030698000), Horvath A. (AUID: 25651293600)",,Towards Continuous Consistency Checking of DevOps Artefacts,2021,"24th International Conference on Model-Driven Engineering Languages and Systems, MODELS-C 2021",,,,,,,2,10.1109/MODELS-C53483.2021.00069,https://www.doi.org/10.1109/MODELS-C53483.2021.00069,"<Johannes Kepler University>, <IncQuery Labs CPlc.>",,"© 2021 IEEE.DevOps tools are often scattered over a multitude of technologies, and thus, their integration is a challenging endeavour. The existing DevOps integration platforms, e.g., Keptn, often employ a family of languages for this purpose. However, as we have learnt from UML, SysML, and many others, a family of languages requires inter-model constraints to be checked in order to guarantee a high consistency between the different artefacts.In this work-in-progress paper, we propose a Model-Driven Engineering (MDE) approach for the continuous consistency checking of DevOps artefacts. First, we explicitly represent each artefact as a model, second, we establish links across them to set a navigable network of model elements; and third, we enable MDE services on top of this network.We envision the possibility of using GitOps to pull the DevOps artefacts, executing services for checking consistency and performing model repairs, uploading the changes to the DevOps tools, and finally pushing the artefacts to Git, thus resulting in a continuous consistency checking process in practice.","consistency management, DevOps, MDE",,,,,,,,"<What is devops? A systematic mapping study on definitions and practices, {eid: 85019409567}>, <None, {eid: 85124040680}>, <None, {eid: 85124037281}>, <None, {eid: 84878326137}>, <Towards modeling framework for devops: Requirements derived from industry use case, {eid: 85079101956}>, <Devopsml: Towards modeling devops processes and platforms, {eid: 85096806448}>, <Leveraging model-driven technologies for json artefacts: The shipyard case study, {eid: 85123405038}>, <None, {eid: 85124024849}>, <None, {eid: 85106407192}>, <None, {eid: 85124023624}>, <None, {eid: 74549142762}>, <None, {eid: 85124021068}>, <Road to a reactive and incremental model transformation platform: Three generations of the viatra framework, {eid: 84966700829}>, <A graph query language for emf models, {eid: 79960237287}>, <Emf-incquery: An integrated development environment for live model queries, {eid: 84916891711}>, <Viatra 3: A reactive model transformation platform, {eid: 84952659402}>, <Understanding mde projects: Megamodels to the rescue for architecture recovery, {eid: 85069528266}>, <Model driven engineering: An emerging technical space, {eid: 84858782885}>, <None, {eid: 85124022619}>, <None, {eid: 85124008712}>, <Model-driven orchestration for cloud resources, {eid: 85072317965}>, <Conceptual model interoperability: A metamodel-driven approach, {eid: 84905283562}>, <Managing inter-model inconsistencies in model-based systems engineering: Application in automated production systems engineering, {eid: 85063760990}>, <Specification of graph translators with triple graph grammars, {eid: 84947918251}>, <Correctness of incremental model synchronization with triple graph grammars, {eid: 84958529363}>, <From model transformation to incremental bidirectional model synchronization, {eid: 57349131044}>, <Lightweight consistency checking for agile model-based development in practice, {eid: 85083182262}>, <Querydriven soft traceability links for models, {eid: 84908056753}>, <Incremental parsing, {eid: 0007435814}>, <Classification of concrete textual syntax mapping approaches, {eid: 70349852882}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2021-10-10,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85124002916
29,,"Nehls H. (AUID: 57212105961), Ratiu D. (AUID: 22235269100)",,Towards continuous delivery for domain experts: Using MDE to integrate non-programmers into a software delivery pipeline,2019,"22nd ACM/IEEE International Conference on Model Driven Engineering Languages and Systems Companion, MODELS-C 2019",,,,,,,2,10.1109/MODELS-C.2019.00091,https://www.doi.org/10.1109/MODELS-C.2019.00091,"<Siemens Healthineers>, <Siemens Corporate Technology>",,"© 2019 IEEE.Modern computed tomography (CT) scanners are complex, software-intensive systems whose correct functioning is governed by over 100 parameters which depend on the concrete hardware configurations and on the addressed clinical use-cases. To tame the intrinsic complexity of the parameters configurations, over the last four years, Siemens Healthineers (SHS) have been developing and deploying a set of domain specific languages and tooling based on Jetbrains' Meta-Programming System. In this paper, we report on the challenges and experiences we made while building two delivery pipelines. At meta-level, we built a continuous delivery pipeline such that new versions of our domain specific modeling tool can be deployed continuously based on the feedback of domain experts. At model-level we have integrated the developed domain-specific tool in the continuous delivery pipeline for the computed tomography software and thereby bring the Continuous Delivery mind-set with advantages and challenges to domain experts who are working traditionally 'outside' of the software development.","Continuous delivery, ""Jetbrains MPS"", Model-driven engineering",,,,,,,,"<Taming the software development complexity with domain specific languages, {eid: 85075930625}>, <Automated testing of DSL implementations-experiences from building mbeddr, {eid: 85031933140}>, <A qualitative study of devops usage in practice, {eid: 85021358087}>, <Devops in regulated software development: Case medical devices, {eid: 85026751442}>, <Transition towards continuous delivery in the healthcare domain, {eid: 85072122314}>, <None, {eid: 85075945181}>, <Combining the continuous integration practice and the model-driven engineering approach, {eid: 84981165314}>, <Impediments to introducing continuous integration for model-based development in industry, {eid: 85075941988}>, <Stepwise adoption of continuous delivery in model-driven engineering, {eid: 85061101819}>, <Lessons learned from developing mbeddr: A case study in language engineering with mps, {eid: 85062054290}>, <Using C language extensions for developing embedded software: A case study, {eid: 84958628004}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2019-09-15,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85075924980
30,,"Ferry N. (AUID: 35291975700), Nguyen P.H. (AUID: 55646510700)",,Towards model-based continuous deployment of secure IoT systems,2019,"22nd ACM/IEEE International Conference on Model Driven Engineering Languages and Systems Companion, MODELS-C 2019",,,,,,,14,10.1109/MODELS-C.2019.00093,https://www.doi.org/10.1109/MODELS-C.2019.00093,<SINTEF>,,"© 2019 IEEE.Software development and delivery of IoT systems would greatly benefit from DevOps as their requirements for reliability, quality, security and privacy are paramount. The ability to continuously evolve these systems to adapt to their environment is decisive to ensure and increase their trustworthiness (including security and privacy) and quality. In particular, there is a need for supporting the continuous deployment of secure IoT systems over IoT, Edge, and Cloud infrastructures. However, our recent survey shows a lack of specific support for deploying security and privacy mechanisms as part of the system. This position paper reports on an on-going extension of the modelling language and models@runtime implementation of the Generation and Deployment of Smart IoT Systems (GeneSIS) tool for supporting continuous deployment of IoT security and privacy mechanisms on the Edge. In particular, we present our early design of the extended version of GeneSIS with the new concepts of port, security capability, and privacy capability.","Deployment, DevOps, IoT, Model-Driven Engineering, Model@runtime",,,,,,,,"<None, {eid: 85067431815}>, <Developing iot applications in the fog: A distributed dataflow approach, {eid: 84962284412}>, <Foggy: A framework for continuous automated iot application deployment in fog computing, {eid: 85032296582}>, <Advances in deployment and orchestration approaches for IoT-a systematic review, {eid: 85072691780}>, <Genesis: Continuous orchestration and deployment of smart iot systems, {eid: 85072692587}>, <Francois raynaud on devsecops, {eid: 85030562944}>, <A systematic review of cloud modeling languages, {eid: 85042469266}>, <Models@run. time, {eid: 85008066028}>, <Model-based, platform-independent logging for heterogeneous targets, {eid: 85075941811}>, <Enact: Development, operation, and quality assurance of trustworthy smart iot systems, {eid: 85061085691}>, <None, {eid: 85027556426}>, <Glue. Things: A mashup platform for wiring the internet of things with the internet of services, {eid: 84984986383}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2019-09-15,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85075910586
31,,"Bordeleau F. (AUID: 13106215800), Cabot J. (AUID: 8963493600), Dingel J. (AUID: 6603459509), Rabil B.S. (AUID: 57501749300), Renaud P. (AUID: 57214781717)",,Towards Modeling Framework for DevOps: Requirements Derived from Industry Use Case,2019,"2nd International Workshop on Software Engineering Aspects of Continuous Development and New Paradigms of Software Production and Deployment, DEVOPS 2019",,,,,,,7,10.1007/978-3-030-39306-9_10,https://www.doi.org/10.1007/978-3-030-39306-9_10,"<École de technologie supérieure (ETS), Université du Québec>, <ICREA – Open University of Catalonia (OUC)>, <Queen’s University>, <Kaloom>",,"© 2020, Springer Nature Switzerland AG.To succeed with the development, deployment, and operation of the new generation of complex systems, organizations need the agility to adapt to constantly evolving environments. In this context, DevOps has emerged as an evolution of the agile approaches. It focuses on optimizing the flow of activities involved in the creation of end-user value, from idea to deployed functionality and operating systems. However, in spite of its popularity, DevOps still lacks proper engineering frameworks to support continuous improvement. One of our key objectives is to contribute to the development of a DevOps engineering framework composed of process, methods, and tools. A core part of this framework relates to the modeling of the different aspects of the DevOps system. To better understand the requirements of modeling in a DevOps context, we focus on a Product Build use case provided by an industry partner.","DevOps, Modeling, Process",,,,,,,,"<Model-driven continuous deployment for quality devOps, {eid: 85054816400}>, <None, {eid: 85079097128}>, <Modeling DevOps deployment choices using process architecture design dimensions, {eid: 84952662031}>, <Models@run.Time: A guided tour of the state of the art and research challenges, {eid: 85059780955}>, <A systematic review of cloud modeling languages, {eid: 85042469266}>, <Model-Driven Software Engineering in Practice, Second Edition, {eid: 84878326137}>, <A feature-based survey of model view approaches, {eid: 85029537056}>, <None, {eid: 85079094629}>, <ENACT: Development, operation, and quality assurance of trustworthy smart IoT systems, {eid: 85061085691}>, <Stepwise adoption of continuous delivery in model-driven engineering, {eid: 85061101819}>, <Combining the continuous integration practice and the model-driven engineering approach, {eid: 84981165314}>, <None, {eid: 85079086512}>, <None, {eid: 85079097632}>, <None, {eid: 85079090788}>, <None, {eid: 85079098417}>, <The DevOps Handbook: How to Create World-Class Agility, Reliability, and Security in Technology Organizations, {eid: 85056895078}>, <None, {eid: 85079103807}>, <None, {eid: 85079098833}>, <None, {eid: 85079095973}>, <None, {eid: 85079087892}>, <Industry application of continuous integration modeling: A multiple-case study, {eid: 85006317122}>, <None, {eid: 85079098316}>, <The role of models and megamodels at runtime, {eid: 79957665127}>, <Streamlining devops automation for cloud applications using TOSCA as standardized metamodel, {eid: 84958740530}>",,,Springer,,,2019-05-06,,,,,,,eng,,Book Series,,,,2-s2.0-85079101956
32,,"Lapointe-Boisvert A. (AUID: 57439330100), Mosser S. (AUID: 25654364800), Trudel S. (AUID: 12645219300)",,Towards Modelling Acceptance Tests as a Support for Software Measurement,2021,"24th International Conference on Model-Driven Engineering Languages and Systems, MODELS-C 2021",,,,,,,2,10.1109/MODELS-C53483.2021.00129,https://www.doi.org/10.1109/MODELS-C53483.2021.00129,<Université Du Québec À Montréal>,,"© 2021 IEEE.The DevOps paradigm emphasizes the need for a measurable feedback loop, starting from requirements and going as far as deployment in an automated way. In this context, a modelling challenge is to leverage the existing requirement engineering approaches to support measurements. Unfortunately, measurement methods are slow and costly by definition, preventing precisely measured requirements from being used in the DevOps loop. As a result, developers have to deal with grossly estimated elements, e.g., using story points promoted by agile methods. Thus, it is not possible to provide better support for the development team. We envision taking advantage of the artifacts that already exist in a DevOps context to provide better support for requirements measurement, making it available in an automated context such as the DevOps one. This paper focuses on the automated analysis of acceptance tests (e.g., expressed using the Gherkin language) to support functional measurement automation in a DevOps context. This proposition is illustrated by a scenario coming from an industrial partner, supporting the identification of four research challenges to be tackled.","acceptance tests, measurements, modelling",,,,,,,,"<None, {eid: 85018529770}>, <None, {eid: 34247492520}>, <Requirements engineering quality revealed through functional size measurement: An empirical study in an agile context, {eid: 84929614339}>, <Reconciling requirements and continuous integration in an agile context, {eid: 85056905155}>, <Agile requirements engineering: From user stories to software architectures, {eid: 85123214884}>, <Detecting terminological ambiguity in user stories: Tool and experimentation, {eid: 85059318780}>, <Requirements engineering in the devops era, {eid: 85123206977}>, <Extended planning poker: A proposed model, {eid: 85097284427}>, <Effort estimation in agile software development: A systematic literature review, {eid: 84905666395}>, <Effort estimation with story points and cosmic function points-An industry case study, {eid: 85038356065}>, <The value of software sizing, {eid: 80051669402}>, <Measurement of functional size in conceptual models: A survey of measurement procedures based on cosmic, {eid: 58049096994}>, <Survey on methods for automated measurement of the software scale, {eid: 85081254723}>, <Cosmic functional size automation of Java web applications using the spring mvc framework, {eid: 85124044239}>, <Towards universal cosmic size measurement automation, {eid: 85098164029}>, <None, {eid: 84856142970}>, <Validating a size measure for effort estimation in model-driven web development, {eid: 77958152177}>, <Deep learning model for end-To-end approximation of cosmic functional size based on usecase names, {eid: 85082556990}>, <A comparison study of software testing activities in agile methods, {eid: 85123978606}>, <Automated acceptance tests as software requirements: An experiment to compare the applicability of fit tables and gherkin language, {eid: 85048046567}>, <A study of the characteristics of behaviour driven development, {eid: 82955178171}>, <Impacts of data uniformity in the reuse of acceptance test glue code, {eid: 85071378445}>, <Specmate: Automated creation of test cases from acceptance criteria, {eid: 85091594998}>, <None, {eid: 85123987728}>, <None, {eid: 85124000924}>, <Using scrum together with uml models: A collaborative university-industry r&d software project, {eid: 84978224440}>, <A commutative model composition operator to support software adaptation, {eid: 84864072985}>, <None, {eid: 85087589980}>, <Pycg: Practical call graph generation in python, {eid: 85115710035}>, <Clever: Combining code metrics with clone detection for just-in-Time fault prevention and resolution in large industrial projects, {eid: 85051650020}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2021-10-10,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85124032258
33,,"Philippe J. (AUID: 57196243708), Coullon H. (AUID: 36195502500), Tisi M. (AUID: 23398292800), Sunyé G. (AUID: 8634149500)",,Towards transparent combination of model management execution strategies for low-code development platforms,2020,"23rd ACM/IEEE International Conference on Model Driven Engineering Languages and Systems, MODELS-C 2020",,,,,,,7,10.1145/3417990.3420206,https://www.doi.org/10.1145/3417990.3420206,"<IMT Atlantique, LS2N>, <Université de Nantes, LS2N>",,"© 2020 ACM.Low-code development platforms are taking an important place in the model-driven engineering ecosystem, raising new challenges, among which transparent efficiency or scalability. Indeed, the increasing size of models leads to difficulties in interacting with them efficiently. To tackle this scalability issue, some tools are built upon specific computational strategies exploiting reactivity, or parallelism. However, their performances may vary depending on the specific nature of their usage. Choosing the most suitable computational strategy for a given usage is a difficult task which should be automated. Besides, the most efficient solutions may be obtained by the use of several strategies at the same time. This paper motivates the need for a transparent multi-strategy execution mode for model-management operations. We present an overview of the different computational strategies used in the model-driven engineering ecosystem, and use a running example to introduce the benefits of mixing strategies for performing a single computation. This example helps us present our design ideas for a multi-strategy model-management system. The code-related and DevOps challenges that emerged from this analysis are also presented.","Low-code development, Model-driven engineering, Multi-strategy, OCL, Spark",,,,,,,,"<Sampling eect on performance prediction of congurable systems: A case study, {eid: 85085937290}>, <Validity of the single processor approach to achieving large scale computing capabilities, {eid: 77955527355}>, <Towards a formal specification of multi-paradigm modelling, {eid: 85075937334}>, <Atlmr: Model transformation on mapreduce, {eid: 84964711811}>, <Distributing relational model transformation on MapReduce, {eid: 85045642775}>, <Incremental pasern matching in the viatra model transformation system, {eid: 57449114393}>, <Cache oblivious distribution sweeping, {eid: 84869191441}>, <A linda-based platform for the parallel execution of out-place model transformations, {eid: 84977275159}>, <Towards distributed model transformations with lintra, {eid: 85071652388}>, <Parallel in-place model transformations with lintra, {eid: 84938634095}>, <None, {eid: 0004101993}>, <Incremental integrity checking of UML/ OCL conceptual schemas, {eid: 68949105369}>, <Linda in context, {eid: 0024640163}>, <Madeus: A formal deployment model, {eid: 85057400219}>, <One trillion edges: Graph processing at facebook-scale, {eid: 84953851582}>, <None, {eid: 0003587629}>, <Extensibility and composability of a multi-stencil domain specific framework, {eid: 85034622453}>, <Integrated model-checking for the design of safe and e?cient distributed soware commissioning, {eid: 85076956600}>, <O.Ee SIPSim implicit parallelism model and the SkelGIS library, {eid: 84928668168}>, <MapReduce: Simplified data processing on large clusters, {eid: 85030321143}>, <None, {eid: 85096789319}>, <Graphx: Graph processing in a distributed dataflow framework, {eid: 85072954017}>, <None, {eid: 0000835369}>, <Parallel graph transformations on multicore systems, {eid: 84862193779}>, <A component concept for typed graphs with inheritance and containment structures, {eid: 78649902907}>, <Implementing graph transformations in the bulksynchronousparallel model, {eid: 84900559020}>, <Cost model for pregel on graphx, {eid: 85030158943}>, <Aroma: Automated resource allocation and configuration of mapreduce environment in the cloud, {eid: 84867709937}>, <Effi-cient atl incremental transformations, {eid: 85070475719}>, <Towards optimisation of model eries: A parallel execution approach, {eid: 85083157374}>, <Pregel: A system for largescale graph processing, {eid: 77954723629}>, <Machine learning and congurable systems: A gentle introduction, {eid: 85123042973}>, <Reactive model transformation with ATL, {eid: 84994520014}>, <Towards truly parallel model transformations : AA distributed paSern matching approach, {eid: 70449623228}>, <Pyske: Algorithmic skeletons for python, {eid: 85082121316}>, <None, {eid: 85096794650}>, <Coqtl: An internal DSL for model transformation in coq, {eid: 85048825703}>, <Lazy evaluation for ocl, {eid: 84960968946}>, <Lowcomote: Training the next generation of experts in scalable low-code engineering platforms, {eid: 85069741151}>, <Parallel execution of atl transformation rules, {eid: 84886819456}>, <Lazy execution of model-to-model transformations, {eid: 80054075977}>, <Towards systematic parallelization of graph transformations over pregel, {eid: 84961634182}>, <Runtime model validation with parallel object constraint language, {eid: 84856810808}>, <A bridging model for parallel computation, {eid: 0025467711}>, <A rete network construction algorithm for incremental pasern matching, {eid: 84884323292}>, <Deterministic lazy mutable ocl collections, {eid: 85042681746}>",,,"Association for Computing Machinery, Inc",,,2020-10-16,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85096808259
34,,"Hugues J. (AUID: 35494793200), Hristosov A. (AUID: 57220068022), Hudak J.J. (AUID: 57198392220), Yankel J. (AUID: 56811646300)",,TwinOps - DevOps meets model-based engineering and digital twins for the engineering of CPS,2020,"23rd ACM/IEEE International Conference on Model Driven Engineering Languages and Systems, MODELS-C 2020",,,,,,,12,10.1145/3417990.3421446,https://www.doi.org/10.1145/3417990.3421446,"<Carnegie Mellon University, Software Engineering Institute>",,"© 2020 ACM.The engineering of Cyber-Physical Systems (CPS) requires a large set of expertise to capture the system requirements and to derive a correct solution. Model-based Engineering and DevOps aim to efficiently deliver software with increased quality. Model-based Engineering relies on models as first-class artifacts to analyze, simulate, and ultimately generate parts of a system. DevOps focuses on software engineering activities, from early development to integration, and then improvement through the monitoring of the system at run-time. We claim these can be efficiently combined to improve the engineering process of CPS. In this paper, we present TwinOps, a process that unifies Model-based Engineering, Digital Twins, and DevOps practice in a uniform workflow. TwinOps illustrates how to leverage several best practices in MBE and DevOps for the engineering Cyber-Physical systems. We illustrate our contribution using a Digital Twins case study to illustrate TwinOps benefits, combining AADL and Modelica models, and an IoT platform.",,,,,,,,,"<The functional mockup interface for tool independent exchange of simulation models, {eid: 84871289819}>, <An introduction to Docker for reproducible research, with examples from the R environment, {eid: 84930642023}>, <Towards a model-based devops for cyber-physical systems, {eid: 85079099244}>, <Incremental life cycle assurance of safety-critical systems, {eid: 84994018560}>, <Co-simulation: State of the art, {eid: 85028067518}>, <None, {eid: 85075919078}>, <Integrating aadl and fmi to extend virtual integration capability, {eid: 85096807775}>, <Characterising the digital twin: A systematic literature review, {eid: 85081219520}>, <Ocarina : AAn environment for aadl models analysis and automatic code generation for high integrity applications, {eid: 69049092221}>, <A survey of devops concepts and challenges, {eid: 85075608026}>, <A formal approach to AADL model-based software engineering, {eid: 85062696253}>, <None, {eid: 85068588523}>, <Model-driven engineering: A survey supported by the unified conceptual model, {eid: 84938742646}>",,,"Association for Computing Machinery, Inc",,,2020-10-16,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85096747019
35,,"Benjamin B. (AUID: 57202099197), Mireille B.F. (AUID: 57212101946), Frederic P. (AUID: 6508047326), Gunther J. (AUID: 57212102243), Sebastien M. (AUID: 25654364800)",,When DevOps meets meta-learning: A portfolio to rule them all,2019,"22nd ACM/IEEE International Conference on Model Driven Engineering Languages and Systems Companion, MODELS-C 2019",,,,,,,6,10.1109/MODELS-C.2019.00092,https://www.doi.org/10.1109/MODELS-C.2019.00092,"<Université Côte dAzur, CNRS, I3S>, <Université du Québec À Montréal>",,"© 2019 IEEE.The Machine Learning (ML) world is in constant evolution, as the amount of different algorithms in this context is evolving quickly. Until now, it is the responsibility of data scientists to create ad-hoc ML pipelines for each situation they encounter, gaining knowledge about the adequacy between their context and the chosen pipeline. Considering that it is not possible at a human scale to analyze the exponential number of potential pipelines, picking the right pipeline that combines the proper preprocessing and algorithms is a hard task that requires knowledge and experience. In front of the complexity of building a right ML pipeline, algorithm portfolios aim to drive algorithm selection, learning from the past in a continuous process. However, building a portfolio requires that (i) data scientists develop and test pipelines and (ii) portfolio maintainers ensure the quality of the portfolio and enrich it. The firsts are the developers, while the seconds are the operators. In this paper, we present a set of criteria to be respected, and propose a pipeline-based meta-model, to support a DevOps approach in the context of Machine Learning Pipelines. The exploitation of this meta-model, both as a graph and as a logical expression, serves to ensure continuity between Dev and Ops. We depict our proposition through the simplified study of two primary use cases, one with developer's point-of-view, the other with ops'.","DevOps, MachineLearning, Meta-Learning, Pipeline",,,,,,,,"<On the predictive power of meta-features in OpenML, {eid: 85041037223}>, <ASlib: {A} benchmark library for algorithm selection, {eid: 84962888054}>, <Metamodel-based test generation for model transformations: An algorithm and A tool, {eid: 34547699175}>, <Towards A software product line for machine learning workflows: Focus on supporting evolution, {eid: 84996964947}>, <Do we need hundreds of classifiers to solve real world classification problems?, {eid: 84919773193}>, <The path to devops, {eid: 85049785632}>, <Improving confidence in experimental systems through automated construction of argumentation diagrams, {eid: 85022326190}>, <Algorithm portfolios, {eid: 0035250831}>, <Reinforcement learning for automatic online algorithm selection-an empirical study, {eid: 85046262481}>, <None, {eid: 85075956242}>, <Algorithm Selection for Combinatorial Search Problems: {A} Survey, {eid: 85004008362}>, <Towards automatic composition of multicomponent predictive systems, {eid: 84964091554}>, <Adore A logical meta-model supporting business process evolution, {eid: 84878248026}>, <Machine Learning and Deep Learning frameworks and libraries for large-scale data mining: A survey, {eid: 85060332849}>, <The algorithm selection problem, {eid: 0003056605}>, <A survey of intelligent assistants for data analysis, {eid: 84880124349}>, <Sharing RapidMiner workflows and experiments with OpenML, {eid: 84944264553}>, <OpenML: Networked science in machine learning, {eid: 84944261791}>, <No free lunch theorems for optimization, {eid: 0031118203}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2019-09-15,,,,,,,eng,,Conference Proceeding,,,,2-s2.0-85075935517
36,,"Garcia J. (AUID: 58083558200), Cabot J. (AUID: 8963493600)",,Stepwise adoption of continuous delivery in model-driven engineering,2018,"1st International Workshop on Software Engineering Aspects of Continuous Development and New Paradigms of Software Production and Deployment, DEVOPS 2018",,,,,,,8,10.1007/978-3-030-06019-0_2,https://www.doi.org/10.1007/978-3-030-06019-0_2,"<IK4-IKERLAN>, <ICREA-UOC>",,"© 2019, Springer Nature Switzerland AG.Continuous Delivery (CD) and, in general, Continuous Software Engineering (CSE) is becoming the norm. Still, current practices and available integration platforms are too code-oriented. They are not well adapted to work with other, non text-based, software artifacts typically produced during early phases of the software engineering life-cycle. This is especially problematic for teams adopting a Model-Driven Engineering (MDE) approach to software development where several (meta)models (and model transformations) are built and executed as part of the development process. Typically, (part of) the code is automatically generated from such models. Therefore, in a complete CD process, changes in a model should trigger changes on the generated code when appropriate. A step further would be to apply CD practices to the development of modeling artefacts themselves. Analogously to “traditional” CD, where the goal is to have the mainline codebase always in a deployable state, the aim would be to have the modeling infrastructure always ready to be used. Those models could be the final product themselves or an intermediate artifact in a complete CSE process as described above. Either way, a tighter integration between CD and MDE would benefit software practitioners by providing them with complete CSE, covering also analysis and design stages of the process.","Continuous delivery, Continuous evolution, Model-driven engineering",,,,,,,,"<None, {eid: 85061088999}>, <Agile software development, {eid: 84862080030}>, <Model-driven continuous deployment for quality DevOps, {eid: 85054816400}>, <None, {eid: 4243422367}>, <None, {eid: 84878326137}>, <None, {eid: 84977560005}>, <None, {eid: 77955162010}>, <Co-evolution of metamodels and models through consistent change propagation, {eid: 84925249904}>, <Automated co-evolution of GMF editor models, {eid: 79952273948}>, <Models@Runtime for continuous design and deployment, {eid: 85028707045}>, <Continuous software engineering: A roadmap and agenda, {eid: 84991441356}>, <Model transformation co-evolution: A semiautomatic approach, {eid: 84872726686}>, <Combining the continuous integration practice and the model-driven engineering approach, {eid: 84981165314}>, <MORSE: A model-aware service environment, {eid: 77949633453}>, <Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation, {eid: 84903601568}>, <EMFStore: A model repository for EMF models, {eid: 77954724460}>, <Merging models with the epsilon merging language (EML), {eid: 33750362774}>, <A framework for composing modular and interoperable model management tasks, {eid: 70350086431}>, <Evolving models in model-driven engineering: State-of-the-art and future challenges, {eid: 84949883493}>, <An infrastructure modelling tool for cloud provisioning, {eid: 85032348388}>, <Presentation of EMF compare utility, {eid: 47749101164}>, <The state of practice in model-driven engineering, {eid: 84899687758}>, <Industrial adoption of model-driven engineering: Are the tools really the problem?, {eid: 84886821083}>",,,Springer Verlag,,,2018-03-05,,,,,,,eng,,Book Series,,,,2-s2.0-85061101819
37,,"Combemale B. (AUID: 24343217800), Wimmer M. (AUID: 14030698000)",,Towards a Model-Based DevOps for Cyber-Physical Systems,2019,"2nd International Workshop on Software Engineering Aspects of Continuous Development and New Paradigms of Software Production and Deployment, DEVOPS 2019",,,,,,,19,10.1007/978-3-030-39306-9_6,https://www.doi.org/10.1007/978-3-030-39306-9_6,"<University Toulouse & Inria>, <Johannes Kepler University Linz & CDL-MINT>",,"© 2020, Springer Nature Switzerland AG.The emerging field of Cyber-Physical Systems (CPS) calls for new scenarios of the use of models. In particular, CPS require to support both the integration of physical and cyber parts in innovative complex systems or production chains, together with the management of the data gathered from the environment to drive dynamic reconfiguration at runtime or finding improved designs. In such a context, the engineering of CPS must rely on models to uniformly reason about various heterogeneous concerns all along the system life cycle. In the last decades, the use of models has been intensively investigated both at design time for driving the development of complex systems, and at runtime as a reasoning layer to support deployment, monitoring and runtime adaptations. However, the approaches remain mostly independent. With the advent of DevOps principles, the engineering of CPS would benefit from supporting a smooth continuum of models from design to runtime, and vice versa. In this vision paper, we introduce a vision for supporting model-based DevOps practices, and we infer the corresponding research roadmap for the modeling community to address this vision by discussing a CPS demonstrator.",,,,,,,,,"<None, {eid: 80053614786}>, <Challenges in engineering cyber-physical systems, {eid: 84898449318}>, <Survey of model-based systems engineering (MBSE) methodologies, {eid: 63349087969}>, <Stepwise adoption of continuous delivery in model-driven engineering, {eid: 85063086793}>, <BizDevOps: Because DevOps is not the end of the story, {eid: 84945906757}>, <Cyber physical systems: Design challenges, {eid: 49649119406}>, <Towards liquid models: An evolutionary modeling approach, {eid: 85010424048}>, <A multi-paradigm modelling approach to live modelling, {eid: 85055994061}>, <MPM4CPS: Multi-paradigm modelling for cyber-physical systems, {eid: 85055366068}>, <None, {eid: 85079098601}>, <The state of practice in model-driven engineering, {eid: 84899687758}>, <Model-driven time-series analytics, {eid: 85079085616}>",,,Springer,,,2019-05-06,,,,,,,eng,,Book Series,,,,2-s2.0-85079099244
