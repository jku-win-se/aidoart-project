,Authors,Author full names,Author(s) ID,Title,Year,Source title,Volume,Issue,Art. No.,Page start,Page end,Page count,Cited by,DOI,Link,Affiliations,Authors with affiliations,Abstract,Author Keywords,Index Keywords,Molecular Sequence Numbers,Chemicals/CAS,Tradenames,Manufacturers,Funding Details,Funding Texts,References,Correspondence Address,Editors,Publisher,Sponsors,Conference name,Conference date,Conference location,Conference code,ISSN,ISBN,CODEN,PubMed ID,Language of Original Document,Abbreviated Source Title,Document Type,Publication Stage,Open Access,Source,EID
0,,"Medhat N. (AUID: 57216390453), Moussa S.M. (AUID: 35759116600), Badr N.L. (AUID: 6602448188), Tolba M.F. (AUID: 24541714400)",,A Framework for Continuous Regression and Integration Testing in IoT Systems Based on Deep Learning and Search-Based Techniques,2020,IEEE Access,,,,,,,17,10.1109/ACCESS.2020.3039931,https://www.doi.org/10.1109/ACCESS.2020.3039931,"<Department of Information Systems, Faculty of Computer and Information Sciences, Ain Shams University>, <Department of Scientific Computing, Faculty of Computer and Information Sciences, Ain Shams University>",,"Â© 2020 IEEE.Tremendous systems are rapidly evolving based on the trendy Internet of Things (IoT) in various domains. Different technologies are used for communication between the massive connected devices through all layers of the IoT system, causing many security and performance issues. Regression and integration testing are considered repeatedly, in which the vast costs and efforts associated with the frequent execution of these inflated test suites hinder the adequate testing of such systems. This necessitates the focus on exploring innovative scalable testing approaches for large test suites in IoT-based systems. In this paper, a scalable framework for continuous integration and regression testing in IoT-based systems (IoT-CIRTF) is proposed, based on IoT-related criteria for test case prioritization and selection. The framework utilizes search-based techniques to provide an optimized prioritized set of test cases to select from. The selection is based on a trained prediction model for IoT standard components using supervised deep learning algorithms to continuously ensure the overall reliability of IoT-based systems. The experiments are held on two GSM datasets. The experimental results achieved prioritization accuracy up to 90% and 92% for regression testing and integration testing respectively. This provides an enhanced and efficient framework for continuous testing of IoT-based systems, as per IoT-related criteria for the prioritization and selection purposes.","Deep learning, integration testing, IoT, regression testing, search-based techniques, test case prioritization, test case selection",,,,,,,,"<Characterizing Internet of Things systems through taxonomies: A systematic mapping study, {eid: 85081397939}>, <A framework for rapid integration of IoT systems with industrial environments, {eid: 85073908088}>, <Testing techniques in IoT-based systems, {eid: 85083362345, doi: 10.1109/ICICIS46948.2019.9014711}>, <An adaptive security data collection and composition recognition method for security measurement over LTE/LTEfiA networks, {eid: 85079237087, doi: 10.1016/j.jnca.2020.102549}>, <Automation testing and monitoring lab on the cloud for IOT smart fieet system (ATML & SFS), {eid: 85080649826}>, <Challenges of testing complex Internet of Things (IoT) devices and systems, {eid: 85077044853}>, <Current research on Internet of Things (IoT) security: A survey, {eid: 85057715899}>, <Software quality assurance testing methodologies in IoT, {eid: 85097805906}>, <Program analysis of commodity IoT applications for security and privacy: Challenges and opportunities, {eid: 85072015894}>, <An acceptance testing approach for Internet of Things systems, {eid: 85053291294}>, <Improving formal verification and testing techniques for Internet of Things and smart cities, {eid: 85176077930}>, <IoTfiTEG: Test event generator system, {eid: 85023770296}>, <Cost and effectiveness of search-based techniques for model-based testing: An empirical analysis, {eid: 85019629619}>, <Unsupervised deep feature extraction for remote sensing image classification, {eid: 84940417789, doi: 10.1109/TGRS.2015.2478379}>, <WiFi fingerprinting indoor localization using local feature-based deep LSTM, {eid: 85086067352, doi: 10.1109/JSYST.2019.2918678}>, <Traffic fiow prediction using LSTM with feature enhancement, {eid: 85059508809, doi: 10.1016/j.neucom.2018.12.016}>, <Collaborative and geometric multikernel learning for multi-class classification, {eid: 85074163620, doi: 10.1016/j.patcog.2019.107050}>, <None, {eid: 85068971193}>, <None, {eid: 85087096547}>, <Bidirectional LSTM with attention mechanism and convolutional layer for text classification, {eid: 85061038593, doi: 10.1016/j.neucom.2019.01.078}>, <Spoken language identification using LSTMbased angular proximity, {eid: 85039167083}>, <A general architecture of IoT system, {eid: 85034643262, doi: 10.1109/CSE-EUC.2017.124}>, <Internet of Things IoT-based smart homes: A review of system architecture, software, communications, privacy and security, {eid: 85115031591, doi: 10.1016/j.iot.2018.08.009}>, <None, {eid: 85048703118}>, <Generalized cross entropy loss for training deep neural networks with noisy labels, {eid: 85062572898}>, <Make it directly: Event extraction based on tree-LSTM and bi-GRU, {eid: 85079792469}>, <A study of deep neural networks for human activity recognition, {eid: 85082413508, doi: 10.1111/coin.12318}>, <Feature extraction for simple classification, {eid: 78149491860, doi: 10.1109/ICPR.2010.377}>, <Automated test case generation from high-level logic requirements using model transformation techniques, {eid: 85040775464}>, <Location-based test case prioritization for software embedded in mobile devices using the law of gravitation, {eid: 85060106750}>, <Test case prioritization for acceptance testing of cyber physical systems: A multi-objective search-based approach, {eid: 85051547390}>, <Democratization of runtime verification for Internet of Things, {eid: 85047213068}>, <Towards a runtime testing framework for dynamically adaptable Internet of Things networks in smart cities, {eid: 85089472705}>, <A brief overview of existing tools for testing the Internet-of-Things, {eid: 85050997727}>, <Automated scenario-based integration testing of timeconstrained distributed systems, {eid: 85067981378}>, <Interoperability and integration testing methods for IoT systems: A systematic mapping study, {eid: 85091589301}>, <None, {eid: 85097805122}>, <Continuous testing in the development of IoT applications, {eid: 85083197670}>, <Remote sensing and controlling of greenhouse agriculture parameters based on IoT, {eid: 85047397284, doi: 10.1109/BID.2017.8336571}>, <Ex-vivo dynamic analysis framework for Android device drivers, {eid: 85091580284, doi: 10.1109/sp40000.2020.00094}>, <Prioritizing JUnit test cases without coverage information: An optimization heuristics based approach, {eid: 85068215376}>, <Test case prioritization technique based on genetic algorithm, {eid: 81355133108}>, <Incorporating fault-proneness estimations into coverage-based test case prioritization methods, {eid: 85079054649, doi: 10.1016/j.infsof.2020.106269}>, <Prioritizing test cases for regression testing, {eid: 0035481183}>, <System test case prioritization of new and regression test cases, {eid: 33749040645}>, <Fault detection probability analysis for coverage-based test suite reduction, {eid: 47349110847, doi: 10.1109/ICSM.2007.4362646}>, <Applying simulated annealing and parallel computing to the mobile sequential recommendation, {eid: 85045650951, doi: 10.1109/TKDE.2018.2827047}>, <Performance evaluation of genetic algorithms for fiowshop scheduling problems, {eid: 0028565588, doi: 10.1109/icec.1994.349951}>, <Combined genetic and simulated annealing approach for test case prioritization, {eid: 84962285937, doi: 10.17485/ijst/2015/v8i35/81102}>, <A comparative study of meta-heuristic optimisation techniques for prioritisation of risks in agile software development, {eid: 85078842204, doi: 10.1504/IJCAT.2020.104688}>, <An experimental study of global and local search algorithms in empirical performance tuning, {eid: 84883288790, doi: 10.1007/978-3-642-38718-0-26}>, <Foundation of computer science FCS, {eid: 84914173383}>, <GSM technology: Architecture, security, future challenges, {eid: 85089707180}>, <None, {eid: 85052820912}>, <None, {eid: 85097805905}>, <None, {eid: 85097805504}>, <None, {eid: 85097805611}>, <Bug report classification using LSTM architecture for more accurate software defect locating Proc. 17th, {eid: 85062245280, doi: 10.1109/ICMLA.2018.00234}>, <Shortterm prediction of residential power energy consumption via CNN and multi-layer bi-directional LSTM networks, {eid: 85088701184, doi: 10.1109/ACCESS.2019.2963045}>, <Action recognition in video sequences using deep bi-directional LSTM with CNN features, {eid: 85037618132, doi: 10.1109/ACCESS.2017.2778011}>, <A scalable and hybrid intrusion detection system based on the convolutional-LSTM network, {eid: 85065494532}>, <An ensemble framework based on convolutional bi-directional LSTM with multiple time windows for remaining useful life estimation, {eid: 85076702187, doi: 10.1016/j.compind.2019.103182}>, <Independently recurrent neural network (IndRNN): Building a longer and deeper RNN, {eid: 85061711459}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2020-01-01,,,,,,,eng,,Journal,,,,2-s2.0-85097184092
1,,"Combemale B. (AUID: 24343217800), Batot E. (AUID: 57188304600), Bruel J.M. (AUID: 35232489400), Kienzle J. (AUID: 8709922800), Mussbacher G. (AUID: 22135401000), Ali H. (AUID: 57211170442), Saini R. (AUID: 57211711561), Amyot D. (AUID: 6602186776), Bagherzadeh M. (AUID: 58070347200), Cabot J. (AUID: 8963493600), Bencomo N. (AUID: 17345086800), Benni B. (AUID: 57202099197), Wimmer M. (AUID: 14030698000), Cheng B.H.C. (AUID: 7202388859), Collet P. (AUID: 8947110100), Engels G. (AUID: 7004530938), Heinrich R. (AUID: 56352523400), Koziolek A. (AUID: 55094731500), Reussner R. (AUID: 6603589366), Jezequel J.M. (AUID: 35618077100), Sallou J. (AUID: 57216885417), Mosser S. (AUID: 25654364800), Sahraoui H. (AUID: 57196894039), Syriani E. (AUID: 25522760800), Stinckwich S. (AUID: 18234199600)",,A Hitchhiker's Guide to Model-Driven Engineering for Data-Centric Systems,2021,IEEE Software,,,,,,,18,10.1109/MS.2020.2995125,https://www.doi.org/10.1109/MS.2020.2995125,"<University of Toulouse>, <McGill University>, <University of Ottawa>, <Open University of Catalonia>, <Aston University>, <Concordia University>, <Department of Business Informatics-Software Engineering, Johannes Kepler University Linz>, <Michigan State University>, <University CÃ´te dAzur>, <Paderborn University>, <Karlsruhe Institute of Technology>, <University of Rennes>, <University of QuÃ©bec MontrÃ©al>, <MontrÃ©al University>, <United Nations University Institute>",,Â© 2021 IEEE.The models and data framework demystifies the different roles that models and data play in software development and operation and clarifies where machine learning and artificial intelligence techniques could be used.,,,,,,,,,"<Socio-technical systems: From design methods to systems engineering, {eid: 78650293998, doi: 10.1016/j.intcom.2010.07.003}>, <Building AI software: Data-driven vs model-driven AI and why we need an AI-specific software development paradigm, {eid: 85112138324}>, <Comparison of model-based vs. data-driven methods for fault detection and isolation in engine idle speed control system, {eid: 85030260574}>, <Unifying explanatory and constructive modeling: Towards removing the gulf between ontologies and conceptual models, {eid: 85008476085}>, <Modeling in engineering and science, {eid: 85059626352, doi: 10.1145/3231590}>, <None, {eid: 85008929956}>, <MDE in practice for computational science, {eid: 84939177966}>, <An architectural model-based approach to quality-aware DevOps in cloud applications, {eid: 85025589778}>, <A survey of data-intensive scientific workflow management, {eid: 84958182304, doi: 10.1007/s10723-015-9329-8}>, <The vision of autonomic computing, {eid: 0037253062, doi: 10.1109/MC.2003.1160055}>, <Software engineering for selfadaptive systems: A second research roadmap, {eid: 84879852118}>, <None, {eid: 84941067484}>, <A unifying framework for homogeneous model composition, {eid: 85059540818, doi: 10.1007/s10270-018-00707-8}>, <Deep probabilistic programming languages: A qualitative study, {eid: 85108907645}>, <Theory-guided data science: A new paradigm for scientific discovery from data, {eid: 85023747083, doi: 10.1109/TKDE.2017.2720168}>",,,IEEE Computer Society,,,2021-07-01,,,,,,,eng,,Journal,,,,2-s2.0-85085080142
2,,"Marijan D. (AUID: 34872942800), Gotlieb A. (AUID: 56247674500), Liaaen M. (AUID: 55595970300)",,A learning algorithm for optimizing continuous integration development and testing practice,2019,Software - Practice and Experience,,,,,,,30,10.1002/spe.2661,https://www.doi.org/10.1002/spe.2661,"<Simula Research Laboratory>, <Cisco Systems>",,"Â© 2018 John Wiley & Sons, Ltd.Continuous integration, at its core, includes a set of practices that aim to prevent and reduce the cost of software integration issues by merging working software copies often. Regression testing is considered a good practice in software development with continuous integration, which ensures that code changes are not negatively affecting software functionality. As, nowadays, software development is carried out iteratively, with small code increments continuously developed and regression tested, it is of critical importance that continuous regression testing is time efficient. However, in practice, regression testing is often long lasting and faces scalability problems as software grows larger or as software changes are made more frequently. One contributing factor to these issues is test redundancy, which causes the same software functionality being tested multiple times across a test suite. In large-scale software, especially highly configurable software, redundancy in continuous regression testing can significantly grow the size of test suites and negatively affect the cost effectiveness of continuous integration. This paper presents a practical learning algorithm for optimizing continuous integration testing by reducing ineffective test redundancy in regression suites. The novelty of the algorithm lies in learning and predicting the fault-detection effectiveness of continuous integration tests using historical test records and combining this information with coverage-based redundancy metrics. The goal is to identify ineffective redundancy, which is maximally reduced in the resulting regression test suite, thus reducing test time and improving the performance of continuous integration. We apply and evaluate the algorithm in two industrial projects of continuous integration. The results show that the proposed algorithm can improve the efficiency of continuous integration practice in terms of decreasing test execution time by 38% on average compared to the industry practice of our case study and by 40% on average compared to the retest-all approach. The results further demonstrate no significant reduction in fault-detection effectiveness of continuous regression testing. This suggests that the proposed algorithm contributes to the state of the practice in the continuous integration development and testing of highly configurable systems.","continuous integration, continuous integration testing, highly configurable software, highly interleaved test predictive algorithm, regression testing, regression trees, test optimization, test redundancy",,,,,,,,"<None, {eid: 85026639599}>, <None, {eid: 84891715780}>, <None, {eid: 84935135489}>, <None, {eid: 84986877429}>, <None, {eid: 85049691252}>, <An AETG system: an approach to testing based on combinatorial design, {eid: 0000673732}>, <None, {eid: 0037587652}>, <None, {eid: 33847694980}>, <Test overlay in an emerging software product line - an industrial case study, {eid: 84872969667}>, <Learning from examples, generation and evaluation of decision trees for software resource analysis, {eid: 0024123707}>, <None, {eid: 0003512056}>, <Practical minimization of pairwise-covering test configurations using constraint programming, {eid: 84952845547}>, <Top 10 algorithms in data mining, {eid: 37549018049}>, <Predicting business failure using classification and regression tree: an empirical comparison with popular classical statistical methods and top classification mining methods, {eid: 77951206489}>, <None, {eid: 85060261902}>, <None, {eid: 67650148487}>, <None, {eid: 0036041041}>, <None, {eid: 85013123088}>, <None, {eid: 0003500248}>, <None, {eid: 85009962818}>, <None, {eid: 12844268515}>, <None, {eid: 1542347191}>, <None, {eid: 85060264405}>, <None, {eid: 33847304574}>, <None, {eid: 84944678252}>, <None, {eid: 84951764887}>, <Program slicing-based regression testing techniques, {eid: 0030173997}>, <A safe, efficient regression test selection technique, {eid: 0031125046}>, <Cost-effective regression testing through adaptive test prioritization strategies, {eid: 84960881560}>, <None, {eid: 84951766869}>, <None, {eid: 0036441907}>, <None, {eid: 84963549010}>, <None, {eid: 84964268054}>, <None, {eid: 85030784137}>, <None, {eid: 84997112179}>, <None, {eid: 85060264122}>, <None, {eid: 84856946297}>, <None, {eid: 85060263683}>, <None, {eid: 0032305987}>, <A tester-assisted methodology for test redundancy detection, {eid: 78149252006}>, <Redundancy based test-suite reduction, {eid: 37149024582}>, <A methodology for controlling the size of a test suite, {eid: 0027625420}>, <None, {eid: 33646942742}>, <Improving fault detection capability by selectively retaining test cases during test suite reduction, {eid: 33846855360}>, <An empirical study of test case filtering techniques based on exercising information flows, {eid: 34250772325}>, <None, {eid: 77949900972}>, <None, {eid: 84863156883}>, <None, {eid: 84903123998}>, <Empirical studies of test-suite reduction, {eid: 0036957531}>, <None, {eid: 15844394509}>",,,John Wiley and Sons Ltd,,,2019-02-01,,,,,,,eng,,Journal,,,,2-s2.0-85056634616
3,,"Esfahani N. (AUID: 35092350100), Elkhodary A. (AUID: 23004260000), Malek S. (AUID: 8969695500)",,A learning-based framework for engineering feature-oriented self-adaptive software systems,2013,IEEE Transactions on Software Engineering,,,,,,,87,10.1109/TSE.2013.37,https://www.doi.org/10.1109/TSE.2013.37,"<Department of Computer Science, George Mason University>",,"Self-adaptive software systems are capable of adjusting their behavior at runtime to achieve certain functional or quality-of-service goals. Often a representation that reflects the internal structure of the managed system is used to reason about its characteristics and make the appropriate adaptation decisions. However, runtime conditions can radically change the internal structure in ways that were not accounted for during their design. As a result, unanticipated changes at runtime that violate the assumptions made about the internal structure of the system could degrade the accuracy of the adaptation decisions. We present an approach for engineering self-adaptive software systems that brings about two innovations: 1) a feature-oriented approach for representing engineers' knowledge of adaptation choices that are deemed practical, and 2) an online learning-based approach for assessing and reasoning about adaptation decisions that does not require an explicit representation of the internal structure of the managed software system. Engineers' knowledge, represented in feature-models, adds structure to learning, which in turn makes online learning feasible. We present an empirical evaluation of the framework using a real-world self-adaptive software system. Results demonstrate the framework's ability to accurately learn the changing dynamics of the system while achieving efficient analysis and adaptation. Â© 1976-2012 IEEE.","Autonomic computing, Feature-orientation, Machine learning, Self-adaptive software",,,,,,,,"<Self-managed systems: An architectural challenge, {eid: 34748879678}>, <Rainbow: Architecture-based self-adaptation with reusable infrastructure, {eid: 7244223259}>, <The vision of autonomic computing, {eid: 0037253062}>, <An architecture-driven software mobility framework, {eid: 77953132951}>, <A framework for utility-based service oriented design in SASSY, {eid: 77950509895}>, <Architecture-based runtime software evolution, {eid: 0031597162}>, <Software engineering for self-adaptive systems: A research roadmap, {eid: 70350033987}>, <None, {eid: 70349441583}>, <Foundations for the study of software architecture, {eid: 0001956194}>, <None, {eid: 0003924156}>, <A tutorial on hidden markov models and selected applications in speech recognition, {eid: 0024610919}>, <Dynamic weighted majority: An ensemble method for drifting concepts, {eid: 37749050180}>, <Learning in the presence of concept drift and hidden contexts, {eid: 0030126609}>, <A framework for ensuring and improving dependability in highly distributed systems, {eid: 84887972299}>, <FUSION: A framework for engineering self-tuning self-adaptive software systems, {eid: 78751536309}>, <None, {eid: 25844484052}>, <None, {eid: 25644459607}>, <Classification and comparison framework for software architecture description languages, {eid: 0033892696}>, <Dynamic software product lines, {eid: 84904392607}>, <A feature-oriented approach to developing dynamically reconfigurable products in product line engineering, {eid: 34547364707}>, <Autonomic computing through reuse of variability models at runtime: The case of smart homes, {eid: 70350339324}>, <MATA: A unified approach for composing UML aspect models based on graph transformation, {eid: 71549130408}>, <Elicitation and utilization of application-level utility functions, {eid: 70049105374}>, <User guidance of resource-adaptive systems, {eid: 57649183950}>, <None, {eid: 0003406396}>, <Data-driven modelling: Paradigm, methods, experiences, {eid: 0038456166}>, <None, {eid: 2442592260}>, <Induction of decision trees, {eid: 33744584654}>, <None, {eid: 0003802343}>, <Multivariate adaptive regression splines, {eid: 0002432565}>, <None, {eid: 0004180332}>, <None, {eid: 0003584577}>, <An extensible framework for improving a distributed software systems deployment architecture, {eid: 84856556651}>, <Scenario-driven dynamic analysis of distributed architectures, {eid: 37149042101}>, <A style-aware architectural middleware for resource-constrained, distributed systems, {eid: 21244493287}>, <None, {eid: 84887970885}>, <None, {eid: 0003936062}>, <An infrastructure for the rapid development of XML-based architecture description languages, {eid: 0036038853}>, <Utilizing architectural styles to enhance the adaptation support of middleware platforms, {eid: 84860244534}>, <None, {eid: 84887970284}>, <Incremental model synchronization with triple graph grammars, {eid: 33750322864}>, <None, {eid: 84887979381}>, <An evidence generation model for web services, {eid: 74949114889}>, <None, {eid: 84887855734}>, <A user-centric approach for improving a distributed software systems deployment architecture, {eid: 41149152677}>, <RESISTing Reliability Degradation through Proactive Reconfiguration, {eid: 78649803946}>, <Taming uncertainty in self-adaptive software, {eid: 80053212005}>, <QoS architectural patterns for self-architecting software systems, {eid: 77954752109}>, <Convex discrete optimization, {eid: 78149307809}>, <Self-adaptive software: Landscape and research challenges, {eid: 70349742463}>, <Software engineering for self-adpaptive systems: A second research roadmap, {eid: 84883582394}>, <Adaptive trust negotiation and access control, {eid: 30644473909}>, <Assessing the robustness of self-managing computer systems under highly variable workloads, {eid: 4544322107}>, <None, {eid: 84887909021}>, <Taming dynamically adaptive systems using models and aspects, {eid: 70350303567}>, <A domain specific modeling language supporting specification, simulation and execution of dynamic adaptive systems, {eid: 77249177857}>, <An aspect-oriented and model-driven approach for managing dynamic variability, {eid: 56649106269}>, <Rethinking the use of models in software architecture, {eid: 70349918375}>, <Induction of model trees for predicting continuous classes, {eid: 0001717058}>, <An architecture-based approach to self-adaptive software, {eid: 0032665183}>, <Feature oriented evolutions for context-aware adaptive systems, {eid: 78649990837}>, <Protecting SLAs with surrogate models, {eid: 77954568155}>, <Reinforcement learning in autonomic computing: A manifesto and case studies, {eid: 33847379922}>, <Reinforcement learning-based dynamic adaptation planning method for architecture-based self-managed software, {eid: 70349912234}>, <Supervised adaptive dynamic programming based adaptive cruise control, {eid: 80052213489}>, <Language models for detection of unknown attacks in network traffic, {eid: 33846910249}>, <Application of Machine Learning Algorithms to KDD Intrusion Detection Data Set within Misuse Detection Context, {eid: 1642355954}>",,,,,,2013-11-25,,,,,,,eng,,Journal,,,,2-s2.0-84887877241
4,,"Aldalur I. (AUID: 56492990100), Arrieta A. (AUID: 56514865400), Sagardui G. (AUID: 13104721400), Agirre A. (AUID: 57203899020), Arratibel M. (AUID: 57219568384)",,A microservice-based framework for multi-level testing of cyber-physical systems,2023,Software Quality Journal,,,,,,,0,10.1007/s11219-023-09639-z,https://www.doi.org/10.1007/s11219-023-09639-z,"<Mondragon Unibertsitatea>, <Ikerlan>, <Orona>",,"Â© 2023, The Author(s).In the last years, the use of microservice architectures is spreading in Cyber-Physical Systems (CPSs) and Internet of Things (IoT) domains. CPSs are systems that integrate digital cyber computations with physical processes. The development of software for CPSs demands a constant maintenance to support new requirements, bug fixes, and deal with hardware obsolescence. The key in this process is code testing and more if the code is fragmented during the development of CPSs. It is important to remark that this process is challenging and time-consuming. In this paper, we report on the experience of instantiating of the microservice-based architecture for DevOps of CPSs to test elevator dispatching algorithms across different test levels (i.e., SiL, HiL and Operation). Such an architecture allows for a continuous deployment, monitoring and validation of CPSs. By integrating the approach with a real industrial case study, we demonstrate that our approach reduces significantly the time needed in the testing process and consequently, reduces the economic cost of the entire process.","Cyber-Physical Systems, Elevators, Testing",,,,,,,,"<Deis: Dependability engineering innovation for industrial cps, {eid: 85052091111}>, <Automatic generation of test system instances for configurable cyber-physical systems, {eid: 84988411234, doi: 10.1007/s11219-016-9341-7}>, <Employing multi-objective search to enhance reactive test case generation and prioritization for testing industrial cyber-physical systems, {eid: 85041170102, doi: 10.1109/TII.2017.2788019}>, <Search-based test case generation for cyber-physical systems, {eid: 85022055817}>, <Pareto efficient multi-objective black-box test case selection for simulation-based testing, {eid: 85068071058, doi: 10.1016/j.infsof.2019.06.009}>, <Search-based test case prioritization for simulation-based testing of cyber-physical system product lines, {eid: 85057869201, doi: 10.1016/j.jss.2018.09.055}>, <Design-operation continuum methods for traffic master, {eid: 85160762985}>, <Some seeds are strong: Seeding strategies for search-based test case selection, {eid: 85145884657, doi: 10.1145/3532182}>, <None, {eid: 85160772262}>, <Basic concepts and taxonomy of dependable and secure computing, {eid: 12344308304, doi: 10.1109/TDSC.2004.2}>, <Qos-aware metamorphic testing: An elevation case study, {eid: 85097341759}>, <Towards a taxonomy for eliciting design-operation continuum requirements of cyber-physical systems, {eid: 85093982993}>, <Generating metamorphic relations for cyber-physical systems with genetic programming: An industrial case study, {eid: 85116195970}>, <None, {eid: 85160711792}>, <Digitalization of the world economy: Performance evaluation of introducing cyber-physical systems, {eid: 85084946303}>, <Machine learning-based test selection for simulation-based testing of self-driving cars software, {eid: 85160740180}>, <Testing the untestable: Model testing of complex software-intensive systems, {eid: 84989170087}>, <Robotics software: The future should be open position, {eid: 43749085121, doi: 10.1109/M-RA.2008.915411}>, <Microservice-based performance problem detection in cyber-physical system software updates, {eid: 85115716384}>, <Using regression learners to predict performance problems on software updates: A case study on elevators dispatching algorithms, {eid: 85104966136}>, <A modular cps architecture design based on ros and docker, {eid: 84964196260, doi: 10.1007/s12008-016-0313-8}>, <A system identification based oracle for control-cps software fault localization, {eid: 85072284658}>, <Automated fault tolerance augmentation in model-driven engineering for CPS, {eid: 85079534491, doi: 10.1016/j.csi.2020.103424}>, <A search-based framework for automatic generation of testing environments for cyber-physical systems, {eid: 85133963234, doi: 10.1016/j.infsof.2022.106936}>, <Simulation-based test case generation for unmanned aerial vehicles in the neighborhood of real flights, {eid: 85160764524}>, <Resource-aware control-model-based co-engineering of control algorithms and real-time systems, {eid: 84938604001}>, <None, {eid: 79957551757}>, <Cross-layer design of reconfigurable cyber-physical systems, {eid: 85020188209}>, <Test generation and test prioritization for simulink models with dynamic behavior, {eid: 85042870776, doi: 10.1109/TSE.2018.2811489}>, <Generating automated and online test oracles for simulink models with continuous and uncertain behaviors, {eid: 85071946902}>, <Approximation-refinement testing of compute-intensive cyber-physical models: An approach based on system identification, {eid: 85093102888}>, <A fault-injection methodology for the system-level dependability analysis of multiprocessor embedded systems, {eid: 84906326908, doi: 10.1016/j.micpro.2014.05.008}>, <Simulation integration platforms for cyber-physical systems, {eid: 85066022650}>, <Evaluating model testing and model checking for finding requirements violations in simulink models, {eid: 85071930534}>, <Integrating test levels for embedded systems, {eid: 77949939939}>, <Survey on test case generation, selection and prioritization for cyber-physical systems, {eid: 85114863453, doi: 10.1002/stvr.1794}>, <An approach to model dependability of cyber-physical systems, {eid: 84957005489, doi: 10.1016/j.micpro.2015.11.021}>, <Test case prioritization for acceptance testing of cyber physical systems: A multi-objective search-based approach, {eid: 85051547390}>, <Uncertainty-aware specification and analysis for hardware-in-the-loop testing of cyber-physical systems, {eid: 85090366447, doi: 10.1016/j.jss.2020.110813}>, <None, {eid: 0027684588}>, <Research directions for cyber physical systems in wireless and mobile healthcare, {eid: 85075490036, doi: 10.1145/2899006}>, <A model-driven co-design framework for fusing control and scheduling viewpoints, {eid: 85042334695, doi: 10.3390/s18020628}>, <None, {eid: 85160806582}>, <Digital twins for dependability improvement of autonomous driving, {eid: 85072985446}>, <Automatic generation of system test cases from use case specifications, {eid: 84975763819}>, <Automotive validation functions for on-line test evaluation of hybrid real-time systems, {eid: 43549099810}>",,,Springer,,,2023-01-01,,,,,,,eng,,Journal,,,,2-s2.0-85160692935
5,,"Cortellessa V. (AUID: 6603764364), Di Pompeo D. (AUID: 57188727238), Eramo R. (AUID: 18039710400), Tucci M. (AUID: 55317706000)",,A model-driven approach for continuous performance engineering in microservice-based systems,2022,Journal of Systems and Software,,,,,,,21,10.1016/j.jss.2021.111084,https://www.doi.org/10.1016/j.jss.2021.111084,"<DISIM, University of LAquila>",,"Â© 2021 The Author(s)Microservices are quite widely impacting on the software industry in recent years. Rapid evolution and continuous deployment represent specific benefits of microservice-based systems, but they may have a significant impact on non-functional properties like performance. Despite the obvious relevance of this property, there is still a lack of systematic approaches that explicitly take into account performance issues in the lifecycle of microservice-based systems. In such a context of evolution and re-deployment, Model-Driven Engineering techniques can provide major support to various software engineering activities, and in particular they can allow managing the relationships between a running system and its architectural model. In this paper, we propose a model-driven integrated approach that exploits traceability relationships between the monitored data of a microservice-based running system and its architectural model to derive recommended refactoring actions that lead to performance improvement. The approach has been applied and validated on two microservice-based systems, in the domain of e-commerce and ticket reservation, respectively, whose architectural models have been designed in UML profiled with MARTE.","Continuous deployment, Microservices, Model-driven engineering, Performance engineering, Software evolution, Software refactoring",,,,,,,,"<None, {eid: 85117092929}>, <Performance-driven software model refactoring, {eid: 85029760730, doi: 10.1016/j.infsof.2017.09.006}>, <Exploiting architecture/runtime model-driven traceability for performance improvement, {eid: 85065793737, doi: 10.1109/ICSA.2019.00017}>, <Performance-based software model refactoring in fuzzy contexts, {eid: 84944250248, doi: 10.1007/978-3-662-46675-9_10}>, <Models@run.time: a guided tour of the state of the art and research challenges, {eid: 85059780955, doi: 10.1007/s10270-018-00712-x}>, <Models@run.time, {eid: 85008066028, doi: 10.1109/MC.2009.326}>, <Model-driven engineering for design-runtime interaction in complex systems: Scientific challenges and roadmap - report on the mde@derun 2018 workshop, {eid: 85058512584, doi: 10.1007/978-3-030-04771-9_40}>, <Microservices: Architecting for continuous delivery and DevOps, {eid: 85051140111, doi: 10.1109/ICSA.2018.00013}>, <JTL: a bidirectional and change propagating transformation language, {eid: 79952255625, doi: 10.1007/978-3-642-19440-5_11}>, <None, {eid: 85049690898, doi: 10.1145/3183440.3183481}>, <None, {eid: 84884855569, doi: 10.1007/978-3-642-40725-3_1}>, <Model-Based Software Performance Analysis, {eid: 84859490038, doi: 10.1007/978-3-642-13621-4}>, <An approach for modeling and detecting software performance antipatterns based on first-order logics, {eid: 84893724525, doi: 10.1007/s10270-012-0246-z}>, <An approach for modeling and detecting software performance antipatterns based on first-order logics, {eid: 84893724525, doi: 10.1007/s10270-012-0246-z}>, <Model-Integrating Microservices: A Vision Paper, {eid: 84964253422}>, <A microservice reference case study for design-runtime interaction in MDE, {eid: 85069712231}>, <Model-driven generation of microservice architectures for benchmarking performance and resilience engineering approaches, {eid: 85019479213, doi: 10.1145/3053600.3053627}>, <Improved traceability for bidirectional model transformations, {eid: 85063081813}>, <The Stable Model Semantics for Logic Programming, {eid: 0001119421}>, <Run-time Software Architectural Models for Adaptation, Recovery and Evolution, {eid: 85041444711}>, <Suanming: Explainable prediction of performance degradations in microservice applications, {eid: 85104516502, doi: 10.1145/3427921.3450248}>, <Architectural runtime models for integrating runtime observations and component-based models, {eid: 85087587294, doi: 10.1016/j.jss.2020.110722}>, <The EPSILON book, {eid: 79959264644}>, <Quantitative system performance: computer system analysis using queueing network models, {eid: 0003834102}>, <The DLV system for knowledge representation and reasoning, {eid: 33745244351, doi: 10.1145/1149114.1149117}>, <Incremental calibration of architectural performance models with parametric dependencies, {eid: 85085913656, doi: 10.1109/ICSA47634.2020.00011}>, <Building Microservices, {eid: 84950338538}>, <A UML profile for MARTE: modeling and analysis of real-time embedded systems, OMG, {eid: 77954782575}>, <Unified Modeling Language, Version 2.5, OMG, {eid: 84888639273}>, <Rigorous identification and encoding of trace-links in model-driven engineering, {eid: 80053133555, doi: 10.1007/s10270-010-0158-8}>, <DeSARM: A Decentralized Mechanism for Discovering Software Architecture Models at Runtime in Distributed Systems, {eid: 85006162887}>, <Differences between model-driven development of service-oriented and microservice architecture, {eid: 85025587207, doi: 10.1109/ICSAW.2017.32}>, <Corrigendum: âmean-value analysis of closed multichain queuing networksâ, {eid: 84976800242, doi: 10.1145/322261.322275}>, <Improving microservice-based applications with runtime placement adaptation, {eid: 85062150526, doi: 10.1186/s13174-019-0104-0}>, <Model-driven engineering, {eid: 33344465743, doi: 10.1109/MC.2006.58}>, <None, {eid: 85117076351}>, <Exploiting load testing and profiling for performance antipattern detection, {eid: 85039063985, doi: 10.1016/j.infsof.2017.11.016}>, <WESSBAS: extraction of probabilistic workload specifications for load testing and performance prediction - a model-driven approach for session-based application systems, {eid: 84991818131, doi: 10.1007/s10270-016-0566-5}>, <Software engineering of self-adaptive systems, {eid: 85083949468, doi: 10.1007/978-3-030-00262-6_11}>, <A survey of traceability in requirements engineering and model-driven development, {eid: 77956264581, doi: 10.1007/s10270-009-0145-0}>, <The future of software performance engineering, {eid: 34748855838, doi: 10.1109/FOSE.2007.32}>, <Latent error prediction and fault localization for microservice applications by learning from system trace logs, {eid: 85071904016, doi: 10.1145/3338906.3338961}>, <Delta debugging microservice systems, {eid: 85056537506, doi: 10.1145/3238147.3240730}>, <Benchmarking microservice systems for software engineering research, {eid: 85049690447, doi: 10.1145/3183440.3194991}>, <Automation of the Incremental Integration of Microservices Architectures, {eid: 85018772815, doi: 10.1007/978-3-319-52593-8_4}>",,,Elsevier Inc.,,,2022-01-01,,,,,,,eng,,Journal,,,,2-s2.0-85117098236
6,,"Yang Y. (AUID: 57210824536), Pan C. (AUID: 57222322120), Li Z. (AUID: 57015803000), Zhao R. (AUID: 16064942800)",,Adaptive Reward Computation in Reinforcement Learning-Based Continuous Integration Testing,2021,IEEE Access,,,,,,,3,10.1109/ACCESS.2021.3063232,https://www.doi.org/10.1109/ACCESS.2021.3063232,"<College of Information Science and Technology, Beijing University of Chemical Technology>",,"Â© 2013 IEEE.Reinforcement learning (RL) has been applied to prioritizing test cases in Continuous Integration (CI) testing, where the reward plays a crucial role. It has been demonstrated that historical information-based reward function can improve the effectiveness of the test case prioritization (TCP). However, the inherent character of frequent iterations in CI can produce a considerable accumulation of historical information, which may decrease TCP efficiency and result in slow feedback. In this paper, the partial historical information is considered in the reward computation, where sliding window techniques are adopted to capture the possible efficient information. Firstly, the fixed-size sliding window is introduced to set a fixed length of recent historical information for each CI test. Then dynamic sliding window techniques are proposed, where the window size is continuously adaptive to each CI testing. Two methods are proposed, the test suite-based dynamic sliding window and the individual test case-based dynamic sliding window. The empirical studies are conducted on fourteen industrial-level programs, and the results reveal that under limited time, the sliding window-based reward function can effectively improve the TCP effect, where the NAPFD (Normalized Average Percentage of Faults Detected) and Recall of the dynamic sliding windows are better than that of the fixed-size sliding window. In particular, the individual test case-based dynamic sliding window approach can rank 74.18% failed test cases in the top 50% of the sorting sequence, with 1.35% improvement of NAPFD and 6.66 positions increased in TTF (Test to Fail).","Continuous integration, reinforcement learning, reward computation, sliding window, test case prioritization",,,,,,,,"<Continuous integration, delivery and deployment: A systematic review on approaches, tools, challenges and practices, {eid: 85019140530}>, <Continuous integration and its tools, {eid: 84899646622}>, <Test case prioritization in continuous integration environments: A systematic mapping study, {eid: 85078708254}>, <Effect of time window on the performance of continuous regression testing, {eid: 85013123088}>, <Comparing white-box and black-box test prioritization, {eid: 84971425590}>, <Test re-prioritization in continuous testing environments, {eid: 85058303599}>, <Reinforcement learning: An introduction, {eid: 85067344495}>, <Reinforcement learning for automatic test case prioritization and selection in continuous integration, {eid: 85026639599}>, <Learning-to-rank vs ranking-to-learn: Strategies for regression testing in continuous integration, {eid: 85094318353}>, <Reward, motivation, and reinforcement learning, {eid: 0037057808}>, <A systematic study of reward for reinforcement learning based continuous integration testing, {eid: 85089907018}>, <Reward of reinforcement learning of test optimization for continuous integration, {eid: 85071576780}>, <History-based test case prioritization with software version awareness, {eid: 84885230977}>, <Test case prioritization approaches in regression testing: A systematic literature review, {eid: 85028775957}>, <Failure history data-based test case prioritization for effective regression test, {eid: 85020852947}>, <A time window based reinforcement learning reward for test case prioritization in continuous integration, {eid: 85092308710}>, <A study of effective regression testing in practice, {eid: 0031335528}>, <Prioritizing test cases for regression testing, {eid: 0035481183}>, <A survey on regression test-case prioritization, {eid: 85058421655}>, <Relationbased test case prioritization for regression testing, {eid: 85079013222}>, <Version specific test case prioritization approach based on artificial neural network, {eid: 85067622737}>, <Incorporating fault-proneness estimations into coverage-based test case prioritization methods, {eid: 85079054649}>, <Requirements based test prioritization using risk factors, {eid: 84946595421}>, <History-based test case prioritization for failure information, {eid: 85018510656}>, <Search algorithms for regression test case prioritization, {eid: 34047189734}>, <A fine-grained parallel multiobjective test case prioritization on GPU, {eid: 84884966832}>, <None, {eid: 84951288122}>, <Epistasis based ACO for regression test case prioritization, {eid: 85039920863}>, <An empirical study of regression testing techniques incorporating context and lifetime factors and improved costbene fit models, {eid: 34547306676}>, <Selecting a cost-effective test case prioritization technique, {eid: 3142772245}>, <The impact of continuous integration on other software development practices: A large-scale empirical study, {eid: 85041445161}>, <How does regression test prioritization perform in real-world software evolution?, {eid: 84971393429}>, <Prioritizing JUnit test cases in absence of coverage information, {eid: 70849096646}>, <Techniques for improving regression testing in continuous integration development environments, {eid: 84986877429}>, <Test case prioritization for continuous regression testing: An industrial case study, {eid: 84891715780}>, <Enhanced weighted method for test case prioritization in regression testing using unique priority value, {eid: 85018268821}>, <Experience report: Automated system level regression test prioritization using multiple factors, {eid: 85013287871}>, <Test prioritization in continuous integration environments, {eid: 85053760573}>, <None, {eid: 85102302639}>, <None, {eid: 85102288696}>, <None, {eid: 85102275463}>, <None, {eid: 85010746053}>, <Reinforcement learning and the reward engineering principle, {eid: 85048232151}>, <Combinatorial interaction regression testing: A study of test case generation and prioritization, {eid: 47349111813}>, <Prioritizing test cases for regression testing, {eid: 0035481183}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2021-01-01,,,,,,,eng,,Journal,,,,2-s2.0-85102280980
7,,Heinrich R. (AUID: 56352523400),,Architectural runtime models for integrating runtime observations and component-based models,2020,Journal of Systems and Software,,,,,,,7,10.1016/j.jss.2020.110722,https://www.doi.org/10.1016/j.jss.2020.110722,<Karlsruhe Institute of Technology>,,"Â© 2020 Elsevier Inc.Keeping track of modern software applications while dynamically changing requires strong interaction of evolution activities on development level and adaptation activities on operation level. Knowledge about software architecture is key for both, developers while evolving the system and operators while adapting the system. Existing architectural models used in development differ from those used in operation in terms of purpose, abstraction and content. Consequences are limited reuse of development models during operation, lost architectural knowledge and limited phase-spanning consideration of software architecture. In this paper, we propose modeling concepts of the iObserve approach to align architectural models used in development and operation. We present a correspondence model to bridge the divergent levels of abstraction between implementation artifacts and component-based architectural models. A transformation pipeline uses the information stored in the correspondence model to update architectural models based on changes during operation. Moreover, we discuss the modeling of complex workload based on observations during operation. In a case study-based evaluation, we examine the accuracy of our models to reflect observations during operation and the scalability of the transformation pipeline. Evaluation results show the accuracy of iObserve. Furthermore, evaluation results indicate iObserve adequately scales for some cases but shows scalability limits for others.","Palladio Component Model, Performance model, Runtime model, Software architecture, Workload",,,,,,,,"<Handbook of Mathematical Functions, With Formulas, Graphs, and Mathematical Tables, {eid: 0004245694}>, <An efficient k-means clustering algorithm, {eid: 0010223634}>, <The goal question metric approach, {eid: 0003219646}>, <Model-driven generation of performance prototypes, {eid: 70349869472}>, <Models@run.time, {eid: 84941067484}>, <Automated extraction of architecture-level performance models of distributed component-based systems, {eid: 84855423802}>, <Software Engineering for Self-Adaptive Systems, {eid: 77953794996}>, <A framework for QoS-aware binding and re-binding of composite web services, {eid: 48649083660}>, <Software engineering for self-adaptive systems: A research roadmap, {eid: 70350033987}>, <Software architecture reconstruction: A process-oriented taxonomy, {eid: 68949213770}>, <Foundations of model (driven) (reverse) engineering â episode i: Story of the fidus papyrus and the solarus, {eid: 85009753914}>, <Towards an ontology-based approach for heterogeneous model matching, {eid: 85054392746}>, <Reverse engineering of dependency graphs via dynamic analysis, {eid: 85026279390}>, <iObserve: Integrated Observation and Modeling Techniques to Support Adaptation and Evolution of Software Systems: Technical Report 1309, {eid: 84907075849}>, <Architectural run-time models for performance and privacy analysis in dynamic cloud applications, {eid: 85009820181}>, <A platform for empirical research on information system evolution, {eid: 84969799476}>, <Architectural run-time models for operator-in-the-loop adaptation of cloud applications, {eid: 84962258021}>, <Software Architecture for Big Data and the Cloud, {eid: 85088566853}>, <The CoCoME Platform for Collaborative Empirical Research on Information System Evolution: Technical Report 2016,2; Karlsruhe Reports in Informatics, {eid: 85021444139}>, <Integrating run-time observations and design component models for cloud system analysis, {eid: 84910100889}>, <Self-adaptive workload classification and forecasting for proactive resource provisioning, {eid: 84878200509}>, <CoCoME â the common component modeling example, {eid: 54249117804}>, <Constraint-based runtime prediction of sla violations in service orchestrations, {eid: 82055200312}>, <Extracting realistic user behavior models, {eid: 85044500347}>, <The JPetStore suite: A concise experiment setup for research, {eid: 85087592176}>, <Model-driven instrumentation with Kieker and Palladio to forecast dynamic applications, {eid: 84921053836}>, <A new measure of rank correlation, {eid: 0002282074}>, <Workload characterization and prediction in the cloud: A multiple time series approach, {eid: 84864258982}>, <Modeling variations in load intensity over time, {eid: 84899689132}>, <Peropteryx: Automated application of tactics in multi-objective software architecture optimization, {eid: 79960492145}>, <Change-driven consistency for component code, architectural models, and contracts, {eid: 84958710972}>, <Self-managed systems: an architectural challenge, {eid: 34748879678}>, <A generic platform for transforming monitoring data into performance models, {eid: 85019425281}>, <Automated extraction of rich software models from limited system information, {eid: 84983347731}>, <Distance between sets, {eid: 84937155444}>, <Testing the suitability of Markov chains as web usage models, {eid: 0344235394}>, <Software Maintenance Management: A Study of the Maintenance of Computer Application Software in 487 Data Processing Organizations, {eid: 0003854384}>, <A methodology for workload characterization of e-commerce sites, {eid: 84883870293}>, <Models@run.time to support dynamic adaptation, {eid: 70350345225}>, <What is devops?, {eid: 85070496967}>, <Runtime evolution of highly dynamic software, {eid: 84904816002}>, <Software reflexion models: bridging the gap between design and implementation, {eid: 0035308156}>, <Runtime software adaptation: Framework, approaches, and styles, {eid: 57349126797}>, <X-means: Extending k-means with efficient estimation of the number of clusters, {eid: 0001820920}>, <Observing and Modeling Workload Characteristics of Dynamic Cloud Applications, {eid: 85087591234}>, <Design Space Exploration for Adaptation Planning in Cloud-based Applications, {eid: 85087591929}>, <Impact-minimizing runtime switching of distributed stream processing algorithms, {eid: 84964528084}>, <None, {eid: 84983368333}>, <WALTy: a user behavior tailored tool for evaluating web application performance, {eid: 18844395113}>, <Case Study Research in Software Engineering: Guidelines and Examples, {eid: 84887475109}>, <From object-oriented applications to component-oriented applications via component-oriented architecture, {eid: 80051988759}>, <Discovering architectures from running systems, {eid: 33947144602}>, <Preventing performance violations of service compositions using assumption-based run-time verification, {eid: 80054081482}>, <Runtime model-based privacy checks of big data cloud services, {eid: 84952313491}>, <Data-driven software architecture for analyzing confidentiality, {eid: 85065797802}>, <Supporting runtime software architecture: A bidirectional-transformation-based approach, {eid: 79952453950}>, <Systematic literature review of the objectives, techniques, kinds, and architectures of models at runtime, {eid: 84956625705}>, <Time prediction based on process mining, {eid: 78649485762}>, <Generating probabilistic and intensity-varying workload for web-based software systems, {eid: 70349914519}>, <Automatic extraction of probabilistic workload specifications for load testing session-based application systems, {eid: 84962273190}>, <Typing artifacts in megamodeling, {eid: 84874189436}>, <Adaptation and abstract runtime models, {eid: 77954590997}>, <On unifying development models and runtime models (position paper), {eid: 85009733241}>, <Modeling complex user behavior with the palladio component model, {eid: 85087587169}>, <WESSBAS: extraction of probabilistic workload specifications for load testing and performance predictionâa model-driven approach for session-based application systems, {eid: 84991818131}>, <Teastore: A micro-service reference application for benchmarking, modeling and resource management research, {eid: 85058299875}>, <Performance simulation of runtime reconfigurable component-based software architectures, {eid: 80053211275}>, <An expandable extraction framework for architectural performance models, {eid: 85019501371}>, <Spearman rank correlation coefficient, {eid: 84949442262}>, <Increasing the throughput of pipe-and-filter architectures by integrating the task farm parallelization pattern, {eid: 84981521243}>, <Realizing model transformation chain interoperability, {eid: 84856213872}>",,,Elsevier Inc.,,,2020-11-01,,,,,,,eng,,Journal,,,,2-s2.0-85087587294
8,,"Mendoza C. (AUID: 57215292506), Bocanegra J. (AUID: 41661082200), GarcÃ©s K. (AUID: 35113054600), Casallas R. (AUID: 15064114500)",,Architecture violations detection and visualization in the continuous integration pipeline,2021,Software - Practice and Experience,,,,,,,3,10.1002/spe.3004,https://www.doi.org/10.1002/spe.3004,"<School of Engineering, Department of Systems and Computing Engineering, Universidad de los Andes>",,"Â© 2021 John Wiley & Sons Ltd.New code in projects can introduce violations that deviate the code implementation from the intended architecture. This process is known as architecture erosion. In this article, we propose an approach for recovering the implemented architecture, and detecting violations when comparing it with the intended architecture. Given a code repository, the continuous integration pipeline calls the solution to detect the incidences of architecture violations as well as some quality and social metrics. This data is presented in metric-centered views that help development teams to manage architecture erosion. Our approach is based on model-driven engineering techniques since models serve to represent the code, and a model-based pattern language helps us to automate the search for violation occurrences and execute corresponding actions (e.g., creation/assignment of issues). We confirm the approach benefits in a real project implemented by a software developing company, in a sample project available on the internet, and in a software development course, including 20 projects, where every single project decreases its architecture violations density through time.","architecture discovering, architecture recovering, conformance checking, continuous integration",,,,,,,,"<Decision making in software architecture, {eid: 84956623197}>, <Technical debt and system architecture: the impact of coupling on defect-related activity, {eid: 85027922641}>, <Towards a reference process for software architecture reconstruction, {eid: 85097339934}>, <Controlling software architecture erosion: a survey, {eid: 80755136651}>, <Software architecture erosion: impacts, causes, and management, {eid: 85107011113}>, <Software architecture degradation in open source software: a systematic literature review, {eid: 85101866665}>, <Recovering architectural assumptions, {eid: 33645145073}>, <Documenting after the fact: recovering architectural design decisions, {eid: 40049088606}>, <None, {eid: 77955136099}>, <None, {eid: 84951865531}>, <None, {eid: 85049697376}>, <None, {eid: 84855434526}>, <Detecting, tracing, and monitoring architectural tactics in code, {eid: 84963878679}>, <None, {eid: 84963491024}>, <None, {eid: 85119561514}>, <None, {eid: 85044185772}>, <None, {eid: 85051569623}>, <None, {eid: 85107002894}>, <None, {eid: 85075921993}>, <A collaborative framework to minimise knowledge loss in new product development, {eid: 84873437909}>, <None, {eid: 78649777834}>, <None, {eid: 85102555475}>, <None, {eid: 84964607566}>, <None, {eid: 84879856670}>",,,John Wiley and Sons Ltd,,,2021-08-01,,,,,,,eng,,Journal,,,,2-s2.0-85106982705
9,,"Wiechowski N. (AUID: 57194029486), Kugler A. (AUID: 57194029075), Hansen N. (AUID: 57190119879), Kowalewski S. (AUID: 7006648507), Rambow T. (AUID: 6504314037), Busch R. (AUID: 9246223600)",,Arttest - A New Test Environment for Model-Based Software Development,2017,"SAE World Congress Experience, WCX 2017",,,,,,,6,10.4271/2017-01-0004,https://www.doi.org/10.4271/2017-01-0004,"<RWTH Aachen University>, <Ford Motor Company>",,"Copyright Â© 2017 SAE International.Modern vehicles become increasingly software intensive. Software development therefore is critical to the success of the manufacturer to develop state of the art technology. Standards like ISO 26262 recommend requirement-based verification and test cases that are derived from requirements analysis. Agile development uses continuous integration tests which rely on test automation and evaluation. All these drove the development of a new model-based software verification environment. Various aspects had to be taken into account: the test case specification needs to be easily comprehensible and flexible in order to allow testing of different functional variants. The test environment should support different use cases like open-loop or closed-loop testing and has to provide corresponding evaluation methods for continuously changing as well as for discrete signals. In a joint project of RWTH Aachen University and Ford, a new tool, Arttest, has been developed for testing model-based software. The tool uses a domain specific language to specify the tests. It offers different test evaluation methods for automated open- and closed-loop testing and reactive testing. It automatically executes the tests, evaluates the outputs and generates summary reports indicating passed tests and errors found. The paper presents the tool and its various unique propositions such as domain specific test language, the evaluation properties and other features like open-loop and closed-loop capabilities.",,,,,,,,,"<Economical impact of model-based development of embedded software systems in cars, {eid: 79960107950, doi: 10.1365/s35595-011-0026-3}>, <Standard Glossary of Software Engineering Technology, {eid: 85018402638}>, <None, {eid: 0004217479}>, <None, {eid: 85018446942}>, <IEEE standard for floating-point arithmetic, {eid: 69149088136}>, <WCOMP: Waveform Comparison Tool for Mixed-signal Validation Regression in Memory Design, {eid: 46649090540}>",,,SAE International,,,2017-04-04,,,,,,,eng,,Journal,,,,2-s2.0-85018395241
10,,"Pelliccione P. (AUID: 8852257900), Knauss E. (AUID: 24829443700), Heldal R. (AUID: 6602582740), Magnus Ãgren S. (AUID: 57204734965), Mallozzi P. (AUID: 57190190199), Alminger A. (AUID: 36476094700), Borgentun D. (AUID: 57190184465)",,Automotive Architecture Framework: The experience of Volvo Cars,2017,Journal of Systems Architecture,,,,,,,64,10.1016/j.sysarc.2017.02.005,https://www.doi.org/10.1016/j.sysarc.2017.02.005,"<Chalmers University of Technology | University of Gothenburg, Department of Computer Science and Engineering>, <Bergen University College>, <Volvo Cars>",,"Â© 2017 Elsevier B.V.The automotive domain is living an extremely challenging historical moment shocked by many emerging business and technological needs. Electrification, autonomous driving, and connected cars are some of the driving needs in this changing world. Increasingly, vehicles are becoming software-intensive complex systems and most of the innovation within the automotive industry is based on electronics and software. Modern vehicles can have over 100 Electronic Control Units (ECUs), which are small computers, together executing gigabytes of software. ECUs are connected to each other through several networks within the car, and the car is increasingly connected with the outside world. These novelties ask for a change on how the software is engineered and produced and for a disruptive renovation of the electrical and software architecture of the car. In this paper we describe the current investigation of Volvo Cars to create an architecture framework able to cope with the complexity and needs of present and future vehicles. Specifically, we present scenarios that describe demands for the architectural framework and introduce three new viewpoints that need to be taken into account for future architectural decisions: Continuous Integration and Deployment, Ecosystem and Transparency, and car as a constituent of a System of Systems. Our results are based on a series of focus groups with experts in automotive engineering and architecture from different companies and universities.","Architecture framework, Automotive domain, Automotive ecosystem, Continuous integration and deployment, Software architecture, Systems of Systems",,,,,,,,"<How KETs can contribute to the re-industrialisation of Europe, {eid: 85020620820}>, <A proposal for an automotive architecture framework for Volvo Cars, {eid: 84978258746, doi: 10.1109/WASA.2016.9}>, <None, {eid: 85020619457}>, <Toward a holistic and standardized automotive architecture description, {eid: 73449140146}>, <None, {eid: 84957056085}>, <Viewpoints: a framework for integrating multiple perspectives in system development, {eid: 0003112251}>, <The 4+1 view model of architecture, {eid: 0029408391}>, <Software Systems Architecture: Working With Stakeholders Using Viewpoints and Perspectives, {eid: 33751002702}>, <Documenting Software Architectures: Views and Beyond, {eid: 0006029493}>, <The Process of Software Architecting, {eid: 77958190800}>, <Every architecture description needs a framework: expressing architecture frameworks using ISO/IEC 42010, {eid: 74349118841}>, <None, {eid: 85020690691}>, <None, {eid: 85020643792}>, <None, {eid: 85020643819}>, <None, {eid: 85020646390}>, <None, {eid: 84870680275}>, <SADT: Structured Analysis and Design Technique, {eid: 0004133986}>, <Unified Modeling Language User Guide, The (2Nd Edition) (Addison-Wesley Object Technology Series), {eid: 0003547470}>, <The east-adl architecture description language for automotive embedded software, {eid: 78449253285}>, <A Practical Guide to SysML: Systems Modeling Language, {eid: 85013989545}>, <Automotive Architecture Framework: Towards a Holistic and Standardised System Architecture Description, {eid: 77950427624}>, <Towards an architectural design framework for automotive systems development, {eid: 84883885003, doi: 10.1007/978-3-642-34404-6_16}>, <What industry needs from architectural languages: a survey, {eid: 84878389746}>, <A classification and comparison framework for software architecture description languages, {eid: 0033892696}>, <Automotive software development: a model based approach, {eid: 85072506138}>, <Architecting in the automotive domain: descriptive vs. prescriptive architecture, {eid: 84943248995, doi: 10.1109/WICSA.2015.18}>, <Descriptive vs. prescriptive models in industry, {eid: 85008425440}>, <The road ahead for architectural languages, {eid: 84922874903, doi: 10.1109/MS.2014.28}>, <What do software architects really do?, {eid: 53949091609, doi: 10.1016/j.jss.2008.08.025}>, <Organic evolution of development organizations-an experience report, {eid: 85072357057}>, <How much up-front? A grounded theory of agile architecture, {eid: 84951764091}>, <Challenges of requirements engineering in autosar ecosystems, {eid: 84962360741}>, <Cross-organizational challenges of requirements engineering in the autosar ecosystem: a case study, {eid: 84965130242}>, <Strategic ecosystem management: a multi-case study on challenges and strategies for different ecosystem types, {eid: 84958238639}>, <Defining Software Ecosystems: A Survey of Software Platforms and Business Network Governance, {eid: 84881930760}>, <Evaluating the governance model of hardware-dependent software ecosystemsâa case study of the axis ecosystem, {eid: 84904550958}>, <A longitudinal case study of an emerging software ecosystem: implications for practice and theory, {eid: 79958283622}>, <Towards enabling cross-organizational modeling in automotive ecosystems, {eid: 84922185430}>, <Achievements and exploitation of the autosar development partnership, {eid: 78449233887}>, <Autosarâa worldwide standard is on the road, {eid: 79751532776}>, <Challenges in automotive software engineering, {eid: 34247127701}>, <Requirements value chains: stakeholder management and requirements engineering in software ecosystems, {eid: 77955440483}>, <Specification and analysis of requirements negotiation strategy in software ecosystems., {eid: 84965109618}>, <Why do we not learn from defects? - Towards defect-driven software process improvement, {eid: 84878080562, doi: 10.5220/0004345602970303}>, <Rapid Development: Taming Wild Software Schedules, {eid: 0004081281}>, <Schedule estimation and uncertainty surrounding the cone of uncertainty, {eid: 33646526465, doi: 10.1109/MS.2006.82}>, <None, {eid: 85020673589}>, <Self-adaptive software: landscape and research challenges, {eid: 70349742463, doi: 10.1145/1516533.1516538}>, <Modeling continuous integration practice differences in industry software development, {eid: 84888645752}>, <Looking into the crystal ball: requirements evolution over time, {eid: 85007251473}>, <Verdict machinery: on the need to automatically make sense of test results, {eid: 84984923529, doi: 10.1145/2931037.2931064}>, <None, {eid: 84922175430}>, <Formalizing software ecosystem modeling, {eid: 77950485011}>, <Business and software ecosystems: how to model, analyze, and survive!, {eid: 85020637816}>, <EAM: ecosystemability assessment method, {eid: 84909957909}>, <Continuous api-design for software ecosystems, {eid: 84945893804}>, <A modelling language for transparency requirements in business information systems, {eid: 84976610185}>, <Foundations for transparency requirements engineering, {eid: 84960861708}>, <Dedicated support for experience sharing in distributed software projects, {eid: 84938348831}>, <Conditional safety certification of open adaptive systems, {eid: 84880234960}>, <Run time safety analysis for automotive systems in an open and adaptive environment, {eid: 84978256488}>, <Formally describing the software architecture of systems-of-systems with sosadl, {eid: 84985906010, doi: 10.1109/SYSOSE.2016.7542926}>, <Developing next generation ADLs through MDE techniques, {eid: 77954735678}>, <None, {eid: 85020628093}>, <Realizing architecture frameworks through megamodelling techniques, {eid: 78649780401, doi: 10.1145/1858996.1859057}>, <On the composition and reuse of viewpoints across architecture frameworks, {eid: 84870705355, doi: 10.1109/WICSA-ECSA.212.21}>, <None, {eid: 0003680794}>",,,Elsevier B.V.,,,2017-06-01,,,,,,,eng,,Journal,,,,2-s2.0-85015806385
11,,"KosiÅska J. (AUID: 16241827400), ZieliÅski K. (AUID: 57206225483)",,Autonomic Management Framework for Cloud-Native Applications,2020,Journal of Grid Computing,,,,,,,17,10.1007/s10723-020-09532-0,https://www.doi.org/10.1007/s10723-020-09532-0,"<Department of Computer Science, Faculty of Computer Science, Electronics and Telecommunications, AGH University of Science and Technology>",,"Â© 2020, The Author(s).In order to meet the rapidly changing requirements of the Cloud-native dynamic execution environment, without human support and without the need to continually improve oneâs skills, autonomic features need to be added. Embracing automation at every layer of performance management enables us to reduce costs while improving outcomes. The main contribution of this paper is the definition of autonomic management requirements of Cloud-native applications. We propose that the automation is achieved via high-level policies. In turn autonomy features are accomplished via the rule engine support. First, the paper presents the engineering perspective of building a framework for Autonomic Management of Cloud-Native Applications, namely AMoCNA, in accordance with Model Driven Architecture (MDA) concepts. AMoCNA has many desirable features whose main goal is to reduce the complexity of managing Cloud-native applications. The presented models are, in fact, meta-models, being technology agnostic. Secondly, the paper demonstrates one possibility of implementing the aforementioned design procedures. The presented AMoCNA implementation is also evaluated to identify the potential overhead introduced by the framework.","Autonomic Computing (AC), Cloud-native, Observability, Policy-driven management, Resource management",,,,,,,,"<Rule engine based lightweight framework for adaptive and autonomic computing, {eid: 47749149969}>, <None, {eid: 77951168228}>, <Orchestrating complex application architectures in heterogeneous clouds, {eid: 85091492884}>, <Resource-Definition Policies for Autonomic Computing, {eid: 67650673423}>, <None, {eid: 85065797199}>, <None, {eid: 85091487278}>, <An sla- based broker for cloud infrastructures, {eid: 84874663533, doi: 10.1007/s10723-012-9241-4}>, <Building lean continuous integration and delivery pipelines by applying devops principles: A case study at varidesk, {eid: 85058271814}>, <Dependable mesh networking patterns, {eid: 85076670133}>, <None, {eid: 85091495200}>, <None, {eid: 85091487217}>, <None, {eid: 85091479034}>, <None, {eid: 85091520036}>, <None, {eid: 0141684320}>, <None, {eid: 67651248827}>, <The dawning of the autonomic computing era, {eid: 0037236308, doi: 10.1147/sj.421.0005}>, <Data-Driven Monitoring for Cloud Compute Systems, {eid: 85009097790}>, <Iaasmon: Monitoring architecture for public cloud computing data centers, {eid: 84960102697, doi: 10.1007/s10723-015-9357-4}>, <None, {eid: 85091509890}>, <A survey of autonomic computing â degrees, models, and applications, {eid: 42449088961, doi: 10.1145/1380584.1380585}>, <None, {eid: 85091488312}>, <None, {eid: 85091531968}>, <None, {eid: 85091486634}>, <None, {eid: 85091539340}>, <None, {eid: 85091502096}>, <On the general theory of control systems, {eid: 84936764522, doi: 10.1109/TAC.1959.1104873}>, <The vision of autonomic computing, {eid: 0037253062, doi: 10.1109/MC.2003.1160055}>, <None, {eid: 85040769709}>, <Adaptive SOA solution stack, {eid: 84861921234, doi: 10.1109/TSC.2011.8}>, <None, {eid: 85091523873}>, <Supporting programmable autoscaling rules for containers and virtual machines on clouds, {eid: 85072128121, doi: 10.1007/s10723-019-09488-w}>, <A brief history of cloud application architectures, {eid: 85051750704, doi: 10.3390/app8081368}>, <Clouns - A Cloud-native Application Reference Model for Enterprise Architects, {eid: 85091479401}>, <Intellectual Property and Open Source: A Practical Guide to Protecting Code, 1 edn. OâReilly Media, Inc., 1005 Gravenstein Highway North, Sebastopol, pp, {eid: 85091516958}>, <None, {eid: 85091514748}>, <None, {eid: 85091517191}>, <None, {eid: 85091529241}>, <None, {eid: 85091483063}>, <None, {eid: 85091497154}>, <None, {eid: 85091532748}>, <Docker cluster management for the cloud - survey results and own solution, {eid: 84963690007, doi: 10.1007/s10723-016-9366-y}>, <None, {eid: 85091478800}>, <Autonomic management of large clusters and their integration into the grid, {eid: 50849126162, doi: 10.1007/s10723-004-7647-3}>, <None, {eid: 85091479980}>, <Qos-aware Autonomic Resource Management in Cloud Computing: A Systematic Review, {eid: 84954223549, doi: 10.1145/2843889}>, <Policy driven management for distributed systems, {eid: 0028726831, doi: 10.1007/BF02283186}>, <None, {eid: 85091501553}>, <None, {eid: 85050868375}>, <Self-managing cloud-native applications: design, implementation, and experience, {eid: 85002062941, doi: 10.1016/j.future.2016.09.002}>, <Leveraging kubernetes for adaptive and cost-efficient resource management, {eid: 85078873938}>, <Understanding features in soa: Some experiences from distributed systems. In: Proceedings of the 2nd International Workshop on Systems Development in SOA Environments, SDSOA â08, pp. 59â62. Association for Computing Machinery, {eid: 57049177968}>",,,Springer Science and Business Media B.V.,,,2020-12-01,,,,,,,eng,,Journal,,,,2-s2.0-85091538444
12,,"Cazzola W. (AUID: 6602449966), Maurina G. (AUID: 57219853565), Ghosh S. (AUID: 7404807269), Al-Refai M. (AUID: 57222159787)",,Bridging the model-to-code abstraction gap with fuzzy logic in model-based regression test selection,2022,Software and Systems Modeling,,,,,,,2,10.1007/s10270-021-00899-6,https://www.doi.org/10.1007/s10270-021-00899-6,"<Computer Science Department, UniversitÃ  degli Studi di Milano>, <Computer Science Department, Colorado State University>, <Computer Science Department, Jordan University of Science and Technology>",,"Â© 2021, The Author(s).Regression test selection (RTS) approaches reduce the cost of regression testing of evolving software systems. Existing RTS approaches based on UML models use behavioral diagrams or a combination of structural and behavioral diagrams. However, in practice, behavioral diagrams are incomplete or not used. In previous work, we proposed a fuzzy logic based RTS approach called FLiRTS that uses UML sequence and activity diagrams. In this work, we introduce FLiRTS 2, which drops the need for behavioral diagrams and relies on system models that only use UML class diagrams, which are the most widely used UML diagrams in practice. FLiRTS 2 addresses the unavailability of behavioral diagrams by classifying test cases using fuzzy logic after analyzing the information commonly provided in class diagrams. We evaluated FLiRTS 2 on UML class diagrams extracted from 3331 revisions of 13 open-source software systems, and compared the results with those of code-based dynamic (Ekstazi) and static (STARTS) RTS approaches. The average test suite reduction using FLiRTS 2 was 82.06%. The average safety violations of FLiRTS 2 with respect to Ekstazi and STARTS were 18.88% and 16.53%, respectively. FLiRTS 2 selected on average about 82% of the test cases that were selected by Ekstazi and STARTS. The average precision violations of FLiRTS 2 with respect to Ekstazi and STARTS were 13.27% and 9.01%, respectively. The average mutation score of the full test suites was 18.90%; the standard deviation of the reduced test suites from the average deviation of the mutation score for each subject was 1.78% for FLiRTS 2, 1.11% for Ekstazi, and 1.43% for STARTS. Our experiment demonstrated that the performance of FLiRTS 2 is close to the state-of-art tools for code-based RTS but requires less information and performs the selection in less time.","Class diagram, Fuzzy logic, Regression test selection, UML",,,,,,,,"<An extension of class diagram to model the structure of context-aware systems, {eid: 85110943912}>, <A fuzzy logic based approach for model-based regression test selection, {eid: 85040586834}>, <Model-based regression test selection for validating runtime adaptation of software systems, {eid: 84983288652}>, <Supporting inheritance hierarchy changes in model-based regression test selection, {eid: 85037103803, doi: 10.1007/s10270-017-0636-3}>, <Is mutation an appropriate tool for testing experiments?, {eid: 84994006258}>, <ReTEST: A cost effective test case selection technique for modern software development, {eid: 85059652407}>, <Extended UML for the development of context-aware applications, {eid: 84880478665}>, <None, {eid: 84924717453, doi: 10.1017/CBO9780511801129}>, <None, {eid: 85055572256}>, <Heavyweight extension to the UML class diagram metamodel for modeling context aware systems in ubiquitous computing, {eid: 85031778537}>, <Automating regression test selection based on UML designs, {eid: 56649118931, doi: 10.1016/j.infsof.2008.09.010}>, <Model differences in the eclipse modeling framework, {eid: 70849087833}>, <Fine-grained software evolution using UML activity and class models, {eid: 84886838477}>, <Fine-grained semi-automated runtime evolution, {eid: 84904811259}>, <Specification-based regression test selection with risk analysis, {eid: 24944502842}>, <jFuzzyLogic: a java library to design fuzzy logic controllers according to the standard for fuzzy control programming, {eid: 84880075316, doi: 10.1080/18756891.2013.818190}>, <A study on techniques for the automatic generation of membership functions for pattern recognition, {eid: 73649114627}>, <PIT: A practical mutation testing tool for java, {eid: 84984920723}>, <Ten years of genetic fuzzy systems: current framework and new trends, {eid: 0346781553, doi: 10.1016/S0165-0114(03)00111-8}>, <None, {eid: 79959245159, doi: 10.1007/978-3-642-00234-2}>, <None, {eid: 85110938570}>, <How UML is used, {eid: 33745921784, doi: 10.1145/1125944.1125949}>, <A realistic empirical evaluation of the costs and benefits of UML in software maintenance, {eid: 45449102151, doi: 10.1109/TSE.2008.15}>, <A systematic review on regression test selection techniques, {eid: 70350570383, doi: 10.1016/j.infsof.2009.07.001}>, <A model-based regression testing approach for evolving software systems with flexible tool support, {eid: 77953222030}>, <On the use of uml documentation in software maintenance: results from a survey in industry, {eid: 84961575335}>, <None, {eid: 85110943133}>, <Analyze your classes, {eid: 85110992662}>, <Dynamic update of java applications-balancing change flexibility vs programming transparency, {eid: 63849136008, doi: 10.1002/smr.406}>, <Does UML make the grade? Insights from the software development community, {eid: 15344348313, doi: 10.1016/j.infsof.2004.09.005}>, <Evaluating regression test selection opportunities in a very large open-source ecosystem, {eid: 85059628157}>, <Testing evolving software, {eid: 0032663371, doi: 10.1016/S0164-1212(99)00037-0}>, <Regression test selection for java software, {eid: 0035551930}>, <Applying genetic self-architecting for distributed systems, {eid: 84873142653}>, <A technique for the selective revalidation of OO software, {eid: 0031189209}>, <Extending UML to model web 2.0-based context-aware applications, {eid: 84865981340, doi: 10.1002/spe.1124}>, <Empirical assessment of MDE in industry, {eid: 79959917914}>, <On the use of genetic programming for automated refactoring and the introduction of design patterns, {eid: 77955870506}>, <PCP: Privacy-aware context profile towards context-aware application development, {eid: 70349115506}>, <Model based regression test reduction using dependence analysis, {eid: 0036441907}>, <On regression testing of object-oriented programs, {eid: 0029774306, doi: 10.1016/0164-1212(95)00047-X}>, <In practice: UML software architecture and design description, {eid: 33645007339, doi: 10.1109/MS.2006.50}>, <On the usage of UML: Initial results of analyzing open UML models, {eid: 84908214336}>, <An extensive study of static regression test selection in modern software evolution, {eid: 84997112179}>, <None, {eid: 85110951689}>, <Rational software architect: a tool for domain-specific modeling, {eid: 33748314575, doi: 10.1147/sj.453.0555}>, <A cost model to compare regression test strategies, {eid: 35848953495}>, <None, {eid: 85110984330}>, <None, {eid: 85110988714}>, <An experiment in linguistic synthesis with a fuzzy logic controller, {eid: 85009937047, doi: 10.1016/S0020-7373(75)80002-2}>, <ADDiff: Semantic differencing for activity diagrams, {eid: 80053206751}>, <Automated refactoring using design differencing, {eid: 84860532793}>, <None, {eid: 81055148998}>, <UML usage in open source software development: A field study, {eid: 84908155174}>, <UML in practice, {eid: 84886379183}>, <A domain-independent middleware framework for context-aware applications, {eid: 85110979209}>, <Using fuzzy logic and symbolic execution to prioritize UML-RT test cases, {eid: 84935134477}>, <Fuzzy expert system based test cases prioritization from UML state machine diagram using risk information, {eid: 85041103184}>, <SPIRITuS: a simple information retrieval regression test selection approach, {eid: 85045413636, doi: 10.1016/j.infsof.2018.03.004}>, <None, {eid: 84891564455}>, <A safe, efficient regression test selection technique, {eid: 0031125046, doi: 10.1145/248233.248262}>, <ContextUML: A UML-based modeling language for model-driven development of context-aware web services, {eid: 84937915571}>, <Balancing trade-offs in test-suite reduction, {eid: 84986890458}>, <A systematic literature review of UML-based domain-specific modeling languages for self-adaptive systems, {eid: 85051531753}>, <Towards a domain-specific modeling language for self-adaptive systems conceptual modeling, {eid: 85055806741}>, <Modeling context in mobile distributed systems with the UML, {eid: 34548601270, doi: 10.1016/j.jvlc.2007.07.001}>, <Improving class firewall regression test selection by removing the class firewall, {eid: 34547477086, doi: 10.1142/S0218194007003306}>, <Change-based test selection in the presence of developer tests, {eid: 84877264475}>, <Change-based test selection: an empirical evaluation, {eid: 84946763232, doi: 10.1007/s10664-015-9405-5}>, <Regression test suite selection using dependence analysis, {eid: 84883631405, doi: 10.1002/smr.1559}>, <A firewall approach for regression testing of object-oriented software, {eid: 20344404127}>, <A Brazilian survey on UML and model-driven practices for embedded software development, {eid: 84875253410, doi: 10.1016/j.jss.2012.11.023}>, <Differencing logical UML models, {eid: 34547256185, doi: 10.1007/s10515-007-0007-3}>, <System regression test planning with a fuzzy expert system, {eid: 84889674297, doi: 10.1016/j.ins.2010.09.012}>, <Automatic regression test selection based on activity diagrams, {eid: 80052997338}>, <Regression testing minimization, selection and prioritization: a survey, {eid: 84857550008, doi: 10.1002/stv.430}>, <A study of regression test selection in continuous integration environments, {eid: 85059631520}>, <Fuzzy sets, {eid: 34248666540, doi: 10.1016/S0019-9958(65)90241-X}>, <A generic platform for model-based regression testing, {eid: 84868277587}>, <Model-based regression testing by OCL, {eid: 84947447150, doi: 10.1007/s10009-015-0408-8}>, <None, {eid: 85110943647}>",,,Springer Science and Business Media Deutschland GmbH,,,2022-02-01,,,,,,,eng,,Journal,,,,2-s2.0-85110999535
13,,"Ferry N. (AUID: 35291975700), Chauvel F. (AUID: 13104917300), Song H. (AUID: 57195274282), Lushpenko M. (AUID: 57063267500), Solberg A. (AUID: 14827375100), Rossini A. (AUID: 7102582294)",,CloudMF: Model-driven management of multi-cloud applications,2018,ACM Transactions on Internet Technology,,,,,,,57,10.1145/3125621,https://www.doi.org/10.1145/3125621,"<Department of Software and Service Innovation>, <EVRY Cloud Services>",,"While the number of cloud solutions is continuously increasing, the development and operation of largescale and distributed cloud applications are still challenging. A major challenge is the lack of interoperability between the existing cloud solutions, which increases the complexity of maintaining and evolving complex applications potentially deployed across multiple cloud infrastructures and platforms. In this article, we show how the Cloud Modelling Framework leverages model-driven engineering and supports the DevOps ideas to tame this complexity by providing: (i) a domain-specific language for specifying the provisioning and deployment of multi-cloud applications, and (ii) a models@run-time environment for their continuous provisioning, deployment, and adaptation.","Cloud computing, DevOps, Model-driven engineering, Models@run-time, Multi-cloud",,,,,,,,"<MODACLOUDS, A model-driven approach for the design and execution of applications on multiple clouds, {eid: 84864997201}>, <Rearchitecting the UML infrastructure, {eid: 0141796082}>, <Genie: Supporting themodel driven development of reflective, component-based adaptive systems, {eid: 57349137662}>, <UML-based cloud application modeling with libraries, profiles, and templates, {eid: 84911965669}>, <OpenTOSCA-A runtime for TOSCA-based cloud applications, {eid: 84892400015}>, <Models@run. Time, {eid: 85008066028}>, <CloudScale: Scalability management for cloud systems, {eid: 84878201490}>, <Fine-grained software evolution using UML activity and class models, {eid: 84886838477}>, <Models@Runtime to support the iterative and continuous design of autonomous reasoners, {eid: 84924026082}>, <Evaluating robustness of cloud-based systems, {eid: 85006226396}>, <None, {eid: 2942742234}>, <Xtext: Implement your language faster than the quick and dirty way, {eid: 78650158701}>, <Managing multi-cloud systems with CloudMF, {eid: 84884604847}>, <Towards model-driven provisioning, deployment, monitoring, and adaptation of multi-cloud systems, {eid: 84884667453}>, <CloudMF: Applying MDE to tame the complexity of managing multi-cloud applications, {eid: 84946685259}>, <None, {eid: 84991397971}>, <An eclipse modelling framework alternative to meet the models@runtime requirements, {eid: 84867650983}>, <Search-based genetic optimization for deployment and reconfiguration of software in the cloud, {eid: 84883666968}>, <The CloudMIG approach: Model-based migration of software systems to cloudoptimized applications, {eid: 84886445739}>, <None, {eid: 84858197925}>, <A vision for better cloud applications, {eid: 84879752766}>, <Research information management: The CERIF approach, {eid: 84893938543}>, <SRL: A scalability rule language for multi-cloud environments, {eid: 84937897999}>, <Matters of (meta-)modeling, {eid: 34248658631}>, <None, {eid: 77954051808}>, <Models@Run. Time to support dynamic adaptation, {eid: 70350345225}>, <Smart route planning using open data and participatory sensing, {eid: 84929623326}>, <Topology and Orchestration Specification for Cloud Applications (TOSCA), {eid: 84886743417}>, <Consuming resources and services from multiple clouds-From terminology to cloudware support, {eid: 84905015886}>, <None, {eid: 85041434700}>, <Cardinality-based feature models with constraints: A pragmatic approach, {eid: 84883865735}>, <The reservoir model and architecture for open federated cloud computing, {eid: 74049087607}>, <None, {eid: 85041451210}>, <Building an open-source platform-as-A-service with intelligent management of multiple cloud resources, {eid: 84874243873}>, <PaaS-independent provisioning and management of applications in the cloud, {eid: 84897744190}>, <A runtime model based monitoring approach for cloud, {eid: 77957948402}>, <None, {eid: 85041448787}>, <None, {eid: 0004055652}>, <On architectural diversity of dynamic adaptive systems, {eid: 84951732317}>, <None, {eid: 85041436770}>, <None, {eid: 85041434332}>",,,Association for Computing Machinery,,,2018-01-01,,,,,,,eng,,Journal,,,,2-s2.0-85041437398
14,,"Jongeling R. (AUID: 57188564750), Ciccozzi F. (AUID: 36616784300), Carlson J. (AUID: 7402114423), Cicchetti A. (AUID: 22733357800)",,Consistency management in industrial continuous model-based development settings: a reality check,2022,Software and Systems Modeling,,,,,,,6,10.1007/s10270-022-01000-5,https://www.doi.org/10.1007/s10270-022-01000-5,"<Department of Innovation, Design and Engineering (IDT), MÃ¤lardalen University>",,"Â© 2022, The Author(s).This article presents the state of practice of consistency management in thirteen industrial model-based development settings. Our analysis shows a tight coupling between adopting shorter development cycles and increasingly pressing consistency management challenges. We find that practitioners desire to adopt shorter development cycles, but immature modeling practices slow them down. We describe the different patterns that emerge from the various industrial settings. There is an opportunity for researchers to provide practitioners with a migration path toward practices that enable more automated consistency management, and ultimately, continuous model-based development.","Agile, Consistency management, Model-based development",,,,,,,,"<The integration of agile development and model driven developmentâA systematic literature review, {eid: 85041446030}>, <Architecture consistency: state of the practice, challenges and requirements, {eid: 85019238725, doi: 10.1007/s10664-017-9515-3}>, <None, {eid: 0038018633}>, <Benchmarking bidirectional transformations: theory, implementation, application, and assessment, {eid: 85073810908, doi: 10.1007/s10270-019-00752-x}>, <Orthographic modeling environment, {eid: 47249113536}>, <Model-Driven Engineering in a Large Industrial ContextâMotorola Case Study, {eid: 33646192696}>, <Tolerating inconsistency, {eid: 0026237315}>, <None, {eid: 85137076492}>, <On the need for megamodels, {eid: 84911928640}>, <A feature-based survey of model view approaches, {eid: 85029537056, doi: 10.1007/s10270-017-0622-9}>, <Grand challenges in model-driven engineering: an analysis of the state of the research, {eid: 85077634676, doi: 10.1007/s10270-019-00773-6}>, <Multi-view approaches for software and system modelling: a systematic literature review, {eid: 85061733132, doi: 10.1007/s10270-018-00713-w}>, <Automating co-evolution in model-driven engineering, {eid: 56649105329}>, <Towards Agile Model-based Systems Engineering, {eid: 85041433552}>, <A three-dimensional taxonomy for bidirectional model synchronization, {eid: 84941661877, doi: 10.1016/j.jss.2015.06.003}>, <Automatically detecting and tracking inconsistencies in software design models, {eid: 79953196410, doi: 10.1109/TSE.2010.38}>, <Agile model-driven engineering in mechatronic systemsâAn industrial case study, {eid: 84921391979}>, <Enhancing clone-and-own with systematic reuse for developing software variants, {eid: 84924737283}>, <Stepwise Adoption of Continuous Delivery in Model-Driven Engineering, {eid: 85061101819}>, <Combining the continuous integration practice and the model-driven engineering approach, {eid: 84981165314}>, <From model transformation to incremental bidirectional model synchronization, {eid: 57349131044, doi: 10.1007/s10270-008-0089-9}>, <Approaches to co-evolution of metamodels and models: a survey, {eid: 85021770842, doi: 10.1109/TSE.2016.2610424}>, <Feature-based classification of bidirectional transformation approaches, {eid: 84922343672, doi: 10.1007/s10270-014-0450-0}>, <Dagstuhl seminar on bidirectional transformations (bx), {eid: 79960818835, doi: 10.1145/2007206.2007217}>, <Model-driven engineering practices in industry: Social, organizational and managerial factors that lead to success or failure, {eid: 84900499307, doi: 10.1016/j.scico.2013.03.017}>, <None, {eid: 85128325065}>, <None, {eid: 72349086391}>, <Impediments to introducing continuous integration for model-based development in industry, {eid: 85075941988}>, <An empirical study on the impact of inconsistency feedback during model and code co-changing, {eid: 85083197692, doi: 10.5381/jot.2019.18.2.a10}>, <Multi-view consistency in UML: A survey, {eid: 85041806209}>, <Continuous integration beyond the team: A tooling perspective on challenges in the automotive industry, {eid: 84991687521}>, <Model-based engineering in the embedded systems domain: an industrial survey on the state-of-practice, {eid: 84962207101, doi: 10.1007/s10270-016-0523-3}>, <A systematic review of UML model consistency management, {eid: 70349470851, doi: 10.1016/j.infsof.2009.04.009}>, <A feature-based classification of model repair approaches, {eid: 85029226586, doi: 10.1109/TSE.2016.2620145}>, <Continuous integration impediments in large-scale industry projects, {eid: 85021428023}>, <A Hundred Days of Continuous Integration, {eid: 52949092458}>, <An empirical study of the state of the practice and acceptance of model-driven engineering in four industrial cases, {eid: 84872279471, doi: 10.1007/s10664-012-9196-x}>, <Systematic review of software behavioral model consistency checking, {eid: 85017413241}>, <The FUJABA environment, {eid: 0033712787}>, <Climbing the âStairway to HeavenââA Mulitiple-Case Study Exploring Barriers in the Transition from Agile Development towards Continuous Deployment of Software, {eid: 84869851477}>, <Climbing the âStairway to Heavenâ: Evolving from agile development to continuous deployment of software, {eid: 84930702109}>, <Bidirectional mapping between architecture model and code for synchronization, {eid: 85021434975}>, <Examining the co-evolution relationship between Simulink models and their test cases, {eid: 84973453895}>, <Basic problems in multi-view modeling, {eid: 85037995328, doi: 10.1007/s10270-017-0638-1}>, <The Epsilon Generation Language, {eid: 56649123074}>, <Model-driven engineering, {eid: 33344465743}>, <Dynamic hierarchical mega models: comprehensive traceability and its efficient maintenance, {eid: 77956266933, doi: 10.1007/s10270-009-0146-z}>, <Maintaining consistency in networks of models: bidirectional transformations in the large, {eid: 85066782484, doi: 10.1007/s10270-019-00736-x}>, <Multi-model evolution through model repair, {eid: 85103616374, doi: 10.5381/jot.2021.20.1.a2}>, <Relationships between software architecture and source code in practice: an exploratory survey and interview, {eid: 85112473307}>, <A systematic literature review of cross-domain model consistency checking by model management tools, {eid: 85093983978, doi: 10.1007/s10270-020-00834-1}>, <Kim, T.H., Cho, E.s.: A survey of consistency checking techniques for UML models, {eid: 61649088181}>, <Understanding and Facilitating the Co-Evolution of Production and Test Code, {eid: 85106656597}>, <Studying the co-evolution of production and test code in open source and industrial developer test processes through repository mining, {eid: 80052498571, doi: 10.1007/s10664-010-9143-7}>",,,Springer Science and Business Media Deutschland GmbH,,,2022-08-01,,,,,,,eng,,Journal,,,,2-s2.0-85128275171
15,,"Sobhy D. (AUID: 55650774800), Minku L. (AUID: 35762343000), Bahsoon R. (AUID: 6508251119), Kazman R. (AUID: 7004264219)",,Continuous and Proactive Software Architecture Evaluation: An IoT Case,2022,ACM Transactions on Software Engineering and Methodology,,,,,,,3,10.1145/3492762,https://www.doi.org/10.1145/3492762,"<Computer Engineering Department, Arab Academy of Science and Technologyand Maritime Transport>, <University of Birmingham>, <FRSA and University of Birmingham>, <SEI/CMU and University of Hawaii>",,"Â© 2022 Copyright held by the owner/author(s). Publication rights licensed to ACM.Design-Time evaluation is essential to build the initial software architecture to be deployed. However, experts' assumptions made at design-Time are unlikely to remain true indefinitely in systems that are characterized by scale, hyperconnectivity, dynamism, and uncertainty in operations (e.g. IoT). Therefore, experts' design-Time decisions can be challenged at run-Time. A continuous architecture evaluation that systematically assesses and intertwines design-Time and run-Time decisions is thus necessary. This paper proposes the first proactive approach to continuous architecture evaluation of the system leveraging the support of simulation. The approach evaluates software architectures by not only tracking their performance over time, but also forecasting their likely future performance through machine learning of simulated instances of the architecture. This enables architects to make cost-effective informed decisions on potential changes to the architecture. We perform an IoT case study to show how machine learning on simulated instances of architecture can fundamentally guide the continuous evaluation process and influence the outcome of architecture decisions. A series of experiments is conducted to demonstrate the applicability and effectiveness of the approach. We also provide the architect with recommendations on how to best benefit from the approach through choice of learners and input parameters, grounded on experimentation and evidence.","Continuous evaluation, IoT, software architecture evaluation, time series forecasting",,,,,,,,"<None, {eid: 85015736776}>, <None, {eid: 85130731390}>, <None, {eid: 85058315734}>, <A quality-driven systematic approach for architecting distributed software applications, {eid: 85084774290}>, <13th AnnualWorldwide Infrastructure Security Report, {eid: 85130689210}>, <ArcheOpterix: An extendable tool for architecture optimization of AADL models, {eid: 70349898605}>, <Software architecture optimization methods: A systematic literature review, {eid: 84877245642}>, <A practical guide for using statistical tests to assess randomized algorithms in software engineering, {eid: 79959871222}>, <Fault tolerance by design diversity: Concepts and experiments, {eid: 0021471901}>, <Basic concepts and taxonomy of dependable and secure computing, {eid: 12344308304}>, <None, {eid: 85130687091}>, <None, {eid: 85130737451}>, <Introduction to runtime verification, {eid: 85042085747}>, <None, {eid: 84943326563}>, <DIVERSIFY: Ecology-inspired software evolution for diversity emergence, {eid: 84898477308}>, <The Palladio component model for model-driven performance prediction, {eid: 55249125447}>, <Scenario-based software architecture reengineering, {eid: 0031681804}>, <Architecture level prediction of software maintenance, {eid: 0032675806}>, <Architecture-level modifiability analysis (ALMA, {eid: 0242636605}>, <Continuous architecting of stream-based systems, {eid: 84983339996}>, <Botnets and Internet of Things security, {eid: 85012917393}>, <MOA: Massive online analysis, {eid: 77953527363}>, <Dioptase: A distributed data streaming middleware for the future Web of Things, {eid: 84916613099}>, <Mobility-Aware application scheduling in fog computing, {eid: 85019246676}>, <Models@ run.Time, {eid: 85008066028}>, <Software economics: A roadmap, {eid: 85013589577}>, <Software architecture: The next step, {eid: 35048903201}>, <The tradeoffs of large scale learning, {eid: 85162035281}>, <Finding knees in multi-objective optimization, {eid: 35048874287}>, <Reliability prediction for fault-Tolerant software architectures, {eid: 79960510679}>, <Radar: A lightweight tool for requirements and architecture decision analysis, {eid: 85027715334}>, <CloudSim: A toolkit for modeling and simulation of cloud computing environments and evaluation of resource provisioning algorithms, {eid: 78650777991}>, <Emerging techniques for the engineering of self-Adaptive high-integrity software, {eid: 84873857495}>, <None, {eid: 84948002011}>, <Models@ runtime to support the iterative and continuous design of autonomic reasoners, {eid: 84924026082}>, <Performance evaluation of IoT protocols under a constrained wireless access network, {eid: 84981309769}>, <None, {eid: 70349716566}>, <None, {eid: 85130763093}>, <Proactive self-Adaptation for improving the reliability of mission-critical, embedded, and mobile software, {eid: 84890048535}>, <Knowledge-Aware and service-oriented middleware for deploying pervasive services, {eid: 84856234010}>, <Internet of Things in industries: A survey, {eid: 84906834039}>, <Software engineering for self-Adaptive systems: A second research roadmap, {eid: 77953794996}>, <A fast and elitist multiobjective genetic algorithm: NSGA-II, {eid: 0036530772}>, <Statistical comparisons of classifiers over multiple data sets, {eid: 29644438050}>, <Learning in nonstationary environments: A survey, {eid: 84945281802}>, <A survey on software architecture analysis methods, {eid: 0036648558}>, <FUSION: A framework for engineering self-Tuning selfadaptive software systems, {eid: 78751536309}>, <Evolutionary search-based test generation for software product line feature models, {eid: 84867835895}>, <Model evolution by run-Time parameter adaptation, {eid: 77949405114}>, <A learning-based framework for engineering featureoriented self-Adaptive software systems, {eid: 84887877241}>, <GuideArch: Guiding the exploration of architectural solution space under uncertainty, {eid: 84881373907}>, <Hyper-heuristic based product selection for software product line testing, {eid: 85018497624}>, <Learning with drift detection, {eid: 33750725544}>, <A survey on concept drift adaptation, {eid: 84901228061}>, <Rainbow: Architecture-based self-Adaptation with reusable infrastructure, {eid: 7244223259}>, <Architecture-based software reliability analysis: Overview and limitations, {eid: 33847737071}>, <Internet of Things (IoT): A vision, architectural elements, and future directions, {eid: 84876943063}>, <Energy-Aware simulation with DVFS, {eid: 84885955130}>, <IFogSim: A toolkit for modeling and simulation of resourcemanagement techniques in the Internet of Things, Edge and Fog computing environments, {eid: 85021248358}>, <None, {eid: 0003522409}>, <Applying design diversity to aspects of system architectures and deployment configurations to enhance system dependability, {eid: 77953599966}>, <None, {eid: 0003890315}>, <None, {eid: 84858197925}>, <Learning model trees from evolving data streams, {eid: 79960103750}>, <Revisiting service-oriented architecture for the IoT: A middleware perspective, {eid: 84989350537}>, <Transfer learning for improving model predictions in highly configurable software, {eid: 85027096954}>, <Software architecture as a set of architectural design decisions, {eid: 33947154413}>, <Defeating denial-of-service attacks in a self-managing N-variant system, {eid: 85071091713}>, <A systematic review of software development cost estimation studies, {eid: 33845788381}>, <Quantifying the costs and benefits of architectural decisions, {eid: 0035009547}>, <Managing energy consumption as an architectural quality attribute, {eid: 85054371600}>, <None, {eid: 0003680794}>, <Reinforcement learning-based dynamic adaptation planning method for architecture-based self-managed software, {eid: 70349912234}>, <Using additive expert ensembles to cope with concept drift, {eid: 31844453033}>, <Sustainability evaluation of software architectures: A systematic review, {eid: 79960500194}>, <A survey on engineering approaches for self-Adaptive systems, {eid: 84924224388}>, <Sparse online learning via truncated gradient, {eid: 64149115569}>, <A brief account of runtime verification, {eid: 67349182373}>, <Fog computing: A taxonomy, survey and future directions, {eid: 85082363829}>, <Architecture-based reliability evaluation under uncertainty, {eid: 79960549877}>, <Efficient decision-making under uncertainty for proactive self-Adaptation, {eid: 84991696841}>, <Comparing model-based predictive approaches to self-Adaptation: CobRA and PLA, {eid: 85027190822}>, <Models@ run.Time to support dynamic adaptation, {eid: 70350345225}>, <Internet of Mobile Things: Mobility-driven challenges, designs and implementations, {eid: 84977621183}>, <None, {eid: 50249186591}>, <Time series forecasting in the presence of concept drift: A PSO-based approach, {eid: 85048476670}>, <None, {eid: 85130762234}>, <Quality-Attribute based economic valuation of architectural patterns, {eid: 36049001458}>, <A survey on transfer learning, {eid: 77956031473}>, <Applying multiobjective evolutionary algorithms to dynamic software product lines for reconfiguring mobile applications, {eid: 84924992041}>, <Guidelines for conducting systematic mapping studies in software engineering: An update, {eid: 84929464206}>, <CPASA: Continuous performance assessment of software architecture, {eid: 77953208614}>, <Mining cross product line rules with multi-objective search and machine learning, {eid: 85026422242}>, <How theWeb of Things challenges requirements engineering, {eid: 84870946121}>, <None, {eid: 0003854577}>, <None, {eid: 85073058562}>, <Stochastic methods for l1-regularized loss minimization, {eid: 79960131832}>, <Scalable prediction of non-functional properties in software product lines: Footprint andmemory consumption, {eid: 84872961131}>, <Diversifying software architecture for sustainability: A value-based perspective, {eid: 84998678860}>, <Run-Time evaluation of architectures: A case study of diversification in IoT, {eid: 85073076930}>, <Systematic literature review of the objectives, techniques, kinds, and architectures of models at runtime, {eid: 84956643403}>, <None, {eid: 70349441583}>, <Using machine learning to infer constraints for product lines, {eid: 84991711490}>, <Reinforcement learning in autonomic computing: A manifesto and case studies, {eid: 33847379922}>, <Design decisions: The bridge between rationale and architecture, {eid: 34547172887}>, <Robust service compositions with functional and location diversity, {eid: 84963891409}>, <Resampling-based ensemble methods for online class imbalance learning, {eid: 84926617955}>, <Quality prediction and assessment for product lines, {eid: 33745311907}>, <ML-KNN: A lazy learning approach to multi-label learning, {eid: 33947681316}>",,,Association for Computing Machinery,,,2022-07-01,,,,,,,eng,,Journal,,,,2-s2.0-85130680776
16,,"Ferry N. (AUID: 35291975700), Nguyen P.H. (AUID: 55646510700), Song H. (AUID: 57195274282), Rios E. (AUID: 14050840000), Iturbe E. (AUID: 56991048200), Martinez S. (AUID: 57214777475), Rego A. (AUID: 57197729847)",,Continuous deployment of trustworthy smart IoT systems,2020,Journal of Object Technology,,,,,,,10,10.5381/jot.2020.19.2.a16,https://www.doi.org/10.5381/jot.2020.19.2.a16,"<SINTEF>, <TECNALIA, Basque Research and Technology Alliance>",,"Â© 2020 Association Internationale pour les Technologies Objets.While the next generation of IoT systems need to perform distributed processing and coordinated behaviour across IoT, Edge and Cloud infrastructures, their development and operation are still challenging. A major challenge is the high heterogeneity of their infrastructure, which broadens the surface for security attacks and increases the complexity of maintaining and evolving such complex systems. In this paper, we present our approach for Generation and Deployment of Smart IoT Systems (GeneSIS) to tame this complexity. GeneSIS leverages model-driven engineering to support the DevSecOps of Smart IoT Systems (SIS). More precisely, GeneSIS includes: (i) a domain specific modelling language to specify the deployment of SIS over IoT, Edge and Cloud infrastructure with the necessary concepts for security and privacy; and (ii) a models@run. time engine to enact the orchestration, deployment, and adaptation of these SIS. The results from our smart building case study have shown that GeneSIS can support security by design from the development (via deployment) to the operation of IoT systems and back again in a DevSecOps loop. In other words, GeneSIS enables IoT systems to keep up security and adapt to evolving conditions and threats while maintaining their trustworthiness.","DecSecOps, Deployment, DSL, IoT, MDE, Models@run. time",,,,,,,,"<Understanding the software communications architecture, {eid: 70350324202}>, <Rearchitecting the UML infrastructure, {eid: 0141796082}>, <None, {eid: 85008066028}>, <A systematic review of cloud modeling languages, {eid: 85042469266}>, <D-lite: Distributed logic for internet of things services, {eid: 84857617841}>, <Software deployment, past, present and future, {eid: 34748846536}>, <Opentosca for iot: Automating the deployment of iot applications based on the mosquitto message broker, {eid: 85000926700}>, <None, {eid: 85067431815}>, <Cloudmf: Model-driven management of multi-cloud applications, {eid: 85041437398}>, <Development and operation of trustworthy smart IoT systems: The ENACT framework, {eid: 85079102926}>, <Genesis: Continuous orchestration and deployment of smart iot systems, {eid: 85072692587}>, <Enact: Development, operation, and quality assurance of trustworthy smart iot systems, {eid: 85061085691}>, <Developing iot applications in the fog: A distributed dataflow approach, {eid: 84962284412}>, <None, {eid: 24344495942}>, <Thingml: A language and code generation framework for heterogeneous targets, {eid: 85008457888}>, <A generic service oriented software platform to design ambient intelligent systems, {eid: 84962524282}>, <Calvin constrained-a framework for iot applications in heterogeneous environments, {eid: 85027276378}>, <Devsecops: A multivocal literature review, {eid: 85029742916}>, <Advances in deployment and orchestration approaches for IoT-a systematic review, {eid: 85072691780}>, <Towards a smart applications development framework, {eid: 85089682565}>, <A conceptual foundation for component-based software deployment, {eid: 0035878887}>",,,Association Internationale pour les Technologies Objets,,,2020-07-01,,,,,,,eng,,Journal,,,,2-s2.0-85089665982
17,,"Nakagawa E.Y. (AUID: 7007008701), Antonino P.O. (AUID: 36619591600), Schnicke F. (AUID: 57209138657), Kuhn T. (AUID: 7101840137), Liggesmeyer P. (AUID: 14519582400)",,Continuous Systems and Software Engineering for Industry 4.0: A disruptive view,2021,Information and Software Technology,,,,,,,15,10.1016/j.infsof.2021.106562,https://www.doi.org/10.1016/j.infsof.2021.106562,"<University of SÃ£o Paulo, SÃ£o Carlos>, <Fraunhofer IESE, Kaiserslautern>",,"Â© 2021 Elsevier B.V.Context: Industry 4.0 has substantially changed the manufacturing processes, leading to smart factories with full digitalization, intelligence, and dynamic production. The need for rigorous and continuous development of highly networked software-intensive Industry 4.0 systems entails great challenges. Hence, Industry 4.0 requires new ways to develop, operate, and evolve these systems accordingly. Objective: We introduce the view of Continuous Systems and Software Engineering for Industry 4.0 (CSSE I4.0). Method: Based on our research and industrial projects, we propose this novel view and its core elements, including continuous twinning, which is also introduced first in this paper. We also discuss the existing industrial engagement and research that could leverage this view for practical application. Results: There are still several open issues, so we highlight the most urgent perspectives for future work. Conclusions: A disruptive view on how to engineer Industry 4.0 systems must be established to pave the way for the realization of the fourth industrial revolution.","Continuous Software Engineering, Continuous Systems and Software Engineering, Industry 4.0",,,,,,,,"<Continuous software engineering: A roadmap and agenda, {eid: 84937109068, doi: 10.1016/j.jss.2015.06.063}>, <Industrie 4.0 virtual automation bus, {eid: 85049697893, doi: 10.1145/3183440.3195065}>, <Digital twin in manufacturing: A categorical literature review and classification, {eid: 85052915281, doi: 10.1016/j.ifacol.2018.08.474}>, <Reference architecture and product line architecture: A subtle but critical difference, {eid: 80053176890, doi: 10.1007/978-3-642-23798-0Ë22}>, <Dimensions of digital twin applications - a literature review, {eid: 85084019743}>, <Digital twin in industry: State-of-the-art, {eid: 85054374767, doi: 10.1109/TII.2018.2873186}>, <Digital twin reference model development to prevent operatorsâ risk in process plants, {eid: 85081226177, doi: 10.3390/su12031088}>, <Digital twin-based cyber physical production system architectural framework for personalized production, {eid: 85076628276, doi: 10.1007/s00170-019-04653-7}>, <Enabling continuous software engineering for embedded systems architectures with virtual prototypes, {eid: 85057277198, doi: 10.1007/978-3-030-00761-4Ë8}>, <Simulation in Industry 4.0: A state-of-the-art review, {eid: 85091194972, doi: 10.1016/j.cie.2020.106868}>, <Intelligent manufacturing in the context of industry 4.0: A review, {eid: 85040743821, doi: 10.1016/J.ENG.2017.05.015}>",,,Elsevier B.V.,,,2021-07-01,,,,,,,eng,,Journal,,,,2-s2.0-85101936938
18,,"Nguyen P.T. (AUID: 57209915714), Di Ruscio D. (AUID: 57201633392), Pierantonio A. (AUID: 15064742800), Di Rocco J. (AUID: 55877197500), Iovino L. (AUID: 36961136600)",,Convolutional neural networks for enhanced classification mechanisms of metamodels,2021,Journal of Systems and Software,,,,,,,23,10.1016/j.jss.2020.110860,https://www.doi.org/10.1016/j.jss.2020.110860,"<UniversitÃ  degli studi dellAquila>, <Gran Sasso Science Institute>",,"Â© 2020 Elsevier Inc.Conventional wisdom on Model-Driven Engineering suggests that metamodels are crucial elements for modeling environments consisting of graphical editors, transformations, code generators, and analysis tools. Software repositories are commonly used in practice for locating existing artifacts provided that a classification procedure is available. However, the manual classification of metamodel in repositories produces results that are influenced by the subjectivity of human perception besides being tedious and prone to errors. Therefore, automated techniques for classifying metamodels stored in repositories are highly desirable and stringent. In this work, we propose MEMOCNN as a novel approach to classification of metamodels. In particular, we consider metamodels as data points and classify them using supervised learning techniques. A convolutional neural network has been built to learn from labeled data, and use the trained weights to group unlabeled metamodels. A comprehensive experimental evaluation proves that the proposal effectively categorizes input data and outperforms a state-of-the-art baseline.",,,,,,,,,"<Survey on multiclass classification methods, {eid: 84880565628}>, <Convolutional neural networks for classification of alignments of non-coding RNA sequences, {eid: 85050806688, doi: 10.1093/bioinformatics/bty228}>, <A labeled ecore metamodel dataset for domain clustering, {eid: 85076082027, doi: 10.5281/zenodo.2585456}>, <AMMoRe 2018: First international workshop on analytics and mining of model repositories, {eid: 85063109105}>, <Using n-grams for the automated clustering of structural models, {eid: 85010689255}>, <Hierarchical clustering of metamodels for comparative analysis and visualization, {eid: 84977499772}>, <Automatic model repair using reinforcement learning, {eid: 85063099879}>, <Personalized and automatic model repairing using reinforcement learning, {eid: 85075917035}>, <Automated clustering of metamodel repositories, {eid: 84976614553}>, <Analysis methods in neural language processing: A survey, {eid: 85150632897, doi: 10.1162/tacl_a_00254}>, <A classification of stereotypes for object-oriented modeling languages, {eid: 78049335165}>, <Selecting Representative Data Sets, {eid: 84884901728}>, <A suite of metamodels as a basis for a classification of visual languages, {eid: 16244390554, doi: 10.1109/VLHCC.2004.5}>, <None, {eid: 85096089841}>, <An LSTM-based neural network architecture for model transformations, {eid: 85076107429, doi: 10.1109/MODELS.2019.00013}>, <Automated classification of web documents into a hierarchy of categories, {eid: 33745765401}>, <The relationship between precision-recall and ROC curves, {eid: 34250727580, doi: 10.1145/1143844.1143874}>, <Collaborative repositories in model-driven engineering software technology, {eid: 84928652460}>, <None, {eid: 79951904922}>, <A few useful things to know about machine learning, {eid: 84867539048, doi: 10.1145/2347736.2347755}>, <A comparison study between MLP and convolutional neural network models for character recognition, {eid: 85022055406, doi: 10.1117/12.2262589}>, <Automated fruit recognition using EfficientNet and MixNet, {eid: 85081045019, doi: 10.1016/j.compag.2020.105326}>, <An introduction to ROC analysis, {eid: 33646023117, doi: 10.1016/j.patrec.2005.10.010}>, <Olive fruits recognition using neural networks. First International Conference on Information Technology and Quantitative Management, {eid: 84898749336, doi: 10.1016/j.procs.2013.05.053}>, <Modeling deep reinforcement learning based architectures for cyber-physical systems, {eid: 85075937600}>, <Deep Learning, {eid: 84944735469}>, <Comparing automated text classification methods, {eid: 85055277517}>, <Automatic classification of images on the web, {eid: 0036030193, doi: 10.1117/12.451108}>, <Meta-modelling meta-learning, {eid: 85076083013, doi: 10.1109/MODELS.2019.00014}>, <None, {eid: 84986274465}>, <None, {eid: 74549141750}>, <Long short-term memory, {eid: 0031573117, doi: 10.1162/neco.1997.9.8.1735}>, <Transfer learning with deep convolutional neural network for SAR target classification with limited labeled data, {eid: 85029395781, doi: 10.3390/rs9090907}>, <On the classification of umls meta model extension mechanism, {eid: 35048816548}>, <Feature scaling in support vector data description, {eid: 80051595965}>, <None, {eid: 84925010640}>, <Deep visual-semantic alignments for generating image descriptions, {eid: 85015724750, doi: 10.1109/TPAMI.2016.2598339}>, <Convolutional neural networks for sentence classification, {eid: 84961376850, doi: 10.3115/v1/D14-1181}>, <Adam: A method for stochastic optimization, {eid: 85083951076}>, <EMFStore: A model repository for EMF models, {eid: 77954724460}>, <A study of cross-validation and bootstrap for accuracy estimation and model selection, {eid: 85164392958}>, <Machine learning: A review of classification and combining techniques, {eid: 38349031393, doi: 10.1007/s10462-007-9052-3}>, <Imagenet classification with deep convolutional neural networks, {eid: 84876231242}>, <Modeling and training of neural processing systems, {eid: 85075936455}>, <Bizycle: Model-based interoperability platform for software and data integration, {eid: 84911353560}>, <DÃ©jÃ Vu: A map of code duplicates on GitHub, {eid: 85120100525}>, <None, {eid: 85096088637}>, <Speech recognition using deep neural networks: A systematic review, {eid: 85062220151}>, <Automated classification of metamodel repositories: A machine learning approach, {eid: 85076112592, doi: 10.1109/MODELS.2019.00011}>, <Detecting object affordances with convolutional neural networks, {eid: 85006448751, doi: 10.1109/IROS.2016.7759429}>, <None, {eid: 85057193658}>, <An algorithm for suffix stripping, {eid: 84948481845}>, <The use of machine learning algorithms in recommender systems: A systematic review, {eid: 85096125608}>, <Deep convolutional neural networks for image classification: A comprehensive review, {eid: 85031680076, doi: 10.1162/neco_a_00990}>, <CNN features off-the-shelf: An astounding baseline for recognition, {eid: 84906506420}>, <Finding reusable UML sequence diagrams automatically, {eid: 4644334029, doi: 10.1109/MS.2004.1331304}>, <ImageNet large scale visual recognition challenge, {eid: 84947041871, doi: 10.1007/s11263-015-0816-y}>, <Guest editors introduction: Model-driven engineering, {eid: 33344465743, doi: 10.1109/MC.2006.58}>, <Machine learning in automated text categorization, {eid: 0002442796, doi: 10.1145/505282.505283}>, <Survey on neural networks used for medical image processing, {eid: 85008165061}>, <Dropout: A simple way to prevent neural networks from overfitting, {eid: 84904163933}>, <Deep learning for biometrics: A survey, {eid: 85051431484, doi: 10.1145/3190618}>, <EfficientNet: Rethinking model scaling for convolutional neural networks, {eid: 85074857178}>, <MixConv: Mixed depthwise convolutional kernels, {eid: 85082504513}>, <A survey of transfer learning, {eid: 85013880960, doi: 10.1186/s40537-016-0043-6}>, <Toward deep learning software repositories, {eid: 84957063236}>, <Machine learning in manufacturing: Advantages, challenges, and applications, {eid: 84995968996, doi: 10.1080/21693277.2016.1192517}>, <Convolutional neural networks: An overview and application in radiology, {eid: 85052299105, doi: 10.1007/s13244-018-0639-9}>, <Neural networks for classification: A survey, {eid: 0034313673}>, <Generalized cross entropy loss for training deep neural networks with noisy labels, {eid: 85062572898}>, <Object detection with deep learning: A review, {eid: 85060944960, doi: 10.1109/TNNLS.2018.2876865}>",,,Elsevier Inc.,,,2021-02-01,,,,,,,eng,,Journal,,,,2-s2.0-85096121119
19,,"Prado Lima J.A. (AUID: 57191879945), MendonÃ§a W.D.F. (AUID: 57204423179), Vergilio S.R. (AUID: 6506290092), AssunÃ§Ã£o W.K.G. (AUID: 37361009900)",,Cost-effective learning-based strategies for test case prioritization in continuous integration of highly-configurable software,2022,Empirical Software Engineering,,,,,,,0,10.1007/s10664-021-10093-3,https://www.doi.org/10.1007/s10664-021-10093-3,"<DINF, Federal University of ParanÃ¡ (UFPR)>, <Pontifical Catholic University of Rio de Janeiro (PUC-Rio)>",,"Â© 2022, The Author(s), under exclusive licence to Springer Science+Business Media, LLC, part of Springer Nature.Highly-Configurable Software (HCSs) testing is usually costly, as a significant number of variants need to be tested. This becomes more problematic when Continuous Integration (CI) practices are adopted. CI leads the software to be integrated and tested multiple times a day, subject to time constraints (budgets). To address CI challenges, a learning-based test case prioritization approach named COLEMAN has been successfully applied. COLEMAN deals with test case volatility, in which some test cases can be included/removed over the CI cycles. Nevertheless, such an approach does not consider HCS particularities such as, by analogy, the volatility of variants. Given such a context, this work introduces two strategies for applying COLEMAN in the CI of HCS: the Variant Test Set Strategy (VTS) that relies on the test set specific for each variant; and the Whole Test Set Strategy (WST) that prioritizes the test set composed by the union of the test cases of all variants. Both strategies are applied to two real-world HCSs, considering three test budgets. Independently of the time budget, the proposed strategies using COLEMAN have the best performance in comparison with solutions generated randomly and by another learning approach from the literature. Moreover, COLEMAN produces, in more than 92% of the cases, reasonable solutions that are near to the optimal solutions obtained by a deterministic approach. Both strategies spend less than one second to execute. WTS provides better results in the less restrictive budgets, and VTS the opposite. WTS seems to better mitigate the problem of beginning without knowledge, and is more suitable when a new variant to be tested is added.","Continuous integration, Highly-configurable software, Software product line, Test case prioritization",,,,,,,,"<Delta-oriented product prioritization for similarity-based product-line testing, {eid: 85027114086}>, <A practical guide for using statistical tests to assess randomized algorithms in software engineering, {eid: 79959871222}>, <Learning-to-rank vs ranking-to-learn: Strategies for regression testing in continuous integration, {eid: 85094318353}>, <None, {eid: 84961347393}>, <History-Based Test Case Prioritization for Failure Information, {eid: 85018510656}>, <A review of ten years of the symposium on search-based software engineering, {eid: 85072863599}>, <None, {eid: 0003414693}>, <An empirical study of the effect of time constraints on the cost-benefits of regression testing, {eid: 77950490739}>, <Continuous integration: Improving software quality and reducing risk, {eid: 84942757453}>, <Techniques for improving regression testing in continuous integration development environments, {eid: 84986877429}>, <Regression test selection and product line system testing, {eid: 77954527991}>, <Goal-oriented test case selection and prioritization for product line feature models, {eid: 80051528149}>, <Validation of constraints among configuration parameters using search-based combinatorial interaction testing, {eid: 84989813040}>, <Test prioritization in continuous integration environments, {eid: 85053760573, doi: 10.1016/j.jss.2018.08.061}>, <Automating system test case classification and prioritization for use case-driven testing in product lines, {eid: 85089602675}>, <Automated code-based test selection for software product line regression testing, {eid: 85072228048, doi: 10.1016/j.jss.2019.110419}>, <Rajkumar: Test case prioritization techniques for software product line: A survey, {eid: 85011114125}>, <Risk-based integration testing of software product lines, {eid: 85014902435}>, <Delta-oriented test case prioritization for integration testing of software product lines, {eid: 84982811054}>, <Adaptive operator selection with bandits for a multiobjective evolutionary algorithm based on decomposition, {eid: 84893865972}>, <Retest test selection for product-line regression testing of variants and versions of variants, {eid: 85054466985}>, <Incremental model-based testing of delta-oriented software product lines, {eid: 84862204405}>, <On a test of whether one of two random variables is stochastically larger than the other, {eid: 0002322469}>, <Multi-perspective regression test prioritization for time-constrained environments, {eid: 84962091042}>, <A learning algorithm for optimizing continuous integration development and testing practice, {eid: 85056634616}>, <A learning algorithm for optimizing continuous integration development and testing practice, {eid: 85056634616}>, <Test case prioritization for continuous regression testing: An industrial case study, {eid: 84891715780}>, <Test prioritization with optimally balanced configuration coverage, {eid: 85019254116}>, <Titan: Test suite optimization for highly configurable software, {eid: 85020723577}>, <A comparison of 10 sampling algorithms for configurable systems, {eid: 84971414235}>, <Discipline matters: Refactoring of preprocessor directives in the #ifdef hell, {eid: 85047010689}>, <Tackling combinatorial explosion: A study of industrial needs and practices for analyzing highly configurable systems, {eid: 85056534298}>, <On the evolution of feature dependencies: An exploratory study of preprocessor-based systems, {eid: 85123042832}>, <Stability of Product-Line Sampling in Continuous Integration. In: 15th international Conference on Variability Modelling of Software-Intensive Systems, VaMoSâ21, {eid: 85101085031}>, <Supplementary material - cost-effective learning-based strategies for test case prioritization in continuous integration of highly-configurable software, {eid: 85134588940}>, <Learning-based prioritization of test cases in continuous integration of highly-configurable software, {eid: 85104760635}>, <A multi-armed bandit approach for test case prioritization in continuous integration environments, {eid: 85097839526}>, <Multi-armed bandit test case prioritization in continuous integration environments: A trade-off analysis, {eid: 85134619248}>, <Test case prioritization in continuous integration environments: A systematic mapping study, {eid: 85078708254, doi: 10.1016/j.infsof.2020.106268}>, <Combinatorial interaction regression testing: A study of test case generation and prioritization, {eid: 47349111813}>, <System testing a scientific framework using a regression-test environment, {eid: 84858269563}>, <Design and rationale of a quality assurance process for a scientific framework, {eid: 84886704128}>, <None, {eid: 84893549814}>, <Improving regression testing in continuous integration development environments (Keynote), {eid: 85097820077}>, <Test case prioritization: An empirical study, {eid: 0033326792}>, <Chapter 7 - regression testing in software product line engineering, {eid: 84864138160}>, <Continuous integration, delivery and deployment: A systematic review on approaches, tools, challenges and practices, {eid: 85019140530}>, <Reinforcement Learning for Automatic Test Case Prioritization and Selection in Continuous Integration, {eid: 85026639599}>, <A critique and improvement of the cl common language effect size statistics of mcgraw and wong, {eid: 0034411339}>, <Exploration and exploitation in evolutionary algorithms: A survey, {eid: 84880120844, doi: 10.1145/2480741.2480752}>, <Presence-condition simplification in highly configurable systems, {eid: 84939514440}>, <Cost-effective test suite minimization in product lines using search techniques, {eid: 84924958712, doi: 10.1016/j.jss.2014.08.024}>, <A systematic test case selection methodology for product lines: results and insights from an industrial case study, {eid: 84918502049}>, <A study of regression test selection in continuous integration environments, {eid: 85059631520}>, <None, {eid: 0003639957}>, <Continuous test suite augmentation in software product lines, {eid: 84883894472}>, <Regression testing minimization, selection and prioritization: A survey, {eid: 84857550008, doi: 10.1002/stvr.430}>, <Beating random test case prioritization, {eid: 85110627843, doi: 10.1109/TR.2020.2979815}>",,,Springer,,,2022-11-01,,,,,,,eng,,Journal,,,,2-s2.0-85134618992
20,,"Lopez-Pena M.A. (AUID: 57217736195), Humanes H. (AUID: 57197750696), Diaz J. (AUID: 35092351500), Perez J.E. (AUID: 57218886032)",,DevOps for IoT Systems: Fast and Continuous Monitoring Feedback of System Availability,2020,IEEE Internet of Things Journal,,,,,,,26,10.1109/JIOT.2020.3012763,https://www.doi.org/10.1109/JIOT.2020.3012763,"<Department of Innovation and Development, Sistemas Avanzados de TecnologÃ­a, S.A.>, <Department of Sistemas InformÃ¡ticos, Universidad PolitÃ©cnica de Madrid>",,"Â© 2014 IEEE.Current Internet-of-Things (IoT) systems are highly distributed systems, which integrate cloud, fog, and edge computing approaches. Accelerating their maintenance and continuous improvement, while ensuring their availability, is complex. DevOps promotes fast and continuous feedback from operations to development to detect problems before customers are impacted, among other benefits. However, there is not any formal definition of how to do this. This article defines the 'fast and continuous monitoring feedback of system availability' activity (FCF availability) that supports automatic and continuous monitoring feedback from operations to the development of the IoT system availability. This activity has been formalized through the software and systems process engineering metamodel (SPEM). Its implementation is demonstrated in a real scenario that provides evidence that the formalization of the FCF availability activity helps teams in better diagnosing and fixing outage problems. The result is a distributed and configurable monitoring component developed through code [monitoring as code (MaC)]. This component is embedded in the IoT infrastructure. MaC enables DevOps team to configure their own metrics and indicators at runtime, i.e., monitoring on demand. The formalization of this activity, based on an MaC technique, enables the automation, versioning, and replication of monitoring elements.","Availability, continuous monitoring, DevOps, fast and continuous feedback activity, Internet-of-Things (IoT) systems",,,,,,,,"<Understanding the Internet of Things: Definition, potentials, and societal role of a fast evolving paradigm, {eid: 85009285034}>, <Introduction to the internet of things, {eid: 84956476081, doi: 10.1007/978-3-642-40403-0}>, <Cyber physical systems: Design challenges, {eid: 49649119406}>, <None, {eid: 85173029256}>, <Current and future challenges of software engineering for services and applications, {eid: 84998698759}>, <Relationship of DevOps to agile, lean and continuous deployment, {eid: 84999040028}>, <An exploratory study of DevOps extending the dimensions of DevOps with practices, {eid: 84998881112}>, <Towards definitions for release engineering and DevOps, {eid: 84962216125}>, <None, {eid: 85018529770}>, <Towards DevOps in the embedded systems domain: Why is it so hard?, {eid: 84975460866}>, <Agile processes: Challenges and strategies for undertaking continuous experimentation to embedded systems: Industry and research perspectives, {eid: 85048052155}>, <None, {eid: 77949517037}>, <A qualitative study of DevOps usage in practice, {eid: 85021358087}>, <Introduction to the minitrack on IT governance and its mechanisms, {eid: 85060475722}>, <None, {eid: 85073237331}>, <None, {eid: 84903828209}>, <A survey of commercial frameworks for the Internet of Things, {eid: 84952907595}>, <A survey of IoT cloud platforms, {eid: 85033708211}>, <None, {eid: 85092728057}>, <None, {eid: 84963757817}>, <None, {eid: 84958964990}>, <Fog computing and its role in the Internet of Things characterization of fog computing, {eid: 84866627419}>, <Future Internet: The Internet of Things architecture, possible applications and key challenges, {eid: 84874174122}>, <Fog computing: Platform and applications, {eid: 84969509112}>, <IFCIoT: Integrated fog cloud IoT: A novel architectural paradigm for the future Internet of Things, {eid: 85021058978}>, <INDICES: Exploiting edge resources for performanceaware cloud-hosted services, {eid: 85027465225}>, <Agile infrastructure and operations: How infra-gile are you?, {eid: 52949150488}>, <Toward unified DevOps model, {eid: 84958247265}>, <Key affordances of platform- asa-service: Self-organization and continuous feedback, {eid: 85055527652}>, <Microservices architecture enables DevOps: Migration to a cloud-native architecture, {eid: 84968796741}>, <Selfservice cybersecurity monitoring as enabler for DevSecOps, {eid: 85084859519}>, <ENACT: Development, operation, and quality assurance of trustworthy smart IoT systems, {eid: 85092710058}>, <DevOps for IoT applications using cellular networks and cloud, {eid: 84992036313}>, <Enabling operation data visibility for SmartX-MINI IoT-cloud playground, {eid: 84979996132}>, <Automated deployment of SmartX IoTcloud services based on continuous integration, {eid: 85015804380}>, <Cloud ecosystems support for Internet of Things and DevOps using patterns, {eid: 84977609466}>, <None, {eid: 85092739167}>, <Reliability and availability evaluation of wireless sensor networks for industrial applications, {eid: 84856247989}>, <None, {eid: 0003673547}>, <A documentation framework for architecture decisions, {eid: 84857356116}>, <Qualitative methods in empirical studies of software engineering, {eid: 0033163750}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2020-10-01,,,,,,,eng,,Journal,,,,2-s2.0-85092738657
21,,"Zhou H. (AUID: 57888978100), Li M. (AUID: 35189040700), Sun Y. (AUID: 56131604800), Tian Z. (AUID: 9636602700), Yun L. (AUID: 58626623400)",,Digital Twin-Based Cyber Range for Industrial Internet of Things,2023,IEEE Consumer Electronics Magazine,,,,,,,1,10.1109/MCE.2022.3203202,https://www.doi.org/10.1109/MCE.2022.3203202,"<Guangzhou University>, <Information Security Research Center, CEPREI Laboratory>, <Key Laboratory of Ministry of Industry and Information Technology>",,"Â© 2012 IEEE.With the continuous integration of information technology and operation technology, the Industrial Internet of Things (IIoT) is gradually changing from closed to open. Operators can configure, monitor, or control the industrial production process remotely via Internet, which brings security threats to IIoTs. Since the IIoT focuses on the availability of industrial production, it is unfeasible to study security issues directly on the industrial field. Thus, constructing an IIoT cyber range to reproduce industrial scenarios for offensive and defensive confrontation research is necessary. However, the traditional IIoT cyber range relies on physical industrial field devices that are not reproducible and hard to recover from cyber-attacks. To solve these problems, in this article, we propose a framework for a digital twin-based cyber range and a digital twin construction method with multiple models. Cyber ranges with digital twins are more flexible and convenient. Based on the proposed method, an industrial scenario is reproduced using machine learning algorithms to predict temperature changes from different perspectives. The experimental result shows the ability of digital twins to construct an IIoT cyber range to reproduce production processes and replace field devices.",,,,,,,,,"<Multiclass routing and medium access control for heterogeneous mobile ad hoc networks, {eid: 32144440632, doi: 10.1109/TVT.2005.861183}>, <Stuxnet: Dissecting a cyberwarfare weapon, {eid: 79957616447, doi: 10.1109/MSP.2011.67}>, <Deep reinforcement learning for partially observable data poisoning attack in crowdsensing systems, {eid: 85089308646, doi: 10.1109/JIOT.2019.2962914}>, <Deepgreen: A dispersed energy-efficiency computing paradigm for green industrial IoT, {eid: 85102645232, doi: 10.1109/TGCN.2021.3064683}>, <Digital twin shop-floor: A new shop-floor paradigm towards smart manufacturing, {eid: 85030752762, doi: 10.1109/ACCESS.2017.2756069}>, <Digital twin: Mitigating unpredictable, undesirable emergent behavior in complex systems, {eid: 85006339863, doi: 10.1007/978-3-319-38756-7-4}>, <An application framework of digital twin and its case study, {eid: 85049576881, doi: 10.1007/s12652-018-0911-3}>, <Plug-and-simulate within modular assembly line enabled by digital twins and the use of AutomationML, {eid: 85044297204, doi: 10.1016/j.ifacol.2017.08.2360}>, <A methodology for digital twinmodeling and deployment for industry 4.0, {eid: 85098780861, doi: 10.1109/JPROC.2020.3032444}>, <Machine learning based digital twin framework for production optimization in petrochemical industry, {eid: 85066307148, doi: 10.1016/j.ijinfomgt.2019.05.020}>, <Cyber-physical security testbeds: Architecture, application, and evaluation for smart grid, {eid: 84878309013, doi: 10.1109/TSG.2012.2226919}>, <EPIC: A testbed for scientifically rigorous cyber-physical security experimentation, {eid: 84913609374, doi: 10.1109/TETC.2013.2287188}>, <CyberFactory# 1-Securing the industry 4.0 with cyber-ranges and digital twins, {eid: 85050025311, doi: 10.1109/WFCS.2018.8402377}>, <A digital twin-based cyber range for SOC analysts, {eid: 85112735183, doi: 10.1007/978-3-030-81242-3-17}>, <MiniCPS: A toolkit for security research on CPS networks, {eid: 84964840467, doi: 10.1145/2808705.2808715}>, <Automated attack and defense framework toward 5G security, {eid: 85084212972, doi: 10.1109/MNET.011.1900635}>, <OpenFlow: Enabling innovation in campus networks, {eid: 68649129121, doi: 10.1145/1355734.1355746}>, <OpenPLC: An open-source alternative to automation, {eid: 84936803658, doi: 10.1109/GHTC.2014.6970342}>, <Honeypot identification in softwarized industrial cyber-physical systems, {eid: 85098799112, doi: 10.1109/TII.2020.3044576}>, <Condition assessment, remaining useful life prediction and life extension decision making for offshore oil and gas assets, {eid: 85019130329, doi: 10.1016/j.jlp.2017.04.030}>, <Energy-efficient and traffic-aware service function chaining orchestration in multi-domain networks, {eid: 85053801008, doi: 10.1016/j.future.2018.09.037}>, <The connotation of digital twin, and the construction and applicationmethod of shop-floor digital twin, {eid: 85094857400, doi: 10.1016/j.rcim.2020.102075}>, <An approach to develop a digital twin for industry 4.0 systems: Manufacturing automation case studies, {eid: 85109762696, doi: 10.1080/0951192X.2021.1946857}>, <LightGBM: A highly efficient gradient boosting decision tree, {eid: 85055954505, doi: 10.5555/3294996.3295074}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2023-11-01,,,,,,,eng,,Trade Journal,,,,2-s2.0-85137911695
22,,"Safdar M. (AUID: 57210751342), Zhao Y.F. (AUID: 57196241702), Lamouche G. (AUID: 6602194091), Bescond C. (AUID: 6602803943), Wanjara P. (AUID: 6602592830), Paul P.P. (AUID: 23493286200), Wood G. (AUID: 55801728500), Zimmermann M. (AUID: 57837039000), Hannesen F. (AUID: 57214321641)",,Fundamental requirements of a machine learning operations platform for industrial metal additive manufacturing,2024,Computers in Industry,,,,,,,0,10.1016/j.compind.2023.104037,https://www.doi.org/10.1016/j.compind.2023.104037,"<Department of Mechanical Engineering, McGill University>, <National Research Council Canada>, <Braintoy AI>, <Apollo Clad Laser Cladding, a division of Apollo Machine and Welding Ltd>, <Faunhofer Institute for Laser Technology ILT>, <BCT Steuerungs, und DV-Systeme GmbH>",,"Â© 2023Metal-based Additive Manufacturing (AM) can realize fully dense metallic components and thus offers an opportunity to compete with conventional manufacturing based on the unique merits possible through layer-by-layer processing. Unsurprisingly, Machine Learning (ML) applications in AM technologies have been increasingly growing in the past several years. The trend is driven by the ability of data-driven techniques to support a range of AM concerns, including in-process monitoring and predictions. However, despite numerous ML applications being reported for different AM concerns, no framework exists to systematically manage these ML models for AM operations in the industry. Moreover, no guidance exists on fundamental requirements to realize such a cross-disciplinary platform. Working with experts in ML and AM, this work identifies the fundamental requirements to realize a Machine Learning Operations (MLOps) platform to support process-based ML models for industrial metal AM (MAM). Project-level activities are identified in terms of functional roles, processes, systems, operations, and interfaces. These components are discussed in detail and are linked with their respective requirements. In this regard, peer-reviewed references to identified requirements are made available. The requirements identified can help guide small and medium enterprises looking to implement ML solutions for AM in the industry. Challenges and opportunities for such a system are highlighted. The system can be expanded to include other lifecycle phases of metallic and non-metallic AM.","Computing infrastructure, Data analytics and machine learning, Fundamental and functional requirements, Industrial additive manufacturing, Machine learning operations platform",,,,,,,,"<None, {eid: 85175088322}>, <Securing cyber-physical additive manufacturing systems by in-situ process authentication using streamline video analysis, {eid: 85122279015}>, <None, {eid: 85175036146}>, <Understanding of a convolutional neural network, {eid: 85047877581}>, <None, {eid: 85175009830}>, <Design of experiment methods in manufacturing: basics and practical applications, {eid: 84928863422}>, <Additive manufacturing â General principles â Fundamentals and vocabulary, {eid: 85126342007}>, <A survey on knowledge transfer for manufacturing data analytics, {eid: 85056228240}>, <Prediction of geometry deviations in additive manufactured parts: comparison of linear regression with machine learning algorithms, {eid: 85083381523}>, <None, {eid: 85175029188}>, <A random forest guided tour, {eid: 84964330838}>, <None, {eid: 33846516584}>, <Data model for additive manufacturing digital thread: state of the art and perspectives, {eid: 85075754887}>, <The openCV library, {eid: 0242483561}>, <None, {eid: 85175067084}>, <Albumentations: fast and flexible image augmentations, {eid: 85081137755}>, <None, {eid: 85175076146}>, <Geometric machine learning: research and applications, {eid: 85127625269}>, <Non-destructive quality control methods in additive manufacturing: a survey, {eid: 85082176984}>, <A review on wire-arc additive manufacturing: typical defects, detection approaches, and multisensor data fusion-based model, {eid: 85111924840}>, <None, {eid: 85175059034}>, <None, {eid: 85175012693}>, <None, {eid: 85175071888}>, <Imagenet: A large-scale hierarchical image database, {eid: 72249100259}>, <Spreading process maps for powder-bed additive manufacturing derived from physics model-based machine learning, {eid: 85074413185}>, <A design for additive manufacturing ontology, {eid: 85013301869}>, <Zoning additive manufacturing process histories using unsupervised machine learning, {eid: 85077949298}>, <Think DSP: digital signal processing in Python, {eid: 85041737463}>, <Process optimization of complex geometries using feed forward control for laser powder bed fusion additive manufacturing, {eid: 85085254205}>, <Review of in-situ process monitoring and in-situ metrology for metal additive manufacturing, {eid: 84960155015}>, <Industrial additive manufacturing: A manufacturing systems perspective, {eid: 85029540806}>, <Fundamental requirements for data representations in laser-based powder bed fusion, {eid: 84945353277}>, <Additive manufacturing in situ and ex situ geometric data registration, {eid: 85130266728}>, <None, {eid: 85175074299}>, <Measured data alignments for monitoring metal additive manufacturing processes using laser powder bed fusion methods, {eid: 85096118726}>, <Modeling of additive manufacturing processes for metals: Challenges and opportunities, {eid: 85018341588}>, <Metal additive manufacturing: a review, {eid: 84905724414}>, <Machine learning algorithms for defect detection in metal laser-based additive manufacturing: a review, {eid: 85123585796}>, <Heterogeneous sensing and scientific machine learning for quality assurance in laser powder bed fusionâA single-track study, {eid: 85095609454}>, <On continuous integration/continuous delivery for automated deployment of machine learning models using mlops, {eid: 85127693591}>, <pyaudioanalysis: an open-source python library for audio signal analysis, {eid: 84961354674}>, <None, {eid: 85150103987}>, <None, {eid: 85150103987}>, <None, {eid: 85030472894}>, <None, {eid: 85030472894}>, <None, {eid: 78650365466}>, <None, {eid: 84964857035}>, <None, {eid: 84944216444}>, <Deep learning, {eid: 84944735469}>, <Data fusion methods for statistical process monitoring and quality characterization in metal additive manufacturing, {eid: 85061957493}>, <None, {eid: 85175073657}>, <None, {eid: 85175090829}>, <None, {eid: 27144544190}>, <Deep learning with Keras, {eid: 85042276044}>, <Machine learning for metal additive manufacturing: towards a physics-informed data-driven paradigm, {eid: 85120355687}>, <Array programming with NumPy, {eid: 85091129687}>, <Long short-term memory, {eid: 0031573117}>, <The fabrication of long carbon fiber reinforced polylactic acid composites via fused deposition modelling: experimental analysis and machine learning, {eid: 85095452907}>, <Matplotlib: a 2D graphics environment, {eid: 34247493236}>, <Mastering PyCharm, {eid: 85061897087}>, <Caffe: convolutional architecture for fast feature embedding, {eid: 84913580146}>, <Invited review: machine learning for materials developments in metals additive manufacturing, {eid: 85096006396}>, <Towards mlops: A framework and maturity model, {eid: 85119201202}>, <None, {eid: 85175049393}>, <Controlling interdependent meso-nanosecond dynamics and defect generation in metal 3D printing, {eid: 85085008338}>, <Streamlining the additive manufacturing digital spectrum: a systems approach, {eid: 84923081838}>, <Toward a digital thread and data package for metals-additive manufacturing, {eid: 85052125005}>, <An approach for composing predictive models from disparate knowledge sources in smart manufacturing environments, {eid: 85031926326}>, <What are decision trees?, {eid: 51349111653}>, <Machine learning and knowledge graph based design rule construction for additive manufacturing, {eid: 85092356888}>, <Machine learning based continuous knowledge engineering for additive manufacturing, {eid: 85072989581}>, <None, {eid: 0003410791}>, <K-nearest neighbors, {eid: 84959107725}>, <Machine learning operations (mlops): Overview, definition, and architecture, {eid: 85134392928}>, <Faster temperature prediction in the powder bed fusion process through the development of a surrogate model, {eid: 85105699404}>, <Toward zero defect manufacturing with the support of artificial intelligenceâinsights from an industrial application, {eid: 85149173024}>, <Review on quality control methods in metal additive manufacturing, {eid: 85102127776}>, <augmented reality, cyber-physical systems, and feedback control for additive manufacturing: a review, {eid: 85065058678}>, <An ontology-oriented knowledge methodology for process planning in additive layer manufacturing, {eid: 85044150707}>, <None, {eid: 85175024934}>, <Metal-based additive manufacturing condition monitoring methods: from measurement to control, {eid: 85102995747}>, <Additive manufacturing of structural materials, {eid: 85103581845}>, <Digital twin-enabled collaborative data management for metal additive manufacturing systems, {eid: 85125680828}>, <Machine Learning-enabled feedback loops for metal powder bed fusion additive manufacturing, {eid: 85093360705}>, <Machine learning for knowledge transfer across multiple metals additive manufacturing printers, {eid: 85101382260}>, <None, {eid: 0003602164}>, <Towards an integrated data schema design for additive manufacturing: conceptual modeling, {eid: 84978976114}>, <A collaborative data management system for additive manufacturing. in International design engineering technical conferences and computers and information in engineering conference, {eid: 85175006934}>, <Camera-based coaxial melt pool monitoring data registration for laser powder bed fusion additive manufacturing, {eid: 85101248921}>, <Applications of machine learning in process monitoring and controls of L-PBF additive manufacturing: a review, {eid: 85121233680}>, <Overview of non-destructive evaluation techniques for metal-based additive manufacturing, {eid: 85067640190}>, <Toward an integrated computational system for describing the additive manufacturing process for metallic materials, {eid: 84915789011}>, <Cyber acoustic analysis of additively manufactured objects, {eid: 85040952851}>, <librosa: audio and music signal analysis in python, {eid: 84973347802}>, <None, {eid: 85175056834}>, <Recurrent neural networks: design and applications, {eid: 0004069064}>, <The potential of additive manufacturing in the smart factory industrial 4.0: a review, {eid: 85072373457}>, <Machine learning in additive manufacturing: a review, {eid: 85083854723}>, <Overview of additive manufacturing informatics:âa digital threadâ, {eid: 85016157772}>, <Towards vision-based closed-loop additive manufacturing: a review, {eid: 85087496257}>, <Mechanistic artificial intelligence (mechanistic-AI) for modeling, design, and control of advanced manufacturing processes: Current state and perspectives, {eid: 85122618505}>, <A metallographic review of 3D printing/additive manufacturing of metal and alloy products and components, {eid: 85045386264}>, <Application of machine learning in fused deposition modeling: A review. in AIP Conference Proceedings, {eid: 85175082093}>, <None, {eid: 85175039149}>, <Continuous Eulerian tool path strategies for wire-arc additive manufacturing of rib-web structures with machine-learning-based adaptive void filling, {eid: 85084863391}>, <Thermal control of laser powder bed fusion using deep reinforcement learning, {eid: 85107970213}>, <Process monitoring for material extrusion additive manufacturing: a state-of-the-art review, {eid: 85106013289}>, <Signal processing with SciPy, {eid: 85083035857}>, <Deep learning with tensorflow: a review, {eid: 85074001158}>, <A framework for identifying and prioritizing data analytics opportunities in additive manufacturing, {eid: 85175097967}>, <Pytorch: an imperative style, high-performance deep learning library, {eid: 85090176877}>, <Scikit-learn: machine learning in Python, {eid: 80555140075}>, <A digital twin hierarchy for metal additive manufacturing, {eid: 85129570104}>, <Business models with additive manufacturingâopportunities and challenges from the perspective of economics and management, {eid: 84949495948}>, <Autoencoders, {eid: 85102400426}>, <Research and application of machine learning for additive manufacturing, {eid: 85124976638}>, <Applying neural-network-based machine learning to additive manufacturing: current applications, challenges, and future perspectives, {eid: 85069873413}>, <Status, comparison, and future of the representations of additive manufacturing data, {eid: 85062084956}>, <Deep learning-driven particle swarm optimisation for additive manufacturing energy optimisation, {eid: 85074398648}>, <Python machine learning, {eid: 84978659968}>, <In-process closed-loop control for stabilising the melt pool temperature in selective laser melting, {eid: 85069965935}>, <Ontology-based process map for metal additive manufacturing, {eid: 85117725839}>, <Ontology-based laser and thermal metamodels for metal-based additive manufacturing, {eid: 85007591746}>, <Data-driven modeling of thermal history in additive manufacturing, {eid: 85078015648}>, <3d is here: Point cloud library (pcl), {eid: 84871699277}>, <A cloud-based manufacturing control system with data integration from multiple autonomous agents, {eid: 85052998214}>, <None, {eid: 85175079936}>, <Feature Engineering in Additive Manufacturing, {eid: 85161364775}>, <Engineering of Additive Manufacturing Features for Data-Driven Solutions: Sources, Techniques, Pipelines, and Applications, {eid: 85175022909}>, <Challenges and opportunities in additive manufacturing data preparation, {eid: 85161374598}>, <Ontology-based knowledge representation for additive manufacturing, {eid: 85065250424}>, <Anomaly detection and classification in a laser powder bed additive manufacturing process using a trained computer vision algorithm, {eid: 85035797198}>, <Overview of materials qualification needs for metal additive manufacturing, {eid: 84955605501}>, <Interactive notebooks: sharing the code, {eid: 84924292102}>, <Microstructural control in metal laser powder bed fusion additive manufacturing using laser beam shaping strategy, {eid: 85075998761}>, <Edge computing: vision and challenges, {eid: 84987842183}>, <Unsupervised K-means clustering algorithm, {eid: 85084934885}>, <A review of unsupervised feature selection methods, {eid: 85061026421}>, <A review on non-destructive evaluation and characterization of additively manufactured components, {eid: 85161438281}>, <Support vector machines, {eid: 68949128341}>, <Introduction to multi-layer feed-forward neural networks, {eid: 0342871690}>, <None, {eid: 85175046153}>, <A review on process monitoring and control in metal-based additive manufacturing, {eid: 84924378016}>, <Distributed heterogeneous compute infrastructure for the study of additive manufacturing systems, {eid: 85088303938}>, <Dataâdriven approaches toward smarter additive manufacturing, {eid: 85122630296}>, <Introducing MLOps, {eid: 85115770919}>, <Image processing in python, {eid: 85016120728}>, <Convolutional neural network applications in additive manufacturing: a review, {eid: 85125535512}>, <Applied metallography, {eid: 85088417416}>, <SciPy 1.0: fundamental algorithms for scientific computing in Python, {eid: 85079119586}>, <scikit-image: image processing in Python, {eid: 84903840343}>, <Data-driven modeling of process, structure and property in additive manufacturing: a review and future directions, {eid: 85126105371}>, <Production planning for cloud-based additive manufacturingâA computer vision-based approach, {eid: 85062502010}>, <Model-based feedforward control of laser powder bed fusion additive manufacturing, {eid: 85076528035}>, <The FAIR guiding principles for scientific data management and stewardship, {eid: 85032172932}>, <None, {eid: 85081135868}>, <Detecting cyber-physical attacks in CyberManufacturing systems with machine learning methods, {eid: 85013677546}>, <Experimental study of the process failure diagnosis in additive manufacturing based on acoustic emission, {eid: 85059532149}>, <In situ monitoring methods for selective laser melting additive manufacturing process based on imagesâA review, {eid: 85115088190}>, <A sequential cross-product knowledge accumulation, extraction and transfer framework for machine learning-based production process modelling, {eid: 85169887382}>, <A knowledge-based process planning framework for wire arc additive manufacturing, {eid: 85086820545}>, <In-process data fusion for process monitoring and control of metal additive manufacturing, {eid: 85142485598}>, <A systematic review on data of additive manufacturing for machine learning applications: the data quality, type, preprocessing, and management, {eid: 85171822769}>, <Predictive manufacturability assessment system for laser powder bed fusion based on a hybrid machine learning model, {eid: 85102868085}>, <Applications of machine learning in metal powder-bed fusion in-process monitoring and control: status and challenges, {eid: 85161301392}>, <A knowledge transfer framework to support rapid process modeling in aerosol jet printing, {eid: 85101372951}>, <None, {eid: 85175089087}>, <Metal-based additive manufacturing condition monitoring: a review on machine learning based approaches, {eid: 85137684584}>, <Electrodynamic machine-learning-enhanced fault-tolerance of robotic free-form printing of complex mixtures, {eid: 85053531355}>, <Version control system: a review, {eid: 85053164602}>",,,Elsevier B.V.,,,2024-01-01,,,,,,,eng,,Journal,,,,2-s2.0-85175009245
23,,"Mihoubi B. (AUID: 57160129100), Bouzouia B. (AUID: 6602694007), Tebani K. (AUID: 57191279415), Gaham M. (AUID: 35317402100)",,Hardware in the loop simulation for product driven control of a cyber-physical manufacturing system,2020,Production Engineering,,,,,,,11,10.1007/s11740-020-00957-w,https://www.doi.org/10.1007/s11740-020-00957-w,"<Laboratoire (LERICA), UniversitÃ© Badji Mokhtar>, <Division Productique et Robotique, Centre de DÃ©veloppement des Technologies AvancÃ©es (CDTA)>",,"Â© 2020, German Academic Society for Production Engineering (WGP).Cyber-physical system (CPS) is considered as a building block of industry 4.0. They are formulated as a network of interacting cyberspace and physical elements. Dealing with this new industrial context, distributed control systems (DCS) are increasingly involved because they permit meeting flexibility and adaptability requirements, which can give scope to CPS. The product driven control system (PDS) is considered as DCS in which the product plays a major role in decision-making. However, the PDS paradigm has not yet received sufficient attention within the CPS. Relying on multi-agents system as implementation framework, radio frequency identity as auto-identity technologies, and hardware in the loop simulation as a practical methodology, the paper proposes a validation and practical framework of PDS applied to the highly automated flexible robotized assembly system. An efficient CPS is developed for a discrete flexible manufacturing system.","Cyber-physical systems, Distributed control system, Hardware in the loop simulation, Multi-agents system, Product driven system, RFID technologies",,,,,,,,"<Past, present and future of Industry 4.0âa systematic literature review and research agenda proposal, {eid: 85018651607}>, <Glocalized cyber physical production systems, {eid: 84869491730}>, <Integration of classical components into industrial cyber physical systems, {eid: 84964264756}>, <The expected contribution of Industry 4.0 technologies for industrial performance, {eid: 85053112719}>, <Smart agents in industrial cyberâphysical systems, {eid: 84977992593}>, <Classification of cyber-physical production systems applications: proposition of an analysis framework, {eid: 85054842368}>, <Industry 4.0: a way from mass customization to mass personalization production, {eid: 85038089248}>, <Cyber-physical systems in manufacturing, {eid: 84990841502}>, <A cyber-physical systems architecture for industry 4.0-based manufacturing systems, {eid: 84921300723}>, <Review of job shop scheduling research and its new perspectives under Industry 4.0, {eid: 85028015443}>, <Agent-based systems for intelligent manufacturing: a state-of-the-art survey, {eid: 85133749042}>, <Reducing myopic behavior in FMS control: a semi-heterarchical simulationâoptimization approach, {eid: 84902547429}>, <None, {eid: 84958520292}>, <Distributed maintenance planning in manufacturing industries, {eid: 85017101376}>, <On agent-based software engineering, {eid: 0033904095}>, <Ant colony intelligence in multi-agent dynamic manufacturing scheduling, {eid: 36249018423}>, <The performance of product-driven manufacturing control: an emulation-based benchmarking study, {eid: 60249088993}>, <Design and validation of a product-driven control system based on a six sigma methodology and discrete event simulation, {eid: 70349105124}>, <How smart, connected products are transforming competition, {eid: 84908338932}>, <None, {eid: 85015544037}>, <The intelligent product in manufacturing control and management, {eid: 84867041018}>, <Intelligent products: a survey, {eid: 60249087640}>, <Product intelligence in industrial control: theory and practice, {eid: 84878255100}>, <Intelligent products: the grace experience, {eid: 84934895148}>, <Agent and cyber-physical system based self-organizing and self-adaptive intelligent shopfloor, {eid: 85014892131}>, <A cyber-physical view of automated warehouse systems, {eid: 85000916490}>, <Auto ID systems and intelligent manufacturing control, {eid: 0141792959}>, <RFID enabled manufacturing: fundamentals, methodology and applications, {eid: 34248383959}>, <Intelligent and integrated RFID (II-RFID) system for improving traceability in manufacturing, {eid: 84937697577}>, <An RFID-based intelligent decision support system architecture for production monitoring and scheduling in a distributed manufacturing environment, {eid: 84915733989}>, <None, {eid: 85042136723}>, <Semi-heterarchical architecture to AGV adjustable autonomy within FMSs, {eid: 85075903057}>, <Self-aware smart products: systematic literature review, conceptual design and prototype implementation, {eid: 85029876301}>, <Simulation in agent-oriented software engineering: the SODA case study, {eid: 84875701894}>, <Model-based systems engineering: motivation, current status, and research opportunities, {eid: 85046694426}>, <Online verification in cyber-physical systems: practical bounds for meaningful temporal costs, {eid: 85043704724, doi: 10.1002/smr.1880}>, <A testbed architecture for auto-ID technologies, {eid: 33645709889}>, <None, {eid: 85061083191}>, <From hardware-in-the-loop to hybrid process simulation: an ontology for the implementation phase of a manufacturing system, {eid: 84855348243}>, <State of the art: hardware in the loop modeling and simulation with its applications in design, development and implementation of system and control software, {eid: 84975263079}>, <A digital twin-based approach for designing and multi-objective optimization of hollow glass production line, {eid: 85032451877}>, <Virtual fusion: a hybrid environment for improved commissioning in manufacturing systems, {eid: 85020281121}>, <The complexity of flowshop and jobshop scheduling, {eid: 0016952078}>, <Classification of flexible manufacturing systems, {eid: 0000424475}>, <None, {eid: 84889374036}>, <None, {eid: 84897708830}>, <A learning algorithm for optimizing continuous integration development and testing practice, {eid: 85056634616}>, <Improving software testing process: feature prioritization to make winners of success-critical stakeholders, {eid: 84871458054}>, <Benchmarking flexible job-shop scheduling and control systems, {eid: 84879820648}>, <None, {eid: 85082797379}>, <Coupling a genetic algorithm with the distributed arrival-time control for the JIT dynamic scheduling of flexible job-shops, {eid: 84898023488}>, <A survey of dynamic scheduling in manufacturing systems, {eid: 68249099005}>, <A simulation optimisation approach for real-time scheduling in an open shop environment using a composite dispatching rule, {eid: 85017279176}>, <A neural network meta-model for identification of optimal combination of priority dispatching rules and makespan in a deterministic job shop scheduling problem, {eid: 84888638744}>, <Flexsim simulation environment, {eid: 0036923904}>, <Hardware in the loop simulation of production systems dynamics, {eid: 79956275643}>, <A rule-based harmony search simulation-optimization approach for intelligent control of a robotic assembly cell, {eid: 85082806578}>, <A stigmergic approach for dynamic routing of active products in FMS, {eid: 60249085603}>, <None, {eid: 85086606612}>",,,Springer,,,2020-06-01,,,,,,,eng,,Journal,,,,2-s2.0-85082823339
24,,"Schulze C. (AUID: 57207719196), Cleaveland R. (AUID: 7004445501)",,Improving invariant mining via static analysis,2017,ACM Transactions on Embedded Computing Systems,,,,,,,3,10.1145/3126504,https://www.doi.org/10.1145/3126504,<University of Maryland>,,"Â© 2017 ACM.This paper proposes the use of static analysis to improve the generation of invariants from test data extracted from Simulink models. Previous work has shown the utility of such automatically generated invariants as a means for updating and completing system specifications; they also are useful as a means of understanding model behavior. This work shows how the scalability and accuracy of the data mining process can be dramatically improved by using information from data/control flow analysis to reduce the search space of the invariant mining and to eliminate false positives. Comparative evaluations of the process show that the improvements significantly reduce execution time and memory consumption, thereby supporting the analysis of more complex models, while also improving the accuracy of the generated invariants.","Automated test generation, Invariant mining, Model-based development, Verification and validation",,,,,,,,"<Automatic requirement extraction from test cases, {eid: 78650130252}>, <Semantic translation of simulink/stateflow models to hybrid automata using graph transformations, {eid: 10444269559}>, <Mining association rules between sets of items in large databases, {eid: 0027621699}>, <On the complexity of mining association rules, {eid: 3142659104}>, <Mining temporal invariants from partially ordered logs, {eid: 81055155516}>, <Simulation-directed invariant mining for software verification, {eid: 49749119976}>, <None, {eid: 84963820509}>, <The daikon system for dynamic detection of likely invariants, {eid: 35348872682}>, <None, {eid: 85030694687}>, <The SPMF open-source data mining library version 2, {eid: 84988603099}>, <Artshop: A continuous integration and quality assessment framework for model-based software artifacts, {eid: 84996742929}>, <Similarity measures in scientometric research: The jaccard index versus saltons cosine formula, {eid: 0024904643}>, <Mining frequent patterns without candidate generation, {eid: 0039253846}>, <Real-time heart model for implantable cardiac device validation and verification, {eid: 77958454649}>, <Modular code generation from synchronous block diagrams: Modularity vs. Code size, {eid: 67649868329}>, <Modular code generation fromtriggered and timed block diagrams, {eid: 51249100059}>, <Modularity vs. Reusability: Code generation fromsynchronous block diagrams, {eid: 49749123427}>, <Tool for translating simulink models into input language of a model checker, {eid: 33845247797}>, <Exploratory mining and pruning optimizations of constrained associations rules, {eid: 0032092760}>, <A toolset for simulink: Improving software engineering practices in development with simulink, {eid: 84939537353}>, <Mining frequent itemsets with convertible constraints, {eid: 0035016447}>, <GoldMine: Automatic assertion generation using data mining and static analysis, {eid: 77953089806}>, <None, {eid: 0003639957}>",,,Association for Computing Machinery,,,2017-09-01,,,,,,,eng,,Journal,,,,2-s2.0-85030672741
25,,"Barriga A. (AUID: 57207860282), Rutle A. (AUID: 26967894200), Heldal R. (AUID: 6602582740)",,Improving model repair through experience sharing,2020,Journal of Object Technology,,,,,,,12,10.5381/JOT.2020.19.2.A13,https://www.doi.org/10.5381/JOT.2020.19.2.A13,<Western Norway University of Applied Sciences>,,"Â© 2020 Association Internationale pour les Technologies Objets.In model-driven software engineering, models are used in all phases of the development process. These models may get broken due to various editions throughout their life-cycle. There are already approaches that provide an automatic repair of models, however, the same issues might not have the same solutions in all contexts due to different user preferences and business policies. Personalization would enhance the usability of automatic repairs in different contexts, and by reusing the experience from previous repairs we would avoid duplicated calculations when facing similar issues. By using reinforcement learning we have achieved the repair of broken models allowing both automation and personalization of results. In this paper, we propose transfer learning to reuse the experience learned from each model repair. We have validated our approach by repairing models using different sets of personalization preferences and studying how the repair time improved when reusing the experience from each repair.","Model repair, Reinforcement learning, Transfer learning",,,,,,,,"<Amor-towards adaptable model versioning, {eid: 79956310521}>, <None, {eid: 85075955114}>, <Apprenticeship learning via inverse reinforcement learning, {eid: 14344251217}>, <None, {eid: 85089507410}>, <Algorithms for hyper-parameter optimization, {eid: 85162384813}>, <Quality-driven detection and resolution of metamodel smells, {eid: 85061749093}>, <None, {eid: 34547932110}>, <Automatic model repair using reinforcement learning, {eid: 85063099879}>, <Personalized and automatic model repairing using reinforcement learning, {eid: 85075917035}>, <None, {eid: 85089540176}>, <None, {eid: 79953812664}>, <Interactive and incremental business process model repair, {eid: 85032666523}>, <Assessing uml model quality by utilizing metrics, {eid: 85061337719}>, <None, {eid: 84876381003}>, <An automated and instant discovery of concrete repairs for model inconsistencies, {eid: 85049674679}>, <Detecting and exploring side effects when repairing model inconsistencies, {eid: 85076794544}>, <Search-based detection of model level changes, {eid: 84988735029}>, <Assessing the quality of meta-models, {eid: 84911484484}>, <None, {eid: 85075956634}>, <Model repair and transformation with echo, {eid: 84893569792}>, <A feature-based classification of model repair approaches, {eid: 85029226586}>, <Rule-based repair of emf models: An automated interactive approach, {eid: 85025137338}>, <None, {eid: 85075941591}>, <Revision: A tool for history-based model repair recommendations, {eid: 85049665911}>, <Resolving model inconsistencies using automated regression planning, {eid: 84922337776}>, <A survey on transfer learning, {eid: 77956031473}>, <Computing repair trees for resolving inconsistencies in design models, {eid: 84866911610}>, <None, {eid: 0004007508}>, <None, {eid: 74549142762}>, <Change-preserving model repair, {eid: 85016408527}>, <Transfer learning, {eid: 84866381873}>, <The state of practice in model-driven engineering, {eid: 84899687758}>",,,Association Internationale pour les Technologies Objets,,,2020-07-01,,,,,,,eng,,Journal,,,,2-s2.0-85089499795
26,,"Damasceno C.D.N. (AUID: 57125912500), Simao A.d.S. (AUID: 35618293600), Mousavi M.R. (AUID: 7005703024)",,Learning by sampling: learning behavioral family models from software product lines,2021,Empirical Software Engineering,,,,,,,10,10.1007/s10664-020-09912-w,https://www.doi.org/10.1007/s10664-020-09912-w,"<Universidade de Sao Paulo â Instituto de CiÃªncias MatemÃ¡ticas e de ComputaÃ§Ã£o>, <University of Leicester â Department of Informatics>",,"Â© 2021, The Author(s), under exclusive licence to Springer Science+Business Media, LLC part of Springer Nature.Family-based behavioral analysis operates on a single specification artifact, referred to as family model, annotated with feature constraints to express behavioral variability in terms of conditional states and transitions. Family-based behavioral modeling paves the way for efficient model-based analysis of software product lines. Family-based behavioral model learning incorporates feature model analysis and model learning principles to efficiently unify product models into a family model and integrate the behavior of various products into a behavioral family model. Albeit reasonably effective, the exhaustive analysis of product lines is often infeasible due to the potentially exponential number of valid configurations. In this paper, we first present a family-based behavioral model learning techniques, called FFSMDiff. Subsequently, we report on our experience on learning family models by employing product sampling. Using 105 products of six product lines expressed in terms of Mealy machines, we evaluate the precision of family models learned from products selected from different settings of the T-wise product sampling criterion. We show that product sampling can lead to models as precise as those learned by exhaustive analysis and hence, reduce the costs for family model learning.","Family model, Model learning, Software product lines, T-wise sampling",,,,,,,,"<Automata learning through counterexample guided abstraction refinement, {eid: 84866000299}>, <Model learning and model-based testing, {eid: 85051109384}>, <Incling: Efficient product-line testing using incremental pairwise sampling, {eid: 85084189184}>, <Delta-oriented product prioritization for similarity-based product-line testing, {eid: 85027114086}>, <Matching UML class diagrams using a hybridized greedy-genetic algorithm, {eid: 85040780347}>, <Reverse engineering feature models from software configurations using formal concept analysis, {eid: 84961377139}>, <Learning regular sets from queries and counterexamples, {eid: 0023453626, doi: 10.1016/0890-5401(87)90052-6}>, <None, {eid: 84979494516}>, <Exploring feature interactions in the wild: The new feature-interaction challenge, {eid: 84890043412}>, <A practical guide for using statistical tests to assess randomized algorithms in software engineering, {eid: 79959871222}>, <Formal description of variability in product families, {eid: 80054070983}>, <A compositional framework to derive product line behavioural descriptions, {eid: 84868275563}>, <Merging features in featured transition systems, {eid: 84960970353}>, <None, {eid: 51949106265}>, <Analyzing program behavior through active automata learning, {eid: 84906948261, doi: 10.1007/s10009-014-0333-2}>, <Automated analysis of feature models 20 years later: a literature review, {eid: 77955227439, doi: 10.1016/j.is.2010.01.001}>, <A survey on modeling techniques for formal behavioral verification of software product lines, {eid: 84961245105}>, <Inputâoutput conformance testing for software product lines, {eid: 85008682089, doi: 10.1016/j.jlamp.2016.09.007}>, <Basic behavioral models for software product lines: expressiveness and testing pre-orders, {eid: 84937604468, doi: 10.1016/j.scico.2015.06.005}>, <A study of variability models and languages in the systems software domain, {eid: 84890065386, doi: 10.1109/TSE.2013.34}>, <Similarity testing for access control, {eid: 84914157978, doi: 10.1016/j.infsof.2014.07.003}>, <When 150 % is too much: Supporting product centric viewpoints in an industrial product line, {eid: 84991628008}>, <Intraprocedural dataflow analysis for software product lines, {eid: 84860443937}>, <Part i. Testing of finite state machines, {eid: 85099089266}>, <On the use of a similarity function for test case selection in the context of model-based testing, {eid: 79957438659, doi: 10.1002/stvr.413}>, <Learning the language of error, {eid: 84951824160}>, <Testing software design modeled by finite-state machines, {eid: 0017973244, doi: 10.1109/TSE.1978.231496}>, <ProFeat: feature-oriented engineering for family-based probabilistic model checking, {eid: 85026898529, doi: 10.1007/s00165-017-0432-4}>, <A greedy heuristic for the set-covering problem, {eid: 0000301097, doi: 10.1287/moor.4.3.233}>, <None, {eid: 77954732987}>, <Model checking lots of systems: Efficient verification of temporal properties in software product lines, {eid: 77954715140}>, <Featured transition systems: foundations for verifying variability-intensive systems and their application to ltl model checking, {eid: 84883057503, doi: 10.1109/TSE.2012.86}>, <None, {eid: 0004161809}>, <Discovering models of software processes from event-based data, {eid: 0032108294, doi: 10.1145/287000.287001}>, <Generative programming for embedded software: An industrial experience report, {eid: 84937393539}>, <None, {eid: 15244361735}>, <Evaluating test characteristics and effectiveness of fsm-based testing methods on rbac systems, {eid: 85053674302}>, <Similarity testing for role-based access control systems, {eid: 85092437415, doi: 10.1186/s40411-017-0045-x}>, <Learning to reuse: Adaptive model learning for evolving systems, {eid: 85076982200}>, <Learning from difference: an automated approach for learning family models from software product lines, {eid: 85123041275}>, <Protocol state fuzzing of tls implementations, {eid: 84977530212}>, <None, {eid: 85099099939}>, <Covering spl behaviour with sampled configurations: An initial assessment, {eid: 84961237579}>, <Search-based similarity-driven behavioural SPL testing, {eid: 84961186674}>, <Distances and similarities in data analysis, {eid: 77953961475}>, <Feature models, grammars, and propositional formulas, {eid: 33646190894}>, <Evolutionary search-based test generation for software product line feature models, {eid: 84867835895}>, <None, {eid: 85099086425}>, <A taxonomy of software product line reengineering, {eid: 84897645145}>, <A foundation for behavioural conformance in software product line architectures, {eid: 34247370256}>, <Learning-based testing the sliding window behavior of tcp implementations, {eid: 85029512537}>, <None, {eid: 85072885003}>, <Hierarchical featured state machines, {eid: 85056800984, doi: 10.1016/j.scico.2018.10.001}>, <Extending HSI test generation method for software product lines, {eid: 85056787978, doi: 10.1093/comjnl/bxy046}>, <None, {eid: 0003690974}>, <Validated test models for software product lines: Featured finite state machines, {eid: 85018251728}>, <Statecharts: a visual formalism for complex systems, {eid: 0023365727, doi: 10.1016/0167-6423(87)90035-9}>, <Reverse engineering feature models from programsâ feature sets, {eid: 83455213219}>, <Bypassing the combinatorial explosion: using similarity to generate and prioritize t-wise test configurations for software product lines, {eid: 84904278397}>, <Robust confidence intervals for effect sizes: A comparative study of cohenâs d and cliffâs delta under non-normality and heterogeneous variances, {eid: 84870041220}>, <Family model mining for function block diagrams in automation software, {eid: 84907857152}>, <Adaptive learning for learn-based regression testing, {eid: 85053602861}>, <Domain-specific optimization in automata learning, {eid: 33750547975}>, <Chapter 3 - model inference and testing, {eid: 84875297940}>, <The open-source learnlib, {eid: 84951090020}>, <Properties of realistic feature models make combinatorial testing of product lines feasible, {eid: 80054081086}>, <A systematic review of effect size in software engineering experiments, {eid: 34648846182, doi: 10.1016/j.infsof.2007.02.015}>, <Feature-oriented domain analysis (Foda) feasibility study, {eid: 0003512056}>, <Formal verification of parallel programs, {eid: 0016972709, doi: 10.1145/360248.360251}>, <None, {eid: 84903617643}>, <Software fault interactions and implications for software testing, {eid: 3042622265, doi: 10.1109/TSE.2004.24}>, <Generation of failure models through automata learning, {eid: 84978245358}>, <A systematic mapping study on software product line evolution: from legacy system reengineering to product line refactoring, {eid: 84878225914, doi: 10.1016/j.scico.2012.05.003}>, <Results of the abbadingo one dfa learning competition and a new evidence-driven state merging algorithm, {eid: 84947908042}>, <A modal process logic, {eid: 0024140798}>, <Modal i/o automata for interface and product line theories, {eid: 37149013404}>, <The SAT4J library, release 2.2, system description, {eid: 79959232722}>, <None, {eid: 84892241478}>, <Comparative analysis of classical multi-objective evolutionary algorithms and seeding strategies for pairwise testing of software product lines, {eid: 84907860137}>, <Modeling and testing product lines with unbounded parametric real-time constraints, {eid: 85032295332}>, <None, {eid: 85059456237, doi: 10.1016/j.jss.2018.12.028}>, <Chapter four - recent advances in automatic black-box testing, {eid: 84945439434}>, <Software product line evolution: a systematic literature review, {eid: 85052991664, doi: 10.1016/j.infsof.2018.08.014}>, <Open science in software engineering, {eid: 85099092239}>, <Damascenodiego/learningFFSM: Learning By Sampling @ EMSE, {eid: 85099105115}>, <Benchmarks for automata learning and conformance testing, {eid: 85067967376}>, <Matching and merging of variant feature specifications, {eid: 84870554847, doi: 10.1109/TSE.2011.112}>, <Automated continuous quality assurance, {eid: 84864184192}>, <Feature model-based software product line testing, {eid: 84868286575}>, <Black box checking, {eid: 15844378350}>, <Automated and scalable t-wise test case generation strategies for software product lines, {eid: 77954510052}>, <Efficiency and early fault detection with lower and higher strength combinatorial interaction testing, {eid: 84883698011}>, <None, {eid: 84892351987}>, <Dynamic testing via automata learning, {eid: 70350430875, doi: 10.1007/s10009-009-0120-7}>, <Learnlib: A library for automata learning and experimentation, {eid: 33745790495}>, <None, {eid: 85072884659}>, <Chapter 7 - regression testing in software product line engineering, {eid: 84864138160}>, <Extraction of feature models from formal contexts, {eid: 80052652058}>, <Delta modeling and model checking of product families, {eid: 84886444473}>, <Deriving usage model variants for model-based testing: An industrial case study, {eid: 84908432976}>, <Delta-oriented programming of software product lines, {eid: 78049372449}>, <Software diversity: state of the art and perspectives, {eid: 84866293757, doi: 10.1007/s10009-012-0253-y}>, <Refactoring of legacy software using model learning and equivalence checking: An industrial experience report, {eid: 84977599369}>, <Incremental upgrade checking, {eid: 84943766997}>, <Inferring mealy machines, {eid: 70649106324}>, <Component-based product line development of avionics software, {eid: 33748286866}>, <Ralib: A learnlib extension for inferring efsms, {eid: 85099111588}>, <A systematic analysis of performance measures for classification tasks, {eid: 65649138430, doi: 10.1016/j.ipm.2009.03.002}>, <None, {eid: 85099089702}>, <Industrial evaluation of pairwise spl testing with moso-polite, {eid: 84857519681}>, <A survey of grammatical inference in software engineering, {eid: 84908351504, doi: 10.1016/j.scico.2014.05.008}>, <Developing a software product line for train control: A case study of CVL, {eid: 78049365870}>, <Modelling and analysing variability in product families: model checking of modal transition systems with variability constraints, {eid: 84996671077, doi: 10.1016/j.jlamp.2015.11.006}>, <Family-based model checking with mcrl2, {eid: 85016429689}>, <On the expressiveness of modal transition systems with variability constraints, {eid: 85054403553, doi: 10.1016/j.scico.2018.09.006}>, <Static analysis of featured transition systems: research, {eid: 85123043092}>, <A classification and survey of analysis strategies for software product lines, {eid: 84905827308, doi: 10.1145/2580950}>, <Featureide: an extensible framework for feature-oriented software development, {eid: 84885591794, doi: 10.1016/j.scico.2012.06.002}>, <Abstract features in feature modeling, {eid: 80054080510}>, <Effsize: Efficient effect size computation (v. 0.7.1), {eid: 85099081773}>, <A taxonomy of model-based testing approaches, {eid: 84862325128, doi: 10.1002/stvr.456}>, <Model learning, {eid: 85010790123, doi: 10.1145/2967606}>, <Philips consumer electronics software for televisions, {eid: 84892241478}>, <Philips medical systems, {eid: 84892241478}>, <Siemens medical solutions, {eid: 84892241478}>, <Presence-condition simplification in highly configurable systems, {eid: 84939514440}>, <A critique and improvement of the CL common language effect size statistics of McGraw and Wong, {eid: 0034411339, doi: 10.3102/10769986025002101}>, <A classification of product sampling for software product lines, {eid: 85055486094}>, <Discrete time markov chain families: Modeling and verification of probabilistic software product lines, {eid: 84890488509}>, <Failure diagnosis of automata, {eid: 0037917045, doi: 10.1007/BF01068590}>, <None, {eid: 85099095032}>, <None, {eid: 85099095032}>, <None, {eid: 85099095032}>, <Chapter 1 - reverse-engineering software behavior, {eid: 84882258522}>, <Automated comparison of state-based software models in terms of their language and structure, {eid: 84876138196, doi: 10.1145/2430545.2430549}>, <Systematic literature reviews, {eid: 84949178783}>, <None, {eid: 84949178783, doi: 10.1007/978-3-642-29044-2}>, <Regression testing minimization, selection and prioritization: a survey, {eid: 84857550008, doi: 10.1002/stv.430}>",,,Springer,,,2021-01-01,,,,,,,eng,,Journal,,,,2-s2.0-85099082851
27,,"Liu Y. (AUID: 55976861600), Zhang L. (AUID: 56031107200), Laili Y. (AUID: 35220331000), Liu Y. (AUID: 36834231200), Zhang W. (AUID: 8688730900)",,Model maturity-based model service composition in cloud environments,2021,Simulation Modelling Practice and Theory,,,,,,,3,10.1016/j.simpat.2021.102389,https://www.doi.org/10.1016/j.simpat.2021.102389,"<School of Automation Science and Electrical Engineering, Beihang University (BUAA)>, <Engineering Research Center of Complex Product Advanced Manufacturing Systems Ministry of Education>, <Beijing Advanced Innovation Center for Big Data-Based Precision Medicine>, <School of Mechano-Electronic Engineering, Xidian University>, <School of Automation and Electrical Engineering University of Science and Technology Beijing>",,"Â© 2021 Elsevier B.V.With the development of cloud computing (CC), service-oriented architecture (SOA), and container technology, modeling and simulation (M&S) resources, such as simulation software and different sorts of models, can be shared and reused in a cloud environment. Modeling and Simulation as a Service (MSaaS), as a new paradigm, supports sharing simulation models or modeling tools and has enabled a wide range of model reuse. However, reusing or combining some immature models may result in inefficient M&S activities or even false simulation results. To make sure the appropriate reuse and composition of simulation models in cloud environments, which is also termed as model service composition for simulation (MSCS), this paper incorporates model maturity with service cooperation as a metric to evaluate the quality of model composition in cloud. Then, as a multi-objective optimization problem with multiple constraints, the MSCS problem and its process are described in detail. To solve the MSCS problem, a novel evolutionary algorithm named CA-AO-NSGAII is proposed. In the algorithm, adaptive crossover and mutation operators, as well as probabilistic initialization are developed. Furthermore, a half-local search algorithm in an elitist mechanism is designed for efficient decision-making. To validate the performance of CA-AO-NSGAII, experiments with respect to four different cases are conducted. Results show that the proposed method for addressing MSCS issue is effective and feasible.","Cloud computing, Evolutionary algorithm, Model maturity, Model service composition for simulation (MSCS), Modeling and simulation (M&S), MSaaS",,,,,,,,"<DEVS/SOA: A cross-platform framework for net-centric modeling and simulation in DEVS unified process, {eid: 67650606762}>, <A DEVS Based Modelling and Methodology-COSIM, {eid: 84896873864}>, <A Survey and Preliminary Research on Service Federation Based Modeling and Simulation, {eid: 84962081992}>, <A review of Web-based simulation and supporting tools, {eid: 74449088143}>, <Networked Modeling & Simulation Platform Based on Concept of Cloud Computing Cloud Simulation Platform, {eid: 70349400264}>, <None, {eid: 85113278460}>, <Modeling and simulation as a cloud service: a survey, {eid: 84894157608}>, <SimSaaS: simulation software-as-a-service, {eid: 84896330895}>, <Model maturity towards modeling and simulation: Concepts, index system framework and evaluation method, {eid: 85086280964}>, <Optimal Operation of Active Distribution Grids: a System of Systems Framework, {eid: 84899961551}>, <Real-time load balancing scheduling algorithm for periodic simulation models, {eid: 85027930932}>, <A Practical Guide to SysML: The Systems Modeling Language. In: A Practical Guide to SysML: The Systems Modeling Language, {eid: 85113275224, doi: 10.1115/DETC2004-57751}>, <None, {eid: 85113272704}>, <Onesaf: A product line approach to simulation development. Technical Report, {eid: 16244391261}>, <A formal basis for a theory of semantic composability, {eid: 25144477277}>, <CPN-Based Composition in Modeling Command and Control of Surface Air Defense, Communications and Information Processing, {eid: 85113275251}>, <SiMA: a discrete event system specification-based modelling and simulation framework to support model composability, {eid: 84868649406}>, <DEVS/SOA: a cross-platform framework for net-centric modeling and simulation in DEVS unified process, {eid: 67650606762}>, <Software frameworks for model composition, {eid: 84896285875}>, <The CloudSME simulation platform and its applications: A generic multi-cloud platform for developing and executing commercial cloud-based simulations, {eid: 85048935442}>, <Modeling and simulation as a service architecture for deploying resources in the Cloud, {eid: 84960409984}>, <Microservices Architecture Enables DevOps: Migration to a Cloud-Native Architecture, {eid: 84968796741}>, <A mashup architecture with modeling and simulation as a service, {eid: 85020408174}>, <MAMS: Mashup architecture with modeling and simulation as a service, {eid: 85020408174}>, <Ahybrid approach for efficient Web service composition with end-to-end QoS constraints, {eid: 84863617430}>, <QoS ontology for service selection and reuse, {eid: 85027956359}>, <Logistics-involved qos-aware service composition in cloud manufacturing with deep reinforcement learning, {eid: 85086141998}>, <A many-objective memetic algorithm for correlation-aware service composition in cloud manufacturing, {eid: 85088848658}>, <Service Selection for Composition with QoS Correlations, {eid: 84963800143}>, <Business Correlation-Aware Modelling and Services Selection in Business Service Ecosystem, {eid: 84881369412}>, <The NATO MSG-136 Reference Architecture for M&S as a Service, {eid: 85074823406}>, <Architectural Design Space for Modelling and Simulation as a Service: a Review, {eid: 85088899853}>, <An integrated modeling, simulation and analysis framework for engineering complex systems, {eid: 85067231383}>, <A concept for credibility assessment of aircraft system simulators, {eid: 85113279446}>, <Pattern-based validation metric for simulation models, {eid: 85073232445}>, <A novel cloud-based framework for the elderly healthcare services using digital twin, {eid: 85065103886}>, <Service-oriented computing and web software integration: from principles to development, {eid: 84857304009}>, <Multiobjective immune algorithm with nondominated neighbor-based selection, {eid: 47749112044}>",,,Elsevier B.V.,,,2021-12-01,,,,,,,eng,,Journal,,,,2-s2.0-85113271971
28,,"Song H. (AUID: 57195274282), Dautov R. (AUID: 56626911600), Ferry N. (AUID: 35291975700), Solberg A. (AUID: 14827375100), Fleurey F. (AUID: 8582683100)",,Model-based fleet deployment in the IoTâedgeâcloud continuum,2022,Software and Systems Modeling,,,,,,,6,10.1007/s10270-022-01006-z,https://www.doi.org/10.1007/s10270-022-01006-z,"<SINTEF Digital>, <I3S/INRIA Kairos, UniversitÃ© Cote dâAzur>, <Tellu IoT AS>",,"Â© 2022, The Author(s).With the increasing computing and networking capabilities, IoT devices and edge gateways have become part of a larger IoTâedgeâcloud computing continuum, where processing and storage tasks are distributed across the whole network hierarchy, not concentrated only in the cloud. At the same time, this also introduced continuous delivery practices to the development of software components for network-connected gateways and sensing/actuating nodes. These devices are placed on end usersâ premises and are characterized by continuously changing cyber-physical contexts, forcing software developers to maintain multiple application versions and frequently redeploy them on a distributed fleet of devices with respect to their current contexts. Doing this correctly and efficiently goes beyond manual capabilities and requires an intelligent and reliable automated solution. This paper describes a model-based approach to automatically assigning multiple software deployment plans to hundreds of edge gateways and connected IoT devices implemented in collaboration with a smart healthcare application provider. From a platform-specific model of an existing edge computing platform, we extract a platform-independent model that describes a list of target devices and a pool of available deployment plans. Next, we use constraint solving to automatically assign deployment plans to devices at once with respect to their specific contexts. The result is transformed back into the platform-specific model and includes a suitable deployment plan for each device, which is then consumed by our engine to deploy software components not only on edge gateways but also on their downstream IoT devices with constrained resources and connectivity. We validate the approach with a fleet deployment prototype integrated into a DevOps toolchain used by the partner application provider. Initial experiments demonstrate the viability of the approach and its usefulness in supporting DevOps for edge and IoT software development.","Constraint solving, Device fleet, DevOps, IoT, Model-based software engineering, Software deployment",,,,,,,,"<How to make firmware updates over LoRaWAN possible, {eid: 85096548032}>, <IoT device firmware update over LoRa: The blockchain solution, {eid: 85091743330}>, <Satisfiability modulo theories: An efficient approach for the resource-constrained project scheduling problem, {eid: 84879506276}>, <Lightweight multicast forwarding for service discovery in low-power IoT networks, {eid: 84988286442}>, <Model-driven continuous deployment for quality DevOps, {eid: 85054816400}>, <ASSURED: architecture for secure software update of realistic embedded devices, {eid: 85055291101, doi: 10.1109/TCAD.2018.2858422}>, <None, {eid: 84943326563}>, <Automated analysis of feature models 20 years later: a literature review, {eid: 77955227439, doi: 10.1016/j.is.2010.01.001}>, <A systematic review of cloud modeling languages, {eid: 85042469266, doi: 10.1145/3150227}>, <None, {eid: 84979642473}>, <Software product line engineering with feature models, {eid: 84968666710}>, <Opentoscaâa runtime for TOSCA-based cloud applications, {eid: 84892400015}>, <Models@ run. time, {eid: 85008066028, doi: 10.1109/MC.2009.326}>, <Solving constraint satisfaction problems with SAT modulo theories, {eid: 84865267600, doi: 10.1007/s10601-012-9123-1}>, <Satisfiability modulo theories and assignments, {eid: 85026756975}>, <Modeling and verifying systems using a logic of counter arithmetic with lambda expressions and uninterpreted functions, {eid: 84937570704}>, <Exploiting multi-level modelling for designing and deploying gameful systems, {eid: 85076095969}>, <Secure firmware validation and update for consumer devices in home networking, {eid: 84964317984, doi: 10.1109/TCE.2016.7448561}>, <Towards a model-based DevOps for cyber-physical systems, {eid: 85096956543}>, <Targeted content delivery to IoT devices using Bloom filters, {eid: 85030177250}>, <Stream processing on clustered edge devices, {eid: 85132318226, doi: 10.1109/TCC.2020.2983402}>, <Towards a global intelligent surveillance system, {eid: 85047726635}>, <Towards IoT diversity via automated fleet management, {eid: 85072774564}>, <A light-weight approach to software assignment at the edge, {eid: 85099568584}>, <Towards a sustainable IoT with last-mile software deployment, {eid: 85123206042}>, <Z3: An efficient SMT solver, {eid: 45749085681}>, <From deployment to platform exploration: Automatic synthesis of distributed automotive hardware architectures, {eid: 85054797688}>, <Bringing DSE to life: Exploring the design space of an industrial automotive use case, {eid: 85040592290}>, <None, {eid: 85106886947}>, <Cloudmf: model-driven management of multi-cloud applications, {eid: 85041437398, doi: 10.1145/3125621}>, <Continuous deployment of trustworthy smart IoT systems, {eid: 85089665982, doi: 10.5381/jot.2020.19.2.a16}>, <Understanding the software communications architecture, {eid: 70350324202, doi: 10.1109/MCOM.2009.5277455}>, <None, {eid: 84908623904}>, <A model-based approach to software deployment in robotics, {eid: 84893740439}>, <Infield firmware update: Challenges and solutions, {eid: 85006716777}>, <Distributed service discovery in mobile IoT environments using hierarchical bloom filters, {eid: 84937402729}>, <None, {eid: 0344990694}>, <A secure IoT firmware update framework based on MQTT protocol, {eid: 85072842375}>, <Fabryq: Using phones as gateways to prototype internet of things applications using web scripting, {eid: 84962019267}>, <None, {eid: 85129332726}>, <Engineering software diversity: A model-based approach to systematically diversify communications, {eid: 85056814752}>, <Advances in deployment and orchestration approaches for IoTâa systematic review, {eid: 85072691780}>, <Research firmware update over the air from the cloud, {eid: 85059991840}>, <Deployment and Configuration of Component-based Distributed Applications Specification, {eid: 85129246312}>, <A survey of the generalized assignment problem and its applications, {eid: 45749151027}>, <Assignment problems: a golden anniversary survey, {eid: 33749569898, doi: 10.1016/j.ejor.2005.09.014}>, <None, {eid: 84892363672}>, <Chariot: goal-driven orchestration middleware for resilient IoT systems, {eid: 85067935788, doi: 10.1145/3134844}>, <MUP: simplifying secure over-the-air update with MQTT for constrained IoT devices, {eid: 85098513514, doi: 10.3390/s21010010}>, <Deep customization of multi-tenant SaaS using intrusive microservices, {eid: 85049770038}>, <Model-based fleet deployment of edge computing applications, {eid: 85097001114}>, <On architectural diversity of dynamic adaptive systems, {eid: 84951732317}>, <A scalable framework for provisioning large-scale IoT deployments, {eid: 84963811933, doi: 10.1145/2850416}>, <Generating range fixes for software configuration, {eid: 84864197259}>, <Blockchain-based firmware update framework for internet-of-things environment, {eid: 85066783379}>, <Energy-efficient resource allocation for mobile-edge computation offloading, {eid: 85015263422, doi: 10.1109/TWC.2016.2633522}>",,,Springer Science and Business Media Deutschland GmbH,,,2022-10-01,,,,,,,eng,,Journal,,,,2-s2.0-85129268131
29,,"Kirchhof J.C. (AUID: 57004585200), Rumpe B. (AUID: 55861872700), Schmalzing D. (AUID: 57201335290), Wortmann A. (AUID: 56581745100)",,MontiThings: Model-Driven Development and Deployment of Reliable IoT Applications,2022,Journal of Systems and Software,,,,,,,25,10.1016/j.jss.2021.111087,https://www.doi.org/10.1016/j.jss.2021.111087,"<Software Engineering, RWTH Aachen University>, <Institute for Control Engineering of Machine Tools and Manufacturing Units (ISW), University of Stuttgart>",,"Â© 2021 Elsevier Inc.Internet of Things (IoT) applications are exposed to harsh conditions due to factors such as device failure, network problems, or implausible sensor values. We investigate how the inherent encapsulation of component and connector (C&C) architectures can be used to develop and deploy reliable IoT applications. Existing C&C languages for the development of IoT applications mainly focus on the description of architectures and the distribution of components to IoT devices. Furthermore, related approaches often pollute the models with low-level implementation details, tying the models to a particular platform and making them harder to understand. In this paper, we introduce MontiThings, a C&C language offering automatic error handling capabilities and a clear separation between business logic and implementation details. The error-handling methods presented in this paper can make C&C-based IoT applications more reliable without cluttering the business logic with error-handling code that is time-consuming to develop and makes the models hard to understand, especially for non-experts.","Architecture modeling, Code generation, Deployment, Internet of Things, Model-driven engineering",,,,,,,,"<Model-driven separation of concerns for service robotics, {eid: 85015193041}>, <Enterprise information systems in academia and practice: Lessons learned from a MBSE project, {eid: 85115262972}>, <On the deployment of IoT systems: An industrial survey, {eid: 85085747272}>, <Requirement-based deployment of applications in Calvin, {eid: 85018622215}>, <MSL: A pattern language for engineering self-adaptive systems, {eid: 85080064786}>, <Integrated data management for a fleet of search-and-rescue robots, {eid: 84978500286}>, <Situational context in the programmable world, {eid: 85050184835}>, <Implementing Domain-Specific Languages with Xtext and Xtend, {eid: 84906918277}>, <Modern Control Systems Analysis and Design using MATLAB and SIMULINK, {eid: 0004064857}>, <Toward a distributed data flow platform for the web of things (distributed node-RED), {eid: 84984984329}>, <A component architecture for the internet of things, {eid: 85045755257}>, <Specification and Development of Interactive Systems. Focus on Streams, Interfaces and Refinement, {eid: 0038688057}>, <Grand challenges in model-driven engineering: an analysis of the state of the research, {eid: 85077634676}>, <A library of literals, expressions, types, and statements for compositional language design, {eid: 85100195692}>, <Systematic language extension mechanisms for the MontiArc architecture description language, {eid: 85025126026}>, <Architectural programming with MontiArcAutomaton, {eid: 85058218229}>, <Continuously analyzing finite, message-driven, time-synchronous component & connector systems during architecture evolution, {eid: 85058783827}>, <Modeling reusable, platform-independent robot assembly processes, {eid: 85071365924}>, <Embedding component behavior DSLs into the MontiArcAutomaton ADL, {eid: 84999133847}>, <The MPS Language Workbench: Volume I, Vol. 1, {eid: 84940485278}>, <System Model Semantics of Class Diagrams: Informatik-Bericht 2008â05, {eid: 79957643944}>, <Three models for the description of language, {eid: 0004449398}>, <MDE4IoT: Supporting the internet of things with model-driven engineering, {eid: 85032279360}>, <Language engineering with the GEMOC studio, {eid: 85025599751}>, <A Guide to SQL Standard, {eid: 0004081967}>, <Domain-specific languages: An annotated bibliography, {eid: 0001813087}>, <SMArDT modeling for automotive software testing, {eid: 85055705898}>, <IoT developer survey 2019, {eid: 85090367575}>, <Model-based testing for the second generation of integrated modular avionics, {eid: 80051619278}>, <New trends in robotics for agriculture: integration and assessment of a real fleet of robots, {eid: 84899441301}>, <On the potential of event sourcing for retroactive actor-based programming, {eid: 85009899315}>, <The state of the art in language workbenches, {eid: 84891295467}>, <Empirical language analysis in software linguistics, {eid: 79952260717}>, <Model-Based Engineering with AADL: An Introduction to the SAE Architecture Analysis & Design Language, {eid: 84878057078}>, <Towards model-based continuous deployment of secure IoT systems, {eid: 85075910586}>, <GeneSIS: Continuous orchestration and deployment of smart IoT systems, {eid: 85072692587}>, <Continuous deployment of trustworthy smart IoT systems, {eid: 85089665982}>, <MDE to manage communications with and between resource-constrained systems, {eid: 80054085491}>, <Model-driven development of complex software: A research roadmap, {eid: 34748861160}>, <Detection and exploration of outlier regions in sensor data streams, {eid: 62449325312}>, <A Practical Guide to SysML: The Systems Modeling Language, {eid: 85107187033}>, <Midgar: Domain-specific language to generate smart objects for an internet of things platform, {eid: 84938677362}>, <Generated enterprise information systems: MDSE for maintainable co-development of frontend and backend, {eid: 85080937709}>, <Developing IoT applications in the fog: A distributed dataflow approach, {eid: 84962284412}>, <Industry 4.0: The Industrial Internet of Things, {eid: 85181385491}>, <MCM-BPM: A domain-specific language for business processes analysis, {eid: 66249096682}>, <Engineering tagging languages for DSLs, {eid: 84961634193}>, <OMG unified modeling language (OMG UML), infrastructure version 2.3 (10-05-03), {eid: 79958728594}>, <Integration of heterogeneous modeling languages via extensible and composable language components, {eid: 84939549902}>, <MontiArc - Architectural Modeling of Interactive Distributed and Cyber-Physical Systems: Technical Report AIB-2012-03, {eid: 84868359117}>, <ThingML: A language and code generation framework for heterogeneous targets, {eid: 85008457888}>, <Integrating OCL and textual modelling languages, {eid: 79957644161}>, <Compositional language engineering using generated, extensible, static type safe visitors, {eid: 84977498652}>, <None, {eid: 85053070397}>, <Software language engineering in the large: Towards composing and deriving languages, {eid: 85053063379}>, <13 AutoFocus 3 - A scientific tool prototype for model-based development of component-based, reactive, distributed systems, {eid: 84893476540}>, <Model-driven development of adaptive IoT systems, {eid: 85041450972}>, <ATL: A model transformation tool, {eid: 45849085734}>, <ATL: a QVT-like transformation language, {eid: 34248352650}>, <Model transformation language MOLA, {eid: 33644896630}>, <A model-driven architecture-based data quality management framework for the internet of things, {eid: 85013765900}>, <MontiBelle - Toolbox for a model-based development and verification of distributed critical systems for compliance with functional safety, {eid: 85091930330}>, <Automated semantics-preserving parallel decomposition of finite component and connector architectures, {eid: 85083769685}>, <Model-driven digital twin construction: Synthesizing the integration of cyber-physical systems with their information systems, {eid: 85096992990}>, <The epsilon transformation language, {eid: 54249141728}>, <Raising the level of abstraction in the development of GMF-based graphical model editors, {eid: 77949837351}>, <What industry needs from architectural languages: A survey, {eid: 84878389746}>, <Internet of things: Vision, applications and research challenges, {eid: 84861997111}>, <IoT reliability: a review leading to 5 key research directions, {eid: 85103659797}>, <Model-based software engineering to tame the IoT jungle, {eid: 85010402413}>, <Modeling cloud architectures as interactive systems, {eid: 84922922622}>, <Advances in deployment and orchestration approaches for IoT - A systematic review, {eid: 85072691780}>, <A survey on domain-specific languages in robotics, {eid: 84921626192}>, <Calvin â Merging cloud and IoT, {eid: 84939195246}>, <Kappa: Serverless IoT deployment, {eid: 85050674397}>, <None, {eid: 85116482118}>, <Internet of Things-from Hype to Reality: The Road to Digitization, {eid: 85008967582}>, <What are IoT systems for real? An expertsâ survey on software engineering aspects, {eid: 85105008082}>, <Internet of things patterns, {eid: 85015166666}>, <Analysis and Synthesis of Interactive Component and Connector Systems, {eid: 85009425521}>, <A little synopsis on streams, stream processing functions, and state-based stream processing, {eid: 84910030296}>, <Teaching agile model-driven engineering for cyber-physical systems, {eid: 85026747612}>, <Formale Methodik des Entwurfs Verteilter Objektorientierter Systeme, {eid: 0005266243}>, <Modeling with UML: Language, Concepts, Methods, {eid: 85125489900}>, <Abstraction and refinement in hierarchically decomposable and underspecified CPS-architectures, {eid: 85052702289}>, <Securing IoT for smart home system, {eid: 84953339812}>, <None, {eid: 0029723625}>, <Modeling and Analysis of Real-Time and Embedded Systems with UML and MARTE: Developing Cyber-Physical Systems, {eid: 84903657274}>, <ROOM: An object-oriented methodology for developing real-time systems, {eid: 0027088429}>, <OpenTOSCA for IoT: Automating the deployment of IoT applications based on the mosquitto message broker, {eid: 85000926700}>, <Model-based fleet deployment of edge computing applications, {eid: 85097001114}>, <EMF: Eclipse Modeling Framework, {eid: 74549142762}>, <EMF: Eclipse Modeling Framework, {eid: 74549142762}>, <SimTD: a car-to-X system architecture for field operational tests Topics in Automotive Networking, {eid: 77952115963}>, <A roadmap to the programmable world: Software challenges in the IoT era, {eid: 85010433150}>, <Beyond the next 700 lot platforms, {eid: 85044360052}>, <Liquid software manifesto: The era of multiple device ownership and its implications for software architecture, {eid: 84928633216}>, <A new skill based robot programming language using UML/P statecharts, {eid: 84887300711}>, <Neverlang: A framework for feature-oriented language development, {eid: 84938739142}>, <None, {eid: 84900017627}>, <DSL Engineering - Designing, Implementing and Using Domain-Specific Languages, {eid: 84882302510}>, <Language design with the spoofax language workbench, {eid: 84907989410}>, <Supporting the DSL spectrum, {eid: 85040714645}>, <Modeling languages in industry 4.0: an extended systematic mapping study, {eid: 85074431675}>",,,Elsevier Inc.,,,2022-01-01,,,,,,,eng,,Journal,,,,2-s2.0-85116410296
30,,"Li P. (AUID: 57222485779), Thomas J. (AUID: 57222476061), Wang X. (AUID: 56912474600), Khalil A. (AUID: 57352500900), Doufexi A. (AUID: 56228099700), Piechocki R.J. (AUID: 7003301240), Ahmad A. (AUID: 57351754500), Inacio R. (AUID: 57352196000), Kapoor S. (AUID: 36131665800), Parekh A. (AUID: 57219597844), Shojaeifard A. (AUID: 54386020900)",,RLOps: Development Life-Cycle of Reinforcement Learning Aided Open RAN,2022,IEEE Access,,,,,,,9,10.1109/ACCESS.2022.3217511,https://www.doi.org/10.1109/ACCESS.2022.3217511,"<University of Bristol, Department of Electrical and Electronic Engineering>, <Vilicom U.K. Ltd.>, <Applied Research>, <InterDigital Communications Inc.>",,"Â© 2013 IEEE.Radio access network (RAN) technologies continue to evolve, with Open RAN gaining the most recent momentum. In the O-RAN specifications, the RAN intelligent controllers (RICs) are software-defined orchestration and automation functions for the intelligent management of RAN. This article introduces principles for machine learning (ML), in particular, reinforcement learning (RL) applications in the O-RAN stack. Furthermore, we review the state-of-the-art research in wireless networks and cast it onto the RAN framework and the hierarchy of the O-RAN architecture. We provide a taxonomy for the challenges faced by ML/RL models throughout the development life-cycle: from the system specification to production deployment (data acquisition, model design, testing and management, etc.). To address the challenges, we integrate a set of existing MLOps principles with unique characteristics when RL agents are considered. This paper discusses a systematic model development, testing and validation life-cycle, termed: RLOps. We discuss fundamental parts of RLOps, which include: model specification, development, production environment serving, operations monitoring and safety/security. Based on these principles, we propose the best practices for RLOps to achieve an automated and reproducible model development process. At last, a holistic data analytics platform rooted in the O-RAN deployment is designed and implemented, aiming to embrace and fulfil the aforementioned principles and best practices of RLOps.","data engineering, digital twins, machine learning, MLOps, O-RAN, reinforcement learning, RLOps",,,,,,,,"<Open, programmable, and virtualized 5G networks: State-of-the-art and the road ahead, {eid: 85090233031}>, <None, {eid: 85090205109}>, <Deep learning-based channel estimation, {eid: 85064478835}>, <Machine learning techniques applied to wireless ad-hoc networks: Guide and survey, {eid: 51349134582}>, <Optimized computation offloading performance in virtual edge computing systems via deep reinforcement learning, {eid: 85055025077}>, <None, {eid: 85109806275}>, <DevOps, {eid: 84968831988}>, <Machine learning & artificial intelligence in the quantum domain: A review of recent progress, {eid: 85045331288}>, <Deep clustering for unsupervised learning of visual features, {eid: 85058442862}>, <None, {eid: 85050992891}>, <None, {eid: 33846516584}>, <Multi-agent reinforcement learning: A selective overview of theories and algorithms, {eid: 85111796839}>, <None, {eid: 85119840376}>, <Open RAN_Radio access network evolution, benefits and market trends, {eid: 85122086333}>, <Threat of adversarial attacks on deep learning in computer vision: A survey, {eid: 85042198914}>, <A survey of the usages of deep learning for natural language processing, {eid: 85100707985}>, <Reinforcement learning in dual-arm trajectory planning for a free-floating space robot, {eid: 85077502803}>, <Mastering the game of go without human knowledge, {eid: 85031918331}>, <AliGraph: A comprehensive graph neural network platform, {eid: 85083540986}>, <Highly accurate protein structure prediction with AlphaFold, {eid: 85110248105}>, <Toward ubiquitous massive accesses in 3GPP machine-to-machine communications, {eid: 79953793010}>, <Elastic O-RAN slicing for industrial monitoring and control: A distributed matching game and deep reinforcement learning approach, {eid: 85134243210}>, <Intelligence and learning in O-RAN for data-driven NextG cellular networks, {eid: 85119879211}>, <None, {eid: 85131138633}>, <Reinforcement learning based dynamic function splitting in disaggregated green open RANs, {eid: 85115728964}>, <ColO-RAN: Developing machine learning-based xApps for open RAN closed-loop control on programmable experimental platforms, {eid: 85134217734, doi: 10.1109/TMC.2022.3188013}>, <Session management for URLLC in 5G open radio access network: A machine learning approach, {eid: 85125635812}>, <Energyaware dynamic DU selection and NF relocation in O-RAN using actor-critic learning, {eid: 85133203171}>, <Connection management xAPP for O-RAN RIC: A graph neural network and reinforcement learning approach, {eid: 85125864316}>, <Self-play learning strategies for resource assignment in open-RAN networks, {eid: 85123581219}>, <Multi-agent team learning in virtualized open radio access networks (O-RAN), {eid: 85135110795}>, <An RL approach for radio resource management in the ORAN architecture, {eid: 85111771685}>, <Team learning-based resource allocation for open radio access network (O-RAN), {eid: 85126837825}>, <Supporting intelligence in disaggregated open radio access networks: Architectural principles, AI/ML workflow, and use cases, {eid: 85128300188}>, <OpenRAN Gym: An open toolbox for data collection and experimentation with AI in O-RAN, {eid: 85130728927}>, <None, {eid: 85142188274}>, <None, {eid: 85119867894}>, <Deep learning-based detector for OFDM-IM, {eid: 85071168928}>, <OFDMautoencoder for end-to-end learning of communications systems, {eid: 85053476001}>, <Deep learning-based downlink channel prediction for FDD massiveMIMOsystem, {eid: 85077734800}>, <PrecoderNet: Hybrid beamforming for millimeter wave systems with deep reinforcement learning, {eid: 85092740543}>, <A unified deep learning based polar-LDPC decoder for 5G communication systems, {eid: 85059964948}>, <Cooperative communication resource allocation strategies for 5G and beyond networks: A review of architecture, challenges and opportunities, {eid: 85136714896}>, <An optimal multitier resource allocation of cloud RAN in 5G using machine learning, {eid: 85065711553}>, <A survey of reinforcement learning algorithms for dynamically varying environments, {eid: 85111978118}>, <Evaluating the performance of reinforcement learning algorithms, {eid: 85105235491}>, <Deep reinforcement learning: A brief survey, {eid: 85040312540}>, <None, {eid: 85095081592}>, <Explainable reinforcement learning: A survey, {eid: 85090173628}>, <Digital twin: Enabling technologies, challenges and open research, {eid: 85087331367}>, <Digital twin for 5G and beyond, {eid: 85102889168}>, <Sim-to-real transfer in deep reinforcement learning for robotics: A survey, {eid: 85099677583}>, <Sim2Real predictivity: Does evaluation in simulation predict real-world performance?, {eid: 85090913476}>, <Bayesian optimization with robust Bayesian neural networks, {eid: 85015791874}>, <None, {eid: 85029416652}>, <None, {eid: 85059179592}>, <None, {eid: 85129481823}>, <Modelling performance & resource management in kubernetes, {eid: 85009084303}>, <None, {eid: 85113635591}>, <None, {eid: 85126423720}>, <Devsecops: A multivocal literature review, {eid: 85029742916}>, <Adversarial attack and defense in reinforcement learning-from AI security view, {eid: 85089737014}>, <Adversarial reinforcement learning in a cyber security simulation, {eid: 85060273333}>, <None, {eid: 85053884273}>, <None, {eid: 85015444377}>, <Challenges of real-world reinforcement learning: Definitions, benchmarks and analysis, {eid: 85105161247}>, <Machine learning: The high interest credit card of technical debt, {eid: 84962699841}>, <None, {eid: 85094776074}>, <The ML test score: A rubric for ML production readiness and technical debt reduction, {eid: 85047767117}>, <Joint optimization of handover control and power allocation based on multi-agent deep reinforcement learning, {eid: 85096217033}>, <Stochastic games, {eid: 0000392613}>, <Stochastic neural networks for hierarchical reinforcement learning, {eid: 85040130246}>, <None, {eid: 85105868875}>, <None, {eid: 84904867557}>, <Long short-term memory, {eid: 0031573117}>, <None, {eid: 0004102479}>, <Learning curriculum policies for reinforcement learning, {eid: 85077025805}>, <Imitation learning: A survey of learning methods, {eid: 85017424752}>, <Using neuroevolved binary neural networks to solve reinforcement learning environments, {eid: 85078706988}>, <Bayesian reinforcement learning: A survey, {eid: 84973621947}>, <A Bayesian framework for reinforcement learning, {eid: 14344258433}>, <None, {eid: 85142146687}>, <None, {eid: 85073615989}>, <None, {eid: 85010746053}>, <Explainable reinforcement learning: A Survey, {eid: 85090173628}>, <Learning with safety constraints: Sample complexity of reinforcement learning for constrained MDPs, {eid: 85128423319}>, <None, {eid: 85106607105}>, <Self-service cybersecurity monitoring as enabler for DevSecOps, {eid: 85084859519}>, <Digital twins: Understanding the added value of integrated models for through-life engineering services, {eid: 85068447880}>, <Distributed prioritized experience replay, {eid: 85083951402}>, <IMPALA: Scalable distributed deep-RL with importance weighted actor-learner architectures, {eid: 85057327371}>, <Measuring sample efficiency and generalization in reinforcement learning benchmarks: Neurips 2020 procgen benchmark, {eid: 85160572687}>, <Deep reinforcement learning that matters, {eid: 85057337632}>, <A survey on data collection for machine learning: A big data_AI integration perspective, {eid: 85102237692}>, <None, {eid: 85097553332}>, <Graph of virtual actors (GOVA): A big data analytics architecture for IoT, {eid: 85017628137}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2022-01-01,,,,,,,eng,,Journal,,,,2-s2.0-85141535529
31,,"Petrovic N. (AUID: 57206900973), Tosic M. (AUID: 7006349903)",,SMADA-Fog: Semantic model driven approach to deployment and adaptivity in fog computing,2020,Simulation Modelling Practice and Theory,,,,,,,20,10.1016/j.simpat.2019.102033,https://www.doi.org/10.1016/j.simpat.2019.102033,"<Faculty of Electronic Engineering, Univeristy of Nis>",,"Â© 2019 Elsevier B.V.The deployment, monitoring and configuration of applications in Fog Computing are becoming quite challenging, due to heterogeneity of mobile and IoT devices involved, data movement constraints imposed by legal regulations as well as frequent changes in the execution environment that may affect quality of service. As a consequence, the system administration procedures are becoming more complex and time-consuming, especially if done manually. In this paper, a Semantic Model driven Approach to Deployment and Adaptivity of container-based applications in Fog Computing (SMADA-Fog) is proposed. Modeling tools, semantic framework, linear optimization model, simulation environment and infrastructure management code generator leveraging the semantic annotations are implemented and presented. According to results of the two experimentally tested scenarios, the proposed approach improves the application performance, while the time required for deployment as well as service adaptation is reduced for at least an order of magnitude.","DevOps, Fog Computing, Infrastructure as code, Linear optimization, Model-driven engineering, Semantic technology",,,,,,,,"<A research perspective on fog computing, {eid: 85049018742, doi: 10.1007/978-3-319-91764-1_16}>, <Information logistics and fog computing: the DITAS approach, {eid: 85020533059}>, <Simulating fog and edge computing scenarios: an overview and research challenges, {eid: 85063588970, doi: 10.3390/fi11030055}>, <An aspect-oriented framework for service adaptation, {eid: 77149169725, doi: 10.1007/11948148_2}>, <Adaptive wireless video streaming based on edge computing: opportunities and approaches, {eid: 85045740301, doi: 10.1109/TSC.2018.2828426}>, <Adaptation of service-based systems, service research challenges and solutions for the future Internet, {eid: 79956134701, doi: 10.1007/978-3-642-17599-2_5}>, <Enabling Flexibility of Data-Intensive Applications on Container-Based Systems with Node-RED in Fog Environments, Master Thesis, {eid: 85067346514}>, <A containerized big data streaming architecture for edge cloud computing on clustered single-board devices, {eid: 85067470840, doi: 10.5220/0007695000680080}>, <Infrastructure as Code: Managing Servers in the Cloud, {eid: 85026761147}>, <DevOps, {eid: 84968831988, doi: 10.1109/ms.2016.68}>, <Infrastructure-as-code for data-intensive architectures: a model-driven development approach, {eid: 85051103640, doi: 10.1109/ICSA.2018.00025}>, <Formalisation of Information Systems Modelling (thesis), {eid: 0004119079}>, <Toward principles for the design of ontologies used for knowledge sharing, {eid: 58149365542}>, <Unified IoT ontology to enable interoperability and federation of testbeds, {eid: 85015182893}>, <Semantic driven code generation for networking testbed experimentation, {eid: 85053036166, doi: 10.1080/17517575.2018.1509135}>, <The SCOR ontologies framework for robotics testbed, {eid: 85062056944, doi: 10.1109/telfor.2018.8611841}>, <A semantic framework for design-time RIoT device mission coordination, {eid: 85062088297, doi: 10.1109/telfor.2018.8611845}>, <Formalizing device coordination in IoT systems: the SCOR case study, {eid: 85076552257}>, <Linear Programming 1 - Introduction, {eid: 0011480480}>, <AMPL: A Modeling Language for Mathematical Programming, {eid: 0003404231}>, <The generalized simplex method for minimizing a linear form under linear inequality restraints, {eid: 84972521846}>, <Elastic allocation of Docker containers in cloud environments, {eid: 85019248340}>, <Virtual network functions routing and placement for edge cloud latency minimization, {eid: 85053313374, doi: 10.1109/jsac.2018.2869955}>, <MODAClouds: a model-driven approach for the design and execution of applications on multiple clouds, {eid: 84864997201, doi: 10.1109/mise.2012.6226014}>, <A UML Profile for the design, quality assessment and deployment of data-intensive applications, {eid: 85064569230, doi: 10.1007/s10270-019-00730-3}>, <Managing multi-cloud systems with CloudMF, {eid: 84884604847}>, <CloudMF: applying MDE to tame the complexity of managing multi-cloud applications, {eid: 84946685259}>, <DITAS: unleashing the potential of fog computing to improve data-intensive applications, {eid: 85045233594, doi: 10.1007/978-3-319-79090-9_11}>, <The Cloud Application Modelling and Execution Language (CAMEL), {eid: 85041451210, doi: 10.18725/OPARU-4339}>, <Docker enabled virtualized nanoservices for local IoT edge networks, {eid: 85076580010}>, <qCon: QoS-Aware network resource management for fog computing, {eid: 85054888814, doi: 10.3390/s18103444}>, <Model-driven approach for deployment of container-based applications in fog computing, {eid: 85067362126}>, <Model-driven management of Docker containers, {eid: 84989312971}>, <Framework for model-driven semantic-enabled deployment of container-based virtual network functions to support edge computing and future internet services, {eid: 85060287755}>, <Resource provisioning in fog computing: from theory to practice, {eid: 85066349917, doi: 10.3390/s19102238}>, <Modelling and simulation of fog and edge computing environments using iFogSim toolkit, {eid: 85061313992}>, <RECAP simulator: simulation of cloud/edge/fog computing scenarios, {eid: 85044520900, doi: 10.1109/wsc.2017.8248208}>, <Energy efficient scheduling for heterogeneous fog computing architectures, {eid: 85055419603, doi: 10.1109/compsac.2018.00085}>, <Energy efficiency of Fog computing and networking services in 5G networks, {eid: 85029383070, doi: 10.1109/eurocon.2017.8011159}>, <TaaSOR â Testbed-as-a-service ontology repository, {eid: 84873647179, doi: 10.1007/978-3-642-35576-9_49}>, <Data mining for interference avoidance in smart cities IoT networks, {eid: 85076539202, doi: 10.22190/FUACR1801013N}>, <Fog computing security challenges and future directions, {eid: 85064344660, doi: 10.1109/MCE.2019.2893674}>, <UAVFog: a UAV-based fog computing for internet of things, {eid: 85050229413, doi: 10.1109/uic-atc.2017.8397657}>",,,Elsevier B.V.,,,2020-05-01,,,,,,,eng,,Journal,,,,2-s2.0-85076510068
32,,"Fortuna C. (AUID: 25122210000), Yetgin H. (AUID: 55323124900), Mohorcic M. (AUID: 6603024958)",,Smart Infrastructures: Artificial Intelligence-Enabled Lifecycle Automation,2023,IEEE Industrial Electronics Magazine,,,,,,,2,10.1109/MIE.2022.3165673,https://www.doi.org/10.1109/MIE.2022.3165673,"<Networked Embedded Systems Laboratory, JoÅ¾ef Stefan Institute>, <Bitlis Eren University, Department of Electrical and Electronics Engineering>, <JoÅ¾ef Stefan Institute, Department of Communication Systems and A Scientific Counselor>, <JoÅ¾ef Stefan International Postgraduate School>",,"Â© 2007-2011 IEEE.The deployment and maintenance of large smart infrastructures used for powering data-driven decision making, regardless of retrofitted or newly deployed infrastructures, still lack automation and mostly rely on extensive manual effort. In this article, we focus on the two main challenges in the lifecycle of smart infrastructures: deployment and operation, each of which is rather generic and applies to all infrastructures. We discuss the existing technologies designed to help improve and automate deployment and operation for smart infrastructures in general and use the smart grid as a guiding example to ground some examples across the article. Next, we identify and discuss opportunities where the broad field of artificial intelligence (AI) can help further improve and automate the lifecycle of smart infrastructures to eventually improve their reliability and drive down their deployment and operation costs. Finally, based on the usage of AI for web and social networks as well as our previous experience in AI for networks and cyber-physical systems, we provide decision guidelines for the adoption of AI.",,,,,,,,,"<The forthcoming Artificial Intelligence (AI) revolution: Its impact on society and firms, {eid: 85018991558, doi: 10.1016/j.futures.2017.03.006}>, <Automatic intent-based secure service creation through a multilayer SDN network orchestration, {eid: 85045421173, doi: 10.1364/JOCN.10.000289}>, <None, {eid: 85163305659}>, <Drivers, barriers and social considerations for AI adoption in business and management: A tertiary study, {eid: 85085273894, doi: 10.1016/j.techsoc.2020.101257}>, <Smart infrastructure: An emerging frontier for multidisciplinary research, {eid: 85177063829, doi: 10.1680/jsmic.16.00002}>, <Whitepaper on IoT onboarding - a device manufacturerâs perspective, {eid: 85163294168}>, <None, {eid: 84880742273}>, <A survey on smart grid communication infrastructures: Motivations, requirements and challenges, {eid: 84873743210, doi: 10.1109/SURV.2012.021312.00034}>, <Towards sustainable smart cities: A review of trends, architectures, components, and open challenges in smart cities, {eid: 85041485794, doi: 10.1016/j.scs.2018.01.053}>, <A survey of data mining and machine learning methods for cyber security intrusion detection, {eid: 84971516631, doi: 10.1109/COMST.2015.2494502}>, <Energy-efficient information and communication infrastructures in the smart grid: A survey on interactions and open issues, {eid: 84925841329, doi: 10.1109/COMST.2014.2341600}>, <Deepint.net: A rapid deployment platform for smart territories, {eid: 85098948613, doi: 10.3390/s21010236}>, <Toward intelligent cyber-physical systems: Digital twin meets artificial intelligence, {eid: 85114809478, doi: 10.1109/MCOM.001.2001237}>, <Practical lessons from the deployment and management of a smart city internet-of-things infrastructure: The smartsantander testbed case, {eid: 85023158980, doi: 10.1109/ACCESS.2017.2723659}>, <Time-to-provision evaluation of IoT devices using automated zero-touch provisioning, {eid: 85101238402, doi: 10.1109/GLOBECOM42002.2020.9348119}>, <A SCADA system for energy management in intelligent buildings, {eid: 84861797535, doi: 10.1016/j.enbuild.2012.01.041}>, <Cisco zero-touch provisioning configuration guide, {eid: 85163364073}>, <Brute forcing Wi-Fi protected setup, {eid: 84871944473}>, <IoTivity easy setup, {eid: 85163317918}>, <Recognition of QR code with mobile phones, {eid: 52349112746, doi: 10.1109/CCDC.2008.4597299}>, <Evaluation of off-the-shelf speech recognizers across diverse dialogue domains, {eid: 85096528409}>, <VIVoNet: Visually-represented, intent-based, voice-assisted networking, {eid: 85063410120, doi: 10.5121/ijcnc.2019.11201}>, <âAlexa, letâs talk about my productivity:â The impact of digital assistants on work productivity, {eid: 85122659846, doi: 10.1016/j.jbusres.2022.01.015}>, <None, {eid: 0003690625}>, <Sensor network software update management: A survey, {eid: 22744446393, doi: 10.1002/nem.574}>, <Reprogramming embedded systems at run-time, {eid: 85083992336, doi: 10.21307/ijssis-2019-078}>, <GITAR: Generic extension for internet-of-things architectures enabling dynamic updates of network and application modules, {eid: 84948716101, doi: 10.1016/j.adhoc.2015.05.017}>, <Devops, {eid: 84968831988, doi: 10.1109/MS.2016.68}>, <Cost comparison of running web applications in the cloud using monolithic, microservice, and AWS lambda architectures, {eid: 85018282953, doi: 10.1007/s11761-017-0208-y}>, <Service provider DevOps for large scale modern network services, {eid: 84942610708, doi: 10.1109/INM.2015.7140502}>, <Foggy: A framework for continuous automated iot application deployment in fog computing, {eid: 85032296582, doi: 10.1109/AIMS.2017.14}>, <Continuous integration in wireless technology development, {eid: 85055881129, doi: 10.1109/MCOM.2018.1800107}>, <Firmware over-the-air programming techniques for iot networks - a survey, {eid: 85121120128, doi: 10.1145/3472292}>, <A lightweight and cost effective edge intelligence architecture based on containerization technology, {eid: 85066245119, doi: 10.1007/s11280-019-00692-y}>, <Energy services: A conceptual review, {eid: 85016142569, doi: 10.1016/j.erss.2017.02.010}>, <FENDE: Marketplace-based distribution, execution, and life cycle management of VNFs, {eid: 85060542861, doi: 10.1109/MCOM.2018.1800507}>, <DockerFinder: Multi-attribute search of docker images, {eid: 85020206143, doi: 10.1109/IC2E.2017.41}>, <Knowledge graph identification, {eid: 84891936872}>, <AZTEC: Anticipatory capacity allocation for zero-touch network slicing, {eid: 85090284651, doi: 10.1109/INFOCOM41043.2020.9155299}>, <AI-driven zero touch network and service management in 5G and beyond: Challenges and research directions, {eid: 85079587457, doi: 10.1109/MNET.001.1900252}>, <AIOps: Real-world challenges and research innovations, {eid: 85071852727, doi: 10.1109/ICSE-Companion.2019.00023}>, <Learning to detect anomalous wireless links in IoT networks, {eid: 85096860989, doi: 10.1109/AC-CESS.2020.3039333}>, <A comprehensive survey on network anomaly detection, {eid: 85049560113, doi: 10.1007/s11235-018-0475-8}>, <Online anomaly detection over big data streams, {eid: 85078702170}>, <Current time series anomaly detection benchmarks are flawed and are creating the illusion of progress, {eid: 85115186826, doi: 10.1109/TKDE.2021.3112126}>, <Outlier detection for temporal data: A survey, {eid: 84959505571, doi: 10.1109/TKDE.2013.184}>, <Survey on time series motif discovery, {eid: 85013319135, doi: 10.1002/widm.1199}>, <How much AI do you require? Decision factors for adopting AI technology, {eid: 85099537611}>, <Artificial intelligence adoption: AI-readiness at firm-level, {eid: 85085914730}>",,,Institute of Electrical and Electronics Engineers Inc.,,,2023-06-01,,,,,,,eng,,Journal,,,,2-s2.0-85129370599
33,,"Wettinger J. (AUID: 55860881600), BreitenbÃ¼cher U. (AUID: 54929864700), Kopp O. (AUID: 23467541000), Leymann F. (AUID: 6603379902)",,Streamlining DevOps automation for Cloud applications using TOSCA as standardized metamodel,2016,Future Generation Computer Systems,,,,,,,66,10.1016/j.future.2015.07.017,https://www.doi.org/10.1016/j.future.2015.07.017,"<Institute of Architecture of Application Systems (IAAS), University of Stuttgart>",,"Â© 2015 Elsevier B.V.DevOps as an emerging paradigm aims to tightly integrate developers with operations personnel. This enables fast and frequent releases in the sense of continuously delivering new iterations of a particular application. Users and customers of today's Web applications and mobile apps running in the Cloud expect fast feedback to problems and feature requests. Thus, it is a critical competitive advantage to be able to respond quickly. Besides cultural and organizational changes that are necessary to apply DevOps in practice, tooling is required to implement end-to-end automation of deployment processes. Automation is the key to efficient collaboration and tight integration between development and operations. The DevOps community is constantly pushing new approaches, tools, and open-source artifacts to implement such automated processes. However, as all these proprietary and heterogeneous DevOps automation approaches differ from each other, it is hard to integrate and combine them to deploy applications in the Cloud using an automated deployment process. In this paper we present a systematic classification of DevOps artifacts and show how different kinds of artifacts can be discovered and transformed toward TOSCA, which is an emerging standard. We present an integrated modeling and runtime framework to enable the seamless and interoperable integration of different approaches to model and deploy application topologies. The framework is implemented by an open-source, end-to-end toolchain. Moreover, we validate and evaluate the presented approach to show its practical feasibility based on a detailed case study, in particular considering the performance of the transformation toward TOSCA.","Cloud computing, Cloud standards, Deployment automation, DevOps, TOSCA, Transformation",,,,,,,,"<None, {eid: 84887309406}>, <None, {eid: 84860316008}>, <None, {eid: 84858197925}>, <None, {eid: 84884493217}>, <None, {eid: 84923681810}>, <None, {eid: 84978418140}>, <None, {eid: 84958809022}>, <Standards-based DevOps automation and integration using TOSCA, {eid: 84946692273}>, <None, {eid: 84941941478}>, <TOSCA: Portable automated deployment and management of cloud applications, {eid: 84930424951}>, <The Emergence of governance in an open source community, {eid: 36749092836}>, <A framework for creating hybrid-open source software communities, {eid: 0036108945}>, <Any2API - Automated APIfication, {eid: 84969848923}>, <Container-based operating system virtualization: A scalable, high-performance alternative to hypervisors, {eid: 34548029519}>, <None, {eid: 84923681808}>, <None, {eid: 84958809023}>, <None, {eid: 84884482931}>, <None, {eid: 84880300218}>, <None, {eid: 84908235036}>, <None, {eid: 78651521953}>, <None, {eid: 77957994724}>, <BPMN4TOSCA: A domain-specific language to model management plans for composite applications, {eid: 84870341884}>, <Automated capturing and systematic usage of DevOps knowledge for cloud applications, {eid: 84944329323}>, <None, {eid: 84944333558}>, <Integrating configuration management with model-driven cloud management based on TOSCA, {eid: 84884491041}>, <None, {eid: 84863232801}>, <None, {eid: 84893925034}>, <Winery - A modeling tool for TOSCA-based cloud applications, {eid: 84892397400}>, <OpenTOSCA - A runtime for TOSCA-based cloud applications, {eid: 84892400015}>, <None, {eid: 58149225100}>, <None, {eid: 0004002692}>, <None, {eid: 84899456507}>, <Combining declarative and imperative cloud application provisioning based on TOSCA, {eid: 84908563698}>, <Unified invocation of scripts and services for provisioning, deployment, and management of cloud applications based on TOSCA, {eid: 84902315977}>, <None, {eid: 84958809025}>, <Blueprinting the Cloud, {eid: 80555156126}>, <None, {eid: 84923681804}>, <None, {eid: 84907080574}>, <Sr DevOpSlang - Bridging the gap between development and operations, {eid: 84923681803}>, <Ubicrawler: A scalable fully distributed web crawler, {eid: 3042680184}>, <Mercator: A scalable, extensible web crawler, {eid: 79951675059}>, <The social compute unit, {eid: 79955550220}>, <The rise of crowdsourcing, {eid: 33847246935}>, <None, {eid: 0344990694}>, <None, {eid: 78651322278}>",,,Elsevier,,,2016-03-01,,,,,,,eng,,Journal,,,,2-s2.0-84958740530
34,,"Mossige M. (AUID: 55842764600), Gotlieb A. (AUID: 56247674500), Meling H. (AUID: 22734926800)",,Testing robot controllers using constraint programming and continuous integration,2015,Information and Software Technology,,,,,,,20,10.1016/j.infsof.2014.09.009,https://www.doi.org/10.1016/j.infsof.2014.09.009,"<ABB Robotics>, <Simula Research Laboratory>, <University of Stavanger>",,"Â© 2014 Elsevier B.V. All rights reserved.Context: Testing complex industrial robots (CIRs) requires testing several interacting control systems. This is challenging, especially for robots performing process-intensive tasks such as painting or gluing, since their dedicated process control systems can be loosely coupled with the robot's motion control. Objective: Current practices for validating CIRs involve manual test case design and execution. To reduce testing costs and improve quality assurance, a trend is to automate the generation of test cases. Our work aims to define a cost-effective automated testing technique to validate CIR control systems in an industrial context. Method: This paper reports on a methodology, developed at ABB Robotics in collaboration with SIMULA, for the fully automated testing of CIRs control systems. Our approach draws on continuous integration principles and well-established constraint-based testing techniques. It is based on a novel constraintbased model for automatically generating test sequences where test sequences are both generated and executed as part of a continuous integration process. Results: By performing a detailed analysis of experimental results over a simplified version of our constraint model, we determine the most appropriate parameterization of the operational version of the constraint model. This version is now being deployed at ABB Robotics's CIR testing facilities and used on a permanent basis. This paper presents the empirical results obtained when automatically generating test sequences for CIRs at ABB Robotics. In a real industrial setting, the results show that our methodology is not only able to detect reintroduced known faults, but also to spot completely new faults. Conclusion: Our empirical evaluation shows that constraint-based testing is appropriate for automatically generating test sequences for CIRs and can be faithfully deployed in an industrial context.","Agile development, Constraint programming, Continuous integration, Distributed real time systems, Robotized painting, Software testing",,,,,,,,"<Test generation for robotized paint systems using constraint programming in a continuous integration environment, {eid: 84883352915}>, <None, {eid: 0003426802}>, <None, {eid: 0006705483}>, <Continuous software engineering and beyond: Trends and challenges, {eid: 84942514935}>, <Communicating continuous integration servers for increasing effectiveness of automated testing, {eid: 84866917846}>, <Software testing: A research travelogue 2000-2014, {eid: 84942057973}>, <Empirical studies of test case prioritization in a JUnit testing environment, {eid: 16244385003}>, <A new heuristic for test suite reduction, {eid: 0032115945}>, <Test case prioritization for continuous regression testing: An industrial case study, {eid: 84891715780}>, <Unit test virtualization with vmvm, {eid: 84994138689}>, <On-demand test suite reduction, {eid: 84864269921}>, <CiCUTS: Combining system execution modeling tools with continuous integration environments, {eid: 44149100080}>, <A programming model for time-synchronized distributed real-time systems, {eid: 34548134817}>, <The control of discrete event systems, {eid: 0024479313}>, <None, {eid: 84892236938}>, <Ieee-1588 standard for a precision clock synchronization protocol for networked measurement and control systems, {eid: 4544372422}>, <Time synchronization in a local area network, {eid: 1842680834}>, <Cyber-physical systems: The next computing revolution, {eid: 77956217277}>, <Cyber-physical systems: A new frontier, {eid: 84892198803}>, <Cyber physical systems: Design challenges, {eid: 49649119406}>, <Crosslayer analysis testing and verification of automotive control software, {eid: 80455179700}>, <None, {eid: 85013703606}>, <Specification and verification: The spec# experience, {eid: 79959994169}>, <Automatic test data generation using constraint solving techniques, {eid: 84951817396}>, <Test selection strategies for lustre descriptions in gatel, {eid: 11244264152}>, <Stress testing of task deadlines: A constraint programming approach, {eid: 84893212634}>, <Goal-oriented test data generation for pointer programs, {eid: 34347374293}>, <Stress testing of task deadlines: A constraint programming approach, {eid: 84893212634}>, <Test architectures for testing distributed systems, {eid: 57349196017}>, <None, {eid: 84922566253}>, <Python reference manual, {eid: 0013153953}>, <A taxonomy of model-based testing approaches, {eid: 84862325128}>, <None, {eid: 0003683967}>, <None, {eid: 33748706709}>, <Z3: An efficient SMT solver, {eid: 45749085681}>, <Search-based software test data generation: A survey, {eid: 3142725712}>, <None, {eid: 82955189952}>, <An open-ended finite domain constraint solver, {eid: 84923057783}>, <Optimisation modelling for software developers, {eid: 84868266728}>, <The future of optimization technology, {eid: 84902474528}>",,,Elsevier B.V.,,,2015-01-01,,,,,,,eng,,Journal,,,,2-s2.0-84922513915
35,,"Ma T. (AUID: 57195984064), Ali S. (AUID: 56962801700), Yue T. (AUID: 25651096400)",,Testing self-healing cyber-physical systems under uncertainty with reinforcement learning: an empirical study,2021,Empirical Software Engineering,,,,,,,11,10.1007/s10664-021-09941-z,https://www.doi.org/10.1007/s10664-021-09941-z,"<Simula Research Laboratory>, <University of Oslo>, <Nanjing University of Aeronautics and Astronautics>",,"Â© 2021, The Author(s), under exclusive licence to Springer Science+Business Media, LLC, part of Springer Nature.Self-healing is becoming an essential feature of Cyber-Physical Systems (CPSs). CPSs with this feature are named Self-Healing CPSs (SH-CPSs). SH-CPSs detect and recover from errors caused by hardware or software faults at runtime and handle uncertainties arising from their interactions with environments. Therefore, it is critical to test if SH-CPSs can still behave as expected under uncertainties. By testing an SH-CPS in various conditions and learning from testing results, reinforcement learning algorithms can gradually optimize their testing policies and apply the policies to detect failures, i.e., cases that the SH-CPS fails to behave as expected. However, there is insufficient evidence to know which reinforcement learning algorithms perform the best in terms of testing SH-CPSs behaviors including their self-healing behaviors under uncertainties. To this end, we conducted an empirical study to evaluate the performance of 14 combinations of reinforcement learning algorithms, with two value function learning based methods for operation invocations and seven policy optimization based algorithms for introducing uncertainties. Experimental results reveal that the 14 combinations of the algorithms achieved similar coverage of system states and transitions, and the combination of Q-learning and Uncertainty Policy Optimization (UPO) detected the most failures among the 14 combinations. On average, the Q-Learning and UPO combination managed to discover two times more failures than the others. Meanwhile, the combination took 52% less time to find a failure. Regarding scalability, the time and space costs of the value function learning based methods grow, as the number of states and transitions of the system under test increases. In contrast, increasing the systemâs complexity has little impact on policy optimization based algorithms.","Cyber-physical systems, Empirical evaluation, Model execution, Reinforcement learning, Self-healing, Uncertainty",,,,,,,,"<Generating test data from OCL constraints with search techniques, {eid: 84884878316, doi: 10.1109/TSE.2013.17}>, <None, {eid: 85042614022}>, <Controlling the false discovery rate: A practical and powerful approach to multiple testing, {eid: 0001677717}>, <Model-based fault diagnosis and reconfiguration of robot drives, {eid: 51349162241}>, <Model-based hypothesis testing of uncertain software systems, {eid: 85079042885}>, <Automated test sequence generation for finite state machines using genetic algorithms, {eid: 52249113028}>, <Benchmarking Deep Reinforcement Learning for Continuous Control, {eid: 85019241632}>, <Multiple comparisons using rank sums, {eid: 84861604521, doi: 10.1080/00401706.1964.10490181}>, <Lightweight automated testing with adaptation-based programming, 2012 IEEE 23rd international symposium on software reliability engineering, {eid: 84876394399, doi: 10.1109/ISSRE.2012.1}>, <Safety and dependability analysis of self-adaptive systems, second international symposium on leveraging applications of formal methods, {eid: 77956422483}>, <Deep reinforcement learning that matters. Proceedings of the AAAI Conference on, {eid: 85057337632}>, <None, {eid: 85056996295}>, <Reporting experiments in software engineering, {eid: 84890169938, doi: 10.1007/978-1-84800-044-5_8}>, <Uncovering unknown system behaviors in uncertain networks with model and search-based testing, {eid: 85048452481}>, <None, {eid: 85103834364}>, <Preliminary guidelines for empirical research in software engineering, {eid: 0036704729, doi: 10.1109/TSE.2002.1027796}>, <Optimal and autonomous control using reinforcement learning: a survey, {eid: 85038353072, doi: 10.1109/TNNLS.2017.2773458}>, <Reinforcement learning in robotics: a survey, {eid: 84884276459, doi: 10.1177/0278364913495721}>, <Use of ranks in one-criterion variance analysis, {eid: 84943709252, doi: 10.1080/01621459.1952.10483441}>, <Automatic state-based test generation using genetic algorithms, vol 2007, {eid: 48049120649}>, <Runtime analysis of the (1+ 1) EA on computing unique input output sequences, {eid: 84889670582, doi: 10.1016/j.ins.2010.01.031}>, <None, {eid: 85007167143}>, <Modeling foundations for executable model-based testing of self-healing cyber-physical systems, {eid: 85057563276, doi: 10.1007/s10270-018-00703-y}>, <Testing self-healing cyber-physical systems under uncertainty: a fragility-oriented approach, {eid: 85063237133, doi: 10.1007/s11219-018-9437-3}>, <AutoBlackTest: Automatic black-box testing of interactive applications, {eid: 84862331561}>, <Optimizing neural networks with Kronecker-factored approximate curvature, {eid: 84944469420}>, <Testing automated vehicles against actuator inaccuracies in a large state space, {eid: 84991096035, doi: 10.1016/j.ifacol.2016.07.611}>, <Human-level control through deep reinforcement learning, {eid: 84924051598, doi: 10.1038/nature14236}>, <Asynchronous methods for deep reinforcement learning, {eid: 84971448181}>, <None, {eid: 85047001601}>, <Object constraint language V2.4, {eid: 85103848098}>, <None, {eid: 84993982230}>, <Precise semantics of UML State Machines (PSSM). V1.0, {eid: 85103843560}>, <None, {eid: 85016407140}>, <None, {eid: 84969925262}>, <Timed Hazard analysis of self-healing systems, {eid: 84873855429, doi: 10.1007/978-3-642-36249-1_5}>, <Automatically exploring how uncertainty impacts behavior of dynamically adaptive systems, {eid: 84855419196, doi: 10.1109/ASE.2011.6100127}>, <Risk-based testing of self-adaptive systems using run-time predictions, {eid: 85061915840}>, <Risk-based interoperability testing using reinforcement learning, {eid: 84992458338, doi: 10.1007/978-3-319-47443-4_4}>, <Remark AS R94: a remark on algorithm AS 181: the W-test for normality, {eid: 21844510079}>, <Trust region policy optimization, {eid: 84969963490}>, <None, {eid: 85041194636}>, <Convergence results for single-step on-policy reinforcement-learning algorithms, {eid: 0033901602, doi: 10.1023/A:1007678930559}>, <Reinforcement learning for automatic test case prioritization and selection in continuous integration, {eid: 85026639599, doi: 10.1145/3092703.3092709}>, <Real-time diagnosis and repair of faults of robot control software, {eid: 37249006911, doi: 10.1007/11780519_2}>, <None, {eid: 0004102479}>, <A critique and improvement of the CL common language effect size statistics of McGraw and Wong, {eid: 0034411339}>, <Online testing with reinforcement learning, {eid: 43049140624, doi: 10.1007/11940197_16}>, <A review of process fault detection and diagnosis: part I: quantitative model-based methods, {eid: 0037443770, doi: 10.1016/S0098-1354(02)00160-6}>, <Uncertainty-driven black-box test data generation, {eid: 85020739714}>, <None, {eid: 85031087674}>, <Evolutionary function approximation for reinforcement learning, {eid: 33646714634}>, <Experimentation in software engineering, {eid: 0022757468, doi: 10.1109/TSE.1986.6312975}>, <None, {eid: 85041239261}>, <Uncertainty-wise test case generation and minimization for cyber-physical systems, {eid: 85063204143}>",,,Springer,,,2021-05-01,,,,,,,eng,,Journal,,,,2-s2.0-85103819087
36,,"Ma T. (AUID: 57195984064), Ali S. (AUID: 56962801700), Yue T. (AUID: 25651096400), Elaasar M. (AUID: 8835817100)",,Testing self-healing cyber-physical systems under uncertainty: a fragility-oriented approach,2019,Software Quality Journal,,,,,,,15,10.1007/s11219-018-9437-3,https://www.doi.org/10.1007/s11219-018-9437-3,"<Simula Research Laboratory>, <University of Oslo>, <Carleton University>",,"Â© 2019, Springer Science+Business Media, LLC, part of Springer Nature.As an essential feature of smart cyber-physical systems (CPSs), self-healing behaviors play a major role in maintaining the normality of CPSs in the presence of faults and uncertainties. It is important to test whether self-healing behaviors can correctly heal faults under uncertainties to ensure their reliability. However, the autonomy of self-healing behaviors and impact of uncertainties make it challenging to conduct such testing. To this end, we devise a fragility-oriented testing approach, which is comprised of two novel algorithms: fragility-oriented testing (FOT) and uncertainty policy optimization (UPO). The two algorithms utilize the fragility, obtained from test executions, to learn the optimal policies for invoking operations and introducing uncertainties, respectively, to effectively detect faults. We evaluated their performance by comparing them against a coverage-oriented testing (COT) algorithm and a random uncertainty generation method (R). The evaluation results showed that the fault detection ability of FOT+UPO was significantly higher than the ones of FOT+R, COT+UPO, and COT+R, in 73 out of 81 cases. In the 73 cases, FOT+UPO detected more than 70% of faults, while the others detected 17% of faults, at the most.","Cyber-physical systems, Model execution, Reinforcement learning, Self-healing, Uncertainty",,,,,,,,"<Generating test data from OCL constraints with search techniques, {eid: 84884878316, doi: 10.1109/TSE.2013.17}>, <None, {eid: 0003844191}>, <Intelligent agent-based stimulation for testing robotic software in human-robot interactions, {eid: 85030683872}>, <A practical guide for using statistical tests to assess randomized algorithms in software engineering, {eid: 79959871222}>, <None, {eid: 0003655704}>, <None, {eid: 85042614022}>, <A survey on testing for cyber physical system, {eid: 84952786814}>, <Software engineering for smart cyber-physical systems--towards a research agenda: report on the First International Workshop on Software Engineering for Smart CPS, {eid: 84993962773, doi: 10.1145/2830719.2830736}>, <On-the-fly conformance testing using SPIN, {eid: 84896693311, doi: 10.1007/s100090050044}>, <Model and object verification by using Dresden OCL, {eid: 79951889367}>, <Benchmarking deep reinforcement learning for continuous control, {eid: 85019241632}>, <A controlled experiment in testing of safety-critical embedded software, {eid: 84983326093}>, <Uncertainty in self-adaptive software systems, {eid: 84883580334}>, <Towards run-time adaptation of test cases for self-adaptive systems in the face of uncertainty, {eid: 84903746086}>, <Importance sampling for stochastic simulations, {eid: 0001240715, doi: 10.1287/mnsc.35.11.1367}>, <Model-based testing in practice, {eid: 85054050987}>, <Lightweight automated testing with adaptation-based programming, {eid: 84876394399}>, <Methods of conjugate gradients for solving linear systems, {eid: 0000135303, doi: 10.6028/jres.049.044}>, <Reinforcement learning: a survey, {eid: 0029679044, doi: 10.1613/jair.301}>, <Approximately optimal approximate reinforcement learning, {eid: 1942514728}>, <Online testing of real-time systems using uppaal, {eid: 67349165874}>, <None, {eid: 85029416652}>, <Fragility-oriented testing with model execution and reinforcement learning, {eid: 85030696798}>, <Modeling foundations for executable model-based testing of self-healing cyber-physical systems, {eid: 85068943818}>, <None, {eid: 0003830923}>, <A taxonomy of uncertainty for dynamically adaptive systems, {eid: 84865127075}>, <Trust region policy optimization, {eid: 84969963490}>, <Current challenges in the verification of hybrid systems, {eid: 84952657055}>, <None, {eid: 0004102479}>, <Mokaâa simulation platform for Papyrus based on OMG specifications for executable UML, {eid: 85057527028}>, <A taxonomy of model-based testing approaches, {eid: 84862325128, doi: 10.1002/stvr.456}>, <Online testing with reinforcement learning, {eid: 43049140624}>, <None, {eid: 84949178783, doi: 10.1007/978-3-642-29044-2}>, <Verifying self-adaptive applications suffering uncertainty, {eid: 84908608579}>, <None, {eid: 0004312284}>, <Understanding uncertainty in cyber-physical systems: A conceptual model, {eid: 85063200977}>, <None, {eid: 85014574153}>, <Verification and validation in cyber physical systems: Research challenges and a way forward, {eid: 84946222990}>",,,Springer New York LLC,,,2019-01-01,,,,,,,eng,,Journal,,,,2-s2.0-85063237133
37,,"Hartmann T. (AUID: 57194343151), Fouquet F. (AUID: 36630197700), Le Traon Y. (AUID: 55884641800), Moawad A. (AUID: 55810011500)",,The next evolution of MDE: a seamless integration of machine learning into domain modeling,2019,Software and Systems Modeling,,,,,,,22,10.1007/s10270-017-0600-2,https://www.doi.org/10.1007/s10270-017-0600-2,"<University of Luxembourg>, <DataThings S.A.R.L>",,"Â© 2017, Springer-Verlag Berlin Heidelberg.Machine learning algorithms are designed to resolve unknown behaviors by extracting commonalities over massive datasets. Unfortunately, learning such global behaviors can be inaccurate and slow for systems composed of heterogeneous elements, which behave very differently, for instance as it is the case for cyber-physical systems and Internet of Things applications. Instead, to make smart decisions, such systems have to continuously refine the behavior on a per-element basis and compose these small learning units together. However, combining and composing learned behaviors from different elements is challenging and requires domain knowledge. Therefore, there is a need to structure and combine the learned behaviors and domain knowledge together in a flexible way. In this paper we propose to weave machine learning into domain modeling. More specifically, we suggest to decompose machine learning into reusable, chainable, and independently computable small learning units, which we refer to as microlearning units. These microlearning units are modeled together with and at the same level as the domain data. We show, based on a smart grid case study, that our approach can be significantly more accurate than learning a global behavior, while the performance is fast enough to be used for live learning.","Cyber-physical systems, Domain modeling, Live learning, Metamodeling, Model-driven engineering, Smart grids",,,,,,,,"<None, {eid: 84958264664}>, <A survey of context modelling and reasoning techniques, {eid: 77950189737, doi: 10.1016/j.pmcj.2009.06.002}>, <MOA: massive online analysis, {eid: 77953527363}>, <Model-based machine learning, {eid: 84874128594, doi: 10.1098/rsta.2012.0222}>, <None, {eid: 14944348412}>, <Hadoop hbase-0.20. 2 performance evaluation, {eid: 77957816388}>, <The entity-relationship modelâtoward a unified view of data, {eid: 84976766949, doi: 10.1145/320434.320440}>, <Predicting delays in software projects using networked classification, {eid: 84963900777}>, <None, {eid: 84882724288}>, <Mining high-speed data streams, {eid: 0034592938, doi: 10.1145/347090.347107}>, <Data classification using support vector machine, {eid: 78650217306}>, <Principles of proper validation: use and abuse of re-sampling for validation, {eid: 77951028114, doi: 10.1002/cem.1310}>, <Coarse- and fine-grained sentiment analysis of social media text, {eid: 79960220439}>, <Kevoree modeling framework (KMF): Efficient modeling techniques for runtime use, {eid: 84939477245}>, <Direct bulk-synchronous parallel algorithms, {eid: 0002546016, doi: 10.1006/jpdc.1994.1085}>, <None, {eid: 85064020103}>, <The WEKA data mining software: an update, {eid: 76749092270, doi: 10.1145/1656274.1656278}>, <Chronos: A graph engine for temporal graph analysis, {eid: 84900444277, doi: 10.1145/2592798.2592799}>, <Generating realistic smart grid communication topologies based on real-data, {eid: 84922444255, doi: 10.1109/SmartGridComm.2014.7007684}>, <A native versioning concept to support historized models at runtime, {eid: 84921744519, doi: 10.1007/978-3-319-11653-2_16}>, <Reasoning at runtime using time-distorted contexts: A models@run.time based approach, {eid: 84922459287}>, <Stream my models: Reactive peer-to-peer distributed models@run.time, {eid: 84961621637, doi: 10.1109/MODELS.2015.7338238}>, <Suspicious electric consumption detection based on multi-profiling using live machine learning, {eid: 84964989120}>, <Modeling context information in pervasive computing systems, {eid: 84958964894}>, <Evaluating collaborative filtering recommender systems, {eid: 3042697346, doi: 10.1145/963770.963772}>, <Jubatus: An open source platform for distributed online machine learning, {eid: 84927659398}>, <Microlearning: Emerging concepts, practices and technologies after e-learning, {eid: 84865065271}>, <Model driven engineering, {eid: 84944183958}>, <None, {eid: 85064020994}>, <None, {eid: 0003449831}>, <Distributed graphlab: a framework for machine learning and data mining in the cloud, {eid: 84863735533, doi: 10.14778/2212351.2212354}>, <Graphlab: A new framework for parallel machine learning, {eid: 85014817262}>, <None, {eid: 85064019685}>, <Internet of things: vision, applications and research challenges, {eid: 84861997111, doi: 10.1016/j.adhoc.2012.02.016}>, <None, {eid: 85055776871}>, <Models@run.time to support dynamic adaptation, {eid: 70350345225, doi: 10.1109/MC.2009.327}>, <Artificial Intelligence, {eid: 85064016202}>, <None, {eid: 85064018805}>, <Behavioral resource-aware model inference, {eid: 84908657625}>, <Making sense of business process descriptions: an experimental comparison of graphical and textual notations, {eid: 84857366249, doi: 10.1016/j.jss.2011.09.023}>, <Artificial intelligence, simulation and modeling, {eid: 0002434033}>, <Graphscope: Parameter-free mining of large time-evolving graphs, {eid: 36849035825, doi: 10.1145/1281192.1281266}>, <Requirements elicitation: Towards the unknown unknowns, {eid: 84891141749}>, <Developing a DSL-based approach for event-based monitoring of systems of systems: Experiences and lessons learned, {eid: 84963930783}>, <None, {eid: 73649104640}>, <Machine learning in medical imaging, {eid: 85032751398, doi: 10.1109/MSP.2010.936730}>, <T-finder: a recommender system for finding passengers and vacant taxis, {eid: 84883294122, doi: 10.1109/TKDE.2012.153}>, <Multi-granular representation-the key to machine intelligence, {eid: 85040568671, doi: 10.1109/ISKE.2008.4730887}>, <Multi-granular representation-the key to machine intelligence, {eid: 85040568671}>, <Formal descriptive semantics of uml and its applications, {eid: 78649576304}>",,,Springer Verlag,,,2019-04-04,,,,,,,eng,,Journal,,,,2-s2.0-85019693871
38,,"SÃ¼Ã J.G. (AUID: 8701350500), Swift S. (AUID: 57357272200), Escott E. (AUID: 54953796100)",,Using DevOps toolchains in Agile model-driven engineering,2022,Software and Systems Modeling,,,,,,,2,10.1007/s10270-022-01003-2,https://www.doi.org/10.1007/s10270-022-01003-2,"<Research and Development, Codebots Pty. Ltd>",,"Â© 2022, The Author(s), under exclusive licence to Springer-Verlag GmbH Germany, part of Springer Nature.For model-driven engineering (MDE) to become more Agile, the community needs to embrace development and operations (DevOps) practices. One of the core practices of DevOps is the use of pipelines to enable CI/CD to make teams more Agile and break down the barriers between development and operations with faster deployments. Current MDE tooling is not designed at its core to participate in DevOps pipelines. Consequently this makes the adoption of MDE in industry more difficult. In this article, we cover an industrial experience report describing how we enabled our pipelines using DevOps and MDE.","Agile, Ant, CI/CD, DevOps, Eclipse, EMF, MDE, Model-driven engineering",,,,,,,,"<The integration of agile development and model driven developmentâa systematic literature review, {eid: 85041446030}>, <Lemesle, R.: SNets: The core formalism for an object-oriented CASE tool, {eid: 85137099027}>, <Grand challenges in model-driven engineering: an analysis of the state of the research, {eid: 85077634676, doi: 10.1007/s10270-019-00773-6}>, <DevOps from a sysadmin perspective, {eid: 85120298374}>, <None, {eid: 0006705483}>, <To build, or not to build: Modelflow, a build solution for MDE projects, {eid: 85096951447}>, <Challenges in model-driven software engineering, {eid: 67650110205}>, <None, {eid: 85137116237}>",,,Springer Science and Business Media Deutschland GmbH,,,2022-08-01,,,,,,,eng,,Journal,,,,2-s2.0-85129817637
39,,"Bersani M.M. (AUID: 35730853100), Marconi F. (AUID: 57190818220), Tamburri D.A. (AUID: 35488974800), Nodari A. (AUID: 57159803700), Jamshidi P. (AUID: 34880055700)",,Verifying big data topologies by-design: a semi-automated approach,2019,Journal of Big Data,,,,,,,3,10.1186/s40537-019-0199-y,https://www.doi.org/10.1186/s40537-019-0199-y,"<Politecnico di Milano>, <TU/e - JADS>, <University of South Carolina>",,"Â© 2019, The Author(s).Big data architectures have been gaining momentum in recent years. For instance, Twitter uses stream processing frameworks like Apache Storm to analyse billions of tweets per minute and learn the trending topics. However, architectures that process big data involve many different components interconnected via semantically different connectors. Such complex architectures make possible refactoring of the applications a difficult task for software architects, as applications might be very different with respect to the initial designs. As an aid to designers and developers, we developed OSTIA (Ordinary Static Topology Inference Analysis) that allows detecting the occurrence of common anti-patterns across big data architectures and exploiting software verification techniques on the elicited architectural models. This paper illustrates OSTIA and evaluates its uses and benefits on three industrial-scale case-studies.","Big data architectures, Big data systems verification, Software design and analysis",,,,,,,,"<None, {eid: 85066032062}>, <None, {eid: 85066020659}>, <None, {eid: 85066053629}>, <None, {eid: 85066016858}>, <None, {eid: 85066030200}>, <None, {eid: 85066025117}>, <None, {eid: 85066019426}>, <None, {eid: 85066034835}>, <None, {eid: 85066012095}>, <None, {eid: 85066023134}>, <A Timed Semantics of Workflows, {eid: 84951132701}>, <Continuous architecting of stream-based systems, {eid: 84983339996}>, <A tool for deciding the satisfiability of continuous-time metric temporal logic, {eid: 84959559133, doi: 10.1007/s00236-015-0229-y}>, <None, {eid: 84968786582}>, <Formal verification problems in a big data world: Towards a mighty synergy, {eid: 84903647900}>, <Stormgen - a domain specific language to create ad-hoc storm topologies, {eid: 84941570893}>, <None, {eid: 0003866308}>, <An automata-theoretic approach to constraint LTL, {eid: 84855195612, doi: 10.1016/j.ic.2006.09.006}>, <A software architecture framework for quality-aware devops, {eid: 85054050217}>, <Understandable big data: a survey, {eid: 84940452273, doi: 10.1016/j.cosrev.2015.05.002}>, <Apache storm, a hands on tutorial, {eid: 85015882046}>, <None, {eid: 0141684320}>, <Modeling time in computing: a taxonomy and a comparative survey, {eid: 77949400735, doi: 10.1145/1667062.1667063}>, <Ibm streams processing language: analyzing big data in motion, {eid: 84893537534, doi: 10.1147/JRD.2013.2243535}>, <A bibliometric approach to tracking big data research trends, {eid: 85030459021, doi: 10.1186/s40537-017-0088-1}>, <None, {eid: 0004040339}>, <Towards the formal verification of DIA through MTL models, {eid: 85066015826}>, <None, {eid: 0003594156, doi: 10.4135/9781412984287}>, <Visualizing big data with augmented and virtual reality: challenges and research agenda, {eid: 85013964229, doi: 10.1186/s40537-015-0031-2}>, <Cost-based optimization of logical partitions for a query workload in a hadoop data warehouse, {eid: 84958545302}>, <The temporal logic of programs, {eid: 85047040703}>, <Bounded satisfiability checking of metric temporal logic specifications, {eid: 84894515204, doi: 10.1145/2491509.2491514}>, <Beyond the lambda architecture: Effective scheduling for large scale eo information mining and interactive thematic mapping, {eid: 84962530511}>, <A theory of timed automata, {eid: 0028413052, doi: 10.1016/0304-3975(94)90010-8}>, <None, {eid: 84877800451}>, <Geometrical and topological approaches to big data, {eid: 84979556390, doi: 10.1016/j.future.2016.06.005}>, <Reliability analysis based on a jump diffusion model with two wiener processes for cloud computing with big data, {eid: 84940549083, doi: 10.3390/e17074533}>, <None, {eid: 84925263722}>, <Storm@ twitter, {eid: 84904335699}>, <Optimizing big data processing performance in the public cloud: opportunities and approaches, {eid: 84944054192, doi: 10.1109/MNET.2015.7293302}>, <Formalizing mapreduce with csp, {eid: 77953209591}>",,,SpringerOpen,,,2019-12-01,,,,,,,eng,,Journal,,,,2-s2.0-85066050998
40,,"Castellanos C. (AUID: 55418649100), Correal D. (AUID: 16306282100), Varela C.A. (AUID: 8382441200)",,ACCORDANT: A domain specific-model and DevOps approach for big data analytics architectures,2021,Journal of Systems and Software,,,,,,,8,10.1016/j.jss.2020.110869,https://www.doi.org/10.1016/j.jss.2020.110869,"<System Engineering and Computing Department, University of Los Andes>, <Department of Computer Science, Rensselaer Polytechnic Institute>",,"Â© 2020 Elsevier Inc.Big data analytics (BDA) applications use machine learning algorithms to extract valuable insights from large, fast, and heterogeneous data sources. New software engineering challenges for BDA applications include ensuring performance levels of data-driven algorithms even in the presence of large data volume, velocity, and variety (3Vs). BDA software complexity frequently leads to delayed deployments, longer development cycles, and challenging performance assessment. This paper proposes a Domain-Specific Model (DSM), and DevOps practices to design, deploy, and monitor performance metrics in BDA applications. Our proposal includes a design process, and a framework to define architectural inputs, software components, and deployment strategies through integrated high-level abstractions to enable QS monitoring. We evaluate our approach with four use cases from different domains to demonstrate a high level of generalization. Our results show a shorter deployment and monitoring times, and a higher gain factor per iteration compared to similar approaches.","Big data analytics deployment, DevOps, Domain-specific model, Performance monitoring, Quality scenarios, Software architecture",,,,,,,,"<Quality-Aware Processing Pipeline Modeling: Tech. Rep., {eid: 85057250097}>, <Spring XD: A modular distributed stream and batch processing system, {eid: 84960970167, doi: 10.1145/2675743.2771879}>, <Infrastructure-as-code for data-intensive architectures: A model-driven development approach, {eid: 85051103640, doi: 10.1109/ICSA.2018.00025}>, <DevOps: A Software Architects Perspective, {eid: 84943326563}>, <Executing architectural models for big data analytics, {eid: 85057231099}>, <A survey on big data analytics solutions deployment, {eid: 85072839250}>, <Designing Software Architectures: A Practical Approach, {eid: 84948002011}>, <Agile big data analytics for web-based systems: An architecture-centric approach, {eid: 85014709685, doi: 10.1109/TBDATA.2016.2564982}>, <How Lufthansa capitalized on big data for business model renovation, {eid: 85065072840}>, <None, {eid: 85096720641}>, <Big Data Fundamentals: Concepts, Drivers & Techniques, {eid: 84998586051}>, <Distribution, data, deployment: Software architecture convergence in big data systems, {eid: 84928748186}>, <A performance modeling framework for lambda architecture based applications, {eid: 85026670445, doi: 10.1016/j.future.2017.07.033}>, <Towards a model-driven design tool for big data architectures, {eid: 84974539619}>, <Towards model based approach to hadoop deployment and configuration, {eid: 84964299938, doi: 10.1109/WISA.2015.65}>, <None, {eid: 84963753286}>, <Big Data: Principles and Best Practices of Scalable Real-Time Data Systems, {eid: 84877040956}>, <None, {eid: 85096686761}>, <A UML profile for the design, quality assessment and deployment of data-intensive applications, {eid: 85064569230}>, <Streaming big data processing in datacenter clouds, {eid: 84961627543}>, <2013 Data Miner Survey: Tech. Rep., {eid: 84941624140}>, <2015 Data Science Survey: Tech. Rep., {eid: 85057241882}>, <Software Systems Architecture: Working with Stakeholders using Viewpoints and Perspectives, {eid: 33751002702}>, <None, {eid: 80053441759}>, <Software architecture: Foundations, theory and practice, {eid: 70349441583}>, <Architectural tactics for big data cybersecurity analytics systems: A review, {eid: 85061379394}>, <On reusing data mining in business processes-a pattern-based approach, {eid: 79957511908}>, <Attribute-Driven Design (ADD), Version 2.0: Tech. Rep., {eid: 77954192701}>",,,Elsevier Inc.,,,2021-02-01,,,,,,,eng,,Journal,,,,2-s2.0-85096655894
41,,"Kumar A. (AUID: 57226074958), Nadeem M. (AUID: 57141925600), Shameem M. (AUID: 57188991787)",,Machine learning based predictive modeling to effectively implement DevOps practices in software organizations,2023,Automated Software Engineering,,,,,,,2,10.1007/s10515-023-00388-8,https://www.doi.org/10.1007/s10515-023-00388-8,"<Department of Computer Science, Aligarh Muslim University>, <Department of Computer Science and Engineering, Koneru Lakshmaiah Education Foundation>",,"Â© 2023, The Author(s), under exclusive licence to Springer Science+Business Media, LLC, part of Springer Nature.Development and Operations (DevOps) is a relatively recent phenomenon that can be defined as a multidisciplinary effort to improve and accelerate the delivery of business values in terms of IT solutions. Many software organizations are heading towards DevOps to leverage its benefits in terms of improved development speed, stability, collaboration, and communication. DevOps practices are essential to effectively implement in software organizations, but little attention has been given in the literature to how these practices can be managed. Our study aims to propose and develop a framework for effectively managing DevOps practices. We have conducted an empirical study using the publicly available HELENA2 dataset to identify the best practices for effectively implementing DevOps. Furthermore, we have used the prediction algorithms such as Support Vector Machine (SVM), Artificial Neural Network (ANN) and Random Forest (RF) to develop a prediction model for DevOps implementation. The findings of this study show that âContinuous deploymentâ, âCoding standardsâ, âContinuous integrationâ, and âDaily Standupâ ""are the most significant practicesduring the life cycle of projects for effectively managing the DevOps practices. The contribution of this study is not only limited to investigating the best DevOps practices but also provides a prediction of DevOps project success and prioritization of best practices. It can assist software organizations in getting the best possible practices to focus on based on the nature of their projects.","Artificial neural network, DevOps, Prediction model, Random forest, Support vector machine",,,,,,,,"<Comprehensive review of artificial neural network applications to pattern recognition, {eid: 85077962906, doi: 10.1109/ACCESS.2019.2945545}>, <Identification and prioritization of DevOps success factors using fuzzy-AHP approach, {eid: 85087637750, doi: 10.1007/s00500-020-05150-w}>, <None, {eid: 85053636266, doi: 10.1007/978-3-030-00184-1_14}>, <Exploring the benefits of combining DevOps and agile, {eid: 85125292499, doi: 10.3390/fi14020063}>, <Capabilities and practices in DevOps: a multivocal literature review, {eid: 85128287219, doi: 10.1109/TSE.2022.3166626}>, <Software engineering for machine learning: A case study, {eid: 85072111655}>, <Challenges of DevOps implementation: A case study from technology companies in Indonesia, {eid: 85127038602}>, <Neural networks for full phase-space reweighting and parameter tuning, {eid: 85086038944, doi: 10.1103/PhysRevD.101.091901}>, <DevOps with continuous testing architecture and its metrics model, {eid: 85056272895, doi: 10.1007/978-981-10-8633-5_28}>, <Understanding DevOps critical success factors and organizational practices, {eid: 85135020092, doi: 10.1145/3524614.3528627}>, <Towards Process Improvement in DevOps: A Systematic Literature Review, {eid: 85090846664}>, <The role of sample size in sample evaluation, {eid: 0011024720, doi: 10.1016/0030-5073(79)90028-X}>, <The importance of A Priori sample size estimation in strength and conditioning research, {eid: 84884542883, doi: 10.1519/JSC.0b013e318278eea0}>, <When DevOps meets meta-learning: A portfolio to rule them all, {eid: 85075935517, doi: 10.1109/MODELS-C.2019.00092}>, <Analysis of factors that improve reliability and effectiveness of DevOps culture in developing connected devices, {eid: 85146370886, doi: 10.2139/ssrn.4091401}>, <Agility as an innovation driver: towards an agile front end of innovation framework, {eid: 85075371636, doi: 10.1007/s11846-019-00373-0}>, <AIDOaRt: AI-augmented automation for DevOps, a model-based framework for continuous development in cyber-physical systems, {eid: 85138071342, doi: 10.1016/j.micpro.2022.104672}>, <Measure early and decide fast: Transforming quality management and measurement to continuous deployment, {eid: 85048355061, doi: 10.1145/3202710.3203156}>, <DevOps: making it easy to do the right thing, {eid: 84968747438, doi: 10.1109/MS.2016.66}>, <ACCORDANT: a domain specific-model and DevOps approach for big data analytics architectures, {eid: 85096655894, doi: 10.1016/j.jss.2020.110869}>, <Continuous Monitoring and Changes, {eid: 85165223281, doi: 10.1007/978-1-4842-5130-0_6}>, <Problem formulations and solvers in linear SVM: a review, {eid: 85040634147, doi: 10.1007/s10462-018-9614-6}>, <None, {eid: 85078948209}>, <The impact of information technology and communication systems on the agility of supply chain management systems, {eid: 85063986038, doi: 10.1108/K-10-2018-0532}>, <The path to DevOps, {eid: 85049785632, doi: 10.1109/MS.2018.290110337}>, <A qualitative study of DevOps usage in practice, {eid: 85021358087, doi: 10.1002/smr.1885}>, <A qualitative study of DevOps usage in practice, {eid: 85021358087, doi: 10.1002/smr.1885}>, <<scp>DevOps</scp> benefits: a systematic literature review, {eid: 85129794349, doi: 10.1002/spe.3096}>, <Do we need hundreds of classifiers to solve real world classification problems?, {eid: 84919773193}>, <A risk prediction model for software project management based on similarity analysis of context histories, {eid: 85097355506, doi: 10.1016/j.infsof.2020.106497}>, <Continuous software engineering: a roadmap and agenda, {eid: 84937109068, doi: 10.1016/j.jss.2015.06.063}>, <DevOps metrics, {eid: 85045277057, doi: 10.1145/3159169}>, <Taking DevOps mainstream: a critical review and conceptual framework, {eid: 85119335250, doi: 10.1080/0960085X.2021.1997100}>, <Quantum DevOps: Towards reliable and applicable NISQ Quantum Computing, {eid: 85102921182, doi: 10.1109/GCWkshps50303.2020.9367411}>, <Optimization of ANN architecture: a review on nature-inspired techniques, {eid: 85138980900, doi: 10.1016/B978-0-12-816086-2.00007-2}>, <Modeling and measuring attributes influencing DevOps implementation in an enterprise using structural equation modeling, {eid: 85026297110, doi: 10.1016/j.infsof.2017.07.010}>, <None, {eid: 85165221207}>, <From agile to DevOps: smart skills and collaborations, {eid: 85062684068, doi: 10.1007/s10796-019-09905-1}>, <Innovative Practices for knowledge sharing in large-scale DevOps, {eid: 85083432926, doi: 10.1109/MS.2019.2958900}>, <A stochastic optimization approach for parameter tuning of support vector machines, {eid: 10044295837, doi: 10.1109/ICPR.2004.1333843}>, <None, {eid: 85165219531}>, <Applying DevOps practices of continuous automation for machine learning, {eid: 85098378323, doi: 10.3390/info11070363}>, <Multicriteria decision-making taxonomy for DevOps challenging factors using analytical hierarchy process, {eid: 85084032374, doi: 10.1002/smr.2263}>, <Agile trends in Chinese global software development industry: Fuzzy AHP based conceptual mapping, {eid: 85099530315, doi: 10.1016/j.asoc.2021.107090}>, <Critical challenges to adopt DevOps culture in software organizations: a systematic review, {eid: 85123707701, doi: 10.1109/ACCESS.2022.3145970}>, <Exploring task equivalence for software engineering practice adaptation and replacement, {eid: 85147019264, doi: 10.1145/3563835.3567656}>, <Determining context factors for hybrid development methods with trained models, {eid: 85092531702, doi: 10.1145/3379177.3388898}>, <Helena stage 2 results, {eid: 85108910079}>, <Perceived benefits of DevOps implementation in organization: A systematic literature review, {eid: 85127044825, doi: 10.1145/3512716.3512718}>, <A survey of DevOps concepts and challenges, {eid: 85075608026, doi: 10.1145/3359981}>, <Opinion mining for software development: a systematic literature review, {eid: 85130717954, doi: 10.1145/3490388}>, <Architecture Scheme of DevOps for Cross Network and Multiple Environment Collaboration, {eid: 85121505288, doi: 10.1145/3487075.3487116}>, <Adopting DevOps in the real world: a theory, a model, and a case study, {eid: 85070228584, doi: 10.1016/j.jss.2019.07.083}>, <DevOps in practice: a multiple case study of five companies, {eid: 85068546035, doi: 10.1016/j.infsof.2019.06.010}>, <DevOps in practice: a multiple case study of five companies, {eid: 85068546035, doi: 10.1016/j.infsof.2019.06.010}>, <DevOps for AIâchallenges in development of AI-enabled applications, {eid: 85096542234, doi: 10.23919/SoftCOM50211.2020.9238323}>, <An empirical taxonomy of DevOps in practice, {eid: 85096519977, doi: 10.1109/SEAA51224.2020.00046.}>, <An investigation of machine learning based prediction systems, {eid: 0034224993, doi: 10.1016/S0164-1212(00)00005-4}>, <Hyper-Parameter Tuning of a Decision Tree Induction Algorithm, {eid: 85015181238}>, <A learning algorithm for optimizing continuous integration development and testing practice, {eid: 85056634616, doi: 10.1002/spe.2661}>, <DevOps improvements for reduced cycle times with integrated test optimizations for continuous integration, {eid: 85055447167}>, <DevOps-RAF: An assessment framework to measure DevOps readiness in software organizations, {eid: 85123953961}>, <Sample size: How many participants do I need in my research?, {eid: 84904744327, doi: 10.1590/abd1806-4841.20143705}>, <Proposal to Avoid Issues in the DevOps Implementation: A Systematic Literature Review, {eid: 85064865030}>, <Implementing DevOps practices in highly regulated environments, {eid: 85065790678, doi: 10.1145/3234152.3234188}>, <Adopting DevOps: capabilities, practices, and challenges faced by organizations, {eid: 85140235076, doi: 10.1063/5.0110594}>, <SVM-based predictive modelling of wet pelletization using experimental and GA-based synthetic data, {eid: 84959254350, doi: 10.1007/s13369-015-1979-0}>, <Estimation of pellet size and strength of limestone and manganese concentrate using soft computing techniques, {eid: 85021058464, doi: 10.1016/j.asoc.2017.06.005}>, <Performance assessment of traditional software development methodologies and DevOps automation culture, {eid: 85146715569, doi: 10.48084/etasr.5315}>, <Improving La redouteâs CI/CD Pipeline and DevOps processes by applying machine learning techniques, {eid: 85061305992, doi: 10.1109/QUATIC.2018.00050.}>, <Breaking down monoliths with microservices and DevOps: An industrial experience report, {eid: 85123361836, doi: 10.1109/ICSME52107.2021.00051}>, <Test case prioritization in continuous integration environments: a systematic mapping study, {eid: 85078708254, doi: 10.1016/j.infsof.2020.106268}>, <Hyperparameters and tuning strategies for random forest, {eid: 85060779526, doi: 10.1002/widm.1301}>, <Enhanced skin condition prediction through machine learning using dynamic training and testing augmentation, {eid: 85081933107, doi: 10.1109/ACCESS.2020.2976045}>, <Exploration of DevOps testing process capabilities: an ISM and fuzzy TOPSIS analysis, {eid: 85123267672, doi: 10.1016/j.asoc.2021.108377}>, <A systematic mapping study of infrastructure as code research, {eid: 85058550526, doi: 10.1016/j.infsof.2018.12.004}>, <Evaluation of sampling and cross-validation tuning strategies for regional-scale machine learning classification, {eid: 85060681925, doi: 10.3390/rs11020185}>, <The future of sensitivity analysis: an essential discipline for systems modeling and policy support, {eid: 85099475423, doi: 10.1016/j.envsoft.2020.104954}>, <Advances in computersusing agile and lean processes for software development, {eid: 85047203426}>, <None, {eid: 85166111930, doi: 10.1007/978-1-4842-8267-0}>, <On the impact of continuous integration on refactoring practice: an exploratory study on TravisTorrent, {eid: 85105598781, doi: 10.1016/j.infsof.2021.106618}>, <Continuous scrum: a framework to enhance scrum with DevOps, {eid: 85049452764, doi: 10.1109/ICTER.2017.8257808}>, <DevOps capabilities, practices, and challenges: Insights from a case study, {eid: 85053711014, doi: 10.1145/3210459.3210465}>, <Continuous integration, delivery and deployment: a systematic review on approaches, tools, challenges and practices, {eid: 85019140530, doi: 10.1109/ACCESS.2017.2685629}>, <A systematic literature review of challenges factors for implementing DevOps practices in software development organizations: a development and operation teams perspective, {eid: 85132397190, doi: 10.1002/9781119821779.ch9}>, <Taxonomical classification of barriers for scaling agile methods in global software development environment using fuzzy analytic hierarchy process, {eid: 85079165839, doi: 10.1016/j.asoc.2020.106122}>, <Genetic algorithm based probabilistic model for agile project success in global software development, {eid: 85147256457, doi: 10.1016/j.asoc.2023.109998}>, <Support vector machine versus random forest for remote sensing image classification: a meta-analysis and systematic review, {eid: 85095720757, doi: 10.1109/JSTARS.2020.3026724}>, <None, {eid: 84942761879, doi: 10.1007/978-3-319-18612-2_14}>, <End to end automation on cloud with build pipeline: the case for DevOps in insurance industry, continuous integration, continuous testing, and continuous delivery, {eid: 84966553219, doi: 10.1109/CCEM.2015.29}>, <A comparison of random forest variable selection methods for classification prediction modeling, {eid: 85066732412, doi: 10.1016/j.eswa.2019.05.028}>, <Continuous practices and devops: Beyond the buzz, what does it all mean?, {eid: 85084071945, doi: 10.1109/SEAA.2017.8114695}>, <From DevOps to MLOps: overview and application to electricity market forecasting, {eid: 85139914234, doi: 10.3390/app12199851}>, <Machine learning algorithm validation with a limited sample size, {eid: 85074634759, doi: 10.1371/journal.pone.0224365}>, <An intelligent DevOps platform research and design based on machine learning, {eid: 85105405428}>, <Evaluating explorative prediction power of machine learning algorithms for materials discovery using k-fold forward cross-validation, {eid: 85071239281, doi: 10.1016/j.commatsci.2019.109203}>",,,Springer,,,2023-11-01,,,,,,,eng,,Journal,,,,2-s2.0-85165221270
42,,,,A Data Quality-Driven View of MLOps,2021,IEEE Data Engineering Bulletin,,,,,,,0,10.48550/arXiv.2102.07750,https://www.doi.org/10.48550/arXiv.2102.07750,,,"Developing machine learning models can be seen as a process similar to the one established for traditional software development. A key difference between the two lies in the strong dependency between the quality of a machine learning model and the quality of the data used to train or perform evaluations. In this work, we demonstrate how different aspects of data quality propagate through various stages of machine learning development. By performing a joint analysis of the impact of well-known data quality dimensions and the downstream machine learning process, we show that different components of a typical MLOps pipeline can be efficiently designed, providing both a technical and theoretical perspective.",None,,,,,,,,None,,,,,,None,,,,,,,eng,,Journal,,,,
43,,,,SliceOps: Explainable MLOps for Streamlined Automation-Native 6G Networks,2023,IEEE Wireless Communications,,,,,,,0,10.48550/arXiv.2307.01658,https://www.doi.org/10.48550/arXiv.2307.01658,,,"Sixth-generation (6G) network slicing is the backbone of future communications systems. It inaugurates the era of extreme ultra-reliable and low-latency communication (xURLLC) and pervades the digitalization of the various vertical immersive use cases. Since 6G inherently underpins artificial intelligence (AI), we propose a systematic and standalone slice termed SliceOps that is natively embedded in the 6G architecture, which gathers and manages the whole AI lifecycle through monitoring, re-training, and deploying the machine learning (ML) models as a service for the 6G slices. By leveraging machine learning operations (MLOps) in conjunction with eXplainable AI (XAI), SliceOps strives to cope with the opaqueness of black-box AI using explanation-guided reinforcement learning (XRL) to fulfill transparency, trustworthiness, and interpretability in the network slicing ecosystem. This article starts by elaborating on the architectural and algorithmic aspects of SliceOps. Then, the deployed cloud-native SliceOps working is exemplified via a latency-aware resource allocation problem. The deep RL (DRL)-based SliceOps agents within slices provide AI services aiming to allocate optimal radio resources and impede service quality degradation. Simulation results demonstrate the effectiveness of SliceOps-driven slicing. The article discusses afterward the SliceOps challenges and limitations. Finally, the key open research directions corresponding to the proposed approach are identified.","6G, AI, MLOps, network slicing, resource allocation, XAI, XRL, zero-touch",,,,,,,,None,,,,,,None,,,,,,,eng,,Journal,,,,
44,,,,The systems engineering DevOps lemniscate and model-based system operations,2021,IEEE Systems Journal,,,,,,,0,10.1109/JSYST.2020.3015595,https://www.doi.org/10.1109/JSYST.2020.3015595,,,"Systems engineering is defined as a full life cycle discipline and provides methodologies and processes to support the design, development, verification, sustainment, and disposal of systems. While this cradle-to-grave concept is well documented throughout literature, there has been recent emphasis on evolving and digitally transforming systems engineering methodologies, practices, and tools for the latter phases of system life cycles. This article adapts principles from the software engineering domain DevOps concept (a collaborative merger of system development and operations) into a Systems Engineering DevOps (SEDevOps) life cycle model. This facilitates a merger of systems engineering processes, tools, and products into a surrogate operational environment in which the sustainment of a system is tied closely to the curation of a system model expanded to include the enabling system elements necessary for operations and sustainment (procedures, scripts, etc.). This progression of the systems engineering mindset, focused on digitally transforming and enhancing system operations and sustainment, improves agility in later life cycle phases. A framework for applying SEDevOps is introduced as a new systems modeling language profile. A use-case leveraging this model-based system operations framework, shows how merging support elements into a spacecraft system model improves adaptability during operations, exemplifying elements of a DevOps approach to cyber-physical system sustainment.","Agile, DevOps, digital transformation, life cycle, model-based systems engineering (MBSE), systems engineering",,,,,,,,None,,,,,,None,,,,,,,eng,,Journal,,,,
